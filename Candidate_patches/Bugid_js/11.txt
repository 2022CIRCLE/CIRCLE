golden:
outerNext(err);
inference:

outerNext();
outerNext(null);
outerNext(req.url);
outerNext(1000);
outerNext(true);
outerNext(&outerNext);
outerNext(next);
outerNext(100);
outerNext(-1);
outerNext(false);
outerNext ();
outerNext(e);
outerNext(0);
outerNext(0, 0);
outerNext(req);
outerNext(outer);
outerNext(&err);
outerNext(true);
outerNext("");
outerNext(;
outerNext(outerNext);
outerNext(err);
errNext();
outerNext(1);
outerNext(empty);
outerNext(msg);
return outerNext();
outerNext(void);
outerNext(eol);
outerNext(*outerNext);
outerNext(&outer);
outerNext(ev);
ret = outerNext();
outerNext(rv);
outerNext( );
outerNext(0, -1);
outerNext(u);
outerNext(res);
outerNext(tmp);
outerNext(innerNext);
outerNext(next());
rv = outerNext();
outerNext(ep);
outerNext(1, 0);
outerNext(stack);
outerNext(nextElement);
outerNext(eerr);
outerNext(offerNext);
outerNext(i);
outerNext(); return;
outerNext(element);
_outerNext();
outerNext(10);
outerNext(999);
outerNext(inerr);
outerNext(8000);
outerNext(ETHER);
outerNext(this);
outerNext(1024);
outerNext(0, 1);
outerNext(500);
outerNext(end);
outerNext(eof);
outerNext(false);
outerNext(None);
outerNext(DEVBUF);
outerNext(external);
outerNext(timeout);
*outerNext();
outerNext(nextMessage);
outerElement();
outerNext(nextErr);
outerNext(p);
outerNext(request);
OuterNext();
outerNext( 0 );
outerNext(*this);
outerNext(EPERM);
outerNext('0');
outerNext(tree);
outerNext(v);
outerNext(eoop);
innerNext();
outerNext(200);
outerNext(ENXIO);
outerNext(fd);
outerNext(eNext);
outerNext( 1 );
outerNext(null);
outerNext(true);
outerNext(400);
outerNext(w);
outerNext(2);
outerNext(1, 1);
outerNext(ENOMEM);
outerNext(dev);
outerNext(else);
outerNext(); return 0;
outerNext(&msg);
outerNext(s);
outerNext(y);
outerNext(ERR);
outerNext(e());
outerNext(50);
innerNext(null);
outerNext(5000);
outerNext(20);
outerNext(dummy);
outerNext(0,0);
outerNext(&rv);
outerNext(e.get());
outerNext(150);
outerNextAll();
outerNext(inner);
outerNext(&stack);
outerNext(&list);
outerNext(0, null);
remoteNext();
outerNext(parent);
else outerNext();
outerNext(req.url);
outputNext();
outerNext(el);
outerNext(buf);
outerNext(env);
outerNext(aErr);
outerNext(prev);
outerNext(NEWLINE);
outerNext('n');
outerNext(ptr);
outerNext(!outerNext);
outerNext(1.0);
outerNext(99);
outerNext(mem);
outerNext(eel);
outerNext( null);
outerNext(1, -1);
outerNext(enter());
outerNext(EEXIST);
outerNext(NEXT);
outerNext(&next);
outerNext(entry);
innerNext(req.url);
outerNext(iter);
outerNext(nextLine);
outerNext(1, "");
outerNext:
next();
outerNext(requested);
outerNext(internal);
outerNext(erase);
outerNext(refresh);
outerNext(&inerNext);
outerNext(aMessage);
outerNext(REFERENCE);
outerNext(__unused);
outerNext(node);
outerNext(eErr);
outerNext(RESTORE);
outerNext(inert);
outerNext(auth);
outerNext(outerErr);
outerNext(nextLock);
outerNext(&eerr);
outerNext(eP);
outerNext(aEvent);
outerNext(ePath);
outerNext(origin);
outerNext(ERERR);
outerNext(&innerNext);
outerNext(aFile);
outerNext(0, 0, 1);
outerNext(REFERENCES);
outerNext(nodeInfo);
outerNext(); return (0);
outerNext(externalMessage);
outerNext(0, "");
outerNext(embed);
outerNext(EEXIT);
outerNext(&inerr);
outerNext(&errNext);
outerNext(&src);
outerNext(eps);
outerNext(eEXCL);
outerNext(REQ_REMOVE);
outerNext(1, req.url);
outerNext(aSource, aDeviceContext);
outerNext(*eerr);
outerNext(&req.url);
outerNext(0, 0, -1);
outerNext(aURL);
outerNext(PRInt32(innerNext));
outerNext(0, 0, 0);
outerNext(eErrorCode);
outerNext(outer());
outerNext(erase, resize);
outerNext(eNode);
outerNext(aPtr);
outerNext(NEWSIZE);
outerNext(result);
outerNext(false);
outerNext(&objs);
outerNext(aStr);
outerNext(REQUEST_REQUEST_REQUEST_REQUEST_REQUEST);
outerNext(REQUEST_ERRNO);
outerNext(RESERVER_EXTENDED);
outerNext(&obj);
outerNext(NEW_SHELL);
outerNext(eerrno);
outerNext(ERROR_NO_RESTORE);
outerNext(m);
outerNext(newHostname);
outerNext(*aReturn);
outerNext(0, 0, 0, null);
outerNext(EX_POST);
outerNext(&newErr);
outerNext(&syscallout);
outerNext(EXTERNAL_VALUE);
outerNext(outerEmpty);
outerNext(eRemoveFlag);
outerNext(PRInt32(eInner));
outerNext(PRInt32(outerNext));
outerNext();
&outerNext();
<outerNext();
outerNext('0');
&outerNext();
outerNext('&n');
<outerNext();
outerNext('<n');
outerNext('&0');
outerNext('n');
outerNext('<0');
outerNext(); return;
outerNext();
