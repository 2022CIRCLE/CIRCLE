golden:
} else if ((con->http_status >= 100 && con->http_status < 200) || con->http_status == 204 || con->http_status == 304) { allow_keep_alive = 1;
inference:
buffer_append_long(b, con->http_status);

buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status));
#endif
return 0;
/* keep-alive needs Content-Length or chunked encoding. */
buffer_append_long(b, con->http_status); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
buffer_append_string(b, get_http_status_name(con->http_status));
BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");
buffer_append_long(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 ");
buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
b = chunkqueue_get_prepend_buffer(raw);
*/
/* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.content_length);
break;
buffer_append_long(b, get_http_status_name(con->http_status));
buffer_append_long(con->http_status);
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " ");
return response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked"));
return 1;
buffer_append_long(con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
srv->tmp_buf->ptr = srv->tmp_buf->used;
return -1;
(void) buffer_append_long(b, con->http_status);
int have_server = 0;
return NULL;
allow_keep_alive = 1;
int allow_keep_alive = 0;
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) con->keep_alive = 0;
return (response);
/* Keep-alive needs Content-Length or chunked encoding. */
size_t i;
return result;
buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status));
return;
b->request.http_version = HTTP_VERSION_1_1;
buf_append_string(b, get_http_status_name(con->http_status));
buffer_append_length(b, con->http_status);
return (0);
buffer_append_int(b, con->http_status);
response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked"));
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length);
buffer_append_long(con->http_status); buffer_append_string(b, get_http_status_name(con->http_status));
srv->tmp_buf = NULL;
buffer_append_long(b, con->http_status); Buffer_append_string(b, get_http_status_name(con->http_status));
BUFFER_COPY_STRING_CONST(b, "HTTP/2.0 ");
free(b);
continue;
get_http_status_name(con->http_status));
buffer_append_long(b, con->url_status);
*/ buffer_append_long(b, con->http_status);
buffer_append_long(b, con->http_status); buffer_append_string(b, " ");
}else  buffer_append_long(b, con->http_status);
response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
srv->tmp_buf->ptr = NULL;
buffer_append_long(b, CON->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
free(srv->tmp_buf);
buffer_append_long(b, con->http_status); BUFFER_ADD_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
free(srv->tmp_buf->ptr);
buffer_append_long(b, Con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
buffer_append_long(b); buffer_append_string(b, get_http_status_name(con->http_status));
error = 0;
srv->tmp_buf->ptr = srv->tmp_buf->used - 1;
POSTCODE("http_response_write_header");
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status(con->http_status));
buffer_append_long(b, &con->http_status);
buffer_append_long(b, con->http_status); buf_append_string(b, get_http_status_name(con->http_status));
buffer_append_long (b, con->http_status); BUFFER_APPEND_STRING_CONST (b, " "); buffer_append_string (b, get_http_status_name (con->http_status));
buffer_append_long(srv, con->http_status);
buffer_append_long(b, con->http_status);BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
buf_append_long(b, con->http_status);
/* XXX */
buffer_append_long (b, con->http_status); BUFFER_APPEND_STRING_CONST (b, " "); buffer_append_string (b, get_http_status_name(con->http_status));
BUFFER_COPY_STRING_CONST(b, "HTTP/1.0");
buffer_append_length(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status));
}else
buffer_append_long(b, Con->http_status);
buffer_append_long(b, CON->http_status);
buffer_append_long (b, con->http_status);
enable_keep_alive = 1;
int have_server = 0; int allow_keep_alive = 0;
buffer_append_int(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status));
buffer_append_long(b, buffer_append_long(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status));
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(B, get_http_status_name(con->http_status));
return NS_OK;
return PR_FALSE;
printf("http_response_write_headern");
buffer_append_long(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status));
buffer_append_long(b, " ");
buffer_append_long(b, con->http_state);
if (con->response.length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.length);
buffer_append_long(b, 0); buffer_append_string(b, get_http_status_name(con->http_status));
buffer_append_long(b, b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
buffer_append_long(b, context->http_status);
@endif
buffer_append_long(b, con->url_status); buffer_append_string(b, get_http_url_name(con->url_status));
free(srv);
*/ buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status));
return (NULL);
i++;
buffer_append_long(srv, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status));
i = 0;
allow_keep_alive = 0;
buffer_append_long(b, con->request.http_status);
buffer_append_long(b, con->url_status); buffer_append_string(b, get_http_status_name(con->url_status));
return response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), CONST_STR_LEN("chunked"));
return response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used);
#ifdef DEBUG
printf("http_response_write_header()n");
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, got_http_status_name(con->http_status));
BUFFER_COPY_STRING_CONST(b, "HTTP/1.2 ");
buffer_append_long(b, con->http_status); Buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
buffer_append_long(b);
int keep_alive = 0;
return rv;
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, ""); buffer_append_string(b, get_http_status_name(con->http_status));
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(B, " "); buffer_append_string(b, get_http_status_name(con->http_status));
if (con->response.length >= 0)  buffer_copy_off_t(srv->tmp_buf, con->response.length); allow_keep_alive = 1;
enable_keep_alive = 0;
has_server = 0;
i--;
buffer_append_ulong(b, con->http_status);
int has_server = 0;
buffer_append_length(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
/* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(srv->tmp_buf, con->response.content_length);
buffer_append_long(b, con->http_status, " "); buffer_append_string(b, get_http_status_name(con->http_status));
buffer_append_long(b, con->url_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->url_status));
buffer_append_long(b, srv->tmp_buf->ptr, " "); buffer_append_string(b, get_http_status_name(con->http_status));
buffer_append_long(buffer_append_long(b, con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status));
buffer_append_long(b, buffer_append_long(con->http_status));
buffer_append_long(b, CON->http_status); buffer_append_string(b, get_http_status_name(con->http_status));
srv->tmp_buf->ptr = srv->tmp_buf->ptr;
buffer_append_long(b, srv->tmp_buf->ptr); buffer_append_string(b, get_http_status_name(con->http_status));
buffer_append_long(b,
buffer_append_long(b, context->http_status); buffer_append_string(b, get_http_status_name(con->http_status));
free(con->http_status);
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(Con->http_status));
buffer_append_long(b, con->http_status); " "); buffer_append_string(b, get_http_status_name(con->http_status));
return error;
buffer_append_long(b, con->http_status); BUFFER_PEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
buffer_append_long (b, con->http_status); buffer_append_string (b, get_http_status_name(con->http_status));
return (error);
buffer_append_long(b, &con->http_status); buffer_append_string(b, get_http_status_name(con->http_status));
buffer_append_long(b, context->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
buffer_append_long(b, con->http_status); Buffer_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
have_server = 0;
return ret;
buffer_append_long (b, con->http_status); buffer_append_string (b, get_http_status_name (con->http_status));
if (con->response.version >= 0)  buffer_copy_off_t(srv->tmp_buf, con->response.version); allow_keep_alive = 1;
buffer_append_long(b, con->request.http_status); buffer_append_string(b, get_http_status_name(con->http_status));
}else if (con->response.content_length >= 0)  buffer_copy_off_t(srv->tmp_buf, con->response.content_length);
int i;
BUFFER_COPY_STRING_CONST(b, "HTTP/1.1");
buffer_append_long(b, con->http_status); buffer_append_string(b, got_http_status_name(con->http_status));
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, " ");
/* keep-alive needs Content-Length or chunked encoding */
buffer_append_long(BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");
buffer_append_long(b, con->http_status); BUFFER_COPY_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
buffer_append_long(b, con->http_status); (void) buffer_append_string(b, get_http_status_name(con->http_status));
buffer_append_long(b, con->http_status); BUFFER_APEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
buffer_append_long(b, c->http_status);
buffer_append_long(b); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
NULL,
}else  BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 ");
return true;
(void) buffer_append_long(b, con->http_status); (void) buffer_append_string(b, get_http_status_name(con->http_status));
srv->tmp_buf->ptr = 0;
response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used);
buffer_append_long(b, " "); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
if (con->response.url_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.url_length);
buffer_append_long(BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 ");
buffer_append_long(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked"));
buffer_append_long(b, '0'); buffer_append_string(b, get_http_status_name(con->http_status));
b = buffer_append_long(b, con->http_status);
}else  BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");
int allow_keep_alive;
buffer_append_long(b, con->response.status);
buffer_append_long(b, buffer_append_long(b, con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status));
b->request.http_version = HTTP_VERSION_1_0;
buffer_append_long(b, con->http_url);
buffer_append_long(b, con->http_status); buf_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
printf("http_response_write_header (empty)n");
buffer_append_long(b, con->http_state); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
b->request.http_version = HTTP_VERSION_1_2;
buffer_append_long(b, con->http_version);
buffer_append_long(b, con->url_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_url_name(con->url_status));
if (con->response.speed & HTTP_TRANSFER_ENCODING_CHUNKED)  buffer_copy_off_t(srv->tmp_buf, con->response.speed); allow_keep_alive = 1;
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.content_length >= 0)  buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->t
}else if (con->response.http_version!= HTTP_VERSION_1_1)  BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 ");  else  BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.strlen > 0)
}else  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.content_length >= 0)  buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.status == HTTP_STATIC_CAST(unsigned long) 0, NULL) return 0;
/* * If it's not in a buffer, b is still a short buffer. */ buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
if (con->response.error_string == 0)  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED)  buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.error_string!= HTTP_VERSION_NONE)  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1)  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.con_version == HTTP_VERSION_1_1)  BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
/* XXX need to set a bit in the vbar. */ buffer_append_long(b, &(con->request.http_version  1.0));
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type)  BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");  else  BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.content_length >= 0)
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.request.http_version == HTTP_VERSION_1_1)  BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 ");  else  BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");  buffer_append_long(b, con->http_status); BUFFER_APPEND_
/* check if this code is a REST or REST object. */
if (con->response.decode_flags & DEBUG_FMT_DTOR) buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.decode_flags & DEBUG_FRMT_DTOR) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.decode_flags & DEBUG_FRMT_DTOR) buffer_append_string(b, get_http_status_name(con->http_status));
if (con->response.encoding == '0')  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.content_length >= 0)  buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.page_length = 0)  buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1;  else if (con->response.content_length >= 0)  buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.content_length >= 0)  buffer
}else if (con->response.request.http_version!= HTTP_VERSION_1_1)  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.request.http_version!= HTTP_VERSION_1_1)  BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 ");  else  BUFFER_COPY_STRING_CONST(
if (con->response.io_debug) buffer_copy_off_t(srv->tmp_buf, con->response.io_debug);
/* no ptr at %s, keep-alive for %s, n%s */ __protocol__(srv, "/");
if (con->response.stream == 0) buffer_append_long(b, con->http_stream);
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1)  if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.content_length >= 0)  buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.use_url) buffer_free_string(b);
/* * XXX */ buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
}else if (con->response.debug)  if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.chunks && con->response.chunks && con->response.chunks)  if (con->response.http_version!= HTTP_VERSION_1_1)  if (con->response.http_version!= HTTP_VERSION_1_1)  BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 ");  else  BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(s
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.request.http_version!= HTTP_VERSION_1_1)  /* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive)  /* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.http_version!= HTTP_VERSION_1_1)  BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 ");  else  BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
/* * Allocate the message from the request */ if (con->response.version = HTTP_VERSION_1_2) buffer_append_long(b, con->http_status);
/* send reply */
if (con->response.url_size > 0)  buffer_copy_off_t(srv->tmp_buf, con->response.url_size); return 0;
if (con->response.url!= 0) buffer_copy_off_t(srv->tmp_buf, con->response.url);
if (con->response.content_length >= 0)  buffer_copy_off_t(srv->tmp_buf, con->response.content_length);  else if (con->response.content_length >= 0)  buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
if (con->response.response.flags & HOST_CREATE)  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.load_encoding)  buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.url_version >= HTTP_VERSION_1_1)  BUFFER_COPY_STRING_CONST(b, "URL_1.1 ");  else  BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.flags & FIFO_TRANSFER_DEBUG)  /* * Check for a packet response. */ buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.flags & FIFO_TRANSFER_DEBUG)  buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  buffer_copy_off_t(srv->tmp_buf, con->response.content_length); buffer_copy_
}else if (con->response.send_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  /* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.send_encoding);
if (con->response.plugin_language & PG_LOG_PARSE) buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status));
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED)  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.content_length >= 0)  buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.set_name(con->response.set_name))  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.request.http_version!= HTTP_VERSION_1_1)  BUFFER_COPY_STRING_CONST(
int can_write = 0;
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  /* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1;  else if (con->response.speed_length >= 0)  buffer_copy_off_t(srv->tmp_buf, con->response.speed_length);
if (con->response.local_version!= HTTP_VERSION_1_1)  BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.send_version == HTTP_VERSION_1_1)  BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 ");  else  BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.url == NULL) return 0;
if (con->response.nsvc_host == 0)  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1;   else if (con->response.content_length >= 0)  buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.status & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.version >= HTTP_VERSION_1_1)  if (con->response.version >= HTTP_VERSION_2_1)  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.content_length >= 0)  buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
}else if (con->response.url == HTTP_VERSION_1_1)  BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 ");  else  BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.content_length >= 0)  buffer_copy_
if (con->response.use_dummy) buffer_free(b);
}else if (con->response.xdb_version == HTTP_VERSION_1_1)  BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 ");  else  BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.domain_length >= 0)
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive)  buffer_copy_off_t(srv->tmp_buf, con->response.content_length);  else if (con->response.server_length >= 0)  buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length);  if (con->response.server_length >= 0)  buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
/* * FIXME: I just want to copy out the buffer. */
}else if (con->response.response.error_string & HTTP_VERSION_1_1)  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.page_length >= 0)  buffer_copy_off_t(srv->tmp
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.queue_length >= 0)  buffer_copy_off_t(srv->tmp_buf, con->response.queue_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_
/* make sure the buffer is empty. */ if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1;  else  buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1;
}else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED)  buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1;  else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.content_length >= 0)  buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1
/* We should not make sure that we are sending the url. */ buffer_append_long(b, con->http_url); buffer_append_string(b, get_http_url_name(con->http_url));
if (con->response.debug == 0)  *b = '0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.content_length >= 0)  buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.debug >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.debug);
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_)  BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 ");  else  BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.subject_length >= 0)  buffer_copy_off_t(srv->tmp_buf, con->response.subject_length); response_header_overwrite(srv, con, CONST_STR_LEN("Subject-Length"), srv->tmp_buf->ptr, srv
}else if (con->response.version >= HTTP_VERSION_VERSION_VERSION_1)  if (!allow_keep_alive)  return 1;
#ifdef USE_DEBUG
if (con->response.refer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
}else if (con->response.host!= NULL)  if (!allow_keep_alive) con->keep_alive = 0;
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.content_length >= 0)  buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.content_length
if (con->response.speed >= 0)  buffer_copy_off_t(srv->tmp_buf, con->response.speed); allow_keep_alive = 1;
if (con->response.request.http_version!= HTTP_VERSION_1_1)  b->request.http_version = HTTP_VERSION_1_;  else  b->request.http_version = HTTP_VERSION_1_;  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.content_length >= 0)  buffer_copy_off_t(s
if (con->response.release_mode!= HTTP_VERSION_1_1)  BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 ");  else  BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.response.transport_encoding & HTTP_
if (con->response.state & HTTP_TRANSFER_SINGLE)  buffer_copy_off_t(srv->tmp_buf, con->response.status); allow_keep_alive = 1;
/* * This allows a resource to be enabled on any device. */ buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status));
if (con->response.stream == 0)  buffer_copy_off_t(srv->tmp_buf, con->response.stream->stream->use, 0); buffer_copy_off_t(srv->tmp_buf, con->response.stream->use, 0); buffer_copy_off_t(srv->tmp_buf, con->response.streamstream->use); buffer_copy_off_t(srv->tmp_buf, con->response.streamstream->use);
}else if (con->response.http_version!= HTTP_VERSION_1_1)  BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 ");  else  BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.content_length >= 0)  buffer
if (con->response.response.response.response.response.response.response.response.response.response.response.response.response.response.response.response.response.response.response.response.response.response.response.response.response.response.response.response.response.response.response.response.response.response.response.response.response.response.response.response.response.respons
if (con->response.remote_stream == HTTP_RESTART)  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.content_length >= 0)  buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
}else  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1;  else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1;  else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1;  else if (con->response.trans
if (con->response.content_length >= 0)  buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1;  else if (con->response.content_length >= 0)  buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1;  else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
/* * If it's the only place the encoding flag for the * nshttp_backwards method is 'http'. */
if (con->response.version = HTTP_VERSION_1_1)  BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 ");  else  BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.content_length >= 0)  buffer_copy_off_
if (con->response.error == 0)  error("Could not get HTTP header.n"); return;
if (con->response.send_encoding == HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.use_int_flags) buffer_append_long(b, con->http_status);
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.content_length >= 0)  buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1)  BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 ");  else  BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if
if (con->response.length  0)  buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1;  else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1;  else if (con->response.con
/* * XXX: Is this a better case? */ buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status));
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
}else if (con->response.ecmd_host && con->response.ecmd_host->host_type == EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.http_version!= HTTP_VERSION_1_1)  BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 ");  else  BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.release_unloaded)  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.version_length >= 0)  buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
/* * We have been able to allocate it a buffer in the buffer, * then the buffer is empty, because we've got * written it. */ if (con->response.write_length  0)  buffer_copy_off_t(srv->tmp_buf, con->response.write_length); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.debug_length == sizeof("debug_response_debug")) buffer_append_long(b, con->http_status);
}else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.http_version == HTTP_VERSION_1_1)  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.content_length >= 0)  buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED)  buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.content_length >= 0)  buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.state & http_response_was_error)  b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1)  BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 ");  else  BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
}else if (con->response.error && con->response.error &&!con->response.error)  if (con->response.error && con->response.error)  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.content_length >= 0)  buffer_copy_off_t(srv
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0))  buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status));  if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.length >= 0)
if (con->response.is_open) buffer_append_long(b, con->http_status);
}else if (con->response.request.http_version == HTTP_VERSION_1_1)  BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 ");  else  BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");  buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED)  response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;  else if (con->response.content_length >= 0)
if (con->response.iocmd == 0) return;

if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.chunks && con->response.chunks && con->response.chunks) if (con->response.http_version!= HTTP_VERSION_1_1) if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.set_name(con->response.set_name)) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(
if (con->response.remote_stream == HTTP_RESTART) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
&else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.nsvc_host == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
}else if (con->response.xdb_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) <if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->re
&else if (con->response.response.error_string & HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
&else if (con->response.host!= NULL) if (!allow_keep_alive) con->keep_alive = 0;
<else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
}else if (con->response.debug) if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.release_mode!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.length 0) <buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.response.flags & HOST_CREATE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.load_encoding) buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.response.flags & HOST_CREATE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.load_encoding) &buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
&else if (con->response.request.http_version!= HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) /* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.version <= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
&else
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->t
if (con->response.chunks && con->response.chunks && con->response.chunks) <if (con->response.http_version!= HTTP_VERSION_1_1) if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.nsvc_host == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &&else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
}else if (con->response.url == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.subject_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.subject_length); response_header_overwrite(srv, con, CONST_STR_LEN("Subject-Length"), srv->tmp_buf->ptr, srv
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
&else if (con->response.error && con->response.error &&!con->response.error) &if (con->response.error && con->response.error) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
&else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.page_length &= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.chunks && con->response.chunks && con->response.chunks) &if (con->response.http_version!= HTTP_VERSION_1_1) <if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.server_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); &if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
}else if (con->response.debug) if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) &buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.length >= 0)
}else if (con->response.request.http_version!= HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
<else if (con->response.xdb_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.set_name(con->response.set_name)) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(
if (con->response.release_mode!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.length &0) &buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) <if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.nsvc_host == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.send_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.encoding == '0') buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
&else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.error == 0) <error("Could not get HTTP header.<n"); return;
/* * We have been able to allocate it a buffer in the buffer, * then the buffer is empty, because we've got * written it. */ if (con->response.write_length <0) buffer_copy_off_t(srv->tmp_buf, con->response.write_length); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
<else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
<else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
}else buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.set_name(con->response.set_name)) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.server_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); <if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
&else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");
if (con->response.debug == 0) &*b = '<0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.request.http_version!= HTTP_VERSION_1_1) <b->request.http_version = HTTP_VERSION_1_; <else &b->request.http_version = HTTP_VERSION_1_; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.con_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.con_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.version = HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.version >= HTTP_VERSION_1_1) if (con->response.version >= HTTP_VERSION_2_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.url_version >= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
<else buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.remote_stream == HTTP_RESTART) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.remote_stream == HTTP_RESTART) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.set_name(con->response.set_name)) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(
if (con->response.chunks && con->response.chunks && con->response.chunks) <if (con->response.http_version!= HTTP_VERSION_1_1) &if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.set_name(con->response.set_name)) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(
if (con->response.release_mode!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.set_name(con->response.set_name)) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(
if (con->response.request.http_version!= HTTP_VERSION_1_1) &b->request.http_version = HTTP_VERSION_1_; <else b->request.http_version = HTTP_VERSION_1_; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) </* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) /* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1
}else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.version <= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.error_string == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.error_string!= HTTP_VERSION_NONE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.http_version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) &buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.length >= 0)
&else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.chunks && con->response.chunks && con->response.chunks) &if (con->response.http_version!= HTTP_VERSION_1_1) &if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1
<else if (con->response.debug) &if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.nsvc_host == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <<else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) <if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.length <0) buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.state & http_response_was_error) b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
&else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
<else <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.local_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) &if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.send_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.version <= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.response.flags & HOST_CREATE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.load_encoding) &buffer_copy_off_t(srv->tmp_buf, con->respons
<else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.version <= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
&else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.con_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.encoding == '&0') <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.send_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) <buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); <if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.length >= 0)
if (con->response.http_version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.release_mode!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); &if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.debug == 0) &*b = '<0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
}else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length
}else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");
<else if (con->response.response.error_string & &HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.request.http_version!= HTTP_VERSION_1_1) &b->request.http_version = HTTP_VERSION_1_; else &b->request.http_version = HTTP_VERSION_1_; &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
<else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.release_unloaded) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.version_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.queue_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.queue_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.length <0) &buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.send_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.page_length = 0) buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.response.flags & HOST_CREATE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.load_encoding) &buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.send_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) &if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->re
&else if (con->response.request.http_version!= HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.send_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.debug == 0) &*b = '&0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length
&else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length);
if (con->response.request.http_version!= HTTP_VERSION_1_1) b->request.http_version = HTTP_VERSION_1_; &else &b->request.http_version = HTTP_VERSION_1_; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.remote_stream == HTTP_RESTART) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.version = HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.release_unloaded) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.version_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.page_length &= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
<else if (con->response.request.http_version!= HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.debug == 0) <*b = '<0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
printf("http_response_write_headern");
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.server_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); <if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.version = HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
}else &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) &if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->re
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.http_version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.send_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.length &0) buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) <buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); <if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.length >= 0)
if (con->response.flags & FIFO_TRANSFER_DEBUG) &/* * Check for a packet response. */ buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.flags & FIFO_TRANSFER_DEBUG) <buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); buffer_copy_
if (con->response.flags & FIFO_TRANSFER_DEBUG) </* * Check for a packet response. */ buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.flags & FIFO_TRANSFER_DEBUG) <buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); buffer_copy_
if (con->response.set_name(con->response.set_name)) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(
}else &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
<else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
&else if (con->response.xdb_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.url_version >= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); else <BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.send_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.chunks && con->response.chunks && con->response.chunks) &if (con->response.http_version!= HTTP_VERSION_1_1) &if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
<else if (con->response.error && con->response.error &&!con->response.error) <if (con->response.error && con->response.error) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.http_version == HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.url_version >= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); else &BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.release_mode!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
if (con->response.encoding == '<0') <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
}else if (con->response.response.error_string & <HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.state & http_response_was_error) b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
<else if (con->response.error && con->response.error &&!con->response.error) &if (con->response.error && con->response.error) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
#endif
&else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.encoding == '0') buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
<else if (con->response.url == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.error == 0) error("Could not get HTTP header.n"); return;
if (con->response.url_version >= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.error_string == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.error_string!= HTTP_VERSION_NONE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.send_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.debug == 0) &*b = '&0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.version <= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.state & http_response_was_error) <b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
<else <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.chunks && con->response.chunks && con->response.chunks) <if (con->response.http_version!= HTTP_VERSION_1_1) if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.error_string == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.error_string!= HTTP_VERSION_NONE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.send_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
&else if (con->response.url == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
<else if (con->response.xdb_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.stream == 0) &buffer_copy_off_t(srv->tmp_buf, con->response.stream->stream->use, 0); buffer_copy_off_t(srv->tmp_buf, con->response.stream->use, 0); buffer_copy_off_t(srv->tmp_buf, con->response.streamstream->use); buffer_copy_off_t(srv->tmp_buf, con->response.streamstream->use);
}else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.request.http_version!= HTTP_VERSION_1_1) b->request.http_version = HTTP_VERSION_1_; else <b->request.http_version = HTTP_VERSION_1_; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.remote_stream == HTTP_RESTART) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.queue_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.queue_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_
<else if (con->response.error && con->response.error &&!con->response.error) &if (con->response.error && con->response.error) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->re
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.response.flags & HOST_CREATE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.load_encoding) buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.chunks && con->response.chunks && con->response.chunks) <if (con->response.http_version!= HTTP_VERSION_1_1) if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
&else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.send_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.server_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); <if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
}else if (con->response.response.error_string & <HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.debug == 0) *b = '0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
}else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
}else if (con->response.debug) <if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
<else
if (con->response.version >= HTTP_VERSION_1_1) <if (con->response.version >= HTTP_VERSION_2_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); &if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.encoding == '<0') <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.version = HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
&else &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.error_string == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.error_string!= HTTP_VERSION_NONE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
<else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->t
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
<else if (con->response.response.error_string & HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.http_version == HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.
<else buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.error_string == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.error_string!= HTTP_VERSION_NONE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
&else if (con->response.request.http_version!= HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.response.flags & HOST_CREATE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.load_encoding) buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.debug == 0) <*b = '0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.url_version >= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); <else BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length
&else if (con->response.response.error_string & &HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.request.http_version!= HTTP_VERSION_1_1) <b->request.http_version = HTTP_VERSION_1_; &else &b->request.http_version = HTTP_VERSION_1_; &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.url_version >= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.server_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
&else if (con->response.xdb_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.url_version >= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.version >= HTTP_VERSION_1_1) &if (con->response.version >= HTTP_VERSION_2_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
/* * We have been able to allocate it a buffer in the buffer, * then the buffer is empty, because we've got * written it. */ if (con->response.write_length <0) buffer_copy_off_t(srv->tmp_buf, con->response.write_length); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) /* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.speed_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.speed_length);
if (con->response.flags & FIFO_TRANSFER_DEBUG) </* * Check for a packet response. */ buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.flags & FIFO_TRANSFER_DEBUG) &buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); buffer_copy_
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.nsvc_host == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &<else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.chunks && con->response.chunks && con->response.chunks) &if (con->response.http_version!= HTTP_VERSION_1_1) &if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.state & http_response_was_error) &b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.error_string == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.error_string!= HTTP_VERSION_NONE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.server_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); &if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.status & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.remote_stream == HTTP_RESTART) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
/* XXX need to set a bit in the vbar. */ buffer_append_long(b, &(con->request.http_version <1.0));
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
}else if (con->response.response.error_string & <HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
<else if (con->response.xdb_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1
}else if (con->response.debug) <if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
<else if (con->response.version >= HTTP_VERSION_VERSION_VERSION_1) <if (!allow_keep_alive) return 1;
}else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) &/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) </* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.error_string == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.error_string!= HTTP_VERSION_NONE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.state & http_response_was_error) <b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
}else buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
&else <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
if (con->response.debug == 0) <*b = '<0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.version >= HTTP_VERSION_1_1) <if (con->response.version >= HTTP_VERSION_2_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
&else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) <buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); &if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.length >= 0)
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); <if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
}else if (con->response.request.http_version!= HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.con_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.set_name(con->response.set_name)) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(
if (con->response.page_length = 0) <buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
<else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.server_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
&else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
}else if (con->response.request.http_version!= HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
<else if (con->response.xdb_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.nsvc_host == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <&else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.set_name(con->response.set_name)) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(
&else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.length <0) &buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length
if (con->response.version = HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
/* * We have been able to allocate it a buffer in the buffer, * then the buffer is empty, because we've got * written it. */ if (con->response.write_length &0) buffer_copy_off_t(srv->tmp_buf, con->response.write_length); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) &if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->re
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.con_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.subject_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.subject_length); response_header_overwrite(srv, con, CONST_STR_LEN("Subject-Length"), srv->tmp_buf->ptr, srv
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) &/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.remote_stream == HTTP_RESTART) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
<else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.remote_stream == HTTP_RESTART) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
&else if (con->response.response.error_string & HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.nsvc_host == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &&else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) <buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); <if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.length >= 0)
if (con->response.url_version >= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.version = HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.remote_stream == HTTP_RESTART) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
&else if (con->response.response.error_string & <HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
&else <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.version >= HTTP_VERSION_1_1) if (con->response.version >= HTTP_VERSION_2_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.release_mode!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.con_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
<else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.con_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
if (con->response.state & http_response_was_error) b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.error_string == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.error_string!= HTTP_VERSION_NONE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
&else if (con->response.url == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.set_name(con->response.set_name)) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(
&return 0;
if (con->response.error_string == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.error_string!= HTTP_VERSION_NONE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.response.flags & HOST_CREATE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.load_encoding) buffer_copy_off_t(srv->tmp_buf, con->respons
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
}else buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
}else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.con_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
<else if (con->response.debug) <if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.set_name(con->response.set_name)) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.length &0) <buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.state & http_response_was_error) &b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.state & http_response_was_error) b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.debug == 0) *b = '&0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.flags & FIFO_TRANSFER_DEBUG) &/* * Check for a packet response. */ buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.flags & FIFO_TRANSFER_DEBUG) buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); buffer_copy_
if (con->response.http_version == HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.
&else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
}else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
if (con->response.nsvc_host == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.version <= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.remote_stream == HTTP_RESTART) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.version = HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.error_string == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.error_string!= HTTP_VERSION_NONE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.page_length &= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.version >= HTTP_VERSION_1_1) if (con->response.version >= HTTP_VERSION_2_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.page_length = 0) &buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
}else if (con->response.debug) &if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
}else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
&else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.set_name(con->response.set_name)) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(
if (con->response.set_name(con->response.set_name)) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(
}else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
}else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.response.flags & HOST_CREATE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.load_encoding) &buffer_copy_off_t(srv->tmp_buf, con->respons
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) </* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) </* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
&else if (con->response.response.error_string & HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.release_unloaded) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.version_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
&else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
&else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
/* make sure the buffer is empty. */ if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; else buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1;
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) <if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->re
&else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.request.http_version!= HTTP_VERSION_1_1) b->request.http_version = HTTP_VERSION_1_; <else &b->request.http_version = HTTP_VERSION_1_; &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.con_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
&else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.http_version == HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.
}else if (con->response.xdb_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.page_length <= 0) buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
<else if (con->response.version >= HTTP_VERSION_VERSION_VERSION_1) if (!allow_keep_alive) &return 1;
if (con->response.error_string == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.error_string!= HTTP_VERSION_NONE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
}else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
<else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.send_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.release_mode!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) <if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.release_unloaded) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.version_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
<else if (con->response.response.error_string & HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
}else if (con->response.error && con->response.error &&!con->response.error) <if (con->response.error && con->response.error) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
}else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.state & http_response_was_error) &b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
}else <buffer_append_long(b, con->http_status);
&else if (con->response.response.error_string & &HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.remote_stream == HTTP_RESTART) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.page_length = 0) buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.subject_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.subject_length); response_header_overwrite(srv, con, CONST_STR_LEN("Subject-Length"), srv->tmp_buf->ptr, srv
&else if (con->response.request.http_version!= HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
<else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.con_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
}else <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
}else if (con->response.send_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) </* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.send_encoding);
<else if (con->response.response.error_string & <HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) /* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) /* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.remote_stream == HTTP_RESTART) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
}else if (con->response.request.http_version!= HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.con_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.error_string == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.error_string!= HTTP_VERSION_NONE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.server_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); &if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.server_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
/* make sure the buffer is empty. */ if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; else <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1;
if (con->response.debug == 0) *b = '&0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.request.http_version!= HTTP_VERSION_1_1) b->request.http_version = HTTP_VERSION_1_; else b->request.http_version = HTTP_VERSION_1_; &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
if (con->response.length <0) &buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) &buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.length >= 0)
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.release_unloaded) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.version_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
<else BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 ");
<else if (con->response.request.http_version!= HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.release_unloaded) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.version_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
}else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.nsvc_host == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &&else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.flags & FIFO_TRANSFER_DEBUG) &/* * Check for a packet response. */ buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.flags & FIFO_TRANSFER_DEBUG) &buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); buffer_copy_
if (con->response.state & http_response_was_error) b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
<else if (con->response.request.http_version!= HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
<else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.state & http_response_was_error) <b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.chunks && con->response.chunks && con->response.chunks) if (con->response.http_version!= HTTP_VERSION_1_1) &if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.nsvc_host == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &<else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.server_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); &if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
&else if (con->response.debug) &if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
&else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length
<else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
/* make sure the buffer is empty. */ if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <else buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1;
}else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
<else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
}else if (con->response.version >= HTTP_VERSION_VERSION_VERSION_1) <if (!allow_keep_alive) &return 1;
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.release_unloaded) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.version_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
if (con->response.url_version >= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); else &BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.version = HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.page_length <= 0) buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
<else if (con->response.xdb_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.http_version == HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.debug == 0) <*b = '<0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.chunks && con->response.chunks && con->response.chunks) if (con->response.http_version!= HTTP_VERSION_1_1) <if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
&else buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) </* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) /* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
<else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.encoding == '0') &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.debug == 0) *b = '&0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
<else if (con->response.url == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.response.flags & HOST_CREATE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.load_encoding) <buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.release_mode!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.nsvc_host == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <&else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.release_mode!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.length &0) buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.send_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.release_unloaded) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.version_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
&else if (con->response.xdb_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.encoding == '<0') <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
/* * We have been able to allocate it a buffer in the buffer, * then the buffer is empty, because we've got * written it. */ if (con->response.write_length &0) <buffer_copy_off_t(srv->tmp_buf, con->response.write_length); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.url_version >= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); else <BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
&else if (con->response.url == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.con_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.chunks && con->response.chunks && con->response.chunks) &if (con->response.http_version!= HTTP_VERSION_1_1) if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) <if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->re
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.con_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
&else if (con->response.response.error_string & <HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
<else if (con->response.debug) if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.state & http_response_was_error) <b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
<else if (con->response.debug) <if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.send_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.response.flags & HOST_CREATE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.load_encoding) <buffer_copy_off_t(srv->tmp_buf, con->respons
&else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.response.flags & HOST_CREATE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.load_encoding) &buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length
if (con->response.url_size > 0) buffer_copy_off_t(srv->tmp_buf, con->response.url_size); return 0;
if (con->response.request.http_version!= HTTP_VERSION_1_1) <b->request.http_version = HTTP_VERSION_1_; &else &b->request.http_version = HTTP_VERSION_1_; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
<else if (con->response.url == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.release_unloaded) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.version_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.http_version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.send_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.response.flags & HOST_CREATE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.load_encoding) &buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.error_string == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.error_string!= HTTP_VERSION_NONE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) <buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); &if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.length >= 0)
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) &/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) </* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.http_version == HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.
&else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.length >= 0)
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
}else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
&else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
&else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->t
/* make sure the buffer is empty. */ if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <else <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1;
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.error_string == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.error_string!= HTTP_VERSION_NONE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.length <0) &buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
&#endif
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1
<else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
<else if (con->response.version >= HTTP_VERSION_VERSION_VERSION_1) &if (!allow_keep_alive) return 1;
}else if (con->response.url == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.release_unloaded) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.version_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
&else buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
}else buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
&else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.release_mode!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
&else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
}else buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.length <0) &buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
<else if (con->response.url == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
}else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
<else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.state & http_response_was_error) <b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
&else if (con->response.xdb_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
<else if (con->response.xdb_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.set_name(con->response.set_name)) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(
if (con->response.http_version == HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.
<else if (con->response.response.error_string & &HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
<else if (con->response.host!= NULL) <if (!allow_keep_alive) con->keep_alive = 0;
if (con->response.remote_stream == HTTP_RESTART) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.release_unloaded) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.version_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
}else if (con->response.error && con->response.error &&!con->response.error) &if (con->response.error && con->response.error) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.url_version >= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); else &BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
<else buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.speed_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.speed_length);
if (con->response.speed >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.speed); allow_keep_alive = 1;
/* * We have been able to allocate it a buffer in the buffer, * then the buffer is empty, because we've got * written it. */ if (con->response.write_length &0) buffer_copy_off_t(srv->tmp_buf, con->response.write_length); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
&else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.http_version == HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.url_version >= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); else BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length
}else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.http_version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
<else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.length 0) &buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.length &0) &buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
}else <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) &/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) /* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.http_version == HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.response.flags & HOST_CREATE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.load_encoding) buffer_copy_off_t(srv->tmp_buf, con->respons
}else if (con->response.version >= HTTP_VERSION_VERSION_VERSION_1) &if (!allow_keep_alive) <return 1;
if (con->response.error_string == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.error_string!= HTTP_VERSION_NONE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.length &0) buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.encoding == '<0') &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.release_unloaded) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.version_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
&else if (con->response.version >= HTTP_VERSION_VERSION_VERSION_1) if (!allow_keep_alive) return 1;
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) /* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) /* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.con_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->re
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length
<else if (con->response.error && con->response.error &&!con->response.error) <if (con->response.error && con->response.error) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.set_name(con->response.set_name)) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(
if (con->response.request.http_version!= HTTP_VERSION_1_1) &b->request.http_version = HTTP_VERSION_1_; <else &b->request.http_version = HTTP_VERSION_1_; <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) &if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.remote_stream == HTTP_RESTART) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.error_string == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.error_string!= HTTP_VERSION_NONE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.debug == 0) <*b = '0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.release_mode!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
/* XXX need to set a bit in the vbar. */ buffer_append_long(b, &(con->request.http_version 1.0));
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) &if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
}else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
<else &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
<else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.state & http_response_was_error) <b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) <if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.version >= HTTP_VERSION_1_1) <if (con->response.version >= HTTP_VERSION_2_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
}else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.send_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.version >= HTTP_VERSION_1_1) if (con->response.version >= HTTP_VERSION_2_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
if (con->response.request.http_version!= HTTP_VERSION_1_1) &b->request.http_version = HTTP_VERSION_1_; else &b->request.http_version = HTTP_VERSION_1_; <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
<else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.server_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.encoding == '<0') &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.remote_stream == HTTP_RESTART) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
&else if (con->response.error && con->response.error &&!con->response.error) <if (con->response.error && con->response.error) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.flags & FIFO_TRANSFER_DEBUG) &/* * Check for a packet response. */ buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.flags & FIFO_TRANSFER_DEBUG) buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); buffer_copy_
&else if (con->response.response.error_string & <HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) /* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.page_length <= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.send_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.con_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) <buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); <if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.length >= 0)
if (con->response.response.flags & HOST_CREATE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.load_encoding) <buffer_copy_off_t(srv->tmp_buf, con->respons
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.con_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.flags & FIFO_TRANSFER_DEBUG) /* * Check for a packet response. */ buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.flags & FIFO_TRANSFER_DEBUG) <buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); buffer_copy_
if (con->response.http_version == HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.
<else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.length); allow_keep_alive = 1;
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) </* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) /* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
<else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.remote_stream == HTTP_RESTART) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
&else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->t
if (con->response.debug == 0) *b = '<0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.release_mode!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1
}else if (con->response.response.error_string & &HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
}else if (con->response.request.http_version!= HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.release_unloaded) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.version_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.remote_stream == HTTP_RESTART) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.length &0) &buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.subject_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.subject_length); response_header_overwrite(srv, con, CONST_STR_LEN("Subject-Length"), srv->tmp_buf->ptr, srv
if (con->response.encoding == '&0') <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
<else if (con->response.xdb_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
/* make sure the buffer is empty. */ if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <else &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1;
if (con->response.length 0) buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) &buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); &if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.length >= 0)
if (con->response.request.http_version!= HTTP_VERSION_1_1) b->request.http_version = HTTP_VERSION_1_; <else &b->request.http_version = HTTP_VERSION_1_; <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->re
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
<else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) &if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
&else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.con_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.send_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
&else buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
}else if (con->response.request.http_version!= HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.release_mode!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
&else <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) &/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) /* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
/* * We have been able to allocate it a buffer in the buffer, * then the buffer is empty, because we've got * written it. */ if (con->response.write_length 0) <buffer_copy_off_t(srv->tmp_buf, con->response.write_length); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.con_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.error_string == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.error_string!= HTTP_VERSION_NONE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
}else if (con->response.debug) &if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.chunks && con->response.chunks && con->response.chunks) <if (con->response.http_version!= HTTP_VERSION_1_1) <if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.chunks && con->response.chunks && con->response.chunks) if (con->response.http_version!= HTTP_VERSION_1_1) <if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length
&else if (con->response.url == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.release_mode!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
&else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) &if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.page_length <= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.version >= HTTP_VERSION_1_1) &if (con->response.version >= HTTP_VERSION_2_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.debug == 0) <*b = '0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->t
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) /* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.speed_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.speed_length);
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.state & http_response_was_error) &b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
<else if (con->response.url == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1
if (con->response.nsvc_host == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <<else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.page_length <= 0) buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.flags & FIFO_TRANSFER_DEBUG) &/* * Check for a packet response. */ buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.flags & FIFO_TRANSFER_DEBUG) buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); buffer_copy_
}else if (con->response.error && con->response.error &&!con->response.error) <if (con->response.error && con->response.error) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
<else if (con->response.error && con->response.error &&!con->response.error) if (con->response.error && con->response.error) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.page_length &= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.speed_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.speed_length);
if (con->response.release_unloaded) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.version_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
<else if (con->response.request.http_version!= HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
<else if (con->response.response.error_string & &HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.page_length = 0) &buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.set_name(con->response.set_name)) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.send_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.set_name(con->response.set_name)) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
<else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
<else buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.response.flags & HOST_CREATE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.load_encoding) buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
&else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
&else if (con->response.error && con->response.error &&!con->response.error) if (con->response.error && con->response.error) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
}else if (con->response.debug) if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
}else if (con->response.debug) &if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.response.flags & HOST_CREATE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.load_encoding) &buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) </* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.speed_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.speed_length);
if (con->response.state & http_response_was_error) &b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
}else if (con->response.request.http_version!= HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
&else if (con->response.error && con->response.error &&!con->response.error) &if (con->response.error && con->response.error) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.encoding == '0') &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
<else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
&else if (con->response.version >= HTTP_VERSION_VERSION_VERSION_1) if (!allow_keep_alive) <return 1;
}else if (con->response.url == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.con_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.debug == 0) &*b = '0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.con_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.length &0) <buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.encoding == '0') <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.send_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.remote_stream == HTTP_RESTART) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.error_string == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.error_string!= HTTP_VERSION_NONE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.url_version >= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.nsvc_host == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.length <0) buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.debug == 0) *b = '0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.state & HTTP_TRANSFER_SINGLE) <buffer_copy_off_t(srv->tmp_buf, con->response.status); allow_keep_alive = 1;
if (con->response.state & http_response_was_error) b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->re
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.length >= 0)
}else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
&else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) /* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
}else &buffer_append_long(b, con->http_status);
if (con->response.remote_stream == HTTP_RESTART) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
<else if (con->response.send_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) /* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.send_encoding);
if (con->response.length &0) &buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
}else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.release_unloaded) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.version_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
<else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 ");
if (con->response.version >= HTTP_VERSION_1_1) <if (con->response.version >= HTTP_VERSION_2_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.send_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
&else if (con->response.error && con->response.error &&!con->response.error) if (con->response.error && con->response.error) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
}else if (con->response.error && con->response.error &&!con->response.error) &if (con->response.error && con->response.error) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); &if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) &buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); &if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.length >= 0)
if (con->response.release_mode!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.remote_stream == HTTP_RESTART) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
if (con->response.request.http_version!= HTTP_VERSION_1_1) <b->request.http_version = HTTP_VERSION_1_; <else b->request.http_version = HTTP_VERSION_1_; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
<else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
<else if (con->response.error && con->response.error &&!con->response.error) if (con->response.error && con->response.error) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.release_mode!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.debug == 0) <*b = '&0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
}else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.subject_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.subject_length); response_header_overwrite(srv, con, CONST_STR_LEN("Subject-Length"), srv->tmp_buf->ptr, srv
<else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.version <= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
/* * We have been able to allocate it a buffer in the buffer, * then the buffer is empty, because we've got * written it. */ if (con->response.write_length 0) &buffer_copy_off_t(srv->tmp_buf, con->response.write_length); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) <if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); &if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.release_unloaded) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.version_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.con_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1
if (con->response.request.http_version!= HTTP_VERSION_1_1) b->request.http_version = HTTP_VERSION_1_; <else &b->request.http_version = HTTP_VERSION_1_; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->t
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.con_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.encoding == '&0') <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.encoding == '0') &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.url_version >= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); &else BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
&else if (con->response.url == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
}else if (con->response.xdb_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
&else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.debug == 0) *b = '<0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.length &0) buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
<else if (con->response.xdb_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.length &0) &buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.con_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.set_name(con->response.set_name)) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(
if (con->response.url_version >= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); else BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.set_name(con->response.set_name)) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(
if (con->response.status & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.release_mode!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.con_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.subject_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.subject_length); response_header_overwrite(srv, con, CONST_STR_LEN("Subject-Length"), srv->tmp_buf->ptr, srv
<else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
&else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.debug == 0) <*b = '&0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
buffer_append_long(b, con->http_status);
if (con->response.page_length &= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
<else if (con->response.url == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
/* * We have been able to allocate it a buffer in the buffer, * then the buffer is empty, because we've got * written it. */ if (con->response.write_length 0) buffer_copy_off_t(srv->tmp_buf, con->response.write_length); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
}else if (con->response.request.http_version!= HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.debug == 0) &*b = '&0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.length &0) buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.set_name(con->response.set_name)) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.chunks && con->response.chunks && con->response.chunks) &if (con->response.http_version!= HTTP_VERSION_1_1) <if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
/* * We have been able to allocate it a buffer in the buffer, * then the buffer is empty, because we've got * written it. */ if (con->response.write_length &0) buffer_copy_off_t(srv->tmp_buf, con->response.write_length); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) <buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.length >= 0)
if (con->response.url_version >= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
<else if (con->response.error && con->response.error &&!con->response.error) <if (con->response.error && con->response.error) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); <if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.length >= 0)
if (con->response.chunks && con->response.chunks && con->response.chunks) <if (con->response.http_version!= HTTP_VERSION_1_1) if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.version >= HTTP_VERSION_1_1) if (con->response.version >= HTTP_VERSION_2_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.length 0) <buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
}else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
&else if (con->response.error && con->response.error &&!con->response.error) if (con->response.error && con->response.error) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
&else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) </* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
}else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
&else if (con->response.error && con->response.error &&!con->response.error) <if (con->response.error && con->response.error) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.remote_stream == HTTP_RESTART) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
<else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.page_length = 0) <buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
}else if (con->response.url == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
&else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.release_unloaded) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.version_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
&else if (con->response.url == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.version = HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.queue_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.queue_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.queue_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.queue_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_
}else if (con->response.xdb_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.send_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
<else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.send_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length
&else if (con->response.error && con->response.error &&!con->response.error) <if (con->response.error && con->response.error) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.release_mode!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.send_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.encoding == '&0') buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.version >= HTTP_VERSION_1_1) <if (con->response.version >= HTTP_VERSION_2_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
<else if (con->response.response.error_string & &HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
}else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.version &= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.url_version >= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); &else BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
}else if (con->response.debug) &if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
&else if (con->response.url == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
}else if (con->response.xdb_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
<else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.chunks && con->response.chunks && con->response.chunks) <if (con->response.http_version!= HTTP_VERSION_1_1) &if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
}else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
&else if (con->response.response.error_string & HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.response.flags & HOST_CREATE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.load_encoding) buffer_copy_off_t(srv->tmp_buf, con->respons
<else if (con->response.request.http_version!= HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.response.flags & HOST_CREATE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.load_encoding) &buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.nsvc_host == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <&else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.request.http_version!= HTTP_VERSION_1_1) &b->request.http_version = HTTP_VERSION_1_; &else &b->request.http_version = HTTP_VERSION_1_; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->t
<else if (con->response.debug) <if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.debug == 0) <*b = '0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.response.flags & HOST_CREATE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.load_encoding) <buffer_copy_off_t(srv->tmp_buf, con->respons
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) &buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.length >= 0)
&else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.release_mode!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.con_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.con_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.length >= 0)
if (con->response.http_version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) <if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.set_name(con->response.set_name)) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(
<else if (con->response.ecmd_host && con->response.ecmd_host->host_type == EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) &buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); <if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.length >= 0)
}else if (con->response.request.http_version!= HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.server_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); <if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
}else if (con->response.xdb_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.state & http_response_was_error) &b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
printf("http_response_write_header (empty)&n");
if (con->response.release_mode!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.release_mode!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.remote_stream == HTTP_RESTART) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
if (con->response.set_name(con->response.set_name)) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(
if (con->response.release_mode!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.queue_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.queue_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_
if (con->response.request.http_version!= HTTP_VERSION_1_1) b->request.http_version = HTTP_VERSION_1_; else <b->request.http_version = HTTP_VERSION_1_; &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
<else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.version &= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
&else &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.release_mode!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.length >= 0)
if (con->response.debug == 0) &*b = '&0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) &/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.chunks && con->response.chunks && con->response.chunks) <if (con->response.http_version!= HTTP_VERSION_1_1) <if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
&else if (con->response.debug) <if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.length &0) <buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.server_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); &if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.con_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
&else if (con->response.xdb_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) <buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.length >= 0)
<else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
&else if (con->response.debug) &if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
<else if (con->response.url == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
}else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.server_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.error_string == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.error_string!= HTTP_VERSION_NONE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.con_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
&else if (con->response.debug) &if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.release_mode!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.request.http_version!= HTTP_VERSION_1_1) &b->request.http_version = HTTP_VERSION_1_; &else b->request.http_version = HTTP_VERSION_1_; <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->re
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
&else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.queue_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.queue_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_
&else if (con->response.response.error_string & <HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) </* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) </* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
}else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.page_length <= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.request.http_version!= HTTP_VERSION_1_1) <b->request.http_version = HTTP_VERSION_1_; else <b->request.http_version = HTTP_VERSION_1_; &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.url_version >= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
printf("http_response_write_header (empty)n");
if (con->response.chunks && con->response.chunks && con->response.chunks) if (con->response.http_version!= HTTP_VERSION_1_1) if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.nsvc_host == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
}else if (con->response.url == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
&/* keep-alive needs Content-Length or chunked encoding. */
/* make sure the buffer is empty. */ if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <else buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1;
if (con->response.length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.length); allow_keep_alive = 1;
if (con->response.debug == 0) <*b = '<0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.subject_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.subject_length); response_header_overwrite(srv, con, CONST_STR_LEN("Subject-Length"), srv->tmp_buf->ptr, srv
&else if (con->response.debug) &if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.length <0) <buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.send_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
}else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.url_version >= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.set_name(con->response.set_name)) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(
if (con->response.length &0) &buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
<return 0;
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.nsvc_host == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &&else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.http_version == HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.length &0) buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
&else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.nsvc_host == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <<else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.url_version >= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); else <BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
<else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.url_version >= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
&else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.nsvc_host == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) <if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.error_string == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.error_string!= HTTP_VERSION_NONE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
}else if (con->response.debug) <if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.response.flags & HOST_CREATE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.load_encoding) <buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.chunks && con->response.chunks && con->response.chunks) if (con->response.http_version!= HTTP_VERSION_1_1) if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.length >= 0)
<else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
<else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.remote_stream == HTTP_RESTART) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.error_string == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.error_string!= HTTP_VERSION_NONE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
<else if (con->response.debug) &if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
&else if (con->response.error && con->response.error &&!con->response.error) if (con->response.error && con->response.error) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.encoding == '&0') buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
&else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
}else if (con->response.url == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
<else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.con_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.release_unloaded) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.version_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
}else if (con->response.debug) if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) /* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.speed_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.speed_length);
if (con->response.http_version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
}else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
<else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
<else <buffer_append_long(b, con->http_status);
if (con->response.length 0) &buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.length 0) buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.request.http_version!= HTTP_VERSION_1_1) &b->request.http_version = HTTP_VERSION_1_; <else <b->request.http_version = HTTP_VERSION_1_; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); &if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
&else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.version >= HTTP_VERSION_1_1) if (con->response.version >= HTTP_VERSION_2_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) &buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); <if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.length >= 0)
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.length <0) <buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); <if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.length >= 0)
if (con->response.error_string == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.error_string!= HTTP_VERSION_NONE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
&else if (con->response.ecmd_host && con->response.ecmd_host->host_type == EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX
if (con->response.page_length <= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
}else
if (con->response.url_version >= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
<else if (con->response.debug) if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.response.flags & HOST_CREATE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.load_encoding) <buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.response.flags & HOST_CREATE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.load_encoding) &buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.set_name(con->response.set_name)) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
&else <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
<else if (con->response.url == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.release_unloaded) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.version_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) &buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); &if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.length >= 0)
if (con->response.encoding == '0') buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.release_unloaded) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.version_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.length <0) buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) /* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) /* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
<else if (con->response.debug) <if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
<else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
}else if (con->response.response.error_string & <HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
<else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) </* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.speed_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.speed_length);
if (con->response.version &= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.http_version == HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.
}else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.request.http_version!= HTTP_VERSION_1_1) b->request.http_version = HTTP_VERSION_1_; else &b->request.http_version = HTTP_VERSION_1_; <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
<else if (con->response.response.error_string & HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
}else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");
if (con->response.encoding == '0') &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) <buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.length >= 0)
&else if (con->response.debug) <if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
<else buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.state & http_response_was_error) b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.page_length <= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.length 0) &buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.request.http_version!= HTTP_VERSION_1_1) b->request.http_version = HTTP_VERSION_1_; &else <b->request.http_version = HTTP_VERSION_1_; &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.version = HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.server_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.encoding == '<0') buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.url_version >= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.nsvc_host == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &<else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
}else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.http_version == HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.http_version == HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.
&else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.send_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.encoding == '&0') <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.release_unloaded) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.version_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
<else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
<else if (con->response.error && con->response.error &&!con->response.error) <if (con->response.error && con->response.error) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) <buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); <if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.length >= 0)
/* * We have been able to allocate it a buffer in the buffer, * then the buffer is empty, because we've got * written it. */ if (con->response.write_length 0) &buffer_copy_off_t(srv->tmp_buf, con->response.write_length); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.url_version >= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); else BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.set_name(con->response.set_name)) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(
&else if (con->response.xdb_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.set_name(con->response.set_name)) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(
}else if (con->response.debug) <if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
/* * XXX */ buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.send_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.flags & FIFO_TRANSFER_DEBUG) </* * Check for a packet response. */ buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.flags & FIFO_TRANSFER_DEBUG) buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); buffer_copy_
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.nsvc_host == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
&else if (con->response.debug) if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
<else if (con->response.response.error_string & <HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.set_name(con->response.set_name)) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(
if (con->response.debug == 0) &*b = '<0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
<else &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
<else if (con->response.request.http_version!= HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
&else buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
&else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
<else if (con->response.error && con->response.error &&!con->response.error) if (con->response.error && con->response.error) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
}else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.queue_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.queue_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_
if (con->response.request.http_version!= HTTP_VERSION_1_1) <b->request.http_version = HTTP_VERSION_1_; else &b->request.http_version = HTTP_VERSION_1_; <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.chunks && con->response.chunks && con->response.chunks) <if (con->response.http_version!= HTTP_VERSION_1_1) <if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.release_unloaded) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.version_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
&else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.remote_stream == HTTP_RESTART) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.release_mode!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.con_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.server_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); &if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.encoding == '&0') &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.con_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) &buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.length >= 0)
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.version >= HTTP_VERSION_1_1) <if (con->response.version >= HTTP_VERSION_2_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->t
}else if (con->response.response.error_string & &HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.send_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.remote_stream == HTTP_RESTART) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
<else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.version = HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
<else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.length >= 0)
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.send_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
&else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) <if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
}else if (con->response.debug) if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
}else if (con->response.error && con->response.error &&!con->response.error) if (con->response.error && con->response.error) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
}else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
/* * We have been able to allocate it a buffer in the buffer, * then the buffer is empty, because we've got * written it. */ if (con->response.write_length 0) <buffer_copy_off_t(srv->tmp_buf, con->response.write_length); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.version <= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.length <0) <buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
&else &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.chunks && con->response.chunks && con->response.chunks) if (con->response.http_version!= HTTP_VERSION_1_1) if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
&else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.state & http_response_was_error) b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) <buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); &if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.length >= 0)
if (con->response.chunks && con->response.chunks && con->response.chunks) if (con->response.http_version!= HTTP_VERSION_1_1) if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.response.flags & HOST_CREATE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.load_encoding) <buffer_copy_off_t(srv->tmp_buf, con->respons
<else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
&else if (con->response.request.http_version!= HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.nsvc_host == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <<else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.error_string == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.error_string!= HTTP_VERSION_NONE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.con_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.speed >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.speed); allow_keep_alive = 1;
}else if (con->response.host!= NULL) if (!allow_keep_alive) con->keep_alive = 0;
if (con->response.url_version >= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); &else BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.length &0) buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
&else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.version >= HTTP_VERSION_1_1) if (con->response.version >= HTTP_VERSION_2_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) </* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
&else if (con->response.request.http_version!= HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
printf("http_response_write_header()&n");
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.error_string == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.error_string!= HTTP_VERSION_NONE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
&else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.request.http_version!= HTTP_VERSION_1_1) b->request.http_version = HTTP_VERSION_1_; &else b->request.http_version = HTTP_VERSION_1_; &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) <if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.state & http_response_was_error) b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length
if (con->response.nsvc_host == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
&else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 ");
if (con->response.flags & FIFO_TRANSFER_DEBUG) </* * Check for a packet response. */ buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.flags & FIFO_TRANSFER_DEBUG) <buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); buffer_copy_
if (con->response.request.http_version!= HTTP_VERSION_1_1) <b->request.http_version = HTTP_VERSION_1_; else b->request.http_version = HTTP_VERSION_1_; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.length 0) buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
<else if (con->response.url == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.http_version == HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.
<else if (con->response.request.http_version!= HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.http_version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.error_string == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.error_string!= HTTP_VERSION_NONE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
&else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->t
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.con_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) <buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.length >= 0)
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
}else buffer_append_long(b, con->http_status);
}else if (con->response.request.http_version!= HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.chunks && con->response.chunks && con->response.chunks) if (con->response.http_version!= HTTP_VERSION_1_1) &if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.url_size > 0) <buffer_copy_off_t(srv->tmp_buf, con->response.url_size); return 0;
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.set_name(con->response.set_name)) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
if (con->response.state & http_response_was_error) &b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.con_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
<else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.set_name(con->response.set_name)) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.chunks && con->response.chunks && con->response.chunks) <if (con->response.http_version!= HTTP_VERSION_1_1) <if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.send_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.nsvc_host == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1
if (con->response.error_string == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.error_string!= HTTP_VERSION_NONE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.server_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); &if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.remote_stream == HTTP_RESTART) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.length &0) buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.con_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
&else buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.http_version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.chunks && con->response.chunks && con->response.chunks) if (con->response.http_version!= HTTP_VERSION_1_1) <if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
}else if (con->response.debug) if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
}else if (con->response.error && con->response.error &&!con->response.error) &if (con->response.error && con->response.error) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
&else if (con->response.error && con->response.error &&!con->response.error) &if (con->response.error && con->response.error) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.length 0) <buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
&else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.encoding == '<0') &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.http_version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.
<else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
/* make sure the buffer is empty. */ if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &else &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1;
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.subject_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.subject_length); response_header_overwrite(srv, con, CONST_STR_LEN("Subject-Length"), srv->tmp_buf->ptr, srv
if (con->response.state & http_response_was_error) b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
<else <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->t
<else if (con->response.debug) if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.response.flags & HOST_CREATE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.load_encoding) <buffer_copy_off_t(srv->tmp_buf, con->respons
&else if (con->response.xdb_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.release_mode!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.length &0) <buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.set_name(con->response.set_name)) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.server_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); <if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
}else if (con->response.url == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.nsvc_host == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.state & http_response_was_error) &b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
<else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.con_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->t
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.response.flags & HOST_CREATE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.load_encoding) <buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.debug == 0) <*b = '&0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.request.http_version!= HTTP_VERSION_1_1) b->request.http_version = HTTP_VERSION_1_; <else b->request.http_version = HTTP_VERSION_1_; <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
<else if (con->response.response.error_string & <HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.request.http_version!= HTTP_VERSION_1_1) &b->request.http_version = HTTP_VERSION_1_; else b->request.http_version = HTTP_VERSION_1_; &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.nsvc_host == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &<else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
<else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
<else if (con->response.debug) if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.state & http_response_was_error) <b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.nsvc_host == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <<else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
&else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.subject_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.subject_length); response_header_overwrite(srv, con, CONST_STR_LEN("Subject-Length"), srv->tmp_buf->ptr, srv
&else &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
}else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length
}else if (con->response.url == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
/* * We have been able to allocate it a buffer in the buffer, * then the buffer is empty, because we've got * written it. */ if (con->response.write_length 0) buffer_copy_off_t(srv->tmp_buf, con->response.write_length); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.request.http_version!= HTTP_VERSION_1_1) &b->request.http_version = HTTP_VERSION_1_; else <b->request.http_version = HTTP_VERSION_1_; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.request.http_version!= HTTP_VERSION_1_1) <b->request.http_version = HTTP_VERSION_1_; <else <b->request.http_version = HTTP_VERSION_1_; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
&else if (con->response.send_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) </* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.send_encoding);
printf("http_response_write_header&n");
&else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.chunks && con->response.chunks && con->response.chunks) &if (con->response.http_version!= HTTP_VERSION_1_1) if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.server_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
/* make sure the buffer is empty. */ if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <else &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1;
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.length >= 0)
if (con->response.state & http_response_was_error) <b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.encoding == '<0') <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
<else if (con->response.error && con->response.error &&!con->response.error) if (con->response.error && con->response.error) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.state & http_response_was_error) <b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
&else if (con->response.xdb_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.version <= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1
if (con->response.nsvc_host == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.send_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.nsvc_host == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.encoding == '&0') <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
}else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.version = HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
&else buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
&else if (con->response.xdb_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.con_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.error_string == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.error_string!= HTTP_VERSION_NONE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.http_version == HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.server_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); &if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.encoding == '&0') buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.error_string == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.error_string!= HTTP_VERSION_NONE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
<else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.release_mode!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.version >= HTTP_VERSION_1_1) <if (con->response.version >= HTTP_VERSION_2_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
/* make sure the buffer is empty. */ if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; else &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1;
}else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
<else if (con->response.error && con->response.error &&!con->response.error) &if (con->response.error && con->response.error) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.chunks && con->response.chunks && con->response.chunks) &if (con->response.http_version!= HTTP_VERSION_1_1) <if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
&else if (con->response.xdb_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
&else if (con->response.version >= HTTP_VERSION_VERSION_VERSION_1) if (!allow_keep_alive) &return 1;
if (con->response.encoding == '0') <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.server_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); &if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.version <= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
&else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.version &= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
}else if (con->response.xdb_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.http_version == HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.error_string == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.error_string!= HTTP_VERSION_NONE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
<else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.response.flags & HOST_CREATE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.load_encoding) &buffer_copy_off_t(srv->tmp_buf, con->respons
}else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
}else if (con->response.xdb_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.release_unloaded) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.version_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.http_version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.
<else if (con->response.error && con->response.error &&!con->response.error) <if (con->response.error && con->response.error) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
}else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.encoding == '0') <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) &if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.version >= HTTP_VERSION_1_1) &if (con->response.version >= HTTP_VERSION_2_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
&else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.release_unloaded) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.version_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.send_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.release_mode!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.state & http_response_was_error) b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.release_mode!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
if (con->response.remote_stream == HTTP_RESTART) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
}else if (con->response.debug) &if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length
if (con->response.release_unloaded) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.version_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.release_unloaded) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.version_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.state & http_response_was_error) &b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.error_string == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.error_string!= HTTP_VERSION_NONE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
/* * We have been able to allocate it a buffer in the buffer, * then the buffer is empty, because we've got * written it. */ if (con->response.write_length <0) <buffer_copy_off_t(srv->tmp_buf, con->response.write_length); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
<else &buffer_append_long(b, con->http_status);
if (con->response.set_name(con->response.set_name)) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.send_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.chunks && con->response.chunks && con->response.chunks) if (con->response.http_version!= HTTP_VERSION_1_1) &if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.set_name(con->response.set_name)) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(
<else if (con->response.url == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) /* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.server_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.version >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.version); allow_keep_alive = 1;
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.request.http_version!= HTTP_VERSION_1_1) &b->request.http_version = HTTP_VERSION_1_; &else b->request.http_version = HTTP_VERSION_1_; &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.remote_stream == HTTP_RESTART) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
}else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.chunks && con->response.chunks && con->response.chunks) &if (con->response.http_version!= HTTP_VERSION_1_1) <if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
}else if (con->response.version >= HTTP_VERSION_VERSION_VERSION_1) <if (!allow_keep_alive) <return 1;
<else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
<else <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.error_string == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.error_string!= HTTP_VERSION_NONE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.version >= HTTP_VERSION_1_1) <if (con->response.version >= HTTP_VERSION_2_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.send_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) /* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.speed_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.speed_length);
<else &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.debug == 0) *b = '<0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.response.flags & HOST_CREATE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.load_encoding) buffer_copy_off_t(srv->tmp_buf, con->respons
<else if (con->response.response.error_string & HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.version &= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
}else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.http_version == HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.subject_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.subject_length); response_header_overwrite(srv, con, CONST_STR_LEN("Subject-Length"), srv->tmp_buf->ptr, srv
if (con->response.release_unloaded) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.version_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.encoding == '&0') buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
<else if (con->response.request.http_version!= HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.response.flags & HOST_CREATE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.load_encoding) <buffer_copy_off_t(srv->tmp_buf, con->respons
&else buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
}else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.release_mode!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.page_length &= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
/* * We have been able to allocate it a buffer in the buffer, * then the buffer is empty, because we've got * written it. */ if (con->response.write_length &0) &buffer_copy_off_t(srv->tmp_buf, con->response.write_length); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.http_version == HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) </* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.speed_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.speed_length);
<else if (con->response.xdb_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
/* * We have been able to allocate it a buffer in the buffer, * then the buffer is empty, because we've got * written it. */ if (con->response.write_length <0) &buffer_copy_off_t(srv->tmp_buf, con->response.write_length); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
<else if (con->response.response.error_string & HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.error_string == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.error_string!= HTTP_VERSION_NONE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.request.http_version!= HTTP_VERSION_1_1) b->request.http_version = HTTP_VERSION_1_; &else &b->request.http_version = HTTP_VERSION_1_; &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.page_length <= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
<else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
&else if (con->response.url == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.server_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); &if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.remote_stream == HTTP_RESTART) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.remote_stream == HTTP_RESTART) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
/* * Allocate the message from the request */ if (con->response.version <= HTTP_VERSION_1_2) buffer_append_long(b, con->http_status);
if (con->response.response.flags & HOST_CREATE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.load_encoding) <buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.version &= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.response.flags & HOST_CREATE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.load_encoding) buffer_copy_off_t(srv->tmp_buf, con->respons
<else if (con->response.debug) <if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.version >= HTTP_VERSION_1_1) if (con->response.version >= HTTP_VERSION_2_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.send_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.http_version == HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
&else if (con->response.debug) if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
}else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.chunks && con->response.chunks && con->response.chunks) if (con->response.http_version!= HTTP_VERSION_1_1) <if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
}else if (con->response.xdb_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
&else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.version >= HTTP_VERSION_1_1) if (con->response.version >= HTTP_VERSION_2_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.server_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); &if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.release_mode!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.chunks && con->response.chunks && con->response.chunks) if (con->response.http_version!= HTTP_VERSION_1_1) <if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.send_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
&else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
<else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length
if (con->response.release_unloaded) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.version_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.release_unloaded) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.version_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.chunks && con->response.chunks && con->response.chunks) &if (con->response.http_version!= HTTP_VERSION_1_1) if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
<else if (con->response.error && con->response.error &&!con->response.error) &if (con->response.error && con->response.error) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
<else if (con->response.xdb_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
}else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 ");
if (con->response.release_mode!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
&else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.version &= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.url_version >= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); <else BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
}else if (con->response.version >= HTTP_VERSION_VERSION_VERSION_1) &if (!allow_keep_alive) &return 1;
if (con->response.chunks && con->response.chunks && con->response.chunks) <if (con->response.http_version!= HTTP_VERSION_1_1) &if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
}else if (con->response.response.error_string & HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.encoding == '0') buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.error_string == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.error_string!= HTTP_VERSION_NONE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
}else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.nsvc_host == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &&else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
<else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.stream == 0) <buffer_copy_off_t(srv->tmp_buf, con->response.stream->stream->use, 0); buffer_copy_off_t(srv->tmp_buf, con->response.stream->use, 0); buffer_copy_off_t(srv->tmp_buf, con->response.streamstream->use); buffer_copy_off_t(srv->tmp_buf, con->response.streamstream->use);
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.server_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); <if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
&else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
&else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.http_version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.
&else <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.send_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
}else if (con->response.xdb_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.flags & FIFO_TRANSFER_DEBUG) &/* * Check for a packet response. */ buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.flags & FIFO_TRANSFER_DEBUG) &buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); buffer_copy_
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.error_string == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.error_string!= HTTP_VERSION_NONE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.release_unloaded) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.version_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
}else buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
&else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.debug == 0) <*b = '<0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
}else if (con->response.response.error_string & HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
}else if (con->response.xdb_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.state & http_response_was_error) b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
}else if (con->response.response.error_string & <HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
&else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.url_version >= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); else <BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.request.http_version!= HTTP_VERSION_1_1) <b->request.http_version = HTTP_VERSION_1_; &else <b->request.http_version = HTTP_VERSION_1_; <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.debug == 0) &*b = '&0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.version >= HTTP_VERSION_1_1) if (con->response.version >= HTTP_VERSION_2_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length
if (con->response.length 0) buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length
if (con->response.request.http_version!= HTTP_VERSION_1_1) b->request.http_version = HTTP_VERSION_1_; <else b->request.http_version = HTTP_VERSION_1_; &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.encoding == '<0') buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.con_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.nsvc_host == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &<else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.nsvc_host == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.server_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); <if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
}else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) <buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); &if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.length >= 0)
if (con->response.version >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.version); allow_keep_alive = 1;
if (con->response.length 0) &buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.state & http_response_was_error) <b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.http_version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->re
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length
}else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length
}else <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.page_length = 0) <buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.debug == 0) &*b = '0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.url_version >= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.set_name(con->response.set_name)) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(
if (con->response.request.http_version!= HTTP_VERSION_1_1) b->request.http_version = HTTP_VERSION_1_; else &b->request.http_version = HTTP_VERSION_1_; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.queue_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.queue_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_
}else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) &buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); <if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.length >= 0)
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) &/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) </* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
}else if (con->response.debug) &if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
&else if (con->response.url == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.speed_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.speed_length);
if (con->response.version = HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.url_version >= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); &else BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.set_name(con->response.set_name)) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) &/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.length &0) &buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
<else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
<else if (con->response.xdb_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) &buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); &if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.length >= 0)
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
<else if (con->response.response.error_string & <HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
&else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.response.flags & HOST_CREATE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.load_encoding) <buffer_copy_off_t(srv->tmp_buf, con->respons
}else if (con->response.response.error_string & HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) /* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.speed_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.speed_length);
if (con->response.length &0) <buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) </* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
&else if (con->response.send_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) /* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.send_encoding);
if (con->response.length <0) buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.version <= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
<else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.send_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) /* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.encoding == '&0') &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) &/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
<else if (con->response.xdb_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.request.http_version!= HTTP_VERSION_1_1) <b->request.http_version = HTTP_VERSION_1_; else <b->request.http_version = HTTP_VERSION_1_; <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
<else if (con->response.url == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
<else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.encoding == '&0') <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.release_unloaded) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.version_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.encoding == '0') <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
<else if (con->response.url == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.chunks && con->response.chunks && con->response.chunks) if (con->response.http_version!= HTTP_VERSION_1_1) &if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.request.http_version!= HTTP_VERSION_1_1) &b->request.http_version = HTTP_VERSION_1_; else <b->request.http_version = HTTP_VERSION_1_; <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length
if (con->response.request.http_version!= HTTP_VERSION_1_1) &b->request.http_version = HTTP_VERSION_1_; else b->request.http_version = HTTP_VERSION_1_; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.release_mode!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.encoding == '&0') &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
}else if (con->response.response.error_string & HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
&else if (con->response.xdb_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.http_version == HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.http_version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.url_version >= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); <else BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.encoding == '0') buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
<else if (con->response.debug) <if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.length 0) buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->t
<else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.send_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.page_length <= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
</* keep-alive needs Content-Length or chunked encoding. */
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.server_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); <if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) </* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) </* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.length &0) <buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.request.http_version!= HTTP_VERSION_1_1) &b->request.http_version = HTTP_VERSION_1_; <else b->request.http_version = HTTP_VERSION_1_; <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.release_mode!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.chunks && con->response.chunks && con->response.chunks) if (con->response.http_version!= HTTP_VERSION_1_1) &if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.length <0) <buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.request.http_version!= HTTP_VERSION_1_1) <b->request.http_version = HTTP_VERSION_1_; &else <b->request.http_version = HTTP_VERSION_1_; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.server_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); <if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
}else <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.queue_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.queue_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_
if (con->response.version &= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.version >= HTTP_VERSION_1_1) <if (con->response.version >= HTTP_VERSION_2_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.encoding == '&0') &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.state & http_response_was_error) &b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
&else if (con->response.xdb_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.release_unloaded) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.version_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
&else if (con->response.xdb_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
}else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.release_mode!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.error_string == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.error_string!= HTTP_VERSION_NONE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.request.http_version!= HTTP_VERSION_1_1) <b->request.http_version = HTTP_VERSION_1_; &else b->request.http_version = HTTP_VERSION_1_; &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.page_length = 0) <buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.stream == 0) buffer_copy_off_t(srv->tmp_buf, con->response.stream->stream->use, 0); buffer_copy_off_t(srv->tmp_buf, con->response.stream->use, 0); buffer_copy_off_t(srv->tmp_buf, con->response.streamstream->use); buffer_copy_off_t(srv->tmp_buf, con->response.streamstream->use);
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.release_mode!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
&else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
&else if (con->response.host!= NULL) <if (!allow_keep_alive) con->keep_alive = 0;
if (con->response.version &= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.encoding == '<0') <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.debug == 0) <*b = '0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
buffer_append_long(b, '0'); buffer_append_string(b, get_http_status_name(con->http_status));
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) </* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) </* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.version <= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.http_version == HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.
/* * We have been able to allocate it a buffer in the buffer, * then the buffer is empty, because we've got * written it. */ if (con->response.write_length &0) <buffer_copy_off_t(srv->tmp_buf, con->response.write_length); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.encoding == '<0') buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
<else if (con->response.request.http_version!= HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.set_name(con->response.set_name)) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.send_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.server_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); <if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
/* make sure the buffer is empty. */ if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &else &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1;
if (con->response.version &= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) &if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.page_length = 0) buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.request.http_version!= HTTP_VERSION_1_1) b->request.http_version = HTTP_VERSION_1_; else <b->request.http_version = HTTP_VERSION_1_; <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.speed_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.speed_length);
return;
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->t
<else if (con->response.request.http_version!= HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1
if (con->response.remote_stream == HTTP_RESTART) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.version >= HTTP_VERSION_1_1) &if (con->response.version >= HTTP_VERSION_2_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.page_length &= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.version >= HTTP_VERSION_1_1) &if (con->response.version >= HTTP_VERSION_2_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->re
&else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.length <0) <buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1
}else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
&else if (con->response.xdb_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) </* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.speed_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.speed_length);
<else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.con_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
}else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.state & http_response_was_error) b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.send_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->re
<else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.chunks && con->response.chunks && con->response.chunks) &if (con->response.http_version!= HTTP_VERSION_1_1) &if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.release_unloaded) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.version_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.release_unloaded) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.version_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length
if (con->response.state & http_response_was_error) <b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.con_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.send_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.http_version == HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
}else if (con->response.response.error_string & <HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.response.flags & HOST_CREATE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.load_encoding) &buffer_copy_off_t(srv->tmp_buf, con->respons
&else if (con->response.debug) &if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.encoding == '0') &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.http_version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.error_string == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.error_string!= HTTP_VERSION_NONE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.error_string == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.error_string!= HTTP_VERSION_NONE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
if (con->response.length 0) <buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
&else if (con->response.response.error_string & <HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) <buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); <if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.length >= 0)
&else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.response.flags & HOST_CREATE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.load_encoding) &buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.version &= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
<else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.chunks && con->response.chunks && con->response.chunks) if (con->response.http_version!= HTTP_VERSION_1_1) &if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.version = HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) </* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.http_version == HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
/* * We have been able to allocate it a buffer in the buffer, * then the buffer is empty, because we've got * written it. */ if (con->response.write_length 0) &buffer_copy_off_t(srv->tmp_buf, con->response.write_length); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.nsvc_host == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &&else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); &if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.length >= 0)
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
}else if (con->response.error && con->response.error &&!con->response.error) if (con->response.error && con->response.error) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
&else if (con->response.error && con->response.error &&!con->response.error) <if (con->response.error && con->response.error) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.encoding == '0') buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.send_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.con_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) &/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.http_version == HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.http_version == HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.
&else if (con->response.xdb_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.debug == 0) &*b = '<0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length
if (con->response.version <= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.version = HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.request.http_version!= HTTP_VERSION_1_1) &b->request.http_version = HTTP_VERSION_1_; &else &b->request.http_version = HTTP_VERSION_1_; &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.debug == 0) *b = '<0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
&else if (con->response.version >= HTTP_VERSION_VERSION_VERSION_1) <if (!allow_keep_alive) return 1;
if (con->response.encoding == '&0') &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.encoding == '&0') buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.speed & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.speed); allow_keep_alive = 1;
if (con->response.encoding == '<0') buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.send_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.http_version == HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.release_mode!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.http_version == HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.
&else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.chunks && con->response.chunks && con->response.chunks) if (con->response.http_version!= HTTP_VERSION_1_1) <if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.url_version >= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); <else BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
&else if (con->response.xdb_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.length 0) &buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.page_length &= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) /* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
&else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.encoding == '0') <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.release_mode!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
}else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.remote_stream == HTTP_RESTART) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
<else if (con->response.error && con->response.error &&!con->response.error) <if (con->response.error && con->response.error) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length
if (con->response.page_length = 0) <buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
&else if (con->response.error && con->response.error &&!con->response.error) if (con->response.error && con->response.error) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.version >= HTTP_VERSION_1_1) &if (con->response.version >= HTTP_VERSION_2_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) /* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) </* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
<else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
&else if (con->response.request.http_version!= HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
&else if (con->response.url == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.response.flags & HOST_CREATE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.load_encoding) &buffer_copy_off_t(srv->tmp_buf, con->respons
&else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.request.http_version!= HTTP_VERSION_1_1) &b->request.http_version = HTTP_VERSION_1_; <else &b->request.http_version = HTTP_VERSION_1_; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.page_length = 0) <buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) &if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->re
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); <if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.queue_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.queue_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.error_string == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.error_string!= HTTP_VERSION_NONE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
&else if (con->response.version >= HTTP_VERSION_VERSION_VERSION_1) <if (!allow_keep_alive) &return 1;
&else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) </* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
<else if (con->response.xdb_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.request.http_version!= HTTP_VERSION_1_1) <b->request.http_version = HTTP_VERSION_1_; &else <b->request.http_version = HTTP_VERSION_1_; &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.queue_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.queue_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_
if (con->response.request.http_version!= HTTP_VERSION_1_1) &b->request.http_version = HTTP_VERSION_1_; else &b->request.http_version = HTTP_VERSION_1_; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.http_version == HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.speed & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.speed); allow_keep_alive = 1;
if (con->response.version &= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.encoding == '0') &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.server_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); <if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.version <= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
}else if (con->response.ecmd_host && con->response.ecmd_host->host_type == EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX_EX
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.version <= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.release_unloaded) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.version_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
}else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.page_length &= 0) buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1
if (con->response.request.http_version!= HTTP_VERSION_1_1) <b->request.http_version = HTTP_VERSION_1_; <else &b->request.http_version = HTTP_VERSION_1_; &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
<else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) &if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.nsvc_host == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.remote_stream == HTTP_RESTART) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
}else if (con->response.error && con->response.error &&!con->response.error) &if (con->response.error && con->response.error) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
<else &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.page_length = 0) &buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.release_mode!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
&else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.version &= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.con_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.version = HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
<else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length
if (con->response.page_length <= 0) buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) &buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); &if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.length >= 0)
<else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length);
if (con->response.state & http_response_was_error) b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
<else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
}else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.debug == 0) <*b = '0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.response.flags & HOST_CREATE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.load_encoding) <buffer_copy_off_t(srv->tmp_buf, con->respons
&else <buffer_append_long(b, con->http_status);
&else if (con->response.debug) if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
&else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
<else if (con->response.url == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.length <0) <buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
&else if (con->response.url == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.server_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
&else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.version >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.version); allow_keep_alive = 1;
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.subject_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.subject_length); response_header_overwrite(srv, con, CONST_STR_LEN("Subject-Length"), srv->tmp_buf->ptr, srv
<else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.release_unloaded) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.version_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
<else buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
<else if (con->response.request.http_version!= HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.speed_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.speed_length);
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.subject_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.subject_length); response_header_overwrite(srv, con, CONST_STR_LEN("Subject-Length"), srv->tmp_buf->ptr, srv
if (con->response.version = HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.state & http_response_was_error) <b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.url_version >= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
<else if (con->response.request.http_version!= HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.error_string == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.error_string!= HTTP_VERSION_NONE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
return 0;
if (con->response.page_length &= 0) buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.release_unloaded) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.version_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
}else if (con->response.host!= NULL) &if (!allow_keep_alive) con->keep_alive = 0;
if (con->response.release_unloaded) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.version_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
}else if (con->response.request.http_version!= HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.server_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
&else if (con->response.xdb_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
<else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
}else if (con->response.version >= HTTP_VERSION_VERSION_VERSION_1) if (!allow_keep_alive) &return 1;
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
&else if (con->response.url == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
<else if (con->response.debug) &if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
<else if (con->response.request.http_version!= HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
&else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
<else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
<else if (con->response.error && con->response.error &&!con->response.error) if (con->response.error && con->response.error) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.request.http_version!= HTTP_VERSION_1_1) &b->request.http_version = HTTP_VERSION_1_; &else <b->request.http_version = HTTP_VERSION_1_; <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
<else if (con->response.response.error_string & &HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.response.flags & HOST_CREATE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.load_encoding) &buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.chunks && con->response.chunks && con->response.chunks) if (con->response.http_version!= HTTP_VERSION_1_1) if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->t
if (con->response.nsvc_host == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <&else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) &buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); <if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.length >= 0)
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) /* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.error_string == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.error_string!= HTTP_VERSION_NONE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) <if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->re
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.send_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
&else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.chunks && con->response.chunks && con->response.chunks) if (con->response.http_version!= HTTP_VERSION_1_1) if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
&else if (con->response.error && con->response.error &&!con->response.error) &if (con->response.error && con->response.error) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
&else if (con->response.url == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
return 1;
/* make sure the buffer is empty. */ if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; else buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1;
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) <if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->re
<else if (con->response.response.error_string & <HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
}else if (con->response.request.http_version!= HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.response.flags & HOST_CREATE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.load_encoding) &buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.release_mode!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) /* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) </* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.page_length <= 0) buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
&else if (con->response.url == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
}else if (con->response.response.error_string & <HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.request.http_version!= HTTP_VERSION_1_1) b->request.http_version = HTTP_VERSION_1_; <else b->request.http_version = HTTP_VERSION_1_; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
&else &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.http_version == HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.
&else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.page_length &= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
}else if (con->response.url == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.release_unloaded) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.version_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.con_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
}else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.url_version >= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.version >= HTTP_VERSION_1_1) &if (con->response.version >= HTTP_VERSION_2_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.subject_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.subject_length); response_header_overwrite(srv, con, CONST_STR_LEN("Subject-Length"), srv->tmp_buf->ptr, srv
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.remote_stream == HTTP_RESTART) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
}else if (con->response.version >= HTTP_VERSION_VERSION_VERSION_1) if (!allow_keep_alive) <return 1;
if (con->response.response.flags & HOST_CREATE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.load_encoding) &buffer_copy_off_t(srv->tmp_buf, con->respons
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.queue_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.queue_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_
if (con->response.chunks && con->response.chunks && con->response.chunks) &if (con->response.http_version!= HTTP_VERSION_1_1) &if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
&else if (con->response.request.http_version!= HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
}else if (con->response.error && con->response.error &&!con->response.error) &if (con->response.error && con->response.error) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.error_string == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.error_string!= HTTP_VERSION_NONE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.encoding == '<0') buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
}else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.release_mode!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
&else if (con->response.response.error_string & &HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) &/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) </* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.version >= HTTP_VERSION_1_1) &if (con->response.version >= HTTP_VERSION_2_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
&else if (con->response.url == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.state & http_response_was_error) <b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.version &= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
&else if (con->response.url == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.page_length <= 0) buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.subject_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.subject_length); response_header_overwrite(srv, con, CONST_STR_LEN("Subject-Length"), srv->tmp_buf->ptr, srv
<else if (con->response.url == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.version >= HTTP_VERSION_1_1) if (con->response.version >= HTTP_VERSION_2_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.page_length = 0) &buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
&else if (con->response.response.error_string & HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.url_version >= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); else BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
<else if (con->response.debug) if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
&else if (con->response.response.error_string & <HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
&else if (con->response.xdb_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.state & http_response_was_error) &b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
}else if (con->response.xdb_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.version <= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.debug == 0) &*b = '0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.con_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.server_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); &if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.state & http_response_was_error) b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.flags & FIFO_TRANSFER_DEBUG) </* * Check for a packet response. */ buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.flags & FIFO_TRANSFER_DEBUG) buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); buffer_copy_
}else if (con->response.error && con->response.error &&!con->response.error) if (con->response.error && con->response.error) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length
if (con->response.version = HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.response.flags & HOST_CREATE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.load_encoding) buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
}else if (con->response.error && con->response.error &&!con->response.error) <if (con->response.error && con->response.error) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
<else if (con->response.xdb_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.state & http_response_was_error) b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
}else if (con->response.xdb_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
<else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
&else if (con->response.url == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.send_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
}else if (con->response.url == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
<else if (con->response.url == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.response.flags & HOST_CREATE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.load_encoding) &buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.url_version >= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); else <BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
&else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.send_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.con_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
}else if (con->response.request.http_version!= HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.flags & FIFO_TRANSFER_DEBUG) /* * Check for a packet response. */ buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.flags & FIFO_TRANSFER_DEBUG) &buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); buffer_copy_
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.version &= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
&else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.url_version >= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); else <BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.url_version >= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); &else BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
&else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
&else if (con->response.url == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
&else if (con->response.url == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.response.flags & HOST_CREATE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.load_encoding) &buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.version = HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.request.http_version!= HTTP_VERSION_1_1) &b->request.http_version = HTTP_VERSION_1_; <else <b->request.http_version = HTTP_VERSION_1_; &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.version <= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); &if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
<else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
<else <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.chunks && con->response.chunks && con->response.chunks) <if (con->response.http_version!= HTTP_VERSION_1_1) &if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.version &= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.state & http_response_was_error) &b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.flags & FIFO_TRANSFER_DEBUG) /* * Check for a packet response. */ buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.flags & FIFO_TRANSFER_DEBUG) <buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); buffer_copy_
<else if (con->response.request.http_version!= HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
&else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
&else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
<else buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.con_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
}else if (con->response.request.http_version!= HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
&else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 ");
&else if (con->response.response.error_string & HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
}else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.set_name(con->response.set_name)) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(
&else if (con->response.response.error_string & HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
}else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.con_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
<else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.version >= HTTP_VERSION_1_1) if (con->response.version >= HTTP_VERSION_2_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
&else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) </* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) </* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.request.http_version!= HTTP_VERSION_1_1) b->request.http_version = HTTP_VERSION_1_; <else <b->request.http_version = HTTP_VERSION_1_; &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
}else if (con->response.response.error_string & &HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
}else if (con->response.debug) &if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
<else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.status & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
<else if (con->response.error && con->response.error &&!con->response.error) if (con->response.error && con->response.error) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.version &= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.version >= HTTP_VERSION_1_1) &if (con->response.version >= HTTP_VERSION_2_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
&else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
}else if (con->response.send_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.send_encoding);
if (con->response.set_name(con->response.set_name)) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.length >= 0)
if (con->response.release_mode!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.url_version >= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); else BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.page_length = 0) buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
&else if (con->response.debug) <if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.remote_stream == HTTP_RESTART) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.release_mode!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
&else &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) <buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.length >= 0)
<else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) &buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); <if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.length >= 0)
if (con->response.url_version >= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.set_name(con->response.set_name)) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(
if (con->response.state & http_response_was_error) &b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.response.flags & HOST_CREATE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.load_encoding) buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.chunks && con->response.chunks && con->response.chunks) <if (con->response.http_version!= HTTP_VERSION_1_1) if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.debug == 0) *b = '&0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) /* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) </* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.debug == 0) *b = '<0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length
&else if (con->response.response.error_string & &HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
<else if (con->response.request.http_version!= HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.encoding == '<0') &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
<else if (con->response.version >= HTTP_VERSION_VERSION_VERSION_1) if (!allow_keep_alive) return 1;
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
&else if (con->response.response.error_string & HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
<else if (con->response.response.error_string & HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
<else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.error_string == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.error_string!= HTTP_VERSION_NONE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) &if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->re
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.url_version >= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); &else BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.length 0) &buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
&else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.nsvc_host == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
<else if (con->response.url == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.url_version >= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
&else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length
<else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
&else if (con->response.request.http_version!= HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.nsvc_host == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
}else if (con->response.xdb_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.length 0) &buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.send_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
<else if (con->response.error && con->response.error &&!con->response.error) <if (con->response.error && con->response.error) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.state & http_response_was_error) &b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
}else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
}else &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.set_name(con->response.set_name)) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.set_name(con->response.set_name)) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(
if (con->response.set_name(con->response.set_name)) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(
}else if (con->response.request.http_version!= HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
<else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
<else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length);
&else if (con->response.error && con->response.error &&!con->response.error) &if (con->response.error && con->response.error) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
return 0;
<else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) /* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.speed_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.speed_length);
&else if (con->response.error && con->response.error &&!con->response.error) <if (con->response.error && con->response.error) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.debug == 0) <*b = '&0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
<else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.remote_stream == HTTP_RESTART) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.debug == 0) &*b = '0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
}else if (con->response.xdb_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
}else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length);
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.send_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) &buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.length >= 0)
if (con->response.set_name(con->response.set_name)) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(
<else if (con->response.request.http_version!= HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.release_unloaded) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.version_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
<else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.send_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.set_name(con->response.set_name)) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(
<else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.release_unloaded) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.version_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.remote_stream == HTTP_RESTART) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
}else <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.encoding == '&0') &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
}else if (con->response.response.error_string & &HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.remote_stream == HTTP_RESTART) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.subject_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.subject_length); response_header_overwrite(srv, con, CONST_STR_LEN("Subject-Length"), srv->tmp_buf->ptr, srv
if (con->response.release_mode!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.http_version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.
&else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
}else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
<else <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.version = HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1
<else if (con->response.response.error_string & <HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.con_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.con_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length
if (con->response.version = HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) &/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) /* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.error_string == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.error_string!= HTTP_VERSION_NONE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.version &= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.error_string == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.error_string!= HTTP_VERSION_NONE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.length &0) <buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.state & http_response_was_error) <b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.version >= HTTP_VERSION_1_1) &if (con->response.version >= HTTP_VERSION_2_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) /* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) </* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
<else if (con->response.response.error_string & &HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
if (con->response.error_string == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.error_string!= HTTP_VERSION_NONE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
}else buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
}else if (con->response.error && con->response.error &&!con->response.error) <if (con->response.error && con->response.error) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) &buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); <if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.length >= 0)
&else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.debug == 0) *b = '0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) </* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
}else if (con->response.xdb_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
&else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.error_string == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.error_string!= HTTP_VERSION_NONE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.send_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.set_name(con->response.set_name)) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(
if (con->response.state & http_response_was_error) &b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.chunks && con->response.chunks && con->response.chunks) <if (con->response.http_version!= HTTP_VERSION_1_1) &if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.nsvc_host == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
}else if (con->response.response.error_string & HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.send_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.queue_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.queue_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) &buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); &if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.length >= 0)
if (con->response.page_length = 0) &buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
}else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) /* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) /* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.release_mode!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.server_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
&else if (con->response.debug) &if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.request.http_version!= HTTP_VERSION_1_1) &b->request.http_version = HTTP_VERSION_1_; <else &b->request.http_version = HTTP_VERSION_1_; &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.chunks && con->response.chunks && con->response.chunks) if (con->response.http_version!= HTTP_VERSION_1_1) if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
<else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.release_unloaded) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.version_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.release_mode!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.page_length = 0) buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.release_unloaded) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.version_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) &buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.length >= 0)
if (con->response.error_string == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.error_string!= HTTP_VERSION_NONE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.state & http_response_was_error) <b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.page_length <= 0) buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
&else BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 ");
if (con->response.set_name(con->response.set_name)) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(
&else if (con->response.request.http_version!= HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.debug == 0) *b = '&0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.state & http_response_was_error) &b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.version >= HTTP_VERSION_1_1) <if (con->response.version >= HTTP_VERSION_2_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.remote_stream == HTTP_RESTART) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.state & http_response_was_error) b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length
<else <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.con_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.set_name(con->response.set_name)) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
&else if (con->response.request.http_version!= HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.release_unloaded) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.version_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
}else if (con->response.error && con->response.error &&!con->response.error) if (con->response.error && con->response.error) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.chunks && con->response.chunks && con->response.chunks) &if (con->response.http_version!= HTTP_VERSION_1_1) &if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
}else if (con->response.error && con->response.error &&!con->response.error) <if (con->response.error && con->response.error) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.response.flags & HOST_CREATE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.load_encoding) &buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.version >= HTTP_VERSION_1_1) <if (con->response.version >= HTTP_VERSION_2_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.nsvc_host == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <&else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
<else if (con->response.error && con->response.error &&!con->response.error) &if (con->response.error && con->response.error) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
<else if (con->response.error && con->response.error &&!con->response.error) &if (con->response.error && con->response.error) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
<else if (con->response.url == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
&else if (con->response.version >= HTTP_VERSION_VERSION_VERSION_1) &if (!allow_keep_alive) return 1;
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); <if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.length >= 0)
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
<else if (con->response.xdb_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.release_mode!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.error == 0) &error("Could not get HTTP header.<n"); return;
}else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.con_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length
if (con->response.set_name(con->response.set_name)) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(
if (con->response.page_length = 0) &buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
<else if (con->response.request.http_version!= HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
&else <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
&else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.version >= HTTP_VERSION_1_1) <if (con->response.version >= HTTP_VERSION_2_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.error_string == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.error_string!= HTTP_VERSION_NONE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.version >= HTTP_VERSION_1_1) &if (con->response.version >= HTTP_VERSION_2_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.url_version >= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); &else BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
&else if (con->response.request.http_version!= HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) &if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.url_version >= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
&else if (con->response.url == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); <if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.debug == 0) &*b = '0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.chunks && con->response.chunks && con->response.chunks) &if (con->response.http_version!= HTTP_VERSION_1_1) &if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.chunks && con->response.chunks && con->response.chunks) <if (con->response.http_version!= HTTP_VERSION_1_1) <if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.release_mode!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
}else if (con->response.url == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
}else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
}else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.release_mode!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.subject_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.subject_length); response_header_overwrite(srv, con, CONST_STR_LEN("Subject-Length"), srv->tmp_buf->ptr, srv
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) &if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.url_version >= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); else &BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.url_version >= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); <else BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.release_mode!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
&else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.response.flags & HOST_CREATE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.load_encoding) <buffer_copy_off_t(srv->tmp_buf, con->respons
&else if (con->response.error && con->response.error &&!con->response.error) <if (con->response.error && con->response.error) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
<else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.nsvc_host == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.error == 0) <error("Could not get HTTP header.&n"); return;
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
}else &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.set_name(con->response.set_name)) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(
}else &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.queue_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.queue_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) <buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.length >= 0)
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.remote_stream == HTTP_RESTART) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) <buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); <if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.length >= 0)
if (con->response.encoding == '<0') buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.url_version >= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.con_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.release_unloaded) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.version_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.http_version == HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.state & http_response_was_error) <b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
}else if (con->response.xdb_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
<else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.url_size > 0) &buffer_copy_off_t(srv->tmp_buf, con->response.url_size); return 0;
if (con->response.set_name(con->response.set_name)) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.server_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); <if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); &if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.length >= 0)
if (con->response.debug == 0) *b = '&0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.version >= HTTP_VERSION_1_1) if (con->response.version >= HTTP_VERSION_2_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.debug == 0) &*b = '<0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.error_string == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.error_string!= HTTP_VERSION_NONE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
}else if (con->response.debug) <if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
&else if (con->response.version >= HTTP_VERSION_VERSION_VERSION_1) &if (!allow_keep_alive) <return 1;
/* * Allocate the message from the request */ if (con->response.version = HTTP_VERSION_1_2) buffer_append_long(b, con->http_status);
<else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length);
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.error_string == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.error_string!= HTTP_VERSION_NONE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length
if (con->response.request.http_version!= HTTP_VERSION_1_1) b->request.http_version = HTTP_VERSION_1_; else b->request.http_version = HTTP_VERSION_1_; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.remote_stream == HTTP_RESTART) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
/* * We have been able to allocate it a buffer in the buffer, * then the buffer is empty, because we've got * written it. */ if (con->response.write_length &0) &buffer_copy_off_t(srv->tmp_buf, con->response.write_length); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
<else if (con->response.error && con->response.error &&!con->response.error) <if (con->response.error && con->response.error) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
&else if (con->response.xdb_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
&else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
}else if (con->response.url == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
<else if (con->response.xdb_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
<else if (con->response.xdb_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) </* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.speed_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.speed_length);
if (con->response.remote_stream == HTTP_RESTART) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
&else if (con->response.host!= NULL) &if (!allow_keep_alive) con->keep_alive = 0;
if (con->response.error_string == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.error_string!= HTTP_VERSION_NONE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
}else if (con->response.xdb_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.remote_stream == HTTP_RESTART) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.nsvc_host == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <&else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.release_unloaded) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.version_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
}else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.send_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.version <= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
}else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
}else if (con->response.xdb_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.length 0) buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.request.http_version!= HTTP_VERSION_1_1) <b->request.http_version = HTTP_VERSION_1_; <else <b->request.http_version = HTTP_VERSION_1_; &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.queue_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.queue_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) &buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); <if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.length >= 0)
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.response.flags & HOST_CREATE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.load_encoding) &buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.version >= HTTP_VERSION_1_1) <if (con->response.version >= HTTP_VERSION_2_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.version >= HTTP_VERSION_1_1) &if (con->response.version >= HTTP_VERSION_2_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
}else if (con->response.debug) &if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.debug == 0) *b = '<0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.con_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
printf("http_response_write_header()<n");
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.nsvc_host == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
}else if (con->response.debug) <if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.debug == 0) &*b = '&0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.encoding == '0') <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
<else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) &/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) /* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
<else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
if (con->response.length <0) buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
printf("http_response_write_header (empty)<n");
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
&else if (con->response.debug) if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.set_name(con->response.set_name)) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(
if (con->response.version >= HTTP_VERSION_1_1) &if (con->response.version >= HTTP_VERSION_2_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
&else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
&else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
&else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) </* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) /* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
&else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.debug == 0) *b = '<0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); &if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.length >= 0)
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
<else if (con->response.version >= HTTP_VERSION_VERSION_VERSION_1) <if (!allow_keep_alive) &return 1;
if (con->response.chunks && con->response.chunks && con->response.chunks) if (con->response.http_version!= HTTP_VERSION_1_1) <if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
/* make sure the buffer is empty. */ if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <else <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1;
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.server_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.state & http_response_was_error) b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
<else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
<else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.subject_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.subject_length); response_header_overwrite(srv, con, CONST_STR_LEN("Subject-Length"), srv->tmp_buf->ptr, srv
}else if (con->response.response.error_string & &HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.send_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.release_mode!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.url_version >= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.url_version >= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); else <BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.server_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); &if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.length >= 0)
if (con->response.release_mode!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.encoding == '&0') <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.release_unloaded) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.version_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.version &= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.flags & FIFO_TRANSFER_DEBUG) /* * Check for a packet response. */ buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.flags & FIFO_TRANSFER_DEBUG) buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); buffer_copy_
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) &if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->re
}else if (con->response.xdb_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
}else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.encoding == '0') &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.encoding == '<0') &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.subject_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.subject_length); response_header_overwrite(srv, con, CONST_STR_LEN("Subject-Length"), srv->tmp_buf->ptr, srv
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length
if (con->response.url_version >= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
}else if (con->response.debug) if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.debug == 0) &*b = '0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); &if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.length >= 0)
<else if (con->response.request.http_version!= HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.version >= HTTP_VERSION_1_1) &if (con->response.version >= HTTP_VERSION_2_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
}else if (con->response.error && con->response.error &&!con->response.error) if (con->response.error && con->response.error) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); &if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
}else if (con->response.error && con->response.error &&!con->response.error) <if (con->response.error && con->response.error) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); <if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
}else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");
}else <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.error_string == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.error_string!= HTTP_VERSION_NONE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
<else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
&else if (con->response.request.http_version!= HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
&else if (con->response.request.http_version!= HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.http_version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) /* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.encoding == '<0') <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
}else if (con->response.error && con->response.error &&!con->response.error) &if (con->response.error && con->response.error) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
if (con->response.chunks && con->response.chunks && con->response.chunks) <if (con->response.http_version!= HTTP_VERSION_1_1) &if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.state & http_response_was_error) <b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.response.flags & HOST_CREATE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.load_encoding) buffer_copy_off_t(srv->tmp_buf, con->respons
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.url_version >= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); else <BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.nsvc_host == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <&else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
}else if (con->response.debug) <if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
<else if (con->response.response.error_string & <HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.nsvc_host == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &<else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.length <0) &buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.chunks && con->response.chunks && con->response.chunks) &if (con->response.http_version!= HTTP_VERSION_1_1) <if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
<else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
&else if (con->response.debug) <if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.state & http_response_was_error) b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
<else if (con->response.host!= NULL) if (!allow_keep_alive) con->keep_alive = 0;
if (con->response.release_unloaded) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.version_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
}else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
&else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.page_length = 0) buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) &if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->re
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); <if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.version = HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.length &0) buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length
}else if (con->response.request.http_version!= HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.release_mode!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.url_version >= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); else &BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
<else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.con_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.encoding == '0') <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.queue_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.queue_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_
if (con->response.remote_stream == HTTP_RESTART) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
<else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.error_string == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.error_string!= HTTP_VERSION_NONE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) &if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->re
}else if (con->response.url == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
&else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
<else if (con->response.url == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.length 0) <buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.release_unloaded) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.version_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); <if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.length >= 0)
if (con->response.state & http_response_was_error) &b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
&else if (con->response.error && con->response.error &&!con->response.error) &if (con->response.error && con->response.error) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.version >= HTTP_VERSION_1_1) &if (con->response.version >= HTTP_VERSION_2_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.state & http_response_was_error) <b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
}else if (con->response.response.error_string & &HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.url_version >= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); else &BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
}else if (con->response.response.error_string & HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
<else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.state & http_response_was_error) b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.response.flags & HOST_CREATE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.load_encoding) <buffer_copy_off_t(srv->tmp_buf, con->respons
}else if (con->response.response.error_string & HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length
if (con->response.url_version >= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); &else BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
/* make sure the buffer is empty. */ if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <else &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1;
if (con->response.url_version >= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.server_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); <if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
<else if (con->response.version >= HTTP_VERSION_VERSION_VERSION_1) if (!allow_keep_alive) <return 1;
if (con->response.version >= HTTP_VERSION_1_1) if (con->response.version >= HTTP_VERSION_2_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.con_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.send_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
}else if (con->response.request.http_version!= HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
&else if (con->response.request.http_version!= HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
}else if (con->response.url == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.chunks && con->response.chunks && con->response.chunks) &if (con->response.http_version!= HTTP_VERSION_1_1) <if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.response.flags & HOST_CREATE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.load_encoding) <buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.release_unloaded) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.version_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); <if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
}else if (con->response.url == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
}else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.flags & FIFO_TRANSFER_DEBUG) /* * Check for a packet response. */ buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.flags & FIFO_TRANSFER_DEBUG) &buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); buffer_copy_
/* make sure the buffer is empty. */ if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; else <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1;
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.http_version == HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.
&else if (con->response.response.error_string & <HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.server_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); &if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.remote_stream == HTTP_RESTART) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.set_name(con->response.set_name)) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.version >= HTTP_VERSION_1_1) <if (con->response.version >= HTTP_VERSION_2_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.con_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->re
<else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.http_version == HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.http_version == HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.send_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.state & http_response_was_error) b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.nsvc_host == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &<else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
<else if (con->response.url == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.response.flags & HOST_CREATE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.load_encoding) buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.length >= 0)
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.con_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.remote_stream == HTTP_RESTART) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) &buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.length >= 0)
if (con->response.nsvc_host == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <&else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
<else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
if (con->response.version &= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
<else if (con->response.xdb_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.request.http_version!= HTTP_VERSION_1_1) b->request.http_version = HTTP_VERSION_1_; else &b->request.http_version = HTTP_VERSION_1_; &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.response.flags & HOST_CREATE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.load_encoding) <buffer_copy_off_t(srv->tmp_buf, con->respons
<else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) </* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) /* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
<else if (con->response.request.http_version!= HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.release_mode!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.encoding == '&0') buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); <if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.debug == 0) *b = '0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
<else &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.length <0) buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.release_unloaded) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.version_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.con_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) &/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) /* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
&else if (con->response.request.http_version!= HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
&else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length);
if (con->response.chunks && con->response.chunks && con->response.chunks) <if (con->response.http_version!= HTTP_VERSION_1_1) if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.queue_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.queue_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_
buffer_append_long(b, '&0'); buffer_append_string(b, get_http_status_name(con->http_status));
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
&else if (con->response.debug) if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.version >= HTTP_VERSION_1_1) if (con->response.version >= HTTP_VERSION_2_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
&else if (con->response.request.http_version!= HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.set_name(con->response.set_name)) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
}else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
<else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.error_string == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.error_string!= HTTP_VERSION_NONE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.response.flags & HOST_CREATE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.load_encoding) <buffer_copy_off_t(srv->tmp_buf, con->respons
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
/* * XXX */ buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.set_name(con->response.set_name)) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(
if (con->response.version >= HTTP_VERSION_1_1) &if (con->response.version >= HTTP_VERSION_2_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.length &0) <buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
}else &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length
if (con->response.length <0) buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.release_mode!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.chunks && con->response.chunks && con->response.chunks) <if (con->response.http_version!= HTTP_VERSION_1_1) &if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
}else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length);
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.version <= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.remote_stream == HTTP_RESTART) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.length <0) &buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
<else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
&else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.length <0) <buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
}else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
<else <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
&else if (con->response.debug) <if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.version >= HTTP_VERSION_1_1) <if (con->response.version >= HTTP_VERSION_2_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->re
&else if (con->response.debug) <if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.url_version >= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.set_name(con->response.set_name)) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.debug == 0) *b = '0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.url_version >= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); else BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
}else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length
}else if (con->response.xdb_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
}else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
&else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.con_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) &/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) </* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.release_unloaded) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.version_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->re
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
<else if (con->response.debug) &if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.server_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); &if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
/* make sure the buffer is empty. */ if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &else <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1;
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.send_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.debug == 0) &*b = '<0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.remote_stream == HTTP_RESTART) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
/* * We have been able to allocate it a buffer in the buffer, * then the buffer is empty, because we've got * written it. */ if (con->response.write_length <0) <buffer_copy_off_t(srv->tmp_buf, con->response.write_length); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.encoding == '<0') <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
&else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
<else if (con->response.response.error_string & HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.request.http_version!= HTTP_VERSION_1_1) &b->request.http_version = HTTP_VERSION_1_; <else b->request.http_version = HTTP_VERSION_1_; &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.request.http_version!= HTTP_VERSION_1_1) <b->request.http_version = HTTP_VERSION_1_; else b->request.http_version = HTTP_VERSION_1_; &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) &if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.error == 0) error("Could not get HTTP header.<n"); return;
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length
<else if (con->response.debug) <if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
/* make sure the buffer is empty. */ if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <else <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1;
if (con->response.length &0) &buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
<else if (con->response.request.http_version!= HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
&else if (con->response.request.http_version!= HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.error_string == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.error_string!= HTTP_VERSION_NONE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->t
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
<else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.response.flags & HOST_CREATE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.load_encoding) &buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.release_mode!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.send_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.http_version == HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.encoding == '0') buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.page_length &= 0) buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.remote_stream == HTTP_RESTART) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
}else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.http_version == HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.url_version >= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); else <BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.con_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.request.http_version!= HTTP_VERSION_1_1) &b->request.http_version = HTTP_VERSION_1_; else <b->request.http_version = HTTP_VERSION_1_; &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) </* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) </* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.error_string == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.error_string!= HTTP_VERSION_NONE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.version >= HTTP_VERSION_1_1) &if (con->response.version >= HTTP_VERSION_2_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.debug == 0) &*b = '&0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.speed >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.speed); allow_keep_alive = 1;
if (con->response.length 0) &buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.set_name(con->response.set_name)) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.subject_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.subject_length); response_header_overwrite(srv, con, CONST_STR_LEN("Subject-Length"), srv->tmp_buf->ptr, srv
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) &buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.length >= 0)
}else if (con->response.url == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->re
}else if (con->response.response.error_string & HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->t
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
<else &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
&else if (con->response.response.error_string & &HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
}else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
}else &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.length <0) &buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.send_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.release_unloaded) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.version_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.page_length &= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.encoding == '<0') <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.release_mode!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
}else buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
}else <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.response.flags & HOST_CREATE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.load_encoding) &buffer_copy_off_t(srv->tmp_buf, con->respons
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.url_version >= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.version <= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.response.flags & HOST_CREATE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.load_encoding) <buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.state & http_response_was_error) <b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) &/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) </* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
&else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
}else if (con->response.send_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) /* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.send_encoding);
}else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.state & http_response_was_error) b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.page_length &= 0) buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
}else if (con->response.request.http_version!= HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
&else buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
&else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.page_length <= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) </* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.flags & FIFO_TRANSFER_DEBUG) &/* * Check for a packet response. */ buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.flags & FIFO_TRANSFER_DEBUG) <buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); buffer_copy_
&else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
&else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.debug == 0) &*b = '0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.set_name(con->response.set_name)) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(
<else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
<else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
&else if (con->response.xdb_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.http_version == HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.encoding == '&0') &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) &if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->re
/* make sure the buffer is empty. */ if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; else <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1;
}else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.response.flags & HOST_CREATE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.load_encoding) buffer_copy_off_t(srv->tmp_buf, con->respons
/* make sure the buffer is empty. */ if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <else buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1;
<else buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
}else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.version &= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
}else if (con->response.error && con->response.error &&!con->response.error) <if (con->response.error && con->response.error) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.length &0) <buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.state & HTTP_TRANSFER_SINGLE) &buffer_copy_off_t(srv->tmp_buf, con->response.status); allow_keep_alive = 1;
if (con->response.set_name(con->response.set_name)) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
}else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.subject_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.subject_length); response_header_overwrite(srv, con, CONST_STR_LEN("Subject-Length"), srv->tmp_buf->ptr, srv
if (con->response.request.http_version!= HTTP_VERSION_1_1) <b->request.http_version = HTTP_VERSION_1_; &else b->request.http_version = HTTP_VERSION_1_; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.encoding == '0') buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.state & http_response_was_error) <b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.flags & FIFO_TRANSFER_DEBUG) </* * Check for a packet response. */ buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.flags & FIFO_TRANSFER_DEBUG) &buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); buffer_copy_
&else &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.con_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
<else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 ");
}else if (con->response.url == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.request.http_version!= HTTP_VERSION_1_1) <b->request.http_version = HTTP_VERSION_1_; <else &b->request.http_version = HTTP_VERSION_1_; <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.length 0) <buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.version >= HTTP_VERSION_1_1) <if (con->response.version >= HTTP_VERSION_2_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
<else if (con->response.version >= HTTP_VERSION_VERSION_VERSION_1) &if (!allow_keep_alive) &return 1;
<else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
&else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length);
if (con->response.version <= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.state & http_response_was_error) <b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.subject_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.subject_length); response_header_overwrite(srv, con, CONST_STR_LEN("Subject-Length"), srv->tmp_buf->ptr, srv
<else if (con->response.request.http_version!= HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
&else if (con->response.error && con->response.error &&!con->response.error) if (con->response.error && con->response.error) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.response.flags & HOST_CREATE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.load_encoding) buffer_copy_off_t(srv->tmp_buf, con->respons
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.url_version >= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); else BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
&else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
&else if (con->response.xdb_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
&else if (con->response.xdb_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
<else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.server_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
&else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
<else if (con->response.response.error_string & &HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
<else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
}else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) <if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.response.flags & HOST_CREATE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.load_encoding) buffer_copy_off_t(srv->tmp_buf, con->respons
}else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.error_string == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.error_string!= HTTP_VERSION_NONE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.response.flags & HOST_CREATE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.load_encoding) buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.page_length &= 0) buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.release_unloaded) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.version_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.page_length = 0) &buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.con_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.response.flags & HOST_CREATE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.load_encoding) buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.nsvc_host == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <<else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.version >= HTTP_VERSION_1_1) if (con->response.version >= HTTP_VERSION_2_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
if (con->response.nsvc_host == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.version &= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.page_length &= 0) buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.queue_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.queue_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.encoding == '0') <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.error_string == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.error_string!= HTTP_VERSION_NONE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.state & http_response_was_error) <b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
<else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.remote_stream == HTTP_RESTART) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
&else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.response.flags & HOST_CREATE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.load_encoding) &buffer_copy_off_t(srv->tmp_buf, con->respons
/* * We have been able to allocate it a buffer in the buffer, * then the buffer is empty, because we've got * written it. */ if (con->response.write_length <0) <buffer_copy_off_t(srv->tmp_buf, con->response.write_length); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.request.http_version!= HTTP_VERSION_1_1) <b->request.http_version = HTTP_VERSION_1_; <else b->request.http_version = HTTP_VERSION_1_; <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
}else if (con->response.request.http_version!= HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.page_length &= 0) buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
}else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.version >= HTTP_VERSION_1_1) <if (con->response.version >= HTTP_VERSION_2_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.release_mode!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); <if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
}else &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.http_version == HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.remote_stream == HTTP_RESTART) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
<else buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
&else if (con->response.url == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.queue_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.queue_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_
if (con->response.request.http_version!= HTTP_VERSION_1_1) b->request.http_version = HTTP_VERSION_1_; &else b->request.http_version = HTTP_VERSION_1_; <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
&else if (con->response.request.http_version!= HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.version >= HTTP_VERSION_1_1) <if (con->response.version >= HTTP_VERSION_2_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.send_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length
if (con->response.url_version >= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); else &BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.version >= HTTP_VERSION_1_1) &if (con->response.version >= HTTP_VERSION_2_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) <if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->re
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->t
if (con->response.encoding == '0') &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.server_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); <if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
/* make sure the buffer is empty. */ if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; else &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1;
if (con->response.response.flags & HOST_CREATE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.load_encoding) &buffer_copy_off_t(srv->tmp_buf, con->respons
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
&else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
}else if (con->response.error && con->response.error &&!con->response.error) <if (con->response.error && con->response.error) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.url_version >= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
&else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
}else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
&else if (con->response.xdb_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
<else buffer_append_long(b, con->http_status);
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.encoding == '&0') <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.nsvc_host == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <<else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.url_version >= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
&else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.send_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
}else if (con->response.response.error_string & <HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.release_mode!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.debug == 0) <*b = '&0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.remote_stream == HTTP_RESTART) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.send_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) <buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); &if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.length >= 0)
if (con->response.debug == 0) *b = '<0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
<else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
}else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.response.flags & HOST_CREATE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.load_encoding) buffer_copy_off_t(srv->tmp_buf, con->respons
printf("http_response_write_header()n");
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length
<else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.nsvc_host == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.version = HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.remote_stream == HTTP_RESTART) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) </* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) /* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) &/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) /* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.response.flags & HOST_CREATE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.load_encoding) buffer_copy_off_t(srv->tmp_buf, con->respons
}else if (con->response.debug) if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.encoding == '&0') buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.release_unloaded) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.version_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.remote_stream == HTTP_RESTART) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.url_version >= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.local_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");
if (con->response.page_length <= 0) buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.debug == 0) <*b = '<0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.release_mode!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
&else buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->t
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) <if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->re
<else if (con->response.xdb_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
&else if (con->response.url == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
&else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.version &= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.remote_stream == HTTP_RESTART) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) </* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) &if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.encoding == '<0') buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.page_length = 0) <buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.chunks && con->response.chunks && con->response.chunks) <if (con->response.http_version!= HTTP_VERSION_1_1) if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) /* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
&else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
&else if (con->response.request.http_version!= HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.request.http_version!= HTTP_VERSION_1_1) &b->request.http_version = HTTP_VERSION_1_; &else <b->request.http_version = HTTP_VERSION_1_; &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
&else if (con->response.xdb_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
printf("http_response_write_header<n");
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
}else if (con->response.response.error_string & HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
}else &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); &if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.length >= 0)
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1
if (con->response.chunks && con->response.chunks && con->response.chunks) &if (con->response.http_version!= HTTP_VERSION_1_1) <if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.version >= HTTP_VERSION_1_1) <if (con->response.version >= HTTP_VERSION_2_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) &if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->re
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) /* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) /* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
&else if (con->response.debug) <if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
<else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length
}else buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status));
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.response.flags & HOST_CREATE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.load_encoding) <buffer_copy_off_t(srv->tmp_buf, con->respons
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.con_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.local_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");
&else buffer_append_long(b, con->http_status);
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
&else &buffer_append_long(b, con->http_status);
if (con->response.state & http_response_was_error) <b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.error_string == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.error_string!= HTTP_VERSION_NONE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) <buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.length >= 0)
if (con->response.set_name(con->response.set_name)) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(
if (con->response.state & http_response_was_error) &b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.send_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
<else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
&else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.url_version >= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); <else BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
buffer_append_long(b, '<0'); buffer_append_string(b, get_http_status_name(con->http_status));
if (con->response.error_string == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.error_string!= HTTP_VERSION_NONE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) &/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.release_mode!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
<else if (con->response.error && con->response.error &&!con->response.error) &if (con->response.error && con->response.error) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
<else buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.remote_stream == HTTP_RESTART) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
&else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.state & http_response_was_error) b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.queue_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.queue_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_
}else if (con->response.request.http_version!= HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
}else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.set_name(con->response.set_name)) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(
if (con->response.version >= HTTP_VERSION_1_1) if (con->response.version >= HTTP_VERSION_2_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.remote_stream == HTTP_RESTART) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.remote_stream == HTTP_RESTART) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.http_version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.
&else if (con->response.request.http_version!= HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
&else if (con->response.request.http_version!= HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.version >= HTTP_VERSION_1_1) &if (con->response.version >= HTTP_VERSION_2_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
<else if (con->response.response.error_string & HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1
if (con->response.state & http_response_was_error) &b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
&else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
/* XXX need to set a bit in the vbar. */ buffer_append_long(b, &(con->request.http_version &1.0));
}else if (con->response.url == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) &if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->re
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.request.http_version!= HTTP_VERSION_1_1) &b->request.http_version = HTTP_VERSION_1_; &else <b->request.http_version = HTTP_VERSION_1_; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
&else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.set_name(con->response.set_name)) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) /* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.speed_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.speed_length);
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.release_mode!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
}else <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.encoding == '<0') buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.flags & FIFO_TRANSFER_DEBUG) /* * Check for a packet response. */ buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.flags & FIFO_TRANSFER_DEBUG) buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); buffer_copy_
if (con->response.error_string == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.error_string!= HTTP_VERSION_NONE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.chunks && con->response.chunks && con->response.chunks) if (con->response.http_version!= HTTP_VERSION_1_1) <if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.release_mode!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.send_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) &buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); &if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.length >= 0)
}else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) <buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); &if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.length >= 0)
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
}else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length);
if (con->response.remote_stream == HTTP_RESTART) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
<else if (con->response.xdb_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
}else buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.encoding == '0') <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) /* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) </* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.release_mode!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
}else if (con->response.request.http_version!= HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.url_version >= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) </* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.speed_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.speed_length);
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.send_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.debug == 0) <*b = '&0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
<else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.state & http_response_was_error) &b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) </* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) </* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.error_string == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.error_string!= HTTP_VERSION_NONE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.error_string == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.error_string!= HTTP_VERSION_NONE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.chunks && con->response.chunks && con->response.chunks) <if (con->response.http_version!= HTTP_VERSION_1_1) <if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
&else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.con_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.debug == 0) &*b = '<0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.error_string == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.error_string!= HTTP_VERSION_NONE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
<else if (con->response.version >= HTTP_VERSION_VERSION_VERSION_1) &if (!allow_keep_alive) <return 1;
if (con->response.set_name(con->response.set_name)) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(
if (con->response.chunks && con->response.chunks && con->response.chunks) &if (con->response.http_version!= HTTP_VERSION_1_1) if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.response.flags & HOST_CREATE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.load_encoding) buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.remote_stream == HTTP_RESTART) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.release_unloaded) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.version_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.send_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
<else if (con->response.response.error_string & <HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); <if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.length >= 0)
if (con->response.send_encoding == HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.release_unloaded) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.version_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.remote_stream == HTTP_RESTART) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.con_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.http_version == HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.
<else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.page_length <= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.encoding == '<0') &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.version >= HTTP_VERSION_1_1) &if (con->response.version >= HTTP_VERSION_2_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
}else if (con->response.url == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); &if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
&else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.page_length <= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.version >= HTTP_VERSION_1_1) <if (con->response.version >= HTTP_VERSION_2_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.request.http_version!= HTTP_VERSION_1_1) b->request.http_version = HTTP_VERSION_1_; &else <b->request.http_version = HTTP_VERSION_1_; <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.length 0) buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) <buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.length >= 0)
if (con->response.set_name(con->response.set_name)) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(
&else if (con->response.error && con->response.error &&!con->response.error) if (con->response.error && con->response.error) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1
/* make sure the buffer is empty. */ if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; else buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1;
if (con->response.version >= HTTP_VERSION_1_1) <if (con->response.version >= HTTP_VERSION_2_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.http_version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) /* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) </* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.url_version >= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); &else BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
&else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.http_version == HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.
<else if (con->response.url == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.length &0) &buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
&else if (con->response.error && con->response.error &&!con->response.error) &if (con->response.error && con->response.error) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
<else if (con->response.response.error_string & &HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->t
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.con_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.http_version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.server_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
if (con->response.release_unloaded) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.version_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.con_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.flags & FIFO_TRANSFER_DEBUG) /* * Check for a packet response. */ buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.flags & FIFO_TRANSFER_DEBUG) buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); buffer_copy_
if (con->response.remote_stream == HTTP_RESTART) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.set_name(con->response.set_name)) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(
if (con->response.release_unloaded) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.version_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) </* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) </* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.release_unloaded) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.version_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.response.flags & HOST_CREATE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.load_encoding) <buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.error_string == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.error_string!= HTTP_VERSION_NONE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.send_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.send_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.version >= HTTP_VERSION_1_1) <if (con->response.version >= HTTP_VERSION_2_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.page_length &= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
&else if (con->response.xdb_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
/* make sure the buffer is empty. */ if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &else buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1;
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->t
<else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.page_length <= 0) buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.release_unloaded) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.version_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
<else if (con->response.debug) if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
if (con->response.release_mode!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.error_string == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.error_string!= HTTP_VERSION_NONE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.request.http_version!= HTTP_VERSION_1_1) <b->request.http_version = HTTP_VERSION_1_; &else b->request.http_version = HTTP_VERSION_1_; <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) <buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.length >= 0)
<else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
<else if (con->response.url == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
}else if (con->response.debug) &if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) &if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->re
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
/* make sure the buffer is empty. */ if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &else buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1;
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
<else if (con->response.url == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.version >= HTTP_VERSION_1_1) <if (con->response.version >= HTTP_VERSION_2_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length
if (con->response.response.flags & HOST_CREATE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.load_encoding) buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) &buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); &if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.length >= 0)
if (con->response.page_length = 0) <buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) </* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) /* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.queue_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.queue_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_
<else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 ");
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.flags & FIFO_TRANSFER_DEBUG) &/* * Check for a packet response. */ buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.flags & FIFO_TRANSFER_DEBUG) &buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); buffer_copy_
if (con->response.page_length &= 0) buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.version <= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
}else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.send_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
}else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.http_version == HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) /* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) /* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.release_unloaded) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.version_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.encoding == '&0') &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.set_name(con->response.set_name)) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(
}else if (con->response.response.error_string & &HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.error_string == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.error_string!= HTTP_VERSION_NONE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.release_unloaded) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.version_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); <if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.length >= 0)
if (con->response.nsvc_host == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &&else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) &buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); <if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.length >= 0)
if (con->response.release_mode!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.page_length = 0) &buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
&else if (con->response.request.http_version!= HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
<else &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.queue_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.queue_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) &if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->re
}else if (con->response.response.error_string & &HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
}else if (con->response.url == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
&else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
}else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.url_version >= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) /* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) /* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
<else if (con->response.xdb_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->t
if (con->response.http_version == HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.set_name(con->response.set_name)) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(
if (con->response.chunks && con->response.chunks && con->response.chunks) if (con->response.http_version!= HTTP_VERSION_1_1) &if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
&else &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.debug == 0) &*b = '&0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
&else if (con->response.error && con->response.error &&!con->response.error) &if (con->response.error && con->response.error) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
}else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
&else if (con->response.debug) if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.debug == 0) *b = '0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) <if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.version >= HTTP_VERSION_1_1) if (con->response.version >= HTTP_VERSION_2_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.encoding == '0') &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
}else if (con->response.debug) if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.url_version >= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
/* * XXX */ buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
&else &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.release_mode!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
<else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
/* * We have been able to allocate it a buffer in the buffer, * then the buffer is empty, because we've got * written it. */ if (con->response.write_length <0) &buffer_copy_off_t(srv->tmp_buf, con->response.write_length); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) <buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); &if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.length >= 0)
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
&else if (con->response.error && con->response.error &&!con->response.error) if (con->response.error && con->response.error) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.encoding == '<0') buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.url_version >= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); else &BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) </* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) </* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
&else if (con->response.request.http_version!= HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.debug == 0) <*b = '0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
/* make sure the buffer is empty. */ if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &else buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1;
&else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
&else if (con->response.error && con->response.error &&!con->response.error) &if (con->response.error && con->response.error) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
&else if (con->response.xdb_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.page_length &= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.version >= HTTP_VERSION_1_1) if (con->response.version >= HTTP_VERSION_2_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.length 0) <buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
<else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
&else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.debug == 0) <*b = '<0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.chunks && con->response.chunks && con->response.chunks) <if (con->response.http_version!= HTTP_VERSION_1_1) &if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.version &= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.version <= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
}else if (con->response.error && con->response.error &&!con->response.error) &if (con->response.error && con->response.error) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.request.http_version!= HTTP_VERSION_1_1) b->request.http_version = HTTP_VERSION_1_; &else &b->request.http_version = HTTP_VERSION_1_; <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.page_length = 0) buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.chunks && con->response.chunks && con->response.chunks) <if (con->response.http_version!= HTTP_VERSION_1_1) <if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.release_unloaded) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.version_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.http_version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.
<else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.queue_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.queue_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_
if (con->response.flags & FIFO_TRANSFER_DEBUG) </* * Check for a packet response. */ buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.flags & FIFO_TRANSFER_DEBUG) buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); buffer_copy_
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.request.http_version!= HTTP_VERSION_1_1) <b->request.http_version = HTTP_VERSION_1_; <else <b->request.http_version = HTTP_VERSION_1_; <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.debug == 0) *b = '<0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.request.http_version!= HTTP_VERSION_1_1) b->request.http_version = HTTP_VERSION_1_; else b->request.http_version = HTTP_VERSION_1_; <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.release_unloaded) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.version_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.flags & FIFO_TRANSFER_DEBUG) &/* * Check for a packet response. */ buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.flags & FIFO_TRANSFER_DEBUG) <buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); buffer_copy_
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.con_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.error_string == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.error_string!= HTTP_VERSION_NONE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
}else if (con->response.url == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
&else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
}else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
&else if (con->response.send_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.send_encoding);
if (con->response.page_length <= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
<else if (con->response.xdb_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.request.http_version!= HTTP_VERSION_1_1) b->request.http_version = HTTP_VERSION_1_; <else <b->request.http_version = HTTP_VERSION_1_; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
<else &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
&else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
/* make sure the buffer is empty. */ if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &else <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1;
if (con->response.remote_stream == HTTP_RESTART) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
&else if (con->response.response.error_string & &HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
}else if (con->response.url == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.version >= HTTP_VERSION_1_1) if (con->response.version >= HTTP_VERSION_2_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.send_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.set_name(con->response.set_name)) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(
<else &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
&else if (con->response.error && con->response.error &&!con->response.error) <if (con->response.error && con->response.error) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.speed & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.speed); allow_keep_alive = 1;
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) /* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) /* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.nsvc_host == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
/* * We have been able to allocate it a buffer in the buffer, * then the buffer is empty, because we've got * written it. */ if (con->response.write_length <0) buffer_copy_off_t(srv->tmp_buf, con->response.write_length); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.remote_stream == HTTP_RESTART) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.state & http_response_was_error) b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.url_version >= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.version &= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.error_string == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.error_string!= HTTP_VERSION_NONE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) &/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
<else if (con->response.error && con->response.error &&!con->response.error) if (con->response.error && con->response.error) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
&else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) &/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) </* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
}else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) </* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.speed_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.speed_length);
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.con_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
&else if (con->response.request.http_version!= HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.error_string == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.error_string!= HTTP_VERSION_NONE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.nsvc_host == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &<else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
}else if (con->response.xdb_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
<else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.set_name(con->response.set_name)) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.remote_stream == HTTP_RESTART) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.debug == 0) <*b = '<0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
&else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) &if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.release_unloaded) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.version_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.set_name(con->response.set_name)) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(
}else if (con->response.error && con->response.error &&!con->response.error) &if (con->response.error && con->response.error) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.version >= HTTP_VERSION_1_1) <if (con->response.version >= HTTP_VERSION_2_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.server_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); &if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.http_version == HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) &/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) /* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
}else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.url_version >= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); <else BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) /* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.speed_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.speed_length);
if (con->response.encoding == '&0') &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
<else if (con->response.debug) &if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.chunks && con->response.chunks && con->response.chunks) <if (con->response.http_version!= HTTP_VERSION_1_1) if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.url_version >= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.remote_stream == HTTP_RESTART) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.release_unloaded) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.version_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
<else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.set_name(con->response.set_name)) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(
&else
if (con->response.encoding == '<0') &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.url_version >= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
}else if (con->response.response.error_string & <HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
<else if (con->response.response.error_string & HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) &buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); &if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.length >= 0)
if (con->response.debug == 0) &*b = '<0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) </* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.speed_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.speed_length);
if (con->response.debug == 0) *b = '0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
&else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) &/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) /* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
}else if (con->response.error && con->response.error &&!con->response.error) if (con->response.error && con->response.error) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); &if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.length >= 0)
}else if (con->response.url == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.send_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.url_version >= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); else BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.response.flags & HOST_CREATE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.load_encoding) buffer_copy_off_t(srv->tmp_buf, con->respons
<else if (con->response.debug) &if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.send_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.nsvc_host == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.release_mode!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.http_version == HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.
<else if (con->response.error && con->response.error &&!con->response.error) if (con->response.error && con->response.error) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.server_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); <if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.set_name(con->response.set_name)) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length
}else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.http_version == HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
&else if (con->response.url == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.chunks && con->response.chunks && con->response.chunks) <if (con->response.http_version!= HTTP_VERSION_1_1) if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.remote_stream == HTTP_RESTART) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->t
if (con->response.nsvc_host == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &&else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.send_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.version >= HTTP_VERSION_1_1) if (con->response.version >= HTTP_VERSION_2_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
<else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.response.flags & HOST_CREATE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.load_encoding) &buffer_copy_off_t(srv->tmp_buf, con->respons
}else if (con->response.error && con->response.error &&!con->response.error) if (con->response.error && con->response.error) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.remote_stream == HTTP_RESTART) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.release_unloaded) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.version_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.page_length <= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
<else if (con->response.xdb_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
}else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.page_length &= 0) buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) &/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
&else <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.send_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.set_name(con->response.set_name)) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.chunks && con->response.chunks && con->response.chunks) <if (con->response.http_version!= HTTP_VERSION_1_1) &if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.version >= HTTP_VERSION_1_1) if (con->response.version >= HTTP_VERSION_2_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.version <= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.release_unloaded) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.version_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.release_unloaded) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.version_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.http_version == HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.refer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
<else if (con->response.debug) &if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.nsvc_host == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <<else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
}else if (con->response.xdb_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
&else if (con->response.response.error_string & &HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) </* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) /* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
&else if (con->response.response.error_string & <HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.page_length &= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.subject_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.subject_length); response_header_overwrite(srv, con, CONST_STR_LEN("Subject-Length"), srv->tmp_buf->ptr, srv
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) <if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->re
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.version >= HTTP_VERSION_1_1) &if (con->response.version >= HTTP_VERSION_2_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
<else if (con->response.error && con->response.error &&!con->response.error) <if (con->response.error && con->response.error) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
}else if (con->response.url == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
&else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.release_mode!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) <if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->re
/* * We have been able to allocate it a buffer in the buffer, * then the buffer is empty, because we've got * written it. */ if (con->response.write_length 0) <buffer_copy_off_t(srv->tmp_buf, con->response.write_length); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.remote_stream == HTTP_RESTART) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
<else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.subject_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.subject_length); response_header_overwrite(srv, con, CONST_STR_LEN("Subject-Length"), srv->tmp_buf->ptr, srv
if (con->response.length 0) <buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.state & http_response_was_error) &b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
&else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.state & http_response_was_error) b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
<else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
<else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.version >= HTTP_VERSION_1_1) <if (con->response.version >= HTTP_VERSION_2_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
}else if (con->response.request.http_version!= HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.version >= HTTP_VERSION_1_1) &if (con->response.version >= HTTP_VERSION_2_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.nsvc_host == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
&else if (con->response.response.error_string & HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length
}else BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 ");
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
&else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.server_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); &if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.remote_stream == HTTP_RESTART) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.send_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
&else if (con->response.debug) &if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
<else if (con->response.debug) if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.send_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.send_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
<else if (con->response.xdb_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.http_version == HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.remote_stream == HTTP_RESTART) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.page_length <= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.chunks && con->response.chunks && con->response.chunks) <if (con->response.http_version!= HTTP_VERSION_1_1) <if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
<else if (con->response.request.http_version!= HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) </* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.page_length <= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
<else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.remote_stream == HTTP_RESTART) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.release_mode!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.length 0) buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.release_mode!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.debug == 0) &*b = '0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
&else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length
}else if (con->response.error && con->response.error &&!con->response.error) &if (con->response.error && con->response.error) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
if (con->response.nsvc_host == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.response.flags & HOST_CREATE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.load_encoding) <buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.encoding == '0') buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
}else if (con->response.xdb_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.subject_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.subject_length); response_header_overwrite(srv, con, CONST_STR_LEN("Subject-Length"), srv->tmp_buf->ptr, srv
if (con->response.flags & FIFO_TRANSFER_DEBUG) </* * Check for a packet response. */ buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.flags & FIFO_TRANSFER_DEBUG) &buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); buffer_copy_
if (con->response.length 0) <buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.set_name(con->response.set_name)) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(
if (con->response.http_version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.
<else if (con->response.request.http_version!= HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
&else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
<else if (con->response.url == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
}else if (con->response.url == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.server_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); &if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
&else <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
}else if (con->response.url == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1
<else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length
&else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.subject_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.subject_length); response_header_overwrite(srv, con, CONST_STR_LEN("Subject-Length"), srv->tmp_buf->ptr, srv
if (con->response.length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.length); allow_keep_alive = 1;
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.remote_stream == HTTP_RESTART) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.version <= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) <buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); <if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.length >= 0)
&else if (con->response.url == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
<else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) </* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) /* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length
if (con->response.http_version == HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.nsvc_host == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <<else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.version >= HTTP_VERSION_1_1) <if (con->response.version >= HTTP_VERSION_2_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.queue_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.queue_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.state & http_response_was_error) <b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); &if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.length >= 0)
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->t
<else if (con->response.url == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.debug == 0) *b = '0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.url_version >= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); else &BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.queue_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.queue_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_
if (con->response.release_unloaded) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.version_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.con_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.page_length <= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); <if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.length >= 0)
if (con->response.version = HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
/* * We have been able to allocate it a buffer in the buffer, * then the buffer is empty, because we've got * written it. */ if (con->response.write_length <0) &buffer_copy_off_t(srv->tmp_buf, con->response.write_length); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
<else if (con->response.request.http_version!= HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.error_string == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.error_string!= HTTP_VERSION_NONE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.speed_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.speed_length);
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.server_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); &if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.length >= 0)
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
if (con->response.debug == 0) *b = '0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length
<else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.page_length = 0) &buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.nsvc_host == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <&else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.subject_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.subject_length); response_header_overwrite(srv, con, CONST_STR_LEN("Subject-Length"), srv->tmp_buf->ptr, srv
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.error_string == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.error_string!= HTTP_VERSION_NONE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.version >= HTTP_VERSION_1_1) &if (con->response.version >= HTTP_VERSION_2_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->re
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length
<else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length
if (con->response.debug == 0) &*b = '&0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
<else if (con->response.host!= NULL) &if (!allow_keep_alive) con->keep_alive = 0;
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
/* keep-alive needs Content-Length or chunked encoding. */
if (con->response.version >= HTTP_VERSION_1_1) &if (con->response.version >= HTTP_VERSION_2_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1
<else if (con->response.response.error_string & &HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.debug == 0) <*b = '0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
<else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.remote_stream == HTTP_RESTART) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
}else <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.set_name(con->response.set_name)) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(
if (con->response.length <0) <buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
&else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) /* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) </* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.queue_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.queue_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
if (con->response.http_version == HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.release_mode!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
&else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) <if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.version >= HTTP_VERSION_1_1) if (con->response.version >= HTTP_VERSION_2_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.response.flags & HOST_CREATE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.load_encoding) &buffer_copy_off_t(srv->tmp_buf, con->respons
&else if (con->response.error && con->response.error &&!con->response.error) <if (con->response.error && con->response.error) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
&else if (con->response.url == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) <buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); &if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.length >= 0)
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) /* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) </* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
&else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
}else if (con->response.url == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.request.http_version!= HTTP_VERSION_1_1) &b->request.http_version = HTTP_VERSION_1_; <else <b->request.http_version = HTTP_VERSION_1_; <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
<else if (con->response.request.http_version!= HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
&else if (con->response.debug) <if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.release_mode!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.page_length <= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
<else if (con->response.request.http_version!= HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.release_unloaded) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.version_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.error_string == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.error_string!= HTTP_VERSION_NONE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.page_length &= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
<else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
}else if (con->response.version >= HTTP_VERSION_VERSION_VERSION_1) &if (!allow_keep_alive) return 1;
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.con_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.send_encoding == HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.release_unloaded) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.version_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.response.flags & HOST_CREATE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.load_encoding) buffer_copy_off_t(srv->tmp_buf, con->respons
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.chunks && con->response.chunks && con->response.chunks) if (con->response.http_version!= HTTP_VERSION_1_1) if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
}else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.response.flags & HOST_CREATE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.load_encoding) <buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.request.http_version!= HTTP_VERSION_1_1) <b->request.http_version = HTTP_VERSION_1_; else &b->request.http_version = HTTP_VERSION_1_; &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.length <0) buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
<else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
<else if (con->response.error && con->response.error &&!con->response.error) if (con->response.error && con->response.error) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
/* * We have been able to allocate it a buffer in the buffer, * then the buffer is empty, because we've got * written it. */ if (con->response.write_length &0) &buffer_copy_off_t(srv->tmp_buf, con->response.write_length); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.request.http_version!= HTTP_VERSION_1_1) &b->request.http_version = HTTP_VERSION_1_; else b->request.http_version = HTTP_VERSION_1_; <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
&else if (con->response.debug) &if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
&else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
&else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) &buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); <if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.length >= 0)
if (con->response.error_string == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.error_string!= HTTP_VERSION_NONE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.speed_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.speed_length);
}else if (con->response.request.http_version!= HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
<else if (con->response.url == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
}else if (con->response.request.http_version!= HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.chunks && con->response.chunks && con->response.chunks) if (con->response.http_version!= HTTP_VERSION_1_1) &if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
}else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.version >= HTTP_VERSION_1_1) &if (con->response.version >= HTTP_VERSION_2_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.release_unloaded) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.version_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.state & http_response_was_error) b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
<else if (con->response.url == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
<else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) <buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); &if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.length >= 0)
<else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) &/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.send_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
/* make sure the buffer is empty. */ if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; else &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1;
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length
if (con->response.version <= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.encoding == '<0') &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.set_name(con->response.set_name)) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(
if (con->response.release_mode!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.response.flags & HOST_CREATE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.load_encoding) buffer_copy_off_t(srv->tmp_buf, con->respons
<else if (con->response.debug) &if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.request.http_version!= HTTP_VERSION_1_1) &b->request.http_version = HTTP_VERSION_1_; &else b->request.http_version = HTTP_VERSION_1_; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.con_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
<else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.http_version == HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.
&else if (con->response.request.http_version!= HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
}else if (con->response.xdb_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length
}else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
if (con->response.error == 0) <error("Could not get HTTP header.n"); return;
}else if (con->response.error && con->response.error &&!con->response.error) <if (con->response.error && con->response.error) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
<else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.state & http_response_was_error) <b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
&else if (con->response.error && con->response.error &&!con->response.error) if (con->response.error && con->response.error) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
<else if (con->response.response.error_string & <HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.length <0) buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.page_length <= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
}else if (con->response.version >= HTTP_VERSION_VERSION_VERSION_1) <if (!allow_keep_alive) return 1;
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
}else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.error_string == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.error_string!= HTTP_VERSION_NONE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.queue_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.queue_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.con_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.send_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.http_version == HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) <if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->re
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) &/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) </* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
&else if (con->response.xdb_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.release_mode!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
<else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
&else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
&else if (con->response.error && con->response.error &&!con->response.error) <if (con->response.error && con->response.error) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.con_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.debug == 0) *b = '&0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status));
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) /* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) </* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
}else
&else <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
&else if (con->response.debug) if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.version >= HTTP_VERSION_1_1) if (con->response.version >= HTTP_VERSION_2_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
<else if (con->response.xdb_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.debug == 0) *b = '&0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
<else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->t
&else &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
}else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
}else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.request.http_version!= HTTP_VERSION_1_1) <b->request.http_version = HTTP_VERSION_1_; else <b->request.http_version = HTTP_VERSION_1_; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
<else
&else buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.server_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); <if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
}else if (con->response.xdb_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.remote_stream == HTTP_RESTART) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.nsvc_host == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &&else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
&else if (con->response.url == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
}else <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
if (con->response.release_mode!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.http_version == HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.version >= HTTP_VERSION_1_1) if (con->response.version >= HTTP_VERSION_2_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
}else if (con->response.error && con->response.error &&!con->response.error) if (con->response.error && con->response.error) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
}else if (con->response.request.http_version!= HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.chunks && con->response.chunks && con->response.chunks) &if (con->response.http_version!= HTTP_VERSION_1_1) if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
&else if (con->response.version >= HTTP_VERSION_VERSION_VERSION_1) &if (!allow_keep_alive) &return 1;
if (con->response.release_unloaded) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.version_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.encoding == '&0') <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.flags & FIFO_TRANSFER_DEBUG) </* * Check for a packet response. */ buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.flags & FIFO_TRANSFER_DEBUG) <buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); buffer_copy_
&else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
/* * We have been able to allocate it a buffer in the buffer, * then the buffer is empty, because we've got * written it. */ if (con->response.write_length &0) <buffer_copy_off_t(srv->tmp_buf, con->response.write_length); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.set_name(con->response.set_name)) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(
<else if (con->response.debug) &if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.con_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) <if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->re
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.length <0) &buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
<else if (con->response.debug) <if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
<else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
}else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
<else if (con->response.debug) if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length
if (con->response.error == 0) &error("Could not get HTTP header.n"); return;
<else if (con->response.error && con->response.error &&!con->response.error) &if (con->response.error && con->response.error) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); <if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.length >= 0)
&else if (con->response.debug) <if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.version >= HTTP_VERSION_1_1) &if (con->response.version >= HTTP_VERSION_2_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.url_version >= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); else BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.request.http_version!= HTTP_VERSION_1_1) <b->request.http_version = HTTP_VERSION_1_; <else b->request.http_version = HTTP_VERSION_1_; &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.version = HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.http_version == HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.
<else &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.encoding == '<0') <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.remote_stream == HTTP_RESTART) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
&else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.chunks && con->response.chunks && con->response.chunks) &if (con->response.http_version!= HTTP_VERSION_1_1) if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.server_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
<else if (con->response.xdb_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); &else if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); &if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
}else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.server_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); &if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.release_unloaded) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.version_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.refer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.debug == 0) <*b = '&0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.debug == 0) <*b = '<0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.release_mode!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) /* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) /* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
&else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.chunks && con->response.chunks && con->response.chunks) if (con->response.http_version!= HTTP_VERSION_1_1) <if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.error == 0) error("Could not get HTTP header.&n"); return;
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) /* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.speed_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.speed_length);
if (con->response.version &= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.nsvc_host == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
if (con->response.error_string == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.error_string!= HTTP_VERSION_NONE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.request.http_version!= HTTP_VERSION_1_1) <b->request.http_version = HTTP_VERSION_1_; else &b->request.http_version = HTTP_VERSION_1_; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.release_unloaded) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.version_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) &/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) /* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
if (con->response.nsvc_host == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.send_encoding == HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.remote_stream == HTTP_RESTART) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
&else if (con->response.debug) &if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.state & http_response_was_error) &b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.debug == 0) <*b = '&0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.version >= HTTP_VERSION_1_1) if (con->response.version >= HTTP_VERSION_2_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.set_name(con->response.set_name)) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(
if (con->response.chunks && con->response.chunks && con->response.chunks) if (con->response.http_version!= HTTP_VERSION_1_1) &if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
}else if (con->response.request.http_version!= HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) &/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) </* keep-alive needs Content-Length or chunked encoding. */ buffer_append_long(b, con->http_stat
}else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.chunks && con->response.chunks && con->response.chunks) &if (con->response.http_version!= HTTP_VERSION_1_1) if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.http_version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.request.http_version!= HTTP_VERSION_1_1) <b->request.http_version = HTTP_VERSION_1_; &else &b->request.http_version = HTTP_VERSION_1_; <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.response.flags & HOST_CREATE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.load_encoding) &buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.page_length = 0) <buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.send_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
}else if (con->response.debug) <if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.url_version >= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.flags & FIFO_TRANSFER_DEBUG) /* * Check for a packet response. */ buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.flags & FIFO_TRANSFER_DEBUG) &buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); buffer_copy_
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.send_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.error_string == 0) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.error_string!= HTTP_VERSION_NONE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.page_length &= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
}else if (con->response.version >= HTTP_VERSION_VERSION_VERSION_1) if (!allow_keep_alive) return 1;
if (con->response.set_name(con->response.set_name)) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(
}else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.con_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.con_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.subject_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.subject_length); response_header_overwrite(srv, con, CONST_STR_LEN("Subject-Length"), srv->tmp_buf->ptr, srv
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->t
if (con->response.version <= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.chunks && con->response.chunks && con->response.chunks) &if (con->response.http_version!= HTTP_VERSION_1_1) if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.server_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.error_string == 0) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.error_string!= HTTP_VERSION_NONE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
&else if (con->response.request.http_version!= HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
/* * Allocate the message from the request */ if (con->response.version &= HTTP_VERSION_1_2) buffer_append_long(b, con->http_status);
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.response.flags & HOST_CREATE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.load_encoding) <buffer_copy_off_t(srv->tmp_buf, con->respons
}else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
&else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
&else if (con->response.debug) if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
&else if (con->response.response.error_string & &HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.error == 0) &error("Could not get HTTP header.&n"); return;
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) <if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.error_string == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.error_string!= HTTP_VERSION_NONE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.page_length = 0) buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.release_unloaded) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.version_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
<else if (con->response.send_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) </* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.send_encoding);
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.length <0) <buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.request.http_version!= HTTP_VERSION_1_1) b->request.http_version = HTTP_VERSION_1_; &else <b->request.http_version = HTTP_VERSION_1_; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.response.flags & HOST_CREATE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.load_encoding) <buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.response.flags & HOST_CREATE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.load_encoding) buffer_copy_off_t(srv->tmp_buf, con->respons
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); <if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.length >= 0)
<else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.state & http_response_was_error) <b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
&else if (con->response.url == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.error_string == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.error_string!= HTTP_VERSION_NONE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.request.http_version!= HTTP_VERSION_1_1) b->request.http_version = HTTP_VERSION_1_; <else <b->request.http_version = HTTP_VERSION_1_; <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
if (con->response.url_version >= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.server_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); <if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
<else if (con->response.debug) if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
}else if (con->response.xdb_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.con_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.version >= HTTP_VERSION_1_1) if (con->response.version >= HTTP_VERSION_2_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
&else <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.state & http_response_was_error) &b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) </* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.speed_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.speed_length);
&else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
}else if (con->response.host!= NULL) <if (!allow_keep_alive) con->keep_alive = 0;
if (con->response.response.flags & HOST_CREATE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.load_encoding) <buffer_copy_off_t(srv->tmp_buf, con->respons
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.response.flags & HOST_CREATE) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.load_encoding) buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.chunks && con->response.chunks && con->response.chunks) &if (con->response.http_version!= HTTP_VERSION_1_1) if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.speed_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.speed_length);
if (con->response.length 0) buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; &else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
if (con->response.version = HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->t
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.encoding == '&0') buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.length 0) &buffer_copy_off_t(srv->tmp_buf, con->response.length); buffer_append_string(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.submit_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.submit_encoding); allow_keep_alive = 1; else if (con->response.con
}else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; &else if (con->response.speed_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.speed_length);
if (con->response.error_string == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.error_string!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.error_string!= HTTP_VERSION_NONE) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_stat
if (con->response.page_length = 0) buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.nsvc_host == 0) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &<else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv->tmp_buf->ptr
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.http_version == HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.http_version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.
<else <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) <if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->re
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_
if (con->response.remote_stream == HTTP_RESTART) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.encoding == '<0') &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.request.http_version!= HTTP_VERSION_1_1) <b->request.http_version = HTTP_VERSION_1_; else b->request.http_version = HTTP_VERSION_1_; <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.debug == 0) <*b = '&0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.page_length &= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.version >= HTTP_VERSION_1_1) &if (con->response.version >= HTTP_VERSION_2_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
&else if (con->response.response.error_string & <HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.con_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.server_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); <if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_EN
if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used); allow_keep_alive = 1;
}else if (con->response.debug) <if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.release_mode!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.debug == 0) &*b = '0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
if (con->response.state & http_response_was_error) b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) <if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->re
}else if (con->response.response.error_string & &HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
/* * We have been able to allocate it a buffer in the buffer, * then the buffer is empty, because we've got * written it. */ if (con->response.write_length 0) buffer_copy_off_t(srv->tmp_buf, con->response.write_length); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
}else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 ");
if (con->response.release_unloaded) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.version_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1
if (con->response.state & http_response_was_error) &b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
}else if (con->response.request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
if (con->response.chunks && con->response.chunks && con->response.chunks) &if (con->response.http_version!= HTTP_VERSION_1_1) <if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.debug == 0) &*b = '<0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
<else if (con->response.version >= HTTP_VERSION_VERSION_VERSION_1) <if (!allow_keep_alive) <return 1;
if (con->response.chunks && con->response.chunks && con->response.chunks) &if (con->response.http_version!= HTTP_VERSION_1_1) <if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
<else if (con->response.xdb_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.domain_length >= 0) <unk>
}else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
/* use srv_prepare() if it is an HTML or a null header. */ if (!con->response.get_procname(srv->tmp_buf, 0)) <buffer_append_long(srv->tmp_buf, srv->tmp_buf->ptr, srv->tmp_buf->used - 1); buffer_append_string(srv->tmp_buf, get_http_status_name(con->http_status)); <if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.length >= 0)
if (con->response.set_name(con->response.set_name)) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(
buffer_append_long(b, con->http_status); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length
&else if (con->response.debug) if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.http_version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.chunks && con->response.chunks && con->response.chunks) &if (con->response.http_version!= HTTP_VERSION_1_1) &if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.request.http_version!= HTTP_VERSION_1_1) b->request.http_version = HTTP_VERSION_1_; &else b->request.http_version = HTTP_VERSION_1_; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
&else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.debug == 0) *b = '&0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
/* XXX We should have the HTTP url and update it */ if (con->request.http_version == HTTP_VERSION_1_) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response
if (con->response.remote_stream == HTTP_RESTART) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
<else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.set_name(con->response.set_name)) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(
if (con->response.page_length &= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.state & http_response_was_error) &b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.remote_stream == HTTP_RESTART) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
if (con->response.flags & FIFO_TRANSFER_DEBUG) /* * Check for a packet response. */ buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.flags & FIFO_TRANSFER_DEBUG) <buffer_append_string(b, get_http_status_name(con->http_status)); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); buffer_copy_
if (con->response.debug == 0) <*b = '0'; buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("
}else if (con->response.error && con->response.error &&!con->response.error) if (con->response.error && con->response.error) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
<else if (con->response.error && con->response.error &&!con->response.error) &if (con->response.error && con->response.error) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->t
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.con_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
if (con->response.response.flags & HOST_CREATE) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.load_encoding) <buffer_copy_off_t(srv->tmp_buf, con->respons
if (con->response.chunks && con->response.chunks && con->response.chunks) <if (con->response.http_version!= HTTP_VERSION_1_1) <if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
<else if (con->response.request.http_version!= HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) &if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->re
if (con->response.state & http_response_was_error) <b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.release_mode!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; else if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), srv
if (con->response.state & http_response_was_error) &b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
<else <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
/* keep-alive needs Content-Length or chunked encoding. */ if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if
if (con->response.http_version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.
if (con->response.state & http_response_was_error) &b = chunkqueue_get_prepend_buffer(raw); if (con->request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LE
if (con->response.request.http_version!= HTTP_VERSION_1_1) &b->request.http_version = HTTP_VERSION_1_; &else &b->request.http_version = HTTP_VERSION_1_; <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(s
if (con->response.set_name(con->response.set_name)) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.request.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(
if (con->response.url_version >= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
/* * XXX * Should the user set the HTTP status in a request, or the * send-options message * to the receiver. */ if (con->response.url!= -1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.con_version == HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "
<else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.status == HTTP_TRANSFER_ENCODING_CHUNKED) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp
if (con->response.page_length &= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.chunks && con->response.chunks && con->response.chunks) &if (con->response.http_version!= HTTP_VERSION_1_1) &if (con->response.http_version!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(s
}else if (con->response.http_version!= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.version &= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
if (con->response.verbose && con->response.version == HTTP_VERSION_1_1) <if (con->response.version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->re
}else &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr,
<else if (con->response.url == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_
if (con->response.encoding == '&0') buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length
if (con->response.release_mode!= HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.remote_stream == HTTP_RESTART) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-
<else if (con->response.debug) <if (con->response.debug) buffer_copy_off_t(srv->tmp_buf, con->response.debug_length); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug) buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Content-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.debug_encoding & HTTP_TRANSFER_ENCODING_CHUNKED
}else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
<else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
<else if (con->response.local_name!= HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.local_name); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.response.configuration & HTTP_TRANSFER_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING_ENCODING
if (con->response.page_length <= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.page_length); response_header_overwrite(srv, con, CONST_STR_LEN("Content-Length"), srv->tmp_buf->ptr, srv->tmp_buf->used - 1); allow_keep_alive = 1; &else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
if (con->response.version = HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else &BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_
#ifdef INCLUDE_WIDGET if (con->response.url_type == HTTP_url_type) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0)
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); &else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
&else if (con->response.version >= HTTP_VERSION_VERSION_VERSION_1) <if (!allow_keep_alive) <return 1;
<else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; <else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.transfer_encoding); allow_keep_alive = 1; else if (con->response.trans
if (con->response.version >= HTTP_VERSION_1_1) <if (con->response.version >= HTTP_VERSION_2_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header
if (con->response.refer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1;
if (con->response.io_type!= HTTP_PROTOTYPE_ENCODING_CHUNKED) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CON
}else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); <else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.content_length >= 0) buffer
buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version == HTTP_VERSION_1_1) <BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_
/* keep-alive needs Content-Length or chunked encoding. */ if (!allow_keep_alive) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); <else if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); <if (con->response.server_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->response.server_length); buffer_copy_off_t(srv->tmp_buf, con->res
if (con->response.release_unloaded) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.version_length >= 0) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.release_unloaded) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; <else if (con->response.version_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_
if (con->response.url_version >= HTTP_VERSION_1_1) &BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); <else BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
/* make sure the buffer is empty. */ if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &else <buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1;
/* make sure the buffer is empty. */ if (con->response.encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1; &else &buffer_copy_off_t(srv->tmp_buf, con->response.encoding); allow_keep_alive = 1;
&else if (con->response.response.error_string & &HTTP_VERSION_1_1) <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.page_length >= 0) buffer_copy_off_t(srv->tmp
if (con->response.release_mode!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); <buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.response.transport_encoding & HTTP_
if (con->response.state & HTTP_TRANSFER_SINGLE) buffer_copy_off_t(srv->tmp_buf, con->response.status); allow_keep_alive = 1;
<else if (con->response.send_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &/* keep-alive needs Content-Length or chunked encoding. */ buffer_copy_off_t(srv->tmp_buf, con->response.send_encoding);
}else if (con->response.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else <BUFFER_COPY_STRING_CONST(b, "HTTP/1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.strlen > 0) <unk>
}else if (con->response.request.http_version!= HTTP_VERSION_1_1) &buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) <response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "HTTP/1.1 "); else BUFFER_COPY_STRING_CONST(
<#endif
if (con->response.set_name(con->response.set_name)) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.request.http_version!= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(
if (con->response.url_version >= HTTP_VERSION_1_1) BUFFER_COPY_STRING_CONST(b, "URL_1.1 "); <else BUFFER_COPY_STRING_CONST(b, "URL_1.0 "); buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) &response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; else if (con->response.decoding & HTTP_TRANSFER_ENCODING_CHUNKED
if (con->response.http_version == HTTP_VERSION_1_1) buffer_append_long(b, con->http_status); BUFFER_APPEND_STRING_CONST(b, " "); buffer_append_string(b, get_http_status_name(con->http_status)); if (con->response.transfer_encoding & HTTP_TRANSFER_ENCODING_CHUNKED) buffer_copy_off_t(srv->tmp_buf, con->response.content_length); response_header_overwrite(srv, con, CONST_STR_LEN("Transfer-Encoding"), CONST_STR_LEN("chunked")); allow_keep_alive = 1; &else if (con->response.content_length >= 0) buffer_copy_off_t(srv->tmp_buf, con->response.
