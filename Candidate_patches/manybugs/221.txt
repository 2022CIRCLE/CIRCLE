golden:
<extra_id_0>
inference:

new_key = g_slice_new(reassembled_key);
g_slice_new(reassembled_key);
new_key = g_slice_new(reassembled_key); #else
new_key = g_slice_new (reassembled_key);
GLIB_CHECK_VERSION(2,10,0) new_key = g_slice_new(reassembled_key);
#ifdef GLIB_CHECK_VERSION new_key = g_slice_new(reassembled_key);
new_key = g_slice_new(reassembled_key); else
GLIB_CHECK_VERSION(2,10,0);
new_key = g_slice_new(reassembled_key);  else
else
GLIB_CHECK_VERSION(2,10,0); new_key = g_slice_new(reassembled_key);
else new_key = g_slice_new(reassembled_key);
if (g_slice_new(reassembled_key))
if (new_key == g_slice_new(reassembled_key))
#ifdef GLIB_CHECK_VERSION
#if 0
GLIB_CHECK_VERSION(2,10,0)
else  new_key = g_slice_new(reassembled_key);
#else
#ifdef GLIB_CHECK_VERSION new_key = g_slice_new(reassembled_key); else
old_key = g_slice_new(reassembled_key);
#ifdef GLIB_CHECK_VERSION(2,10,0)
#endif
if (reassembled_key) new_key = g_slice_new(reassembled_key); else
#if GLIB_CHECK_VERSION(2,10,0)
new_key = g_slice_new(new_key);
new_key = g_slice_new(reassembled_key, 0);
g_slice_new(reassembled_key); #else
new_key = g_slice_new(g_slice_new(reassembled_key));
new_key = g_slice_new(reassembled_key); if (new_key)
break;
if (reassembled_key) new_key = g_slice_new(reassembled_key);
new_key = g_slice_new (reassembled_key); #else
return new_key;
GLIB_CHECK_VERSION(2,10,0) new_key = g_slice_new (reassembled_key);
reassembled_key = g_slice_new(reassembled_key);
if (!g_slice_new(reassembled_key))
if (g_slice_new(reassembled_key) == NULL)
new_key = g_slice_new (reassembled_key); else
if (new_key!= g_slice_new(reassembled_key))
new_key = GLIB_CHECK_VERSION(2,10,0);
g_slice_new(reassembled_key); new_key = g_slice_new(reassembled_key);
case GLIB_CHECK_VERSION: new_key = g_slice_new(reassembled_key); break;
(void) new_key = g_slice_new(reassembled_key);
if (g_slice_new(reassembled_key) == 0)
#if defined(GLIB_CHECK_VERSION) || g_slice_new(reassembled_key)
return new_key = g_slice_new(reassembled_key);
new_key = new_key;
#if DEBUG
if (new_key)
next_key = g_slice_new(reassembled_key);
if (reassembled_key)
#if 0 new_key = g_slice_new(reassembled_key); #else
new_key = g_slice_next(reassembled_key);
new_key = g_slice_new(reassembled_key, NULL);
#ifdef DEBUG
new_key = g_slice_new(g_reassembled_key);
GLIB_CHECK_VERSION (2,10,0) new_key = g_slice_new (reassembled_key);
NEW_KEY = g_slice_new(reassembled_key);
*new_key = g_slice_new(reassembled_key);
int new_key = g_slice_new(reassembled_key);
#if!GLIB_CHECK_VERSION
#if!GLIB_CHECK_VERSION new_key = g_slice_new(reassembled_key);
/* new_key = g_slice_new(reassembled_key); */
break; case GLIB_CHECK_VERSION: new_key = g_slice_new(reassembled_key); break;
gl_slice_new(reassembled_key);
#if defined(GLIB_CHECK_VERSION)
#if defined(GLIB_CHECK_VERSION) ||!g_slice_new(reassembled_key)
new_key = g_slice_new(reassembled_key, GLIB_CHECK_VERSION);
#ifndef GLIB_CHECK_VERSION new_key = g_slice_new(reassembled_key);
if (g_slice_new(reassembled_key)!= 0)
if (new_key) new_key = g_slice_new(reassembled_key);
g_slice_new(reassembled_key); else
GLIB_CHECK_VERSION(2,10,0,0);
#if defined(GLIB_CHECK_VERSION) ||!defined(GLIB_CHECK_VERSION)
if (g_slice_new(reassembled_key)!= NULL)
#else new_key = g_slice_new(reassembled_key);
new_key = g_slice_new(reassembled_key); # else
(void)g_slice_new(reassembled_key);
return g_slice_new(reassembled_key);
if (new_key) new_key = g_slice_new(reassembled_key); else
(void) g_slice_new(reassembled_key);
if (GLIB_CHECK_VERSION(2,10,0)!= 0)
g_slice_new (reassembled_key);
#endif new_key = g_slice_new(reassembled_key);
g_slice_new(reassembled_key);  else
new_key = g_slice_new(reassembled_key); break;
GLIB_CHECK_VERSION(2,10,0); new_key = g_slice_new (reassembled_key);
#ifdef GLIB_CHECK_VERSION old_key = g_slice_new(reassembled_key);
new_key = g_slice_new(reassembled_key); #ifdef GLIB_CHECK_VERSION
if (GLIB_CHECK_VERSION(2,10,0))
new_key = g_slice_new(Reassembled_key);
current_key = g_slice_new(reassembled_key);
new_key = g_slice_new(reassembled_key, sizeof(reassembled_key));
new_key = g_slice_new(GLIB_CHECK_VERSION(2,10,0));
GLIB_CHECK_VERSION(3,10,0) new_key = g_slice_new(reassembled_key);
#ifdef GLIB_CHECK_VERSION new_key = G_slice_new(reassembled_key); #else
#if 0 new_key = g_slice_new(reassembled_key);
if (g_slice_new(reassembled_key) == -1)
new_key = g_slice_new(&reassembled_key);
this_key = g_slice_new(reassembled_key);
new_key = g_slice_new(reassembled_key); #endif
splx(s);
new_key = g_slice_new(reassembled_key); if (!new_key)
new_key = g_slice_new (reassembled_key);  else
if (g_slice_new(reassembled_key) == 0) return;
else new_key = g_slice_new(reassembled_key); #else
#else new_key = g_slice_new(reassembled_key); #else
#ifdef GLIB_CHECK_VERSION new_key = g_slice_new (reassembled_key);
if (new_key == g_slice_new(reassembled_key)) return;
free(reassembled_key);
if (GLIB_CHECK_VERSION(2,10,0) == 0)
new_key = (g_slice_new(reassembled_key));
if (!g_slice_new(reassembled_key)) return;
GLIB_CHECK_VERSION (2,10,0); new_key = g_slice_new (reassembled_key);
GLIB_CHECK_VERSION(2,10,0,0)
#if defined(GLIB_CHECK_VERSION) || GLIB_CHECK_VERSION(2,10,0)
new_key = g_slice_new( reassembled_key );
the_key = g_slice_new(reassembled_key);
#if defined(GLIB_CHECK_VERSION) || defined(GLIB_CHECK_VERSION)
g_slice_new_reassembled_key(reassembled_key);
if (reassembled_key) new_key = g_slice_new (reassembled_key); else
GLIB_CHECK_VERSION(2,10,0) new_key = g_slice_new(new_key);
(void) GLIB_CHECK_VERSION(2,10,0);
g_slice_new(reassembled_key); g_slice_new(reassembled_key);
size_t new_key = g_slice_new(reassembled_key);
new_key = g_slice_new(reassembled_key); if (!new_key) return;
nu = g_slice_new(reassembled_key);
#if GLIB_CHECK_VERSION new_key = g_slice_new(reassembled_key); #else
new_key = g_slice_new(reassembled_key); if (new_key == NULL)
nsresult rv;
if (GLIB_CHECK_VERSION) new_key = g_slice_new(reassembled_key); else
new_key = g_slice_new(reassembled_key, 0, 0);
key = g_slice_new(reassembled_key);
new_key = g_slice_new(reassembled_key); new_key = NULL;
g_slice_new_key(reassembled_key);
new_key = G_slice_new(reassembled_key);
if (g_slice_new(reassembled_key) == NULL) return;
g_slice_new(reassembled_key, GLIB_CHECK_VERSION);
new_key = g_slice_new(reassembled_key); if (new_key!= NULL)
#if new_key = g_slice_new(reassembled_key); #else
GLIB_CHECK_VERSION(2,10,0); g_slice_new(reassembled_key);
g_free(reassembled_key);
#ifdef GLIB_CHECK_VERSION old_key = g_slice_new(reassembled_key); else
new_key = g_slice_new();
GLIB_CHECK_VERSION(2,10,0)new_key = g_slice_new(reassembled_key);
new_key = g_new(reassembled_key);
new_key = g_slice_new(id);
#if!GLIB_CHECK_VERSION new_key = g_slice_new(reassembled_key); else
if (!new_key) new_key = g_slice_new(reassembled_key);
new_key = g_slice_new(reassembled_key, reassembled_key);
#ifndef GLIB_CHECK_VERSION
#ifdef GLIB_CHECK_VERSION g_slice_new(reassembled_key); #else
/*
if (GLIB_CHECK_VERSION) new_key = g_slice_new(reassembled_key);
#if defined(GLIB_CHECK_VERSION) && g_slice_new(reassembled_key)
if ((new_key = g_slice_new(reassembled_key))!= 0)
@ifdef GLIB_CHECK_VERSION new_key = g_slice_new(reassembled_key);
case GLIB_CHECK_VERSION: new_key = g_slice_new(reassembled_key);
/* new_key = g_slice_new(reassembled_key); */ else
reassembled_key = new_key;
/* XXX */
if (new_key == NULL) new_key = g_slice_new(reassembled_key);
for (;;)
#ifdef GLIB_CHECK_VERSION: new_key = g_slice_new(reassembled_key);
#if defined(GLIB_CHECK_VERSION) &&!g_slice_new(reassembled_key)
#ifndef GLIB_CHECK_VERSION new_key = g_slice_new(reassembled_key); else
if (reassembled_key) new_key = g_slice_new (reassembled_key);
#if defined(GLIB_CHECK_VERSION) &&!defined(GLIB_CHECK_VERSION)
#ifdef GLIB_CHECK_VERSION new_key = g_slice_new(new_key); #else
#ifdef GLIB_CHECK_VERSION new_key = G_slice_new(reassembled_key);
new_key = g_slice_new(reassembled_key); #else new_key = NULL;
if (GLIB_CHECK_VERSION(2,10,0)) g_slice_new(reassembled_key);
#if GLIB_CHECK_VERSION new_key = g_slice_new(reassembled_key);
#ifdef XP_MAC
GLIB_CHECK_VERSION();

&else <new_key = g_slice_new(reassembled_key);
else new_key = g_slice_new(reassembled_key);
#ifdef GLIB_CHECK_VERSION new_key = g_slice_new(reassembled_key);
&#ifdef GLIB_CHECK_VERSION new_key = g_slice_new(reassembled_key);
g_slice_new(reassembled_key); else
<else <new_key = g_slice_new(reassembled_key);
&else
new_key = g_slice_new(reassembled_key); <else
g_slice_new(reassembled_key); <else
&else new_key = g_slice_new(reassembled_key);
new_key = g_slice_new(reassembled_key); &else
new_key = g_slice_new (reassembled_key); &else
new_key = g_slice_new(reassembled_key); #else
<else &new_key = g_slice_new(reassembled_key);
else
<else new_key = g_slice_new(reassembled_key);
&else
<else new_key = g_slice_new(reassembled_key);
&else &new_key = g_slice_new(reassembled_key);
&new_key = g_slice_new(reassembled_key);
new_key = g_slice_new(reassembled_key); &else
new_key = g_slice_new(reassembled_key); else
<new_key = g_slice_new(reassembled_key); else
&new_key = g_slice_new(reassembled_key); else
else <new_key = g_slice_new(reassembled_key);
g_slice_new(reassembled_key); else
new_key = g_slice_new(reassembled_key);
<else &new_key = g_slice_new(reassembled_key);
&new_key = g_slice_new(reassembled_key); <else
&else <new_key = g_slice_new(reassembled_key);
&new_key = g_slice_new(reassembled_key); &else
<#ifdef GLIB_CHECK_VERSION new_key = g_slice_new(reassembled_key);
<else <new_key = g_slice_new(reassembled_key);
new_key = g_slice_new(reassembled_key); else
else &new_key = g_slice_new(reassembled_key);
g_slice_new(reassembled_key); &else
new_key = g_slice_new (reassembled_key); else
else &new_key = g_slice_new(reassembled_key);
else <new_key = g_slice_new(reassembled_key);
else new_key = g_slice_new(reassembled_key);
else
&else &new_key = g_slice_new(reassembled_key);
<new_key = g_slice_new(reassembled_key);
<else
<else
if (new_key == g_slice_new(reassembled_key))
&else new_key = g_slice_new(reassembled_key);
new_key = g_slice_new (reassembled_key); <else
<new_key = g_slice_new(reassembled_key); &else
if (g_slice_new(reassembled_key))
g_slice_new(reassembled_key); <else
new_key = g_slice_new(reassembled_key); <else
g_slice_new(reassembled_key); &else
<new_key = g_slice_new(reassembled_key); <else
