golden:
TRACE("triggering eval of successors of (%s) [in else]", BUF_STR(dc->key));
inference:
log_error_write(srv, "sb", "go prev", dc->prev->key);

log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", prev);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", __func__);
log_error_write(srv, "%s", __LINE__, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", prev->key);
log_error_write (srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev");
log_error_write(srv, "sb", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", NULL);
log_error_write(srv, __FILE__, NULL, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", prev_key);
log_error_write(srv, __LINE__, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", &dc->prev->key);
log_error_write(srv, "go prev", dc->prev->key);
log_error_write(srv, 0, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb");
log_error_write(srv, "sb", "go prev", dc->parent->key);
log_error_write(srv, __FILE__, LINE__, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->srv->key);
log_error_write(srv, dc->prev->key, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, "sb", "go prev", dc->prev->key, NULL);
log_error_write(srv, __FILE__, __LINE__, "sb", "go", dc->prev->key);
log_error_write(srv, __FILE__, "sb", "go prev", dc->prev->key);
log_error_write(srv, "Go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go");
log_error_write(srv, __FILE__, "sb", "go prev", key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go %s", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", 0, dc->prev->key);
log_error_write(srv, "sb", "go prev");
log_error_write(srv, NULL, NULL, "sb", "go prev", dc->prev->key);
log_error_write(srv, __LEVEL__, __LINE__, "sb", "go prev", dc->prev->key);
log_error_write(srv, srv, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev);
log_error_write(srv, "sb", "go", dc->prev->key);
log_error_write(srv, 0, __LINE__, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go ", dc->prev->key);
log_error_write(srv, "sb");
log_error_write(srv, __FILE__, "sb", "go prev", prev);
log_error_write(srv, __FILE__, __LINE__, "sb", "go", prev);
log_error_write(srv, __FILE__, __LINE__, "sb", "go", dc->prev->key, NULL);
log_error_write(srv, __FILE__, "__LINE__", "sb", "go prev", dc->prev->key);
log_error_write(srv, "");
log_error_write(srv, NULL, "sb", "go prev", dc->prev->key);
error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev_key);
log_error_write(srv, __FILE__, __LINE__, "sb", 0, "go prev", dc->prev->key);
config_check_cond_cached(srv, con, dc->prev->key);
log_error_write(srv, __PATH__, __LINE__, "sb", "go prev", dc->prev->key);
log_error_write(srv, "%s", dc->prev->key);
log_error_write(srv, __FILE__, 0, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", dc->prev->key, NULL);
log_error_write(srv, con, dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->flags);
log_error_write(srv, &__FILE__, __LINE__, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", NULL);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", srv);
log_error_write(srv, __FILE__, &__LINE__, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", l);
log_error_write(srv, "sb", "go prev", key);
log_error_write(srv, __FILE__, "sb", "go prev", NULL);
log_error_write(srv, __FILE__, LOG_LINE__, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", p->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->dc->key);
log_error_write(srv, "sb", "go prev", dc->prev->key, NULL);
log_error_write(srv, __FILE__, __LINE__);
log_error_write(srv, __FILE__, __LINE__, "sb", dc->parent->key);
log_error_write(srv, con, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go", key);
config_check_cond_cached(srv, con, dc->prev);
log_error_write(srv, __FILE__, __LINE__, "db", "go prev", dc->prev->key);
log_error_write(srv, con, __LINE__, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->p->key);
log_error_write(srv, dc->prev->key, __LINE__, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->key);
log_error_write(srv, __LINE__, "sb", "go prev", dc->prev->key, NULL);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", *dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go dev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, ("sb", "go prev", dc->prev->key));
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->child->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go ");
log_error_write(srv, __FILES__, __LINE__, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, "sb", "go prev", dc->parent->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", srv->key);
log_error_write(srv, __LE__, __LINE__, "sb", "go prev", dc->prev->key);
register_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go-prev", dc->prev->key);
log_error_write(srv, __FULL__, __LINE__, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, 0, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", NULL, NULL);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->name);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prov", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", con->parent->key);
log_error_write(srv, l, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, "sb", "go prev", __func__);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->device->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", p->p->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", NULL, NULL);
log_error_write(srv, dc->parent->key, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go", dc->parent->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", con->prev->key);
Log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", p);
log_error_write(srv, 0, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, "sb", "go prev");
log_error_write(srv, __FILE__, __LINE__, "sb", prev_key);
log_error_write(srv, __FILE__, __LINE__, "b", "go prev", dc->prev->key);
log_error_write(srv, "%s", __FILE__, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, "sb", "go prev", &dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go", NULL);
log_error_write(srv, __FILE__, __LINE__, "sb", NULL, dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->srv_key);
log_error_write(srv, "Sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", con->context->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->name);
log_error_write(con->conf, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "%s", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go %d", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", path);
log_error_write(srv, __LINE__, "sb", "go prev", key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", strerror(dc->prev));
log_error_write(srv, __FILE__, FILE_LINE__, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->dev->key);
log_error_write(srv, __FILE__, "sb", NULL, "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->context->key);
log_error_write(srv, __FILE__, __LINE__, "/sb", "go prev", dc->prev->key);
log_error_write("sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, "sb", "go prev", dc->prev->key, 0);
log_error_write(srv, __FILE__, __LINE__, "sb", "go to prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "Sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->presv->key);
log_error_write(srv, __LINE__, "sb", "go prev", dc->parent->key);
log_error_write(srv, __FILE__, M_LINE__, "sb", "go prev", dc->prev->key);
error("sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sa", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "gon", dc->prev->key);
log_error_write(srv, "__FILE__", __LINE__, "sb", "go prev", dc->prev->key);
log_error_write(srv, dc->prev->key, __FILE__, __LINE__);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", (dc->prev->key));
log_error_write(srv, __LEVEL__, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", 0, dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", 0);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", con->context_ndx->key);
log_error_write(srv, dc->prev->key, __FILE__);
log_error_write(srv, NULL, __LINE__, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, "sb", "go prev", prev->key);
log_error_write(srv, "%s", "go prev", dc->prev->key);
config_check_cond_cached(srv, con, dc->parent);
log_error_write(srv, __FILE__, __LINE__, "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", c->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", value);
log_error_write(srv, "%s", __LINE__, "sb", dc->prev->key);
log_error_write(srv, dc->parent, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->dir->key);
log_error_write(srv, "%s", __LINE__);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", name);
log_error_write(srv, __FILE__, "sb", __LINE__, "go prev", dc->prev->key);
log_error_write(srv, "sb", "go prev", prev);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->parent);
log_error_write(srv, __FILE__, __LINE__, "sb", "go", dc->prev->key, 0);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", v);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->dc_key);
log_error_write(srv, "%s", "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", strerror(srv));
log_error_write(srv, __FILE__, __LINE__, "sb", 0);
log_error_write(srv, __FILE__, __LINE__, "");
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->path);
log_error_write(srv, __FILE__, __LINE__, "s", "go prev", dc->prev->key);
log_error_write(srv, "%s", dc->prev->key, __LINE__);
log_error_write(srv, __FILE__, "sb");
log_error_write(srv, __FILE__, __LINE__, "go prev", dc->prev->key, NULL);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->opt->key);
log_error_write(srv, __LINE__, "sb", "go prev", prev);
log_error_write(srv, "%s", __LINE__, dc->prev->key);
log_error_write(srv, __FILE__, "sb", "go prev", prev_key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go", dc->dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", srv_srv);
log_error_write(srv, __FILE__, __LINE__, "sb", 1);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key)
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->path);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->dv->key);
log_error_write(srv, "sb", NULL, "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", prev);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->end->key);
log_error_write(srv, __LINE__, "sb", dc->prev->key);
log_error_write(srv, "go prev");
log_error_write(srv, dc->prev->key, __LINE__);
log_error_write(srv, __FILE__, __LINE__, "go prev", prev);
log_error_write(srv, dc->prev->key);
error_write(srv, "sb", "go prev", dc->prev->key);
log_error_read(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev.key);
log_error_write(srv, "sb", dc->parent->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, 1)
log_error_write(srv, "go", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, &dc->conf.lsock);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, dc->cflags);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->dc->parent->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key, dc->parent->flags);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->parent->key, &dc->prev);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", (const char *)dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, 0);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", (u_long)dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key, 0);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, NULL);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->dc->dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, &con->conf.log_router, dc->router->router->router->router);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->dc->dc->parent->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key, dc->cp);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", (struct cond_cache *)dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", __func__, dc->prev->key);
log_error_write(srv, "cond_id:%s", __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, 0, 0);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", (const char*)dc->prev->key);
log_error_write(srv, "%s", __LINE__, "sb", "go prev", dc->prev->key, __LINE__);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, dc->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key, dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", (dc->prev->key)->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, dc->dev.dv_type);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", (dc->prev->key == NULL? "No entry" : "no entry");
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, dc->parent->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, &dc->__proc);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->dc->srv->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->dc_parent->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, config_check_cond_cached);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->dc_dc->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->dc_prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, dc->nov->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, "cnt", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key, dc->p_p_p);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key, NULL);
log_error_write(srv, "cond %s", dc->prev->key, dc->parent->key);
log_error_write(srv, "%s", "go prev", __LINE__);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, __LINE__);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->socket->parent->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->dc_srv->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, &l);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, dc->child);
log_error_write(srv, "%s", __LINE__, "sb", "go prev", dc->prev->key, NULL);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, dc->result);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, srv);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, dc->flags);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, "sfc");
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, dc->conf.file);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, dc->conf.log_desc->prs);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, __FILE__);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, dc->cc->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, srv_srv);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, dc->local_flags);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->ptr->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key, dc->p_dir);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->dc->dc->srv->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, &dc->dev->dc->dc->dev->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, "1", dc->prev->key);
log_error_write(srv, "cond");
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->dc_sock->dc_key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, dc->pk->sock_name);
log_error_write(srv, "%s", __LINE__, "sb", "go prev", dc->prev->key, strerror(srv));
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->srv_socket->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, "advance");
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prt->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, 0, NULL);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, dc->parent->pc);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key, &dc->pv->pv->pv->pv->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key, "ep", dc->ep->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->d
log_error_write(srv, "%s", __FILE__, __LINE__, "sb", "go prev", dc->prev->key, __LINE__);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", (caddr_t)dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", (unsigned long)dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, __PATH__);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->socket->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key, dc->parent->reflags);
log_error_write(srv, "%s", __FILE__, __LINE__, "sb", "go prev", dc->prev->key, dc->parent->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go<n", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "go&n", dc->prev->key);
log_error_write(srv, __FILE__, __LINE__, "sb", "gon", dc->prev->key);
