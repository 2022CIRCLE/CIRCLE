golden:
switch (config_check_cond_cached(srv, con, dc->parent)) { case COND_RESULT_FALSE:
inference:
if (config_check_cond_cached(srv, con, dc->parent) == NULL)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == 0)
if (config_check_cond_cached(srv, con) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, con->parent) == COND_RESULT_FALSE)
if (!config_check_cond_cached(srv, con, dc->parent))
if (config_check_cond_cached(con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent, NULL) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent)!= COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, &dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT)
if (config_check_cond_cached(srv, con, parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->dc_parent) == COND_RESULT_FALSE)
if (con->conf.log_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == FALSE)
if (config_check_cond_cached(srv, con, dc->result) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->flags) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->context) == COND_RESULT_FALSE)
if (config_check_cond_cached (srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, l) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent))
if (config_check_cond_cached(&srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == TRUE)
if (config_check_cond_cached(srv, con, dc->parent)!= 0)
if (config_check_cond_cached(srv, con, NULL) == COND_RESULT_FALSE)
if(config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->dc) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, key) == COND_RESULT_FALSE)
if (conf.config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->conf) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->conf.parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->context->parent) == COND_RESULT_FALSE)
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)
if (config_check_cond_cached(srv, con, dc->parent, 0) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == -1)
if (con->conf.check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent->key) == COND_RESULT_FALSE)
if (config_check_cond_cached(dc->parent, srv, con) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->get_parent()) == COND_RESULT_FALSE)
if (COND_RESULT_FALSE == config_check_cond_cached(srv, con, dc->parent))
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_TRUE)
if (config_check_cond_cached(srv, con, dc->parent) == M_COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, p) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent)!= NULL)
else if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, result) == COND_RESULT_FALSE)
if (dc->parent == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dev) == COND_RESULT_FALSE)
if (dc->parent)
if (Config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->local_parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->child) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->p) == COND_RESULT_FALSE)
if (config_check_cond_cached(dc->parent, con) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent)  COND_RESULT_FALSE)
if (const config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->cache) == COND_RESULT_FALSE)
if (conf_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(dev, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(con, con->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, sc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if ((config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE))
if (__config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, const dc->parent) == COND_RESULT_FALSE)
if ((config_check_cond_cached(srv, con, dc->parent)) == COND_RESULT_FALSE)
if (&config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (Config.config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(rv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == const COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, con->parent) == COND_RESULT)
if (config_check_cond_cached(dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, srv->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->local) == COND_RESULT_FALSE)
if (config_check_cond_cached(p, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == PR_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == 1)
if (COND_RESULT_FALSE == con->cond_cached(srv, con, dc->parent))
if (conf.cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->key) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, con->context_ndx) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->data) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->family) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FAILURE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RETURN_FALSE)
if (config_check_cond_cached(l, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, key, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->dev) == COND_RESULT_FALSE)
if (config_check_cond_cached(con, con) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, child) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, proc) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->sec) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->context->key) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, c->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, NULL, dc->parent) == COND_RESULT_FALSE)
if (con->conf.config_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, con) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, 0, dc->parent) == COND_RESULT_FALSE)
if (*config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, srv_parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, *dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_READ_FALSE)
if (config_check_cond_cached(srv, con, dc->socket) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_FALSE)
if (config_check_cond_cached(srv, con, dc->parent)==COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, v) == COND_RESULT_FALSE)
if (config_check_cond_cached(con, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->res) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, srv_sock) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, con->dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling)
if (srv == NULL)
if (config_check_cond_cached(srv, con, prev) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->_parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent)  0)
if (config_check_cond_cached(srv, con, con->parent) == NULL)
if (config_check_cond_cached(srv, con, srv) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, type) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent->context) == COND_RESULT_FALSE)
if (config_check_cond_cached(con, dc->parent) == 0)
if (config_check_cond_cached(srv, con, dc->parent, TRUE) == COND_RESULT_FALSE)
if (set_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->nparent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->type) == COND_RESULT_FALSE)
/* if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == _COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent), COND_RESULT_FALSE)
if (config_check_cond_cached( srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->queue) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == D_RESULT_FALSE)
if (config_check_cond_cached(srv, con, con->parent) == 0)
if (srv == config_check_cond_cached(srv, con, dc->parent))
if (config_check_cond_cached(srv, con, dc->parent) == UNCOND_RESULT_FALSE)
if (config_check_cond_cache(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(con, dc->parent) == NULL)
if (config_check_cond_cached(srv, con, dc->parent) == ConD_RESULT_FALSE)
if ( config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE )
if (srv == COND_RESULT_FALSE)
if (COND_RESULT_FALSE == con->cond_cache[dc->parent->key])
if (config_check_cond_cached(srv, con, dc->parent) == __COND_RESULT_FALSE)
if ( config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent, NULL) == NULL)
if ((config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)

if (config_check_cond_cached(srv, con, dc->parent) == DEBUG)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_NONE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_ERROR)
if (config_check_cond_cached(srv, con, dc->parent) == dc->parent)
if (config_check_cond_cached(srv, con, dc->parent, COND_RESULT_FALSE))
if (config_check_cond_cached(srv, con, dc->parent) == dc->parent->context_ndx)
if (config_check_cond_cached(srv, con, dc->parent) == COND_COND_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == dc->context_ndx)
if (config_check_cond_cached(srv, con, dc->context_ndx) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent == COND_RESULT_FALSE))
if (dc->parent == NULL)
if (NS_SUCCEEDED(config_check_cond_cached(srv, con, dc->parent)))
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_SUCCESS)
if (result == COND_RESULT_FALSE)
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].key)
if (config_check_cond_cached(srv, con, dc->context_ndx) == 0)
switch (config_check_cond_cached(srv, con, dc->parent))  case COND_RESULT_FALSE:
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESTORE)
if (config_check_cond_cached(srv, con, dc->conf) == COND_RESULT)
if (config_check_cond_cached(srv, con);
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FAILED)
if (config_check_cond_cached(srv, con, dc->parent) == COND_REFLOW)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FAIL)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FLAGS)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_TEST)
if (!config_check_cond_cached(srv, con, dc->parent))  return COND_RESULT_FALSE;
srv = config_check_cond_cached(srv, con, dc->parent); if (srv == NULL)
if (config_check_cond_cached(srv, con, dc->parent) == COND_REFRESULT_FALSE)
if (config_check_cond_cached(srv, con, COND_RESULT_FALSE) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FREE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == M_COND_RESULT)
if (config_check_cond_cached(srv, con, dc->parent) == con->cond_cache.context_ndx)
if (con->conf.config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && dc->parent->key)
if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == dc->parent->flags)
if (config_check_cond_cached(srv, con, dc->dc_context->socket) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  else if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.conf.conf.conf_status & COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && dc->parent->parent)
if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (config_check_cond_cached(srv, con, dc->parent) == config_result_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && dc->parent->context_ndx!= 0)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling)  if (dc->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (dc->prev)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_context_ndx == 0)
if (config_check_cond_cached(srv, con, dc->parent) == -1 && con->conf.log_state!= COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->context_ndx->key) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (dc->prev)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (!con->conf.log_condition_handling)  TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result)  TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == dc->dc_dc->context_ndx)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling)  if (con->conf.log_condition_handling)  if (con->conf.log_condition_handling)  if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]);    else  if (con->conf.log_condition_handling)  TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]);   else if (con->conf.log_condition_handling)  TRACE("cond[
if (con->conf.conf.log_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == c_flags)
if (config_check_cond_cached(srv, con, dc->parent) == dc->dc_dc_dc_cached)
if (con->conf.conf.log_context_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->dc_flags) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && dc->parent->context_ndx!= NULL)
if (config_check_cond_cached(srv, con, dc->parent) == dc->dc_parent->context_ndx)
if (con->conf.conf.check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.request.cfg_cache == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.get_parent(dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_context_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  else
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (config_check_cond_cached(srv, con, dc->context->node) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  else  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  else  config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE;   if (dc->prev)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == dc->dc_sec)
if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  else  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_context_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->context_ndx->parent) == COND_RESULT_FALSE)
if (con->conf.conf.log_condition_handling)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling && config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == dc->conf.cache_parent)
if (con->conf.cond_cache[con->context_ndx].flags & COND_RESULT_FALSE)
if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  else
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->family) == COND_RESULT_FALSE)
if (set_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->dc_flags) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (con->conf.conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == TRUE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, child) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->get_parent()) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->queue) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == M_COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (const config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) &0)
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if ( config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, srv) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
&if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->context_ndx) == COND_RESULT_FALSE)
if (con->conf.conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == dc->parent)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dev) == COND_RESULT_FALSE)
srv = config_check_cond_cached(srv, con, dc->parent); if (srv == NULL)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (con->conf.conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else
if (config_check_cond_cached(srv, con, dc->parent) == COND_READ_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
<if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, con) == COND_RESULT_FALSE)
if (config_check_cond_cached(dev, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == NULL)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached (srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == ConD_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.request.cfg_cache == COND_RESULT_FALSE)
if (con->conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->dev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (*config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, NULL, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent == COND_RESULT_FALSE))
if (Config.config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if ((config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE))
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->local) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (con->conf.conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else
if (con->conf.conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == M_COND_RESULT)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent))
if (con->conf.conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent, TRUE) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (con->conf.conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent), COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else
if (dc->parent == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == _COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FAILED)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->socket) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == 0)
if (con->conf.conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->context->key) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, con->context_ndx) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (srv == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(con, con->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->context_ndx->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_COND_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_TRUE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_ERROR)
if (con->conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_REFRESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, con->parent) == NULL)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if(config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == -1)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, srv->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, p) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == D_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (con->conf.log_condition_handling == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (con->conf.conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(&srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_context_ndx == 0)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && dc->parent->key)
if (config_check_cond_cached(srv, con, const dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) == dc->dc_parent->context_ndx)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
switch (config_check_cond_cached(srv, con, dc->parent)) case COND_RESULT_FALSE:
if (con->conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, result) == COND_RESULT_FALSE)
if (result == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && dc->parent->context_ndx!= NULL)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent->context) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_NONE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (srv == NULL)
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].key)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(con, dc->parent) == 0)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (con->conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent)!= 0)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
else if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, sc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->context_ndx) == 0)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == dc->dc_dc_dc_cached)
if (con->conf.log_condition_handling)
if (con->conf.conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(con, dc->parent) == NULL)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (con->conf.conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (con->conf.conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, con->parent) == 0)
if (dc->parent)
if (config_check_cond_cached(srv, con, key) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent->key) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == dc->conf.cache_parent)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->conf) == COND_RESULT)
if (config_check_cond_cached(srv, con, dc) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, &dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
switch (config_check_cond_cached(srv, con, dc->parent)) <case COND_RESULT_FALSE:
if (config_check_cond_cached(l, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == dc->dc_dc->context_ndx)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (__config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (&config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->key) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (con->conf.conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->res) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (NS_SUCCEEDED(config_check_cond_cached(srv, con, dc->parent)))
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(dc->parent, srv, con) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (con->conf.conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling && config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == UNCOND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_SUCCESS)
if (config_check_cond_cached(srv, con, dc->context->node) == COND_RESULT_FALSE)
if (con->conf.conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) &COND_RESULT_FALSE)
if (con->conf.cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, con->dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->result) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, l) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == c_flags)
if (config_check_cond_cached(dc->parent, con) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, c->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == con->cond_cache.context_ndx)
if (con->conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (!config_check_cond_cached(srv, con, dc->parent)) &return COND_RESULT_FALSE;
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent)==COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FAIL)
if (con->conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else
if (con->conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (con->conf.conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, con->parent) == COND_RESULT)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (!config_check_cond_cached(srv, con, dc->parent)) <return COND_RESULT_FALSE;
if (config_check_cond_cached(srv, con, 0, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else
if (config_check_cond_cached(srv, con, dc->dc_context->socket) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.get_parent(dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(con, con) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->nparent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->cache) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent, COND_RESULT_FALSE))
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached( srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con) == COND_RESULT_FALSE)
if (con->conf.config_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent, 0) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling)
if (con->conf.conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (con->conf.conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent, NULL) == COND_RESULT_FALSE)
if (con->conf.conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (con->conf.conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == dc->parent->flags)
if (config_check_cond_cached(srv, con, srv_sock) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == __COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (conf_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (con->conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) <0)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, type) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (con->conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
&if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(con, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == DEBUG)
if (con->conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else
if ((config_check_cond_cached(srv, con, dc->parent)) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == PR_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (srv == config_check_cond_cached(srv, con, dc->parent))
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->flags) == COND_RESULT_FALSE)
if (con->conf.conf.log_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (!config_check_cond_cached(srv, con, dc->parent)) return COND_RESULT_FALSE;
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if ((config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (con->conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else
if (config_check_cond_cached(srv, con, dc->parent) == COND_FALSE)
if (config_check_cond_cached(srv, con, dc->sec) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->conf.parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->_parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == &COND_RESULT_FALSE)
if (con->conf.conf.check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->conf) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (con->conf.conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (COND_RESULT_FALSE == config_check_cond_cached(srv, con, dc->parent))
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && dc->parent->context_ndx!= 0)
if (config_check_cond_cached(srv, con, dc->parent->parent) == COND_RESULT_FALSE)
if (con->conf.conf.conf.conf_status & COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (config_check_cond_cached(srv, con, dc->parent) == dc->parent->context_ndx)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && dc->parent->parent)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, v) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->context_ndx->key) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
<if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
switch (config_check_cond_cached(srv, con, dc->parent)) &case COND_RESULT_FALSE:
if (config_check_cond_cached(srv, con, dc->parent, NULL) == NULL)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, srv_parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, proc) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (COND_RESULT_FALSE == con->cond_cached(srv, con, dc->parent))
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RETURN_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (config_check_cond_cached(srv, con, dc->dc) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == <COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == dc->dc_sec)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESTORE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FLAGS)
if (config_check_cond_cached(con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (conf.config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FREE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (config_check_cond_cached(srv, con, dc->p) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if ( config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE )
if (config_check_cond_cached(srv, con, dc->parent) == COND_REFLOW)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_TEST)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->dc_parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(rv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
/* if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent)!= NULL)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (COND_RESULT_FALSE == con->cond_cache[dc->parent->key])
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FAILURE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) <COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->type) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, key, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == -1 && con->conf.log_state!= COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->parent) == config_result_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == 1)
if (config_check_cond_cached(srv, con, NULL) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(p, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <else
if (config_check_cond_cached(srv, con, *dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (dc->parent == NULL)
if (con->conf.check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, prev) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.cond_cache[con->context_ndx].flags & COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cached(srv, con, dc->data) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (!config_check_cond_cached(srv, con, dc->parent))
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE
if (config_check_cond_cached(srv, con, dc->local_parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->child) == COND_RESULT_FALSE)
if (con->conf.conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (Config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->context) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (con->conf.conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) 0)
if (config_check_cond_cached(srv, con, dc->context->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_ca
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (!con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->context_ndx].result) TRACE("cond[%d] is valid: %d", dc->comp, con
if (config_check_cond_cache(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, con->parent) == COND_RESULT_FALSE)
if (conf.cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent)!= COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == dc->context_ndx)
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE &&!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->comp]); else if (con->conf.log_condition_handling) TRACE("cond[%d] is valid: %d", dc->comp, con->conditional_is_valid[dc->parent]); else if (con->conf.log_condition_handling) TRACE("cond[
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); else &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (config_check_cond_cached(srv, con, dc->parent) == const COND_RESULT_FALSE)
