golden:
} else if (PHAR_GLOBALS->phar_fname_map.arBuckets && SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)) {
inference:
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, &fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zd_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **) &pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, (void **)&pphar)){
}else if (SUCCESS!= zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, arch_len, (void **)&pphar)){
}else if (SUCCESS == phar_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find (&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else  if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
}else if (SUCCESS == ph_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &phar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void *)&pphar)){

}else if (SUCCESS == zend_hash_find(fname, fname_len, &pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&phar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), &fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == phar_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, path_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, len, (void **)&pphar)){
}else if (SUCCESS == hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else{
}else if (SUCCESS == zend_hash_find( &(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map))){
}else if (SUCCESS == zh_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, 0, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PPHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find (&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **) &pphar)){
}else if(SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == keg_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == &(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == __hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, 0)){
}else if (SUCCESS == zeros_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, 0, &pphar)){
}else if (SUCCESS == kdb_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == fname_find(fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == stall_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len + 1, (void **)&pphar)){
}else if (SUCCESS == sig_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == m_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == san_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find((PHAR_GLOBALS->phar_fname_map) fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == kd_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), 0, fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == a_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map),fname,fname_len,(void **)&pphar)){
}else if (SUCCESS == ok){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, strlen(fname), (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, &fname_len, &pphar)){
}else if (SUCCESS == ns_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void**)&pphar)){
}else if (SUCCESS == 0){
}else if (SUCCESS == fname_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, &arch, (void **)&pphar)){
}else if (SUCCESS == pkg_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (subcache == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == full_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &mphar)){
}else if (SUCCESS == end_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == ancestor_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else  if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map, fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname.len, (void **)&pphar)){
}else if (SUCCESS == _hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (!SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, &fname, (void **)&pphar)){
}else if (SUCCESS == kerd_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zphar_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zdb_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len,(void **)&pphar)){
}else if (SUCCESS == zend_hash_find_fname(fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == dom_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, strlen(fname))){
}else if ((SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar, 0)){
if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
}else if (SUCCESS == %s_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zej_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == sane_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == _zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == ze_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map, fname, fname_len, &pphar)){
}else if (SUCCESS == zend_hash_find((void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&phar, fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zebra_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if ( SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zap_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &flags)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, name_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(FHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == phar_hash_find(fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == phar_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len)){
}else if (SUCCESS == z_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &opthar)){
}else if (SUCCESS == zend_hash_find(& (PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == g_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == gen_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (suCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zeros(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zem_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&phar->phar_fname_map, fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, *(void **)&pphar)){
}else if (SUCCESS == cvs_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == lhs_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len+1, (void **)&pphar)){
}else if (subcessor == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == holder_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map),fname,fname_len,&pphar)){
}else if (!SUCCESS){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_length, (void **)&pphar)){
}else if (SUCCESS == zfs_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->ph_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == &(PHAR_GLOBALS->phar_fname_map)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, (void **) &pphar)){
}else if (SUCCESS == end_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
}else if (SUCCESS == zend_hash_find(&PHAR_GLOBALS->phar_fname_map, fname, fname_len, &pphar)){
}else if (SUCCESS == kern_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), *fname, *fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, &arch_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, *fname_len, (void **)&pphar)){
}else if (SUCCESS == kerd_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
}else if (SUCCESS == zend_hash_find((PHAR_GLOBALS->phar_fname_map) &fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == sched_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == ehash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS.phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, entry_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(phar->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == azero_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), &fname, &fname_len, &pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &fname_len)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (u_long)&pphar)){
}else if (SUCCESS == zend_hash_find( &(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
}else if (result == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), *fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, sizeof(fname))){
}else if (SUCCESS == zend_hash_find(p, fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&PHAR_GLOBALS->phar_fname_map, fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_filename_map), fname, fname_len, (void **)&pphar)){
}else, if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, *pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&fname)){
}else if (SUCCESS == ze_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
}else if (subCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, 0, 0)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, fname_len)){
}else if (SUCCESS == phar_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **) &pphar)){
}else if (SUCCESS == result){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &fname)){
}else if (SUCCESS == zeros){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, path_len)){
}else if (subCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(fname, fname_len)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &ph)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == pphar){
}else if (SUCCESS == zerd_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == (zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar))){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&mphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)pphar)){
}else if (SUCCESS == fname_len){
}else if (SUCCESS == (zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar))){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map, fname, fname_len, (void **)&pphar))){
}else if (SUCCESS == -1){
}else if (SUCCESS == (0)){
}else if (SUCCESS == errno){
}else if (SUCCESS == SUCCESS){
}else if (SUCCESS == '0'){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, (void **)fname)){
}else if (SUCCESS == __zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zsa.hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, 0)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, nsnull)){
}else if (SUCCESS == __zd_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zsa_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &ph_info, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, (pr_ptr)){
}else if (SUCCESS == zhs_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, &status)){
}else if (SUCCESS == zeta_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, &obj)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, (separator_type == X_SIG))){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &ph, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, PHY_DEBUG_FILENAME)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, PR_TRUE)){
}else if (SUCCESS == __zeros__(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, (void **)&phar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, &fname_len)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, &flags)){
}else if (SUCCESS == zfhash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zemcmp(fname, "phar", 4)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, PHYDROUND_PATH_LENGTH)){

}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, (void **)fname)){
&else{
&else if (SUCCESS == full_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, fname_len)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, fname_len)){
}else if (SUCCESS == ze_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len+1, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, 0, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), &fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &phar)){
}else if (SUCCESS == cvs_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (subcessor == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&fname)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, 0, 0)){
}else if (SUCCESS == zend_hash_find(&phar->phar_fname_map, fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar){
<else if (SUCCESS == kern_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == fname_find(fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == sched_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map, fname, fname_len, &pphar)){
<else if (SUCCESS == fname_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zemcmp(fname, "phar", 4)){
}else if (SUCCESS == zend_hash_find(fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zd_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == dom_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->ph_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find (&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else{
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), *fname, *fname_len, (void **)&pphar)){
}else if (SUCCESS == '&0'){
}else if (SUCCESS == _hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == &(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == __zeros__(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == phar_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == m_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == ze_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zfs_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)pphar)){
}else if (SUCCESS == &(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zap_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == __zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, &status)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, PHY_DEBUG_FILENAME)){
<else if (!SUCCESS){
}else if (SUCCESS == kern_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zeros(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == %s_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (subCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
&else if (SUCCESS == zend_hash_find(p, fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len,(void **)&pphar)){
&else if (SUCCESS == '&0'){
&else if (SUCCESS == zeros_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zphar_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == end_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, (void **) &pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, strlen(fname), (void **)&pphar)){
<else if (SUCCESS == g_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zfs_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), *fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == (0)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, &arch_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map)){
}else if(SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (!SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(fname, fname_len, (void **)&pphar)){
}else &if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == a_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (subcache == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len + 1, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&phar, fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(FHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == stall_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find_fname(fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(fname, fname_len)){
}else if (SUCCESS == z_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zhs_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (subcache == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map, fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, PHY_DEBUG_FILENAME)){
&else if (SUCCESS == (0)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void**)&pphar)){
<else <if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == dom_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, (void **)&phar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar){
&else if(SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == kdb_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PPHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, &status)){
}else if (SUCCESS == ph_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &opthar)){
<else if (SUCCESS == errno){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, &arch_len, (void **)&pphar)){
&else if (SUCCESS == lhs_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &ph_info, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, *fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), &fname, &fname_len, &pphar)){
&else if (SUCCESS == zend_hash_find(&(FHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == fname_len){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len,(void **)&pphar)){
if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find((PHAR_GLOBALS->phar_fname_map) &fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, *(void **)&pphar)){
}else if (SUCCESS == phar_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **) &pphar)){
&else if (SUCCESS == cvs_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
&else if (SUCCESS == -1){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len + 1, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&fname)){
}else &if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, entry_len, (void **)&pphar)){
}else if (SUCCESS == result){
&else if (SUCCESS == (zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar))){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &phar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, &flags)){
}else if (SUCCESS == full_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &ph)){
}else <if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
&else if (SUCCESS == ph_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == holder_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == 0){
&else if (SUCCESS == phar_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **) &pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, &arch, (void **)&pphar)){
}else if (SUCCESS == phar_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &fname)){
<else if (SUCCESS == kd_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zebra_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else <if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, *(void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, path_len, (void **)&pphar)){
}else if (SUCCESS == zej_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zh_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar, 0)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, pphar)){
<else if (SUCCESS == ok){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, 0)){
}else if (suCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == &(PHAR_GLOBALS->phar_fname_map)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), &fname, &fname_len, &pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find((PHAR_GLOBALS->phar_fname_map) &fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == end_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
<else if (SUCCESS == zfhash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (suCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == sane_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == end_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_filename_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zap_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, (separator_type == X_SIG))){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &mphar)){
<else if (SUCCESS == m_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == __hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &ph, (void **)&pphar)){
<else if (SUCCESS == pkg_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&PHAR_GLOBALS->phar_fname_map, fname, fname_len, (void **)&pphar)){
}else{
}else if (SUCCESS == ns_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == errno){
}else if (SUCCESS == zend_hash_find(fname, fname_len, &pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map, fname, fname_len, (void **)&pphar))){
&&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
}else if (SUCCESS == zend_hash_find(&PHAR_GLOBALS->phar_fname_map, fname, fname_len, &pphar)){
<else if (SUCCESS == ph_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find_fname(fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, nsnull)){
&else if (subCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &ph)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, strlen(fname))){
<else if (SUCCESS == zeros){
<else if (SUCCESS == zeta_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &fname_len)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, *fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **) &pphar)){
&else if (SUCCESS == zem_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == result){
<else if (SUCCESS == end_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zd_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else <if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, 0)){
<<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &mphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &fname)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **) &pphar)){
&else if (SUCCESS == &(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == phar_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
&<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, *pphar)){
&else if ( SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == phar_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, name_len, (void **)&pphar)){
<else if (SUCCESS == sched_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
}else if (SUCCESS == _zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(& (PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar, 0)){
<else if (SUCCESS == phar_hash_find(fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(phar->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), *fname, *fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&phar)){
<else if (SUCCESS == (zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find (&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **) &pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), *fname, *fname_len, (void **)&pphar)){
&else if (subcache == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, &flags)){
if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, PR_TRUE)){
}else if (SUCCESS == kerd_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zeros_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else, if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, sizeof(fname))){
}else if (SUCCESS == zsa.hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &mphar)){
&else if (SUCCESS == zfhash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find (&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (u_long)&pphar)){
}else if (SUCCESS == kd_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PPHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, sizeof(fname))){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &opthar)){
<else if (subCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **) &pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &ph, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, nsnull)){
&else if (SUCCESS == ancestor_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, &fname_len, &pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), 0, fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, PHYDROUND_PATH_LENGTH)){
&else if (SUCCESS == __zeros__(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == lhs_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == '0'){
}else if (SUCCESS == san_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, PHY_DEBUG_FILENAME)){
&else if (SUCCESS == %s_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), 0, fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(fname, fname_len, &pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map),fname,fname_len,&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, entry_len, (void **)&pphar)){
&else if (SUCCESS == z_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&mphar)){
}else if (SUCCESS == pkg_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else <if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), 0, fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&phar, fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map, fname, fname_len, &pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, (void **) &pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, entry_len, (void **)&pphar)){
&else if (SUCCESS == zeros){
&else if (SUCCESS == zend_hash_find(&PHAR_GLOBALS->phar_fname_map, fname, fname_len, &pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, strlen(fname), (void **)&pphar)){
}else if (SUCCESS == ok){
}else if (SUCCESS == holder_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == z_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, arch_len, (void **)&pphar)){
}else if (SUCCESS == &(PHAR_GLOBALS->phar_fname_map)){
<else if (SUCCESS == phar_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map))){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void**)&pphar)){
}else if (SUCCESS == zem_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zfhash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == phar_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **) &pphar)){
<else if (SUCCESS == azero_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (u_long)&pphar)){
<else if (SUCCESS == zdb_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, *pphar)){
&else if (SUCCESS == zsa.hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find (&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **) &pphar)){
}else if (SUCCESS == zend_hash_find(&(phar->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == (zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == pphar){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map),fname,fname_len,&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, &fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, &fname, (void **)&pphar)){
}else if (SUCCESS == 0){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (u_long)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map))){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, &obj)){
&else if (SUCCESS == zeta_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, (pr_ptr)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void**)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, (void **)&pphar)){
&else if (SUCCESS == ze_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
}else if (SUCCESS == gen_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == SUCCESS){
}else if (SUCCESS == ancestor_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, &fname, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->ph_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(phar->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zej_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (!SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == SUCCESS){
&else if (SUCCESS!= zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == keg_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zdb_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == pkg_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->ph_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zebra_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, 0)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len)){
&else if (SUCCESS == ehash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find( &(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, &arch_len, (void **)&pphar)){
}else if (SUCCESS == '<0'){
&else if ((SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, path_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, &arch, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, &obj)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == -1){
<else if (SUCCESS == fname_len){
&else &if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
&else if (SUCCESS == sig_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find( &(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, (void **)&phar)){
}else if (SUCCESS == errno){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, PR_TRUE)){
<else if (SUCCESS == a_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zsa_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == kerd_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
&else if (SUCCESS == gen_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == dom_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, &flags)){
}else if (SUCCESS == fname_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), &fname, fname_len, (void **)&pphar)){
}else if (SUCCESS!= zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zerd_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void *)&pphar)){
<else if (SUCCESS == ze_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
&else if (SUCCESS == '<0'){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), *fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find_fname(fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map),fname,fname_len,&pphar)){
<else if (SUCCESS == ehash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, 0)){
<else if (SUCCESS == __zd_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, PHYDROUND_PATH_LENGTH)){
&else if (SUCCESS == zerd_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, path_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, 0, &pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, (pr_ptr)){
<else if (SUCCESS == keg_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(fname, fname_len)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &ph, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map),fname,fname_len,(void **)&pphar)){
&else if (SUCCESS == zend_hash_find((void **)&pphar)){
&else if (SUCCESS == &(PHAR_GLOBALS->phar_fname_map)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, len, (void **)&pphar)){
<else if (SUCCESS == hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS.phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, pphar)){
&else &if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else &if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
<else if (SUCCESS == gen_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == __zd_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, (pr_ptr)){
<else if (SUCCESS == -1){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, path_len)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map, fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find((void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, &fname_len, &pphar)){
<else if (SUCCESS == (zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar))){
&else if (SUCCESS == __hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, strlen(fname), (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, 0, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, &status)){
&else if (SUCCESS == __zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(& (PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS.phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == kdb_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &fname_len)){
<else if (suCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if ((SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == _zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, strlen(fname))){
&else if (SUCCESS == result){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, 0)){
&<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, name_len, (void **)&pphar)){
&else if (SUCCESS == san_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (!SUCCESS){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &flags)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname.len, (void **)&pphar)){
&else if (SUCCESS == zdb_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == kern_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, fname_len)){
<else if (SUCCESS == phar_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &flags)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&mphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len+1, (void **)&pphar)){
&else, if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, sizeof(fname))){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, &fname_len)){
}else if (SUCCESS == (zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar))){
&else if (SUCCESS == ok){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len)){
<else if (SUCCESS == zem_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, name_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == stall_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == _zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == m_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zemcmp(fname, "phar", 4)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_length, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(p, fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == phar_hash_find(fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(FHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == __hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(& (PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == phar_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len)){
<else if (SUCCESS == kerd_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, PHYDROUND_PATH_LENGTH)){
}else if (SUCCESS == phar_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS.phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == lhs_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zeros(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len,(void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map, fname, fname_len, (void **)&pphar))){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, nsnull)){
&else if (SUCCESS == zend_hash_find((PHAR_GLOBALS->phar_fname_map) &fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, &obj)){
&else if (SUCCESS == a_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
<else if (SUCCESS == cvs_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zphar_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname.len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find( &(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&PHAR_GLOBALS->phar_fname_map, fname, fname_len, (void **)&pphar)){
}else if ( SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&fname)){
<else if (SUCCESS == sig_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len+1, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(fname, fname_len)){
}else if (SUCCESS == sane_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, arch_len, (void **)&pphar)){
}else if (result == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zeros(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_length, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &phar)){
<else if (SUCCESS == __zeros__(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == end_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == __zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, (separator_type == X_SIG))){
&else if (SUCCESS == zend_hash_find(fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == __zd_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, *pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_length, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, 0, 0)){
}else if (SUCCESS == zerd_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zebra_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, &fname_len, (void **)&pphar)){
}else if (SUCCESS == zhs_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == kerd_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zemcmp(fname, "phar", 4)){
<else if (SUCCESS == zend_hash_find(&(PPHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, path_len)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, 0, &pphar)){
&else if (SUCCESS == sched_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == sane_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&PHAR_GLOBALS->phar_fname_map, fname, fname_len, &pphar)){
}else if (SUCCESS == kerd_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
}else if (SUCCESS == fname_find(fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, 0)){
}else if (SUCCESS == (0)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map, fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == azero_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &fname)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&phar)){
<else if (SUCCESS == zend_hash_find((void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, &fname, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, &arch, (void **)&pphar)){
}else if (SUCCESS == g_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void**)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map),fname,fname_len,(void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, strlen(fname))){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, 0, &pphar)){
&else if (SUCCESS == zend_hash_find((PHAR_GLOBALS->phar_fname_map) fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find( &(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, PR_TRUE)){
&else if (SUCCESS == phar_hash_find(fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zeta_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == fname_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, 0, 0)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void**)&pphar)){
<else if (result == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == azero_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void**)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, &fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, (void **)&pphar)){
&else if (SUCCESS == keg_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(p, fname, fname_len, (void **)&pphar)){
<if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, (void **) &pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, &fname_len)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)pphar)){
}else if (SUCCESS == ehash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (result == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == full_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, (void **)fname)){
}else if (SUCCESS == %s_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zfs_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), &fname, &fname_len, &pphar)){
<&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
&else{
<else if (SUCCESS == zend_hash_find( &(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
&else if (subcessor == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find((PHAR_GLOBALS->phar_fname_map) fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zsa_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void *)&pphar)){
&else if (SUCCESS == zhs_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == '&0'){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &ph_info, (void **)&pphar)){
}else if (SUCCESS == zd_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == phar_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map))){
&else if (SUCCESS == pphar){
<else if (SUCCESS == fname_find(fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == sig_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zsa_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)pphar)){
<else &if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (subCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == _hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if(SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&phar->phar_fname_map, fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == ze_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
&else if (SUCCESS == zend_hash_find(&phar, fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar))){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar))){
&else if (SUCCESS == zend_hash_find(&phar->phar_fname_map, fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&PHAR_GLOBALS->phar_fname_map, fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map, fname, fname_len, &pphar)){
<else if (SUCCESS!= zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void *)&pphar)){
<else if (SUCCESS == '0'){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, *(void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &ph_info, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&mphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, len, (void **)&pphar)){
<else if (subCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
<else if (SUCCESS == _hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, (void **)&pphar)){
&else if (SUCCESS == phar_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_filename_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == ns_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else, if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), &fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), *fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == (zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, (void **)fname)){
&else if (SUCCESS == ns_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
&else if (SUCCESS == phar_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if ( SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == san_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &flags)){
&else if (SUCCESS == zend_hash_find( &(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &ph)){
}else if (SUCCESS == zeros){
<else if (SUCCESS == zphar_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zh_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == 0){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, arch_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar){
}else{
<else{
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar))){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname.len, (void **)&pphar)){
}else if (SUCCESS == zend_hash_find (&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map, fname, fname_len, (void **)&pphar))){
&else if (SUCCESS == end_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
<else if (SUCCESS == stall_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zsa.hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == holder_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (!SUCCESS){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, *fname_len, (void **)&pphar)){
<if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == '0'){
&else if (SUCCESS == g_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &opthar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, path_len)){
<else if (SUCCESS == ancestor_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar, 0)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, (void **)&phar)){
}else if (SUCCESS == zend_hash_find((PHAR_GLOBALS->phar_fname_map) fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, (separator_type == X_SIG))){
<else if ((SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find (&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **) &pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, 0, (void **)&pphar)){
}else if (SUCCESS == pphar){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len + 1, (void **)&pphar)){
<else if (SUCCESS == kdb_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar, &fname_len)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname)){
<else if (!SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == '<0'){
}else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
}else if (SUCCESS == zh_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &fname_len)){
}else if (SUCCESS == zeros_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == fname_len){
&else if (SUCCESS == zap_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&phar)){
&else if (SUCCESS == ze_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_filename_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == kerd_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map),fname,fname_len,(void **)&pphar)){
}else if (SUCCESS == phar_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len)){
<else if (SUCCESS == SUCCESS){
}else if (subcessor == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (subCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, &pphar)){
<else if (SUCCESS == zend_hash_find(fname, fname_len, &pphar)){
&else <if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
<else if (SUCCESS == zend_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, &fname_len, &pphar)){
&else if (SUCCESS == kd_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
&else if (SUCCESS == zej_hash_find(&(PHAR_GLOBALS->phar_fname_map), fname, fname_len, (void **)&pphar)){
