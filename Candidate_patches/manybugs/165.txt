golden:
if (type != BP_VAR_IS) { zend_error(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(dim)); }
inference:
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(dim));
error(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(dim));

zend_error(E_NOTICE, "Uninitialized string offset: %u", Z_LVAL_P(dim));
zend_error(E_NOTICE, ("Uninitialized string offset: %ld", Z_LVAL_P(dim)));
zend_error(E_NOTICE, "Uninitialized string offset");
zend_error(E_NOTICE, "Uninitialized string offset: %d", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", dim);
zend_error(E_NOTICE, "Uninitialized string offset: %ld", __func__);
zend_error(E_NOTICE, "Uninitialized string offset: %p", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", dim);
zend_error(E_ERRNO, "Uninitialized string offset: %ld", Z_LVAL_P(dim));
error("Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", di);
zend_error(E_ERROR, "Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", __func__);
zend_error(E_NOTICE, "Uninitialized string offset: %x", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", di);
zend_error(E_NOTICE, "Uninitialized string offset", Z_LVAL_P(dim));
zd_error(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_ERR, "Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Initialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %s", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: " "%ld", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_NOTICE, ("Uninitialized string offset: %lu", Z_LVAL_P(dim)));
zend_error(E_NOTICE, "Uninitialized string offset: %zd", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", NULL);
zend_error(E_NOTICE, "Uninitialized string offset: %w", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %d", dim);
_error(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_err(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(dim));
zend_err(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(retval));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(ptr));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", NULL);
zend_error(E_NOTICE, "Uninitialized string offset: %ld");
zend_error(E_WARNING, "Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Error initializing string offset: %ld", Z_LVAL_P(dim));
errx(1, "Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_debug(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: " "%s", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Unknown string offset: %ld", Z_LVAL_P(dim));
zend_warn(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(dim));
ze_error(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %i", Z_LVAL_P(dim));
zend_error(E_NOTICE, "%s", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", 0, Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(retval));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", dim_type);
zend_error(E_NOTICE, "Uninitialized string offset: %ld", PZ_LVAL_P(dim));
ERR_ERR(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %jd", Z_LVAL_P(dim));
zend_error(EINVAL, "Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", p);
zend_error(E_NOTICE, "Uninternalized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", E_LVAL_P(dim));
Error(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_NOTICE, ("Uninitialized string offset: %d", Z_LVAL_P(dim)));
errx(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %d", di);
zend_error(E_NOTICE, "Uninitialized string offset: %ld", E_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %g", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", PZ_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offsetn");
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %d", Z_LVAL_P(dim), NULL);
zend_error(E_NOTICE, "uninitialized string offset: %lu", Z_LVAL_P(dim));
zend_warnx("Uninitialized string offset: %ld", Z_LVAL_P(dim));
_errx(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", DBG(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(ptr));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", 0, Z_LVAL_P(dim));
E_NOTICE("Uninitialized string offset: %ld", Z_LVAL_P(dim));
self.error(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %cd", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(lu));
printf("Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_FALSE, "Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error("Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %d", Z_LVAL_P(retval));
zend_error(E_NOTICE, "Uninitialized string offset: %hd", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", Z_VAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset.");
zend_error(E_ERRNO, "Uninitialized string offset: %lu", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu",Z_LVAL_P(dim));
EINVAL_ERR(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", d);
zend_error(E_NOTICE, "Uninitialized string offset: %f", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Internalized string offset: %ld", Z_LVAL_P(dim));
zd_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(dim));
zend_error(EX_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %z", Z_LVAL_P(dim));
zend_error(E_NOTICE, _("Uninitialized string offset"), Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", Z_ARRVAL_P(dim));
syslog(LOG_ERR, "Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(zval));
zend_error(E_NOTICE, "Uninitialized string offset: " "%d", Z_LVAL_P(dim));
zend_error(ERROR, "Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", Z_DEV_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lx", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset %lu", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(*dim));
zend_error(E_NOTICE, "Uninitialized string offset: %m", Z_LVAL_P(dim));
error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu");
zend_error(E_NOTICE, "Uninitialized string offset: %ld", DBG(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %d", Z_LVAL_P(ptr));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", ptr);
zend_error(E_NOTICE, "Uninitialized string offset: %d", Z_LVAL_P(dim_type));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", strerror(errno));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(&dim));
ze_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: " "%lu", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %.*s", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(*dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(&dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", p);
error(e_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %c", Z_LVAL_P(dim));
zend_error (E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", dim_type);
zend_warn(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %d", Z_LVAL(dim));
ZVAL_ERROR(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %qd", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", ptr);
zend_error(E_NOTICE, "Uninitialized string offset: %ld", da);
zend_error(E_NOTICE, "Uninitialized string offset.n");
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(container));
zend_error(E_NOTICE, "Uninitialized string offset: %b", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Initialized string offset: %lu", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_DEV_P(dim));
error (E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninterrupted string offset: %ld", Z_LVAL_P(dim));
e_error(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(EINTR, "Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", len);
zend_error(E_NOTICE, "Uninitialized string offset: %dn", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", Z_RVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %a", Z_LVAL_P(dim));
_error("Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_NOTICE, "uninitialized string offset: %u", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Illegal offset type");
zend_error(E_NOTICE, "Uninitialized string offset: %llu", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset:n");
zend_error(E_NOTICE, "Uninitialized string offset: %d", __func__);
DBG("Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_WARNING, "Uninitialized string offset: %lu", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %k", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset:");
zend_error(E_NOTICE, "Uninitialized string offset: %ld", dev);
zend_error(E_NOTICE, _("Uninitialized string offset"));
error ("Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %d", Z_LVAL_P(dim)); break;
zend_error(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(container));
zend_error(E_NOTICE, "Uninitialized string offset: %o", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_VAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_RVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", strerror(errno));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", dm);
zend_err(E_NOTICE, "Uninitialized string offset: %d", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", dp);
zend_error(E_NOTICE, "Uninitialized string offset (%ld)", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(tmp));
zend_error(E_NOTICE, "Uninitialized string offset: %d", Z_LVAL_P(dim), e);
zend_error(E_NOTICE, "Uninitialized string offset: %lu", dp);
zend_error(E_NOTICE, "Uninitialized string offset: %d", Z_LVAL_P(dim), p);
zend_error(E_NOTICE, "Uninitialized string offset: %d", Z_LVAL_P(&dim));
zend_errno = E_NOTICE;
zend_error(E_NOTICE, "Uninitialized string offset: %d", Z_LVAL_P(dim)); return;
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(dim), dim);
zend_error(E_NOTICE, "Uninitialized string offset: ");
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_ARRVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(dim), error);
zend_error(E_NOTICE, "uninitialized string offset");
zend_error(E_NOTICE, "Unexpected offset type");
zend_error(E_NOTICE, "Uninitialized string offset: %ld", err);
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(dim), result);
ZVAL_LOCK(*retval);
zend_error(E_NOTICE, "Uninitialized string offset: %d", ptr);
zend_error(E_NOTICE, "Unknown string offset");
zend_error(E_NOTICE, "Uninitialized string offset: %ld", tmp);
error("Uninitialized string offset");
zend_error(E_NOTICE, EINVAL);
zend_errno = EINVAL;
ZVAL_LOCK(*retval); return;
splx(s);
error = E_NOTICE; goto out;
Z_LVAL_P(dim);
error = E_NOTICE;
ZVAL_UNLOCK(dim);
ZVAL_UNLOCK(*retval);
Z_LOCK(*retval);
return;
break;
zend_error(E_NOTICE, "Uninitialized string offset: %ld", _("Uninitialized string offset: %ld"), Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(result));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(dim), err);
zend_error(E_NOTICE, "Uninitialized string offset: %lu", __func__, Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", (long)Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", (unsigned long)Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %d", Z_LVAL_P((dim - 1)));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P((int)dim));
zend_error(E_NOTICE, "Uninitialized string offset: %d", Z_LVAL_P((int)dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P((unsigned long)dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P((u_long)dim));
zend_error(E_NOTICE, "Uninitialized string offset: %d", Z_LVAL_P(dim), err);
zend_error(E_NOTICE, "Uninitialized string offset: %ld", _("%s"), Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %d", Z_LVAL_P(dim), E_WARNING);
zend_error(E_NOTICE, "Uninitialized string offset: %ld", _("Uninitialized string offset"));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P((caddr_t)dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(strerror(errno)));
zend_error(E_NOTICE, "Uninitialized string offset: %d", Z_LVAL_P(strlen(dim)));
zend_error(E_NOTICE, "Uninitialized string offset: %d", Z_LVAL_P(dim), retval);
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(dim), NULL);
zend_error(E_NOTICE, "Uninitialized string offset: %lu", dj->dim_type);
zend_error(E_NOTICE, "Uninitialized string offset: %d", zval->next_type, Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %d", zval_size);
zend_error(E_NOTICE, "Uninitialized string offset: %ld", slp->dim);
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(scr_dim));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(dim), p);
zend_error(E_NOTICE, "Uninitialized string offset: %d", Z_LVAL_P(dim), __func__);
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(dim), e_Err);
zend_error(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(ptr_ptr));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", dn));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(result));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", p->p_dim);
zend_error(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(&ld));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P((const ZDimensions *)dim));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", __func__, Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(dim_type));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", _("Uninitialized string offset: %d"), Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", _("%s"), Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", _("Uninitialized string offset: %lu"), Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %d", Z_LVAL_P(dim), PZVAL_LOCK(*retval));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(ptr_name));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", (int)Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(src_ptr(dim)));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", (long)Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", zval->dim);
zend_error(E_NOTICE, "Uninitialized string offset: %ld", (unsigned char *)Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", ptr_t);
zend_error(E_NOTICE, "Uninitialized string offset: %ld", std::errno == EINTR)
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(dim), Z_LVAL_P(container));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", (void *)Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(dim), ZERO);
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(((dim_type & TSRMLS_DC)));
zend_error(E_NOTICE, "Uninitialized string offset: %d", Z_LVAL_P(sd));
zend_error(E_NOTICE, "Uninitialized string offset: %d", Z_LVAL_P(((unsigned char)dim)));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", (int)Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(dim), errno);
zend_error(E_NOTICE, "Uninitialized string offset: %d", Z_LVAL_P(str_t));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", dlg);
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(dim), E_NOT_EMPTY);
zend_error(E_NOTICE, "Uninitialized string offset: %lu", _("Uninitialized string offset"), Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %d", __func__, Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", (void *)Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", (u_long)Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(sym, d));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(dim), E_ERROR);
zend_error(E_NOTICE, "Uninitialized string offset: %lu", (unsigned long)Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P((unsigned char *)dim));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(dim), &err);
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(dim), PZVAL_LOCK(*retval));
zend_error(E_NOTICE, "Uninitialized string offset: %lu", nsCRT::strdup(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %d", Z_LVAL_P(dim), Z_IF_FLAG_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P((void **)dim));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", dd);
zend_error(E_NOTICE, "Uninitialized string offset: %lu", Z_LVAL_P(((uintptr_t)dim)));
zend_error(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(dim), E_ERR);
zend_error(E_NOTICE, "Uninitialized string offset: %d&n", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset.&n");
zend_error(E_NOTICE, "Uninitialized string offset: %dn", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset.<n");
zend_error(E_NOTICE, "Uninitialized string offset&n");
zend_error(E_NOTICE, "Uninitialized string offsetn");
zend_error(E_NOTICE, "Uninitialized string offset:n");
zend_error(E_NOTICE, "Uninitialized string offset: %d", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset<n");
zend_error(E_NOTICE, "Uninitialized string offset.n");
zend_error(E_NOTICE, "Uninitialized string offset: %d<n", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset:&n");
zend_error(E_NOTICE, "Uninitialized string offset: %ld", Z_LVAL_P(dim));
zend_error(E_NOTICE, "Uninitialized string offset:<n");
