golden:
<extra_id_0>
inference:
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif

"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION (2,10,0) static void reassembled_key_free (void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr;
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);  #endif
"reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  # endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  g_slice_free(reassembled_key, key);  #endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(3,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  (void *)ptr; g_slice_free(reassembled_key, key);  #endif
" reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,20,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
" if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void **ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(1,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static int reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key_key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,1) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10.,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);  #endif
"
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *ptr = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION (1,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"##if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *) ptr;
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0)
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void*ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key);  #endif
"g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,100,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,12,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
" #if GLIB_CHECK_VERSION (2,10,0) static void reassembled_key_free (void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,15,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) g_slice_free(reassembled_key, key); #endif
" reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p)  reassembled_key *key = (reassembled_key *) p; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; G_slice_free(reassembled_key, key);  #endif
("#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(4,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"@if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,5,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
" reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key_free(ptr); g_slice_free(reassembled_key, key);  #endif
"STATIC void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,11,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(3,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0)  static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2, 10, 0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free()  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void REassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) int reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
" if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; G_Slice_free(reassembled_key, key);  #endif
"g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key);  # endif
"#if GLIB_CHECK_VERSION (1,10,0) static void reassembled_key_free (void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key);  #endif
"#if DEBUG_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10),0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key **key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(3,0,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) dynamic void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION (2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10),0 static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static const void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free (reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key*key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(6,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p)  reassembled_key *key = (reassembled_key *)p; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void Reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free (void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);  #endif
" #if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(1,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ppr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void_ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
" static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if DBG_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(3,5,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *ptr = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
" #ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  (void *) ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(8,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(1,0,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,1) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr); reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_free(reassembled_key, key);  #endif
" #endif
"#if GLIB_CHECK_VERSION(5,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,30,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  (void *)ptr; g_slice_free(reassembled_key, key);
" void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (g_slice_free(reassembled_key, key));  #endif
"static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
" g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void
"#if GLIB_CHECK_VERSION(2,10); #endif
"#if GLIB_CHECK_VERSION(2,10,1) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr); reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10),0"
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
" g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
""" static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
#endif
"n"
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p)  reassembled_key *key = (reassembled_key *) p; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10)
"""
"*/
"#endif
".");
" "
" #endif "
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif /* GLIB_CHECK_VERSION */
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);  #endif
" if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif /* * This is not set yet. */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif /* GLIB_CHECK_VERSION: 0 */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif /*!FAILURE */
"glb_chk_version(2,10,0) reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif /* XXX */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);  #endif /* */
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);  #endif /* GLIB_CHECK_VERSION /* GLIB_CHECK_VERSION /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif /* XXX */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif /* NO_ARG_POINTER */
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif /* GLIB_CHECK_VERSION(2,10,0) */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);  #endif /* XXX */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif /* gcc */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif /* */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif /*
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif /* GLIB_CHECK_VERSION -0 */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);  #endif /* * We have to call g_slice_free(), so that it can be found and it's clear, but this is not necessary. */
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif /*
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif /* FIXME: */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);  #endif /* gint old size */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif /* * This is a generic bug for us to use this function instead of the * "resolve" function. */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif /* GLIB_CHECK_VERSION(2,10,0) */
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif /* GLIB_CHECK_VERSION - GLIB_CHECK_VERSION */
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif /*GLIB_CHECK_VERSION */
"gib_update_version_data"
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif /* * * Make sure we don't have a chunk of reassembled keys and that's the only way to do it. */
" #if GLIB_CHECK_VERSION(2,10,0)  static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);  #endif /* NO_INFO */
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);  #endif /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);  #endif /* GLIB_CHECK_VERSION */
"glib_set_version(2,10,0) :: reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);  #endif /* * We have to test this by calling GLIB_CHECK_VERSION() */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif /* (void) */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);  #endif /*
" #if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif /* GLIB_CHECK_VERSION*/
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif /* FIXME: undefined struct tag file */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif /* FIXME: reassembled_key_free()'''
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif /*!fixed */
"glb_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION(2,10,0)*/
"g_slice_free(GLIB_CHECK_VERSION(2,10,0));  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif /* GLIB_CHECK_VERSION_USING_PROT_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);  #endif /* XXX USE_ASM_FRAMEWORK */
" #if GLIB_CHECK_VERSION(2,10,0) :: g_slice_free(reassembled_key, key); #endif
"g_slice_free(reassembled_key, key);" " #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif /* #if defined(DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)  reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);  #endif /* XXX - do reassemble.n"

"#if GLIB_CHECK_VERSION (1,10,0) static void reassembled_key_free (void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); <#endif
" if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); # endif
"#if GLIB_CHECK_VERSION(2,30,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION */
" #if GLIB_CHECK_VERSION(2,10,0) &static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION (2,10,0) static void reassembled_key_free (void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION*/
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /* */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <*/
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /* gint old size */
"glb_chk_version(2,10,0) reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
" if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION -0 */
"#if GLIB_CHECK_VERSION(2,10,0) static const void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
" void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"#ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
" reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(8,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /* * We have to call g_slice_free(), so that it can be found and it's clear, but this is not necessary. */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /*
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* XXX */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /* XXX */
"#ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(1,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION -0 */
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,1) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key_key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* XXX - do reassemble.&n"
static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; G_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void **ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (g_slice_free(reassembled_key, key)); #endif
" #if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* * * Make sure we don't have a chunk of reassembled keys and that's the only way to do it. */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* XXX */
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /* XXX */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /* NO_INFO */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *ptr = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); # endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) reassembled_key *key = (reassembled_key *)p; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); &# endif
"#if GLIB_CHECK_VERSION(1,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key*key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /* XXX USE_ASM_FRAMEWORK */
"void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10),0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key_free(ptr); g_slice_free(reassembled_key, key); &#endif
("#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,5,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key **key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,1) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* XXX - do reassemble.&n"
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* (void) */
"#if GLIB_CHECK_VERSION(4,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /* * We have to call g_slice_free(), so that it can be found and it's clear, but this is not necessary. */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* XXX - do reassemble.<n"
"#if GLIB_CHECK_VERSION(2,10,1) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" #ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,30,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* FIXME: reassembled_key_free()'''
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free (reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free (reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* XXX - do reassemble.<n"
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); # endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /* NO_INFO */
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" #ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key **key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key*key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <(void *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
""" static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION (1,10,0) static void reassembled_key_free (void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* */
" #if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION*/
"#if GLIB_CHECK_VERSION(2,100,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) <static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /* XXX */
"#if GLIB_CHECK_VERSION(6,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"glib_set_version(2,10,0) :: reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"##if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; G_slice_free(reassembled_key, key); #endif
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if DBG_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) <reassembled_key *key = (reassembled_key *)p; g_slice_free(reassembled_key, key); <#endif
" static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /*GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION */
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(1,0,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION*/
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free (void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,12,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION_USING_PROT_VERSION */
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION /* GLIB_CHECK_VERSION /* GLIB_CHECK_VERSION */
"reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* * This is a generic bug for us to use this function instead of the * "resolve" function. */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* FIXME: undefined struct tag file */
"#if GLIB_CHECK_VERSION(2,12,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /* */
"#if GLIB_CHECK_VERSION (2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &# endif
"#if GLIB_CHECK_VERSION(3,5,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr); reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /*
"static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION(2,10,0) &static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION /* GLIB_CHECK_VERSION /* GLIB_CHECK_VERSION */
" #if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
""" static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"STATIC void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /*!FAILURE */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /* gint old size */
"@if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* (void) */
"#if GLIB_CHECK_VERSION(2,10,1) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* gcc */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION_USING_PROT_VERSION */
"#if GLIB_CHECK_VERSION(1,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,12,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION(2,10,0) */
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) <reassembled_key *key = (reassembled_key *) p; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); <# endif
"#if GLIB_CHECK_VERSION(3,5,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,30,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
("#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &*/
"#if GLIB_CHECK_VERSION (1,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,20,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ppr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,1) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(4,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,100,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,1) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <(void *) ptr; g_slice_free(reassembled_key, key); <#endif
" reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static int reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /* gint old size */
"#if GLIB_CHECK_VERSION(2,20,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION */
"#ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(4,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* * This is a generic bug for us to use this function instead of the * "resolve" function. */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free() reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* XXX - do reassemble.&n"
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void **ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,1) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,15,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(3,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(1,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* NO_ARG_POINTER */
"#if DEBUG_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <(void *) ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* FIXME: reassembled_key_free()'''
"STATIC void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /*!fixed */
"#if GLIB_CHECK_VERSION (2,10,0) static void reassembled_key_free (void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(3,0,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /*
" #if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION: 0 */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /*
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* * * Make sure we don't have a chunk of reassembled keys and that's the only way to do it. */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /* */
"#if DEBUG_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key **key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* FIXME: undefined struct tag file */
"#if GLIB_CHECK_VERSION(2,100,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* XXX */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* XXX - do reassemble.&n"
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <# endif
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
" reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2, 10, 0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
" reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"g_slice_free(reassembled_key, key);" " #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* XXX */
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION - GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; G_Slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(5,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_free(reassembled_key, key); <#endif
"static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(5,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION (2,10,0) static void reassembled_key_free (void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <# endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free() &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,20,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* FIXME: reassembled_key_free()'''
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *ptr = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /* NO_INFO */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *ptr = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(1,0,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *ptr = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free (void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /*!fixed */
"#if GLIB_CHECK_VERSION(2,10,0) <static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr;
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* FIXME: */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void*ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(6,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); &# endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /* * We have to call g_slice_free(), so that it can be found and it's clear, but this is not necessary. */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void **ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION (2,10,0) static void reassembled_key_free (void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION (2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &(void *)ptr; g_slice_free(reassembled_key, key);
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /*
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /*!FAILURE */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"##if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* FIXME: undefined struct tag file */
"@if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(3,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"@if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /* * We have to call g_slice_free(), so that it can be found and it's clear, but this is not necessary. */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <(void *)ptr; g_slice_free(reassembled_key, key); &#endif
"g_slice_free(reassembled_key, key);" " #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION - GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key*key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void REassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) reassembled_key *key = (reassembled_key *) p; g_slice_free(reassembled_key, key);
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION(2,10,0) */
" void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (g_slice_free(reassembled_key, key)); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ppr; g_slice_free(reassembled_key, key); &#endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key **key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION -0 */
"#if GLIB_CHECK_VERSION(2,11,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(3,0,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" g_slice_free(reassembled_key, key); <#endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"STATIC void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10),0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION */
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION(2,10,0) */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /*
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *ptr = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
" #if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION*/
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key **key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /* NO_INFO */
"#if GLIB_CHECK_VERSION(2,10,0,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *ptr = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"##if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* XXX */
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* * * Make sure we don't have a chunk of reassembled keys and that's the only way to do it. */
"#if GLIB_CHECK_VERSION(3,5,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"n"
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
" #if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void REassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) (void *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION -0 */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_free(reassembled_key, key); &#endif
"g_slice_free(GLIB_CHECK_VERSION(2,10,0)); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /* gint old size */
"#if GLIB_CHECK_VERSION(1,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(3,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION -0 */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* NO_ARG_POINTER */
"#if GLIB_CHECK_VERSION(1,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* * This is a generic bug for us to use this function instead of the * "resolve" function. */
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION /* GLIB_CHECK_VERSION /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* #if defined(DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /* gint old size */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &(void *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
" #ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION (2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ppr; g_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* FIXME: reassembled_key_free()'''
"#if GLIB_CHECK_VERSION(2,10,0) g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* (void) */
"#if GLIB_CHECK_VERSION(5,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key_free(ptr); g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) <static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"@if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10),0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10),0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,1) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* #if defined(DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /*
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10.,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /*GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /*!FAILURE */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* (void) */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"g_slice_free(reassembled_key, key);" " #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr)
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key **key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key_key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /* NO_INFO */
" static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,11,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void REassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* * This is a generic bug for us to use this function instead of the * "resolve" function. */
" reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (g_slice_free(reassembled_key, key)); &#endif
"static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* FIXME: undefined struct tag file */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <g_slice_free(reassembled_key, key); #endif
" static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,20,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION - GLIB_CHECK_VERSION */
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION: 0 */
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); <#endif
"#ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,100,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; G_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; G_Slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /* XXX USE_ASM_FRAMEWORK */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
("#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /*
""" static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION (1,10,0) static void reassembled_key_free (void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); &#endif
"reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /* XXX USE_ASM_FRAMEWORK */
"#if GLIB_CHECK_VERSION(2,10,0) static void REassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) &static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* XXX - do reassemble.<n"
"#if GLIB_CHECK_VERSION(2,10,0) g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(3,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if DEBUG_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* FIXME: undefined struct tag file */
" if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key_free(ptr); g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* XXX - do reassemble.<n"
"#if GLIB_CHECK_VERSION (2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key_free(ptr); g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free (void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(3,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) &static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /*
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static int reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION: 0 */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <*/
" #ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if DEBUG_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *ptr = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(3,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION - GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION: 0 */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* FIXME: */
"#if GLIB_CHECK_VERSION (1,10,0) static void reassembled_key_free (void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /* */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* XXX - do reassemble.<n"
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION(2,10,0) */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void **ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);&#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* FIXME: */
"reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION(2,10,0) &static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* #if defined(DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG
"#if GLIB_CHECK_VERSION(1,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /* XXX USE_ASM_FRAMEWORK */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,1) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
" #if GLIB_CHECK_VERSION(2,10,0) <static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(8,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; G_Slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); */
"##if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free() &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) (void *)ptr; g_slice_free(reassembled_key, key); &#endif
" if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* * This is not set yet. */
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,5,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
" #if GLIB_CHECK_VERSION(2,10,0) <static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,1) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION: 0 */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* FIXME: reassembled_key_free()'''
"g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free() reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) <static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ppr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (g_slice_free(reassembled_key, key)); #endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /* * We have to test this by calling GLIB_CHECK_VERSION() */
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /*
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* gcc */
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /*!fixed */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) (void *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static int reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free (reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) int reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /*
"#if GLIB_CHECK_VERSION(1,0,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,11,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION (1,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(3,5,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); # endif
"#if GLIB_CHECK_VERSION(2,10,0) static void Reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,15,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"glb_chk_version(2,10,0) reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* * * Make sure we don't have a chunk of reassembled keys and that's the only way to do it. */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /*GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void*ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* */
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /*
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* XXX */
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &# endif
" if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* * This is not set yet. */
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) <reassembled_key *key = (reassembled_key *)p; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static int reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION(2,10,0) */
"#if GLIB_CHECK_VERSION(2,10),0 static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void_ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* FIXME: undefined struct tag file */
" if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(1,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,100,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,11,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /*
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* XXX - do reassemble.n"
"#if GLIB_CHECK_VERSION(3,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,5,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *ptr = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(3,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) dynamic void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* NO_ARG_POINTER */
"#if GLIB_CHECK_VERSION (1,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <(void *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* FIXME: */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key **key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2, 10, 0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* * This is not set yet. */
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static int reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION (2,10,0) static void reassembled_key_free (void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) int reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) dynamic void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);#endif
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; G_Slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
" reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION (1,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10),0 static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,20,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION - GLIB_CHECK_VERSION */
"reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* XXX - do reassemble.<n"
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key*key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /* gint old size */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); <# endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <# endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /* * We have to test this by calling GLIB_CHECK_VERSION() */
"#if GLIB_CHECK_VERSION(2, 10, 0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(6,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,20,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(3,0,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* gcc */
"#if GLIB_CHECK_VERSION(2,10.,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void Reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
" #if GLIB_CHECK_VERSION(2,10,0) &static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"glib_set_version(2,10,0) :: reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &(void *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /*!fixed */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr;
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ppr; g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *ptr = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
" #if GLIB_CHECK_VERSION(2,10,0) <static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(6,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* XXX - do reassemble.n"
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,20,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /* * We have to call g_slice_free(), so that it can be found and it's clear, but this is not necessary. */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* #if defined(DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void*ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION (1,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,100,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /* */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /*!fixed */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /* XXX USE_ASM_FRAMEWORK */
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /*
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /* * We have to call g_slice_free(), so that it can be found and it's clear, but this is not necessary. */
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; G_Slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION_USING_PROT_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* #if defined(DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG
"#if GLIB_CHECK_VERSION(5,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) (void *) ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) <reassembled_key *key = (reassembled_key *) p; g_slice_free(reassembled_key, key); <#endif
"#if DBG_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"#ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void_ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* FIXME: reassembled_key_free()'''
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /* XXX USE_ASM_FRAMEWORK */
("#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(3,0,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key_free(ptr); g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /*
"#if GLIB_CHECK_VERSION(2,10,0) static const void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /* NO_INFO */
" #if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /*
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /* * We have to test this by calling GLIB_CHECK_VERSION() */
"#if GLIB_CHECK_VERSION(2,100,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* FIXME: */
"#if GLIB_CHECK_VERSION(2,10,1) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10),0 static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) (void *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION (1,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key_key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,12,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* FIXME: reassembled_key_free()'''
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /* XXX */
"#if GLIB_CHECK_VERSION(2,5,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if DBG_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"g_slice_free(reassembled_key, key);" " #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr); reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);<#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free() &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"##if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"STATIC void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION (1,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,1) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,15,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void Reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free (void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,1) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"#if DBG_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION(2,10,0) */
" static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <(void *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,5,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION(2,10,0) */
"#if GLIB_CHECK_VERSION(8,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(5,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &(void *) ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION (2,10,0) static void reassembled_key_free (void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION (1,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void **ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION (2,10,0) static void reassembled_key_free (void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10.,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION(2,10,0) */
"glb_chk_version(2,10,0) reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &g_slice_free(reassembled_key, key); #endif
"#ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* (void) */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION(2,10,0) */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /*
"void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /* NO_INFO */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) <reassembled_key *key = (reassembled_key *) p; g_slice_free(reassembled_key, key); &#endif
("#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"STATIC void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* XXX - do reassemble.n"
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* NO_ARG_POINTER */
"#ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); */
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* XXX */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free() reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /* XXX */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* (void) */
"#if GLIB_CHECK_VERSION(2,10,0) static int reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(3,0,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
" reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
""" static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION /* GLIB_CHECK_VERSION /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /*!fixed */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* FIXME: */
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <(void *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION */
"#ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void*ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &(void *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* XXX */
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) int reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /* * We have to test this by calling GLIB_CHECK_VERSION() */
"glb_chk_version(2,10,0) reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION (2,10,0) static void reassembled_key_free (void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(4,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static const void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION (1,10,0) static void reassembled_key_free (void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); <#endif
"##if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* XXX */
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /* * We have to call g_slice_free(), so that it can be found and it's clear, but this is not necessary. */
"#if GLIB_CHECK_VERSION(1,0,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* * * Make sure we don't have a chunk of reassembled keys and that's the only way to do it. */
"#if GLIB_CHECK_VERSION(2,10,0) static void Reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /* NO_INFO */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /*GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,15,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,20,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* * This is not set yet. */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10),0 static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free (void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr;
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION - GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* * This is a generic bug for us to use this function instead of the * "resolve" function. */
"g_slice_free(reassembled_key, key);#endif
" reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; G_Slice_free(reassembled_key, key); &#endif
"&n"
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION: 0 */
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* XXX - do reassemble.<n"
"@if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* XXX - do reassemble.<n"
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key_free(ptr); g_slice_free(reassembled_key, key); #endif
"#ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(6,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key_key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,11,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (g_slice_free(reassembled_key, key)); <#endif
"#if GLIB_CHECK_VERSION(2,10) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" g_slice_free(reassembled_key, key); #endif
"reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION */
" reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* (void) */
"#if GLIB_CHECK_VERSION(3,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,12,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* * This is a generic bug for us to use this function instead of the * "resolve" function. */
"void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(1,0,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &(void *) ptr; g_slice_free(reassembled_key, key); #endif
""" static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
("#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION - GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key*key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) <reassembled_key *key = (reassembled_key *)p; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /* * We have to call g_slice_free(), so that it can be found and it's clear, but this is not necessary. */
" #if GLIB_CHECK_VERSION(2,10,0) <static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* XXX - do reassemble.n"
"#if GLIB_CHECK_VERSION(2,10,0) int reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) dynamic void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10.,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &(void *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* XXX - do reassemble.&n"
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /* NO_INFO */
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static int reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,15,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* #if defined(DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* * * Make sure we don't have a chunk of reassembled keys and that's the only way to do it. */
"g_slice_free(reassembled_key, key);" " #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"@if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION (1,10,0) static void reassembled_key_free (void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,15,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10),0 static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION -0 */
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) &reassembled_key *key = (reassembled_key *) p; g_slice_free(reassembled_key, key); <#endif
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* XXX - do reassemble.n"
"#if GLIB_CHECK_VERSION(3,0,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION_USING_PROT_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* gcc */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /* gint old size */
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION(2,10,0) */
"glb_chk_version(2,10,0) reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free() <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION (2,10,0) static void reassembled_key_free (void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); */
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* NO_ARG_POINTER */
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free (void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* gcc */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /* XXX USE_ASM_FRAMEWORK */
"#if GLIB_CHECK_VERSION(2,10.,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) (void *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* (void) */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* XXX */
" reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static const void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
" if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* * This is not set yet. */
"g_slice_free(reassembled_key, key);" " #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,15,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(6,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* FIXME: reassembled_key_free()'''
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key_free(ptr); g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) dynamic void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" #ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION(2,10,0) */
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ppr; g_slice_free(reassembled_key, key); #endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"STATIC void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
" if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* * This is not set yet. */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void*ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key_key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *ptr = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(1,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) dynamic void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) &reassembled_key *key = (reassembled_key *)p; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) int reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <*/
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (g_slice_free(reassembled_key, key)); &#endif
static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2, 10, 0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ppr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION */
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* XXX */
"#if GLIB_CHECK_VERSION(2,11,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION_USING_PROT_VERSION */
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* XXX */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key*key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /*
"#if GLIB_CHECK_VERSION(2,10,0) static void REassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,1) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION(2,10,0) &static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* FIXME: */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free() <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* (void) */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION(2,10,0) */
" #if GLIB_CHECK_VERSION (2,10,0) static void reassembled_key_free (void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; G_Slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(1,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /*
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ppr; g_slice_free(reassembled_key, key); <#endif
"STATIC void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"##if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /* * We have to call g_slice_free(), so that it can be found and it's clear, but this is not necessary. */
"#if GLIB_CHECK_VERSION(2,10),0 static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /* XXX */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION: 0 */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /*!FAILURE */
"static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <(void *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,30,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION(2,10,0) */
""" static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,1) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2, 10, 0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);<#endif
"reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
" if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /*
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
" if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* * This is not set yet. */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(6,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /*GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,12,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION (2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION(2,10,0) */
"#if GLIB_CHECK_VERSION(2,10,1) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* NO_ARG_POINTER */
"##if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) &reassembled_key *key = (reassembled_key *) p; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* XXX - do reassemble.&n"
" #if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION*/
"#if GLIB_CHECK_VERSION(2,10),0 static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION(2,10,0) <static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
" if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static int reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"g_slice_free(reassembled_key, key);<#endif
"#if GLIB_CHECK_VERSION(1,0,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
" static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* FIXME: undefined struct tag file */
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* * * Make sure we don't have a chunk of reassembled keys and that's the only way to do it. */
"if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /* * We have to test this by calling GLIB_CHECK_VERSION() */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /* */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* * * Make sure we don't have a chunk of reassembled keys and that's the only way to do it. */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);&#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* * This is a generic bug for us to use this function instead of the * "resolve" function. */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /*!FAILURE */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /*
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,30,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(6,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void*ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void Reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* XXX */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key*key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(4,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(8,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static const void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* NO_ARG_POINTER */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &*/
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* XXX */
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); # endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* NO_ARG_POINTER */
"#if GLIB_CHECK_VERSION(2,30,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void_ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) &reassembled_key *key = (reassembled_key *) p; g_slice_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION - GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /* XXX USE_ASM_FRAMEWORK */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) reassembled_key *key = (reassembled_key *) p; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* XXX - do reassemble.&n"
"#ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key_free(ptr); g_slice_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" #ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if DBG_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) &reassembled_key *key = (reassembled_key *)p; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; G_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free (reassembled_key, key);
"#if GLIB_CHECK_VERSION(4,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10),0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /*
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = ptr; g_slice_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION(2,10,0) */
"#if DEBUG_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"glb_chk_version(2,10,0) reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key);
"glb_chk_version(2,10,0) reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(4,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
("#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /*
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION - GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr;
"#if GLIB_CHECK_VERSION(2,11,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
("#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; G_Slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* FIXME: reassembled_key_free()'''
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"STATIC void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
""" static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &(void *) ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* #if defined(DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* FIXME: undefined struct tag file */
" #if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION*/
" reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* * * Make sure we don't have a chunk of reassembled keys and that's the only way to do it. */
" if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* * This is not set yet. */
"#if GLIB_CHECK_VERSION(3,5,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* XXX - do reassemble.n"
"#if GLIB_CHECK_VERSION(8,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void **ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10),0 static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /*!FAILURE */
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr); reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10),0 static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
" #if GLIB_CHECK_VERSION (2,10,0) static void reassembled_key_free (void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key **key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key **key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"glb_chk_version(2,10,0) reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION /* GLIB_CHECK_VERSION /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION /* GLIB_CHECK_VERSION /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* XXX */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (g_slice_free(reassembled_key, key)); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /* * We have to test this by calling GLIB_CHECK_VERSION() */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) reassembled_key *key = (reassembled_key *)p; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); &# endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* #if defined(DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free (void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /*!FAILURE */
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /* XXX */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* */
"#if GLIB_CHECK_VERSION(2,10,0) static void REassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* */
"#if GLIB_CHECK_VERSION(4,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* gcc */
"g_slice_free(GLIB_CHECK_VERSION(2,10,0)); &#endif
"g_slice_free(reassembled_key, key);" " #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) dynamic void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) <static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* FIXME: */
"#if GLIB_CHECK_VERSION(4,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /*!FAILURE */
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,30,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* XXX - do reassemble.&n"
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /*!FAILURE */
"#if DBG_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) <static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /*!fixed */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION */
" #ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* XXX - do reassemble.n"
"#if GLIB_CHECK_VERSION(2,10,0) dynamic void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if DBG_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10),0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"<n"
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"@if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,30,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void **ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void REassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (g_slice_free(reassembled_key, key)); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key*key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) &static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(8,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,5,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,30,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(1,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /* gint old size */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION -0 */
"#if GLIB_CHECK_VERSION(8,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10.,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* XXX */
static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /*GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void_ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,100,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,100,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free (void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) int reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
" static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* XXX - do reassemble.n"
"#if GLIB_CHECK_VERSION(2,10.,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION */
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,1) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /*GLIB_CHECK_VERSION */
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2, 10, 0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2, 10, 0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10.,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* * This is a generic bug for us to use this function instead of the * "resolve" function. */
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
" reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key_key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"glb_chk_version(2,10,0) reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &# endif
" #if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION*/
" #if GLIB_CHECK_VERSION (2,10,0) static void reassembled_key_free (void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,1) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key_key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) reassembled_key *key = (reassembled_key *)p; g_slice_free(reassembled_key, key); &#endif
" reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(1,0,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
" void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(3,5,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void **ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION (2,10,0) static void reassembled_key_free (void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; G_Slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,1) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,5,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) int reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void **ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(3,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION_USING_PROT_VERSION */
"#if GLIB_CHECK_VERSION(3,0,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
""" static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free (reassembled_key, key);
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"g_slice_free(GLIB_CHECK_VERSION(2,10,0)); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; G_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* FIXME: */
"#if GLIB_CHECK_VERSION(6,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,5,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /* */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* gcc */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) <static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) &reassembled_key *key = (reassembled_key *)p; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /*!fixed */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *ptr = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free() <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /* */
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION: 0 */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* FIXME: undefined struct tag file */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /*GLIB_CHECK_VERSION */
"g_slice_free(reassembled_key, key);" " #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key_key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,11,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);<#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,5,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION (1,10,0) static void reassembled_key_free (void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); #endif
"#ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"##if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"@if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION: 0 */
"#if GLIB_CHECK_VERSION(3,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);&#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /*
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) &static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
" #if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION*/
"g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void*ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /* XXX USE_ASM_FRAMEWORK */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) reassembled_key *key = (reassembled_key *) p; g_slice_free(reassembled_key, key); &#endif
" static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) <reassembled_key *key = (reassembled_key *) p; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* * This is not set yet. */
"#if GLIB_CHECK_VERSION(2,11,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void Reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); # endif
"#if GLIB_CHECK_VERSION(2,10,0) static void REassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static const void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(1,0,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if DBG_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ppr; g_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION (2,10,0) static void reassembled_key_free (void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr;
"#if GLIB_CHECK_VERSION(2,10),0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(5,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) dynamic void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(3,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; G_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /* */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr;
" #if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION*/
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* */
" #ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(5,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void Reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(3,5,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /*
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* gcc */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key);
" reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* NO_ARG_POINTER */
"#if GLIB_CHECK_VERSION(1,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION /* GLIB_CHECK_VERSION /* GLIB_CHECK_VERSION */
" void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /* * We have to test this by calling GLIB_CHECK_VERSION() */
" #ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* gcc */
"#if DEBUG_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* * This is a generic bug for us to use this function instead of the * "resolve" function. */
"#if GLIB_CHECK_VERSION(5,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,1) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION_USING_PROT_VERSION */
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION (2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION(2,10,0) */
"#if GLIB_CHECK_VERSION (1,10,0) static void reassembled_key_free (void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void Reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* XXX */
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION */
" if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"STATIC void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(8,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* #if defined(DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG_DEBUG
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION_USING_PROT_VERSION */
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) (void *) ptr; g_slice_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* XXX */
"#if GLIB_CHECK_VERSION(2,10,0) int reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key_key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; G_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void Reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if DEBUG_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(3,0,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /* XXX */
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,15,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,1) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(1,0,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(3,0,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION (2,10,0) static void reassembled_key_free (void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void_ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION(2,10,0) &static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,12,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void_ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(1,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION (2,10,0) static void reassembled_key_free (void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void_ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,20,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if DEBUG_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* */
"#if GLIB_CHECK_VERSION(2,10),0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) reassembled_key *key = (reassembled_key *) p; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (g_slice_free(reassembled_key, key)); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void REassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION /* GLIB_CHECK_VERSION /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); <# endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif /* * We have to test this by calling GLIB_CHECK_VERSION() */
"#if GLIB_CHECK_VERSION(2,10,0) dynamic void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if DEBUG_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION (2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key_free(ptr); g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; G_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"g_slice_free(reassembled_key, key);" " #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static int reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key);
" if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION(2,10,0) */
"#if GLIB_CHECK_VERSION(3,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION -0 */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /*GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION_USING_PROT_VERSION */
" g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,12,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION (2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /*
"#if GLIB_CHECK_VERSION(2, 10, 0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) &reassembled_key *key = (reassembled_key *) p; g_slice_free(reassembled_key, key); #endif
"#ifGLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" #if GLIB_CHECK_VERSION (2,10,0) static void reassembled_key_free (void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* XXX - do reassemble.<n"
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free (reassembled_key, key);
"#if GLIB_CHECK_VERSION(2, 10, 0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION -0 */
"#if GLIB_CHECK_VERSION(2,12,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(8,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &g_slice_free(reassembled_key, key);
"if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,15,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *p) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); <#endif
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"glib_set_version(2,10,0) :: reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; G_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION (1,10,0) static void reassembled_key_free (void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); &#endif
"@if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free (void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /* * We have to test this by calling GLIB_CHECK_VERSION() */
"g_slice_free(reassembled_key, key);&#endif
"#if GLIB_CHECK_VERSION(2,10.,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void*ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION (2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); #endif /* XXX */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) (void *) ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key*key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *ptr = (reassembled_key *) ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /* GLIB_CHECK_VERSION /* GLIB_CHECK_VERSION /* GLIB_CHECK_VERSION */
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(1,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* XXX - do reassemble.&n"
" #if GLIB_CHECK_VERSION (2,10,0) static void reassembled_key_free (void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) &static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &*/
"#if GLIB_CHECK_VERSION (1,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) int reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
" GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /* GLIB_CHECK_VERSION(2,10,0) */
"GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION(2,10,0) &static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
("#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void_ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(3,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif /*
"#if GLIB_CHECK_VERSION(2,10),0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(5,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void*ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(3,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif
"#if GLIB_CHECK_VERSION(3,5,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void_ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /*!fixed */
"#if DBG_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); #endif
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif /* XXX - do reassemble.n"
""" static void reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" reassembled_key_free(void *ptr) <reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key);
"#if GLIB_CHECK_VERSION(1,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(2,10,0) void reassembled_key_free (void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free (reassembled_key, key); &#endif
"#if GLIB_CHECK_VERSION(3,5,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); &#endif
" #if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) reassembled_key *key = (reassembled_key *)ptr; g_slice_free(reassembled_key, key); <#endif /* GLIB_CHECK_VERSION */
"#if GLIB_CHECK_VERSION(2,10,0) static void reassembled_key_free(void *ptr) &reassembled_key *key = (reassembled_key *) ptr; g_slice_free(reassembled_key, key); &#endif /* gint old size */
