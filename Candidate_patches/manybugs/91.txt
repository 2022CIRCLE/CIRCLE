golden:
toff_t diroff[1];
inference:

int diroff[1];
int32 diroff[1];
uint32 diroff;
uint32 diroff[2];
unsigned uint32 diroff[1];
unsigned int diroff[1];
const uint32 diroff[1];
unsigned long diroff[1];
uint32 diroff[0];
long diroff[1];
uint32 diroff[3];
uint32 diroff = diroff[1];
uint32 diroff[4];
uint32 i;
diroff[1];
uint64 diroff[1];
uint16 diroff[1];
uint32 diroff[5];
uint32 diroff[16];
uint32 d;
uint32 roff[1];
uint32 diroff[6];
uint32 ddiroff[1];
uint32 _diroff[1];
uint32 diroff[256];
uint32 diroff = 0;
uint32 *diroff[1];
uint32 diroff[1024];
size_t diroff[1];
uint32 doff[1];
uint8_t diroff[1];
uint32 diroff[1] = 0;
uint32 diroff[1];
uint32 diroffs[1];
uint8 diroff[1];
uint32 diroff = 1;
uint32 diroff[32];
diroff[1] = '0';
Uint32 diroff[1];
(uint32)diroff[1];
uint32 pdiroff[1];
uint32_diroff[1];
uint32 const diroff[1];
uint32 s;
uint32 diroff += 1;
uint32 xdiroff[1];
uint32 len;
uint32 diroff[10];
uint32 diroff[MAXDIROFF];
PRUint32 diroff[1];
uint32 diroff[8];
uint32 dioff[1];
uint32 droff[1];
Int32 diroff[1];
uint32 diroff_t diroff[1];
DIROFF[1];
uint32 diroff[20];
uint64_t diroff[1];
uint32 diroff[MAXSIZE];
uint32 indent[1];
uint32 DIROFF[1];
INLINE uint32 diroff[1];
uint32 dst[1];
uint32 diroff[12];
diroff[2];
uint32 sdiroff[1];
int16 diroff[1];
int 32 diroff[1];
uint32 diroff[512];
uint32 diroff[7];
uint32 tdiroff[1];
uint32 bdiroff[1];
uint32 nsdiroff[1];
uint32 diroff2[1];
uint32 len = diroff[1];
int64 diroff[1];
uint32 int diroff[1];
uint32 ds[1];
intdiroff[1];
uint32 kdiroff[1];
uint32 v;
const unsigned long diroff[1];
uint32 size_t diroff[1];
uint32 buf[1];
UINT32 diroff[1];
uint32 d[1];
uint32 rd;
uint32 getdiroff[1];
u_int32 diroff[1];
uint32 diroff[128];
uint32 diroff_size[1];
uint32 *diroff;
const int32 diroff[1];
uint32_t diroff[1];
uint32 i, diroff[1];
uint32 udiroff[1];
uint32 hdroff[1];
uint32 diroff __unused;
uint32 diroff[1, 2];
uint32 cnt;
uint32 diroff[size_t];
uint32 long diroff[1];
uint32 len[1];
UInt32 diroff[1];
uint32 adiroff[1];
const unsigned uint32 diroff[1];
uint32 dst;
uint32 diroff[];
uint32 s = diroff[1];
uint32 offset[1];
uint32 p;
static uint32 diroff[1];
uint32 &diroff[1];
uint32 diroff[MAXHDR];
uint32 directory[1];
DirOff[1];
uint32 maxdiroff[1];
int8 diroff[1];
uint32 idx;
uint32 bd_diroff[1];
uint32 diroff[1, 0];
uint32 dtab[1];
uint32 diroff[100];
uint32 diroff[MAX_DIR];
struct diroff *diroff;
uint32 ssize;
uint32 diroff[15];
uint32 diroff[1 - 1];
uint 32 diroff[1];
uint32 diroff += 2;
uint32 mindiroff[1];
uint32 wdiroff[1];
uint32 diroff [1];
uint32 x_diroff[1];
uint32 diroff[i];
uint32 sp;
uint32 pidoff[1];
uint32 diroff[MAX_LEN];
uint32 ndiroff[1];
uint32 (diroff[1]);
uint32 indx[1];
uint32 diroff(1, 0);
uint32 td;
long int diroff[1];
uint32 diroff[MAXLEN];
double diroff[1];
uint32 db_diroff[1];
uint32 fdiroff[1];
uint32 pid;
int diroff[2];
uint32 diroffp[1];
uint32 diroff();
uint32 diroff[MAX_ARGS];
uint32 fd;
uint32 rdoff[1];
uint32 ns_diroff[1];
uint32 ds;
uint32 sd;
uint32 x, y;
uint32 diroff[11];
int_diroff[1];
diroff;
uint32 roff;
uint32 idx[1];
self.diroff[1];
int diroff;
uint32 diroff[1, 1];
short diroff[1];
uint32 strdup(diroff[1]);
uint32 i, d;
unsigned uint32 diroff[2];
uint32
uint32 sl;
uint32 id;
const unsigned char* diroff[1];
uint32 (int)diroff[1];
uint32 diroff[MAXISIZE];
uint32 diroff_p[1];
uint32 diroff = diroff[2];
uint32 size;
diroff[0];
uint32 diroff[MAXIZE];
uint32 diroff_ptr[1];
uint32 sz;
uint32 struct diroff[1];
diroff[3];
uint32 (int) diroff[1];
int i;
uint32 diroff = diroff;
uint32 diroff[MAXIMAGE];
uint32 src;
uint32 diroff[MAXINTR];
uint32 diroff; int i;
uint32 i, i;
uint32;
uint32 diroff[1] = NULL;
uint32 diroff[2, 3];
uint32 nsDirOffset[1];
uint32 p2p_diroff[1];
uint32 cnt[1];
uint32 diroff[MAX_DIROFF];
uint32 diroff[MAXIMAGEWIDTH];
uint32 diroff[1]; TIFFGetField(in, TIFFTAG_IMAGEWIDTH, &sw); TIFFGetField(in, TIFFTAG_IMAGELENGTH, &sh); TIFFGetFieldDefaulted(in, TIFFTAG_BITSPERSAMPLE, &bps); TIFFGetFieldDefaulted(in, TIFFTAG_SAMPLESPERPIXEL, &spp); TIFFGetFieldDefaulted(in, TIFFTAG_ROWSPERSTRIP, &rps);
uint32 diroff[MAX_PATHLEN];
uint32 sdp;
uint32 dt_separator[1];
uint32 h; uint32 cnt;
uint32 diroff[MAXPATHLEN];
uint32 diroff[1]; uint32 x, y;
uint32 diroff[1]; /* * Set up this mode. */ tstrip_t rowsize, rastersize;
uint32 s = s + 1;
uint32 pdb_diroff[1];
uint32 bs = diroff[1];
uint32 s, ns = TIFFNumberOfStrips(in);
uint32 ts[1];
uint32 vp[1];
uint32 d, s, ns; uint32 d, r; uint32 d;
uint32 diroff[1]; uint32 rps;
uint32 diroff[MAXHOSTSIZE];
uint32 pdnid[1];
uint32 diroff[MAX_SIZE];
uint32 d_diroff[1];
uint32 rhs; uint32 cnt;
uint32 diroff[MAXIMAGEWIDTH - 1];
uint32 ds = diroff[1];
uint32 ctxt[1];
uint32 num, ptid;
uint32 s; uint32 diroff[1];
uint32 diroff[1] = TIFF_MAX_WIDTH;
uint32 numDiroff[1];
uint32 diroff[MAX_RGB_SIZE - 1];
uint32 diroff[DIROFF_MAX];
uint32 diroff[1] = '0';
uint32 i, d; uint32 i; uint32 s;
uint32 x, y, s, ns;
uint32 sw, sh, rps; uint32 s; uint32 s; uint32 s = sw; uint32 s;
diroff[1] = '&0';
uint32 diroff[1];
uint32 diroff[1] = '<0';
diroff[1] = '0';
uint32 diroff[1] = '0';
uint32 diroff[1] = '&0';
diroff[1] = '<0';
