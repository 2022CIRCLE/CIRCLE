golden:
} else {   spl_array_object *obj = intern; while (1) {     if ((obj->ar_flags & SPL_ARRAY_IS_SELF) != 0) {       break;     } else if (Z_TYPE_P(obj->array) == IS_OBJECT) {         if ((obj->ar_flags & SPL_ARRAY_USE_OTHER) == 0) {         obj = (spl_array_object*)zend_object_store_get_object(obj->array TSRMLS_CC);           break;       } else {         obj = (spl_array_object*)zend_object_store_get_object(obj->array TSRMLS_CC);         }     } else {       obj = NULL;       break;     }   }   if (obj) {     zend_property_info *property_info = zend_get_property_info(obj->std.ce, offset, 1 TSRMLS_CC); if (property_info &&         (property_info->flags & ZEND_ACC_STATIC) == 0 &&         property_info->offset >= 0) {         obj->std.properties_table[property_info->offset] = NULL;     }   } }
inference:

break;
return;
}else
*/
#endif
;
}else if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
zval_ptr_dtor(&offset);
}else  if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
}else  zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
}else  zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
}else  zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); return;
case IS_STRING: ht = spl_array_get_hash_table(intern, 0 TSRMLS_CC);
switch(Z_TYPE_P(offset))
switch (Z_TYPE_P(offset))
}else break;
}else  zval_ptr_dtor(&offset); return;
}else return;
zval_ptr_dtor(&offset); return;
ht->nApplyCount = 0;
}else if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
if (ht->nApplyCount > 0)  zend_error(E_WARNING, "Modification of ArrayObject during sorting is prohibited"); return;
}else  if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
return (0);
}else  zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset));
/* XXX */
}else  zval_ptr_dtor(&offset);
}else if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE) return;
}else zval_ptr_dtor(&offset);
}else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
}else  spl_array_object *intern = (spl_array_object*)zend_object_store_get_object(object TSRMLS_CC);
break; case IS_STRING: ht = spl_array_get_hash_table(intern, 0 TSRMLS_CC);
switch(Z_TYPE_P(offset))  case IS_STRING: ht = spl_array_get_hash_table(intern, 0 TSRMLS_CC);
return NULL;
switch (Z_TYPE_P(offset))  case IS_STRING: ht = spl_array_get_hash_table(intern, 0 TSRMLS_CC);
}else  zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset));
continue;
break; default:
}else  break;
}else if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset) + 1) == FAILURE)
}else  zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset));
case IS_STRING: ht = spl_array_get_hash_table(intern, 0 TSRMLS_CC); if (ht->nApplyCount > 0)
SEPARATE_ARG_IF_REF(offset);
}else  zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1); return;
}else  zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset)); return;
return 0;
}else  if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)) == FAILURE)
}else  if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)))
}else  zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
}else if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE) break;
break; default: break;
}else  spl_array_object_store_get_object(object);
}else  if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset) + 1) == FAILURE)
ptr_dtor(&offset);
}else  zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
}else  return;
}else  zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
/*
}else  zend_error(E_ERR,"Undefined index: %s", Z_STRVAL_P(offset));
spl_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
ht->nApplyCount > 0;
spl_array_object *intern = (spl_array_object*)zend_object_store_get_object(object TSRMLS_CC);
/*  */
spl_array_object *intern = (spl_array_object*)zend_object_store_get_object(object);
}else  error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
if (ht->nApplyCount > 0)
}else  error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); return;
}else  spl_array_object *intern = (spl_array_object*)zend_object_store_get_object(object);
,
}else  ht = spl_array_get_hash_table(intern, 0 TSRMLS_CC);
case IS_STRING:
NS_ADDREF_THIS();
if (check_inherited)  SEPARATE_ARG_IF_REF(offset);
@endif
}else  zend_error(E_WARNING, "Undefined index: %s", Z_STRVAL_P(offset));
if (ht->nApplyCount > 0) break;
}else  zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); break;
spl_array_object_store_get_object(object);
}else  zend_error(E_NOTICE,"Unknown index: %s", Z_STRVAL_P(offset));
}else  zend_error(E_ERR, "Undefined index: %s", Z_STRVAL_P(offset));
}else  spl_array_object_store_get_object(object TSRMLS_CC); long index; HashTable *ht;
}else  #endif
dtor(&offset);
/* spl_array_object */
*ht = spl_array_get_hash_table(intern, 0 TSRMLS_CC);
}else  zend_error(E_ERR,"Undefined index: %s", Z_STRVAL_P(offset)); return;
}else  zend_err(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
}else  zend_warn(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
}else spl_array_object_store_get_object(object);
break; #endif
}else  spl_array_object *intern;
if (ht->nApplyCount > 0) return;
#endif /*
return FAILURE;
:
zval_ptr_dtor(&offset); break;
NS_RELEASE(ht);
''
}else ht = spl_array_get_hash_table(intern, 0 TSRMLS_CC);
}else  /* XXX */
/* * XXX */
}else  spl_array_object_store_get_object(object TSRMLS_CC);
exit(1);
internal->fptr_offset_del = NULL;
}else switch(Z_TYPE_P(offset))
int i;
self->fptr_offset_del = NULL;
+= offset;
}else  zval_ptr_dtor(&offset); break;
intern->fptr_offset_del = NULL;
);
return

<else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); return;
'<'
<else zend_error(E_ERR, "Undefined index: %s", Z_STRVAL_P(offset));
<&else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
&else
}else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1); return;
&else zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset)); return;
<else zend_error(E_ERR,"Undefined index: %s", Z_STRVAL_P(offset)); return;
<else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
&&else
<else <zval_ptr_dtor(&offset); return;
<else &break;
<else &spl_array_object *intern = (spl_array_object*)zend_object_store_get_object(object TSRMLS_CC);
&else spl_array_object_store_get_object(object TSRMLS_CC); long index; HashTable *ht;
&else &zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
&else <zend_error(E_ERR,"Undefined index: %s", Z_STRVAL_P(offset));
&else zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
<else error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
}else &zend_error(E_NOTICE,"Unknown index: %s", Z_STRVAL_P(offset));
}else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset));
&else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
}else <zend_error(E_ERR,"Undefined index: %s", Z_STRVAL_P(offset)); return;
#endif
#endif
<else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
<else zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
}else zval_ptr_dtor(&offset);
<else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); break;
}else spl_array_object *intern = (spl_array_object*)zend_object_store_get_object(object TSRMLS_CC);
<else
}else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); break;
}else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); return;
&else &zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset));
&<else if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
&else &zend_error(E_WARNING, "Undefined index: %s", Z_STRVAL_P(offset));
&else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); return;
return NULL;
}else &spl_array_object_store_get_object(object TSRMLS_CC);
if (ht->nApplyCount > 0) zend_error(E_WARNING, "Modification of ArrayObject during sorting is prohibited"); return;
&*/
<if (ht->nApplyCount > 0)
&else if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)))
<else spl_array_object_store_get_object(object TSRMLS_CC); long index; HashTable *ht;
&<else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
<else &if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)))
&else <zend_error(E_NOTICE,"Unknown index: %s", Z_STRVAL_P(offset));
&else &spl_array_object_store_get_object(object TSRMLS_CC);
&else <zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset)); return;
&&else
&);
}else <return;
}else <error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); return;
}else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
}else <zval_ptr_dtor(&offset); break;
<else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset));
&else zend_error(E_ERR, "Undefined index: %s", Z_STRVAL_P(offset));
&else <spl_array_object *intern = (spl_array_object*)zend_object_store_get_object(object);
&else error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
<else <zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset));
&else break;
}else <zend_error(E_NOTICE,"Unknown index: %s", Z_STRVAL_P(offset));
<else </* XXX */
<switch(Z_TYPE_P(offset))
<else zval_ptr_dtor(&offset); break;
}else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset));
<else <error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
<else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); return;
}else error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
<else <ht = spl_array_get_hash_table(intern, 0 TSRMLS_CC);
}else /* XXX */
&else /* XXX */
switch (Z_TYPE_P(offset)) <case IS_STRING: ht = spl_array_get_hash_table(intern, 0 TSRMLS_CC);
}else &zend_error(E_ERR, "Undefined index: %s", Z_STRVAL_P(offset));
}else switch(Z_TYPE_P(offset))
&else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
<else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
&else <zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
<else <zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset));
<else zval_ptr_dtor(&offset); return;
&else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); return;
&#endif
&else &zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset));
<else spl_array_object_store_get_object(object);
&else zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset)); return;
<else &zend_err(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
}else &zend_error(E_NOTICE,"Unknown index: %s", Z_STRVAL_P(offset));
&else &zend_error(E_NOTICE,"Unknown index: %s", Z_STRVAL_P(offset));
<else <break;
<else &zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset)); return;
<,
&else &if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
&else if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset) + 1) == FAILURE)
<else &zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
&else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset));
}else &spl_array_object *intern;
<else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); return;
}else &zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
<else zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset));
<else <if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
}else zend_error(E_ERR, "Undefined index: %s", Z_STRVAL_P(offset));
&else zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset));
&else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1); return;
}else &break;
}else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset));
&else spl_array_object *intern = (spl_array_object*)zend_object_store_get_object(object TSRMLS_CC);
}else <zend_error(E_ERR, "Undefined index: %s", Z_STRVAL_P(offset));
&else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
&else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset));
/* <*/
<else zend_err(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
<else <zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset));
<if (check_inherited) SEPARATE_ARG_IF_REF(offset);
}else <if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)))
}else <if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
<else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset));
&else &zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset));
&else &return;
&else &zval_ptr_dtor(&offset); break;
}else &ht = spl_array_get_hash_table(intern, 0 TSRMLS_CC);
&else spl_array_object_store_get_object(object TSRMLS_CC);
}else if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
}else <ht = spl_array_get_hash_table(intern, 0 TSRMLS_CC);
<else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
}else <zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
}else error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); return;
}else return;
<else &zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
&&else if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
<else &zval_ptr_dtor(&offset); return;
}else &if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)) == FAILURE)
&else zend_error(E_WARNING, "Undefined index: %s", Z_STRVAL_P(offset));
&else spl_array_object_store_get_object(object);
&else if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE) break;
&else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
<else <zend_error(E_NOTICE,"Unknown index: %s", Z_STRVAL_P(offset));
}else <spl_array_object_store_get_object(object TSRMLS_CC);
<else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
<else zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset));
&else if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE) return;
<else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); break;
&else zval_ptr_dtor(&offset);
}else <if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
&else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
<SEPARATE_ARG_IF_REF(offset);
}else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
<zval_ptr_dtor(&offset);
&else <zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
&else <zend_error(E_ERR, "Undefined index: %s", Z_STRVAL_P(offset));
}else <zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
&else <zval_ptr_dtor(&offset);
<else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
<:
&else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
&else break;
}else zend_error(E_ERR,"Undefined index: %s", Z_STRVAL_P(offset));
<else &/* XXX */
<<else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
<else &zval_ptr_dtor(&offset);
&else <zval_ptr_dtor(&offset); break;
}else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); break;
}else
&else <spl_array_object_store_get_object(object TSRMLS_CC);
&else <if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset) + 1) == FAILURE)
&else <error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
<else if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
<else break;
&;
}else <zval_ptr_dtor(&offset);
<else if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE) return;
&else zend_error(E_NOTICE,"Unknown index: %s", Z_STRVAL_P(offset));
&else if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset) + 1) == FAILURE)
}else &zval_ptr_dtor(&offset);
<else &error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
}else <zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset)); return;
&else <break;
}else zval_ptr_dtor(&offset); break;
}else if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
&else &if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)))
<<else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
&else zval_ptr_dtor(&offset); return;
}else zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset));
&else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
&else ht = spl_array_get_hash_table(intern, 0 TSRMLS_CC);
<else &zval_ptr_dtor(&offset); return;
&else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
<else #endif
}else spl_array_object_store_get_object(object TSRMLS_CC); long index; HashTable *ht;
<else &#endif
<else <return;
&else <if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
}else <if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset) + 1) == FAILURE)
&else spl_array_object *intern;
switch(Z_TYPE_P(offset)) &case IS_STRING: ht = spl_array_get_hash_table(intern, 0 TSRMLS_CC);
<else &spl_array_object_store_get_object(object);
}else spl_array_object_store_get_object(object);
<else &error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); return;
&else error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); return;
<else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1); return;
}else if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE) return;
&else <zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
&else zval_ptr_dtor(&offset);
&else <zval_ptr_dtor(&offset); return;
<*/
<else <spl_array_object_store_get_object(object);
}else <if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)) == FAILURE)
<else zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset));
}else if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE) break;
}else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); break;
&else &spl_array_object *intern = (spl_array_object*)zend_object_store_get_object(object);
&else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); return;
&else &zend_error(E_NOTICE,"Unknown index: %s", Z_STRVAL_P(offset));
}else return;
<else <zend_error(E_ERR,"Undefined index: %s", Z_STRVAL_P(offset));
&if (check_inherited) <SEPARATE_ARG_IF_REF(offset);
}else zend_error(E_ERR,"Undefined index: %s", Z_STRVAL_P(offset)); return;
&/* XXX */
&:
&else &error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); return;
}else &error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
&else <error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); return;
<else <zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset)); return;
&&else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
<else <zval_ptr_dtor(&offset);
}else zend_error(E_ERR, "Undefined index: %s", Z_STRVAL_P(offset));
}else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); return;
<else &spl_array_object *intern;
&else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
}else &if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset) + 1) == FAILURE)
if (ht->nApplyCount > 0) <zend_error(E_WARNING, "Modification of ArrayObject during sorting is prohibited"); return;
/* &*/
<else if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE) break;
&else return;
continue;
}else zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset));
}else zval_ptr_dtor(&offset); return;
<else spl_array_object_store_get_object(object TSRMLS_CC);
}else </* XXX */
<if (check_inherited) <SEPARATE_ARG_IF_REF(offset);
&else &zend_warn(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
}else &zend_error(E_ERR,"Undefined index: %s", Z_STRVAL_P(offset));
<else return;
&else <if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)) == FAILURE)
<else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset));
&else <zend_warn(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
&zval_ptr_dtor(&offset);
}else break;
&else zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset));
}else <zval_ptr_dtor(&offset); return;
&else if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)) == FAILURE)
<else ht = spl_array_get_hash_table(intern, 0 TSRMLS_CC);
}else <if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
:
}else <zend_warn(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
<else <spl_array_object_store_get_object(object TSRMLS_CC); long index; HashTable *ht;
}else &/* XXX */
}else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
}else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); return;
return;
}else &spl_array_object *intern = (spl_array_object*)zend_object_store_get_object(object);
}else <zval_ptr_dtor(&offset);
}else &if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
}else spl_array_object *intern = (spl_array_object*)zend_object_store_get_object(object);
&else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); return;
&else switch(Z_TYPE_P(offset))
&return;
if (check_inherited) SEPARATE_ARG_IF_REF(offset);
<else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
&else <zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset));
&else zval_ptr_dtor(&offset); return;
<else <if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)) == FAILURE)
<else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset));
&else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1); return;
<else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
<else &zend_error(E_NOTICE,"Unknown index: %s", Z_STRVAL_P(offset));
}else &if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)))
}else <zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset));
<else &spl_array_object_store_get_object(object TSRMLS_CC); long index; HashTable *ht;
&else <spl_array_object *intern = (spl_array_object*)zend_object_store_get_object(object TSRMLS_CC);
&&#endif
}else &spl_array_object_store_get_object(object);
&else &spl_array_object_store_get_object(object);
<else &zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset));
}else <spl_array_object_store_get_object(object TSRMLS_CC); long index; HashTable *ht;
&<else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
&else if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
<else &zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset)); return;
<else zval_ptr_dtor(&offset);
}else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset));
&if (check_inherited) SEPARATE_ARG_IF_REF(offset);
<<else
&else <if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
<else spl_array_object *intern;
}else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1); return;
&else &if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset) + 1) == FAILURE)
return 0;
&else &if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)) == FAILURE)
&else <zend_error(E_ERR,"Undefined index: %s", Z_STRVAL_P(offset));
if (ht->nApplyCount > 0)
<else <if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset) + 1) == FAILURE)
<else <spl_array_object_store_get_object(object TSRMLS_CC);
&else &spl_array_object *intern = (spl_array_object*)zend_object_store_get_object(object TSRMLS_CC);
<else &if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
<else <zend_warn(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
<else <error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); return;
<else <zval_ptr_dtor(&offset); return;
&else <break;
<;
<;
<else /* XXX */
<else zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset)); return;
&else zend_error(E_ERR, "Undefined index: %s", Z_STRVAL_P(offset));
<&else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
}else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
}else #endif
<else <if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)))
&if (ht->nApplyCount > 0)
}else &if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
&else <zend_error(E_NOTICE,"Unknown index: %s", Z_STRVAL_P(offset));
&else &zend_error(E_ERR,"Undefined index: %s", Z_STRVAL_P(offset));
&else </* XXX */
&else &break;
<<else
}else <spl_array_object *intern = (spl_array_object*)zend_object_store_get_object(object TSRMLS_CC);
&else <#endif
switch(Z_TYPE_P(offset)) <case IS_STRING: ht = spl_array_get_hash_table(intern, 0 TSRMLS_CC);
}else &error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); return;
}else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1); return;
SEPARATE_ARG_IF_REF(offset);
switch (Z_TYPE_P(offset)) case IS_STRING: ht = spl_array_get_hash_table(intern, 0 TSRMLS_CC);
<else &if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
<else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1); return;
/*
&else <zend_error(E_WARNING, "Undefined index: %s", Z_STRVAL_P(offset));
<else &zend_error(E_ERR, "Undefined index: %s", Z_STRVAL_P(offset));
}else &zend_warn(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
<else <zend_error(E_ERR,"Undefined index: %s", Z_STRVAL_P(offset)); return;
<else if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
<else break;
}else &zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset));
}else zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
}else zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
}else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
zval_ptr_dtor(&offset); return;
<else return;
&if (ht->nApplyCount > 0) zend_error(E_WARNING, "Modification of ArrayObject during sorting is prohibited"); return;
<else &zend_error(E_ERR, "Undefined index: %s", Z_STRVAL_P(offset));
&else return;
&else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset));
}else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset));
&else if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
}else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
}else &zend_error(E_ERR, "Undefined index: %s", Z_STRVAL_P(offset));
<else &spl_array_object *intern = (spl_array_object*)zend_object_store_get_object(object);
<else <zend_error(E_ERR, "Undefined index: %s", Z_STRVAL_P(offset));
}else break;
<else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset));
&else zend_error(E_ERR,"Undefined index: %s", Z_STRVAL_P(offset));
}else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); return;
}else zend_error(E_ERR,"Undefined index: %s", Z_STRVAL_P(offset));
&else &zend_error(E_ERR, "Undefined index: %s", Z_STRVAL_P(offset));
&else &zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset)); return;
<&else if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
<else &if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset) + 1) == FAILURE)
<else <error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
&else <zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset));
}else <break;
<else &zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset));
}else if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)))
<else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
;
<else zval_ptr_dtor(&offset); return;
*/
);
}else <if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)))
&else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); break;
&else &zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
<else if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset) + 1) == FAILURE)
<else &if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)))
}else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
&else &zval_ptr_dtor(&offset); return;
&else if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
}else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
&else error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
}else <spl_array_object_store_get_object(object);
}else &zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset)); return;
}else zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset));
}else <zend_error(E_ERR, "Undefined index: %s", Z_STRVAL_P(offset));
<else zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset));
&else &zval_ptr_dtor(&offset);
}else zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset));
&else if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
<else &zend_error(E_ERR,"Undefined index: %s", Z_STRVAL_P(offset));
&else &break;
&else &zend_err(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
&else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1); return;
<else zend_error(E_WARNING, "Undefined index: %s", Z_STRVAL_P(offset));
&else &zval_ptr_dtor(&offset);
<else &zend_warn(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
}else <break;
<else spl_array_object *intern = (spl_array_object*)zend_object_store_get_object(object);
<else &if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)) == FAILURE)
<if (ht->nApplyCount > 0) <zend_error(E_WARNING, "Modification of ArrayObject during sorting is prohibited"); return;
<else &zval_ptr_dtor(&offset); break;
}else <error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
&else &zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset));
<else switch(Z_TYPE_P(offset))
<else if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
}else if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset) + 1) == FAILURE)
zval_ptr_dtor(&offset);
&else &if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
&else zend_err(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
}else if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)))
&else &zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset)); return;
&if (check_inherited) &SEPARATE_ARG_IF_REF(offset);
&else &zval_ptr_dtor(&offset); return;
<else &error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
}else &zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
}else &zval_ptr_dtor(&offset);
ht->nApplyCount = 0;
}else zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset)); return;
&<#endif
&else &zend_error(E_ERR,"Undefined index: %s", Z_STRVAL_P(offset)); return;
&else <ht = spl_array_get_hash_table(intern, 0 TSRMLS_CC);
<else if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)))
return (0);
}else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); return;
<else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1); return;
}else zend_warn(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
}else zend_err(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
<else if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)))
<else <zend_error(E_ERR, "Undefined index: %s", Z_STRVAL_P(offset));
}else <#endif
}else &spl_array_object_store_get_object(object TSRMLS_CC); long index; HashTable *ht;
&break;
<else &zval_ptr_dtor(&offset);
}else <zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset));
}else &zend_error(E_ERR,"Undefined index: %s", Z_STRVAL_P(offset));
switch(Z_TYPE_P(offset))
&else if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)))
&else spl_array_object *intern = (spl_array_object*)zend_object_store_get_object(object);
&else &zend_error(E_ERR,"Undefined index: %s", Z_STRVAL_P(offset));
&else <error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
&*/
}else ht = spl_array_get_hash_table(intern, 0 TSRMLS_CC);
&else &zend_error(E_ERR, "Undefined index: %s", Z_STRVAL_P(offset));
<else <zend_err(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
'&'
}else &zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset));
&else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset));
}else &zend_error(E_ERR,"Undefined index: %s", Z_STRVAL_P(offset)); return;
&else &zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
}else &zend_err(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
&else &error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
<else <break;
}else <error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
&else <spl_array_object_store_get_object(object);
}else zend_error(E_NOTICE,"Unknown index: %s", Z_STRVAL_P(offset));
}else zend_error(E_WARNING, "Undefined index: %s", Z_STRVAL_P(offset));
<else <zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset));
&else <if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)))
&else zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
<else <spl_array_object *intern = (spl_array_object*)zend_object_store_get_object(object TSRMLS_CC);
<else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); return;
if (check_inherited) &SEPARATE_ARG_IF_REF(offset);
<spl_array_object_store_get_object(object);
&else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
}else if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset) + 1) == FAILURE)
&<else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
<else zend_error(E_NOTICE,"Unknown index: %s", Z_STRVAL_P(offset));
<else &zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
#endif /*
}else zval_ptr_dtor(&offset);
&;
}else &zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset)); return;
<else zval_ptr_dtor(&offset);
<else &zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset));
}else zend_error(E_NOTICE,"Unknown index: %s", Z_STRVAL_P(offset));
&else <zend_err(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
zval_ptr_dtor(&offset);
/* */
&else zval_ptr_dtor(&offset); break;
&else <spl_array_object *intern;
&else zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset));
}else <zend_err(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
&else <return;
}else &error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
}else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset));
<else zend_error(E_ERR,"Undefined index: %s", Z_STRVAL_P(offset));
&else &#endif
&else &if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)))
<if (check_inherited) &SEPARATE_ARG_IF_REF(offset);
&spl_array_object_store_get_object(object);
&else <if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)))
<return;
<else &zend_error(E_WARNING, "Undefined index: %s", Z_STRVAL_P(offset));
<break;
}else spl_array_object_store_get_object(object TSRMLS_CC);
<else <zend_error(E_NOTICE,"Unknown index: %s", Z_STRVAL_P(offset));
&else zend_warn(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
&<else
&switch(Z_TYPE_P(offset))
switch(Z_TYPE_P(offset)) case IS_STRING: ht = spl_array_get_hash_table(intern, 0 TSRMLS_CC);
&else zend_error(E_ERR,"Undefined index: %s", Z_STRVAL_P(offset)); return;
,
<else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); return;
<else if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)) == FAILURE)
}else zval_ptr_dtor(&offset); return;
&else zend_error(E_ERR,"Undefined index: %s", Z_STRVAL_P(offset));
<else &break;
}else &if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
}else &break;
<else <if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
}else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
&else &/* XXX */
<else &ht = spl_array_get_hash_table(intern, 0 TSRMLS_CC);
<else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
<else <zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
&else zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset));
<<#endif
&,
<else &zend_error(E_ERR,"Undefined index: %s", Z_STRVAL_P(offset));
}else &zval_ptr_dtor(&offset); break;
<else <if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)))
switch (Z_TYPE_P(offset))
<<else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
&else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); break;
spl_array_object_store_get_object(object);
<else &spl_array_object_store_get_object(object TSRMLS_CC);
}else <spl_array_object *intern = (spl_array_object*)zend_object_store_get_object(object);
<else zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
}else <zend_error(E_WARNING, "Undefined index: %s", Z_STRVAL_P(offset));
<else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
&else <zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset));
/* XXX */
<if (ht->nApplyCount > 0) zend_error(E_WARNING, "Modification of ArrayObject during sorting is prohibited"); return;
<else zend_error(E_ERR,"Undefined index: %s", Z_STRVAL_P(offset));
<else if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
&else <zend_error(E_ERR,"Undefined index: %s", Z_STRVAL_P(offset)); return;
}else <spl_array_object *intern;
&else #endif
}else error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
&&else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
<else <zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
break; default:
switch(Z_TYPE_P(offset))
}else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); return;
&else
<if (ht->nApplyCount > 0) &zend_error(E_WARNING, "Modification of ArrayObject during sorting is prohibited"); return;
''
}else <zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset));
<else &zend_error(E_NOTICE,"Unknown index: %s", Z_STRVAL_P(offset));
<else if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset) + 1) == FAILURE)
<else zend_warn(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
break;
<else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
}else &#endif
&else <zval_ptr_dtor(&offset); return;
}else <zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
&return;
<else &return;
<<else if (zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
&else <spl_array_object_store_get_object(object TSRMLS_CC); long index; HashTable *ht;
break;
&&else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
<else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset));
&else &spl_array_object_store_get_object(object TSRMLS_CC); long index; HashTable *ht;
}else &zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset));
&<else
}else zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
<);
}else &zval_ptr_dtor(&offset); return;
}else &spl_array_object *intern = (spl_array_object*)zend_object_store_get_object(object TSRMLS_CC);
}else &return;
<else <spl_array_object *intern;
&else &error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
;
<&else
}else <zval_ptr_dtor(&offset); return;
&else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset));
&SEPARATE_ARG_IF_REF(offset);
&else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset));
}else <zend_error(E_ERR,"Undefined index: %s", Z_STRVAL_P(offset));
}else &zend_error(E_WARNING, "Undefined index: %s", Z_STRVAL_P(offset));
}else <zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset)); return;
<else <zend_error(E_WARNING, "Undefined index: %s", Z_STRVAL_P(offset));
<else <zend_error(E_ERR,"Undefined index: %s", Z_STRVAL_P(offset));
&else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); return;
&else zend_error(E_NOTICE,"Unknown index: %s", Z_STRVAL_P(offset));
&else &spl_array_object *intern;
}else spl_array_object *intern;
}else &zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset));
&else <zval_ptr_dtor(&offset);
<else <zval_ptr_dtor(&offset); break;
}else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
&else &ht = spl_array_get_hash_table(intern, 0 TSRMLS_CC);
}else &if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)))
</* XXX */
}else &zval_ptr_dtor(&offset); return;
<*/
}else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
}else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
}else
<else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); return;
<else
&else <zend_error(E_ERR, "Undefined index: %s", Z_STRVAL_P(offset));
<else zend_error(E_ERR, "Undefined index: %s", Z_STRVAL_P(offset));
if (ht->nApplyCount > 0) &zend_error(E_WARNING, "Modification of ArrayObject during sorting is prohibited"); return;
<else &zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset));
&else zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
<&#endif
<else <spl_array_object *intern = (spl_array_object*)zend_object_store_get_object(object);
&else <zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); break;
<else error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); return;
*/
<&else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
}else &zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
<else zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); break;
<return;
<else &zend_error(E_ERR,"Undefined index: %s", Z_STRVAL_P(offset)); return;
<else <zend_symtable_del(ht, Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
&else <zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset));
<else zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
}else if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)) == FAILURE)
&else <zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset)); return;
&else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
&if (ht->nApplyCount > 0) &zend_error(E_WARNING, "Modification of ArrayObject during sorting is prohibited"); return;
<else <#endif
<else <zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset)); return;
<else <zval_ptr_dtor(&offset);
<else error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset));
}else if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
&if (ht->nApplyCount > 0) <zend_error(E_WARNING, "Modification of ArrayObject during sorting is prohibited"); return;
}else <zend_error(E_ERR,"Undefined index: %s", Z_STRVAL_P(offset));
}else <zend_error(E_NOTICE,"Unknown index: %s", Z_STRVAL_P(offset));
return;
}else if (zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1) == FAILURE)
if (check_inherited) <SEPARATE_ARG_IF_REF(offset);
<else zend_error(E_NOTICE,"Unknown index: %s", Z_STRVAL_P(offset));
<else zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset)); return;
&else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset)); return;
switch (Z_TYPE_P(offset)) &case IS_STRING: ht = spl_array_get_hash_table(intern, 0 TSRMLS_CC);
}else <zend_delete_global_variable(Z_STRVAL_P(offset), Z_STRLEN_P(offset));
}else zend_error(E_NOTICE, "Undefined index: %s", Z_STRVAL_P(offset)); return;
&else &zend_error(E_NOTICE,"Undefined index: %s", Z_STRVAL_P(offset), Z_STRLEN_P(offset)+1);
<&else
<else spl_array_object *intern = (spl_array_object*)zend_object_store_get_object(object TSRMLS_CC);
<#endif
