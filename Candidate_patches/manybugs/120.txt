golden:
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0);
inference:
buffer_pool_append(yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor);
buffer_pool_append((ctx->unused_buffers, yymsp[0].minor.yy0));

buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(yymsp[0].minor.yy0, ctx->unused_buffers);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, 0);
buffer_pool_append(ctx->unused_buffers, &yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, (int)yymsp[0].minor.yy0);
buffer_pool_append(yymsp[0].minor);
buffer_pool_append((ctx->unused_buffers), yymsp[0].minor.yy0);
buffer_pool_append((ctx->unused_buffers) yymsp[0].minor.yy0);
buffer_pool_append(yymsp->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append((ctx->unused_buffers) &yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers);
buffer_pool_append(ctx->unused_buffers, minor.yy0);
buffer_pool_append(&ctx->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp.minor.yy0);
buffer_pool_append(ctx->unused_buffers, 0, yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, (long)yymsp[0].minor.yy0);
buffer_pool_append(yymsp->minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0]);
buffer_pool_append(ctx->unused_buffers, yymsp->minor.yy0);
buffer_pool_append(ch->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, NULL, yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, (void *)yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, NULL);
buffer_pool_append(yymsp, yymsp[0].minor.yy0);
buffer_pool_append(yyMsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, min(yymsp[0].minor.yy0));
buffer_pool_append (ctx->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, NULL);
buffer_pool_append(&yypParser->yystack[yypParser->yyidx]);
buffer_pool_append((ctx->unused_buffers)&yymsp[0].minor.yy0);
buffer_pool_append(&yymsp[0].minor.yy0);
buffer_pool_append((ctx->unused_buffers)(yymsp[0].minor.yy0));
buffer_pool_append((long)ctx->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0]->minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp);
buffer_pool_append(yymsp[0].minor, ctx->unused_buffers);
buffer_pool_append( ctx->unused_buffers, yymsp[0].minor.yy0 );
buffer_pool_append(ctx->unused_buffers, (yymsp[0].minor.yy0));
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.xy0);
buffer_pool_append(yymsp[0].minor, yymsp[0].minor.yy0);
buffer_pool_append((ctx->unused_buffers[0].minor.yy0]));
buffer_pool_append(&yymsp->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append((yymsp[0].minor.yy0]));
buffer_pool_append(sc->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(yy->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor)
buffer_pool_append(yymsp[0].minor.yy0, 0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0 - 1);
buffer_pool_append(yymsp.minor.yy0);
buffer_pool_append((ctx->unused_buffers) & yymsp[0].minor.yy0);
buffer_pool_append( yymsp[0].minor.yy0 );
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor));
buffer_pool_append((ctx->unused_buffers) + yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, *yymsp[0].minor.yy0);
buffer_pool_append((ctx->unused_buffers*) yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[1].minor.yy0);
buffer_pool_append(yymsp);
buffer_pool_append(0, yymsp[0].minor.yy0);
buffer_pool_append((ctx->unused_buffers)yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[i].minor.yy0);
buffer_pool_append(yymsp[0].minor.yy0)
buffer_pool_append(&yy->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(tmp, yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, 1);
buffer_pool_append(ctx->unused_buffers, yymsp[0].get());
buffer_pool_append((ctx->unused_buffers *) yymsp[0].minor.yy0);
buffer_pool_append(buffer_pool, yymsp[0].minor.yy0);
buffer_pool_append((ctx->unused_buffers) - yymsp[0].minor.yy0);
(void) buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor->yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy);
buffer_pool_append(ctx->unused_buffers[0], yymsp[0].minor.yy0);
buffer_pool_append((ctx->unused_buffers *)yymsp[0].minor.yy0);
buffer_pool_append(yymsp->minor.yy0, ctx->unused_buffers);
buffer_pool_append(ctx->unused_buffers, yysp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yyMsp[0].minor);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor;
buffer_pool_append(xp->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor, 0);
buffer_pool_append( ctx->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0 + 1);
buffer_pool_append(ctx->unused_buffers, yy.minor.yy0);
buffer_pool_append(ctx->unused_buffers, (char *)yymsp[0].minor.yy0);
buffer_pool_append(conn->unused_buffers, yymsp[0].minor.yy0);
buf_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(curthread->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append( (ctx->unused_buffers, yymsp[0].minor.yy0));
buffer_pool_append(yymsp[0]);
buffer_pool_append(lhs->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(__func__, yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0][0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].get().minor.yy0);
buffer_pool_append((ctx->unused_buffers)->minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0)
buffer_pool_append(ctx->unused_buffers, yy_minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0+1);
buffer_pool_append((ctx->unused_buffers)[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, (long) yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].nminor.yy0);
buffer_pool_append((ctx->unused_buffers)->yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-1].minor.yy0);
buffer_pool_append(ctx->unused_buffers, minor);
buffer_pool_append(ctx->unused_buffers, (void **)yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, 0);
buffer_pool_append( (ctx->unused_buffers, yymsp[0].minor.yy0) );
buffer_pool_append(ctx->unused_buffers, ctx->minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].prior.yy0);
buffer_pool_append((ctx->unused_buffers*)yymsp[0].minor.yy0);
buffer_pool_append((caddr_t)yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy1);
buffer_pool_append((int)yymsp[0].minor.yy0);
buffer_pool_append(yymsp[0].minor)
*buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor) - 1;
buffer_pool_append(xs->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(__unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append((caddr_t) yymsp[0].minor.yy0);
buffer_pool_append(sp->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(yymsp[0].minor, yymsp[0].minor);
buffer_pool_append(ctx->unused_buffers[0].minor.yy0]);
buffer_pool_append(yyms[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].u.minor.yy0);
buffer_pool_append(aCtx->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(th->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append((void *) yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0.get());
buffer_pool_append(yymsp[0].minor.yy0, &ctx->unused_buffers);
buffer_pool_append((void *)yymsp[0].minor.yy0);
buffer_pool_append((ctx->unused_buffers + 1), yymsp[0].minor.yy0);
buffer_pool_append(this->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yy->minor.yy0);
buffer_pool_append(ctx->unused_buffers, 1);
size_t buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor).yy0;
buffer_pool_append((u_long)yymsp[0].minor.yy0);
buffer_pool_append(bp->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(lctx->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(ptx->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, int yymsp[0].minor.yy0);
buffer_pool_append(nbuffers, yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, minor, yymsp[0].minor.yy0);
buffer_pool_append((long)yymsp[0].minor.yy0);
buffer_pool_append(yymsp, ctx->unused_buffers);
buffer_pool_append(&yymsp[0].minor.yy0]);
buffer_pool_append(ctx->unused_buffers, len);
buffer_pool_append(ctx->unused_buffers, yymsp[2].minor.yy0);
buffer_pool_append(tmp->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append((ctx->unused_buffers[0])->minor.yy0);
nbuffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(yymsp[0].minor, 0);
buffer_pool_append(CX->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, min);
buffer_pool_append(&yymsp, yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.get());
buffer_pool_append(ctx->unused_buffers, yy[0].minor.yy0);
buffer_pool_append(yymsp[0].minor.xy0);
buffer_pool_append((void **) yymsp[0].minor.yy0);
buffer_pool_append(yymsp[0]->minor.yy0);
buffer_pool_append( ctx->unused_buffers, yymsp[0].minor);
buffer_pool_append (yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minior.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor)[0];
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, -1);
buffer_pool_append(ctx->unused_buffers, sizeof(yymsp[0].minor));
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, size);
buffer_pool_append(ctx->unused_buffers, intminor.yy0);
buffer_pool_append(yymsp[0].minor.yy0, sizeof(yymsp));
buffer_pool_append( yymsp[0].minor.yy0, ctx->unused_buffers);
buffer_pool_append((int) yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor - 1);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy2);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, p);
buffer_pool_append((ctx->unused_buffers)+(yymsp[0].minor.yy0));
buffer_pool_append( ctx->unused_buffers, yymsp[0].minor );
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0));
buffer_pool_append(yysp[0].minor.yy0);
buffer_pool_append((ctx->unused_buffers)  yymsp[0].minor.yy0);
buffer_pool_append(ccx->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yyMsp[0].minor.yy0);
buffer_pool_append((ctx->unused_buffers) + (yymsp[0].minor.yy0));
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0]);
buffer_pool_append(yymsp[0].minor.yy0, NULL);
buffer_pool_append(&yyMsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.hy0);
buffer_pool_append( yymsp[0].minor.yy0, ctx->unused_buffers );
buffer_pool_append(ctx->unused_buffers, yyms[0].minor);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0++);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor, NULL);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, len);
ctx->unused_buffers = yymsp[0].minor.yy0;
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, yymsp[0].noflags);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0); yymsp[0].minor.yy0[0].minor.yy0[1];
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, yymsp[0].iop);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, &yypParser->yystack[yypParser->yyidx]);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, YY_MINORTYPE);
buffer_pool_append(ctx->unused_buffers, (yymsp[0].minor.yy0] & YY_LOW));
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, yymsp[0].ms.maxof((int)(yymsp[0].minor)));
buffer_pool_append((void *) ctx->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, (intptr_t)yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, sizeof(yytacheFile));
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, yymsp[0].minor.xy]);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, yymsp[0].maxmax, yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, yymsp[0].uid);
buffer_pool_append((u_long)ctx->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, YYMINORTYPE_LINE);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, (void *) yymsp);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, yymsp[0].hdr.slen);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, (ctx->unused_buffers + sizeof(ctx->unused_buffers)));
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, yymsp[0].result);
buffer_pool_append((yymsp[0].minor.yy0])->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append((u_int32_t)ctx->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, sizeof(yymsp));
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0) /* XXX */
buffer_pool_append((uintptr_t)ctx->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, yymsp[0].next);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, ctx->unused_buffers);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, yymsp[0].minor.c_yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, &yymsp->yystack[yymsp->yystack->yystack->yystack].yy);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, &yypParser->yy_stack[yypParser->yyidx]);
buffer_pool_append((yymsp[0].minor.yy0]-ctx->unused_buffers));
buffer_pool_append(ctx->unused_buffers, (u_long)yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, (int) yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, yypParser->yyidx);
buffer_pool_append((yyMsp[0].minor.yy0]-(yymsp[0].minor.yy0]-(yymsp[0].minor.yy0)));
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0); /* the loader will only contain a bit of buffers, but a few seconds to run */ if (((sep->sep == sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->sep->se
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, yymsp[0].minor.xpc);
buffer_pool_append((ctx->unused_buffers)->ctx_buffers, yymsp[0].minor.yy0);
buffer_pool_append(((ctx->unused_buffers[0]->minor.yy0])));
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, (u_long) yymsp);
buffer_pool_append((yymsp[0].minor.yy0])->yy_p, ctx->unused_buffers);
buffer_pool_append((ctx->unused_buffers & 0x8000) % yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, (caddr_t)yymsp[0].minor.yy0);
buffer_pool_append((uintptr_t) ctx->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append((ctx->unused_buffers)->s_buffle, yymsp[0].minor.yy0);
buffer_pool_append(((unsigned char *)ctx->unused_buffers, yymsp[0].minor.yy0));
buffer_pool_append((yymsp[0].minor.yy0]) / yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, (uintptr_t) yymsp[0].minor.yy0);
buffer_pool_append((u_long)(ctx->unused_buffers), yymsp[0].minor.yy0);
buffer_pool_append((yymsp[0].minor)->buffer_pool_append(yymsp[0].minor)->buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, yymsp[0].maxidx);
buffer_pool_append((int)ctx->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0); yy_set_debug("fin_%s_debug.%s" % (yyflags & _DEBUG));
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, (ctx->unused_buffers * 1000));
buffer_pool_append((yyMsp[0].minor.yy0]));
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0); yymsp = &yypParser->yystack[yypParser->yyidx];
buffer_pool_append((int)ctx->unused_buffers, (int)yymsp[0].minor.yy0);
buffer_pool_append((ctx->unused_buffers & 0xFFFF)? yymsp[0].minor.yy0 : 0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, YYM_NULL);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0) /* EXCEPTION */
buffer_pool_append((ctx->unused_buffers) /* to not get */ yymsp[0].minor.yy0);
buffer_pool_append(((ctx->unused_buffers)->m_remove)->minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, sizeof(yyMsp));
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0, yymsp->yystart);
buffer_pool_append((u_int8_t)(ctx->unused_buffers), yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0); /* This works in a bit for XXX. */
buffer_pool_append((ctx->unused_buffers) <yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0); yy_set_debug("fin_%s_debug.%s" % (yyflags & &_DEBUG));
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0); yy_set_debug("fin_%s_debug.%s" % (yyflags & <_DEBUG));
buffer_pool_append((ctx->unused_buffers & <0xFFFF)? yymsp[0].minor.yy0 : 0);
buffer_pool_append((ctx->unused_buffers & 0xFFFF)? yymsp[0].minor.yy0 : 0);
buffer_pool_append((ctx->unused_buffers) &yymsp[0].minor.yy0);
buffer_pool_append((ctx->unused_buffers) yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, (yymsp[0].minor.yy0] & &YY_LOW));
buffer_pool_append(ctx->unused_buffers, (yymsp[0].minor.yy0] & YY_LOW));
buffer_pool_append(ctx->unused_buffers, (yymsp[0].minor.yy0] & <YY_LOW));
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0); yy_set_debug("fin_%s_debug.%s" % (yyflags & _DEBUG));
buffer_pool_append((ctx->unused_buffers & &0xFFFF)? yymsp[0].minor.yy0 : 0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0);
