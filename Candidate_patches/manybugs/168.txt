golden:
if (php_stream_stat(stream, &ssb) == SUCCESS) { if (ssb.sb.st_mode & S_IFDIR) { ret_val = mime_directory; } else { ret_val = (char *)magic_stream(magic, stream); } }
inference:
ret_val = magic_stream(magic, stream);

ret_val = (char *) magic_stream(magic, stream);
ret_val = magic_stream(magic, stream, NULL);
ret_val = magic_stream(magic, stream, 0);
*ret_val = magic_stream(magic, stream);
ret_val = (char *) magic_stream( magic, stream );
ret_val = (char *)magic_stream(magic, stream);
ret_val = magic_stream (magic, stream);
const char *ret_val = magic_stream(magic, stream);
ret_val = magic_stream((char *)magic, stream);
ret_val = magic_stream(magic);
ret_val = magic_read(magic, stream);
(void)magic_stream(magic, stream);
magic_stream(magic, stream);
magic_ret_val = magic_stream(magic, stream);
ret_val = _magic_stream(magic, stream);
magic_load(magic, NULL);
int ret_val = magic_stream(magic, stream);
ret_val = magic_stream(MAGIC, stream);
ret_val = (void *)magic_stream(magic, stream);
ret_val = (char *) magic_stream(magic, stream, buffer);
ret_val = (char **)magic_stream(magic, stream);
ret_val = (char *)magic_stream(magic);
magic = magic_stream(magic, stream);
ret_val = (char *) magic_stream (magic, stream);
ret_val = magic_stream(Magic, stream);
ret_val = magic_set(magic, stream);
magic_set_ret_val(magic, stream);
magic_val = magic_stream(magic, stream);
ret_val = magic_load(magic, NULL);
ret_val = magical_stream(magic, stream);
(void) magic_stream(magic, stream);
magic_ret_val = (char *)magic_stream(magic, stream);
ret_val = Magic_stream(magic, stream);
magic_set(magic, stream);
ret_val =magic_stream(magic, stream);
magic = magic_load(magic, NULL);
ret_val = (char *) magic_stream(magic, stream)
ret_val = magic_stream(magic, stream, NULL, NULL);
ret_val = (char *) magic_stream(magic, stream, false);
ret_val = magic_stream(magic, stream, PR_TRUE);
ret_val=(char *)magic_stream(magic, stream);
*ret_val = (char *)magic_stream(magic, stream);
ret_val = (char *)magic_stream(&magic, stream);
ret_val = magic_stream(magic, stream, buffer_len);
magic_stream = magic_stream(magic, stream);
ret_val = magic_put(magic, stream);
ret_val = magique_stream(magic, stream);
ret_val = magic_stream();
ret_val = (char **) magic_stream(magic, stream);
ret_val=magic_stream(magic, stream);
ret_val = magic_unload(magic, stream);
ret_val = magic_run(magic, stream);
ret_val = (char *)Magic_stream(magic, stream);
ret_val = magic_stream(magic, stream)
ret_val = magic_raw_stream(magic, stream);
char *ret_val = magic_stream(magic, stream);
ret_val = magic_stream(&magic, stream);
ret_val = (char *)magic_stream(magic, *stream);
ret_val = magic_process(magic, stream);
ret_val = (char *) magic_stream(magic);
(char *)magic_stream(magic, stream);
ret_val = magic_drive(magic, stream);
ret_val = magic_string(magic, stream);
ret_val = (char *)magic_stream (magic, stream);
magic_val = (char *)magic_stream(magic, stream);
ret_val = (char *) magic_stream(magic, stream, 1);
ret_val = (int)magic_stream(magic, stream);
ret_val = (char *) magic_stream(magic, magic, stream);
ret_val = &magic_stream(magic, stream);
ret_val = (char *) magic_stream(magic, stream, size);
ret_val = magic_load(magic, stream);
ret_val = magic_stream(magic, &stream);
*ret_val = (char *) magic_stream(magic, stream);
result = magic_stream(magic, stream);
ret_val = (char *) magic_stream(magic, magic_stream);
ret_val = magic_stream(magic, stream, false);
ret_val = magic_stream(magic, stream, PR_FALSE);
ret_val = magic_copy(magic, stream);
ret_val = *magic_stream(magic, stream);
ret_val = magic(magic, stream);
ret_val = magic_stream(mimetype, stream);
reg_val = magic_stream(magic, stream);
ret_val = magic_stream(magic, stream, buffer);
ret_val = magic_stream(finfo, magic, stream);
ret_val = magic_stream(magic, stream, size);
ret_val = magic_init(magic, stream);
ret_val = magic_out(magic, stream);
ret_val = magic_channel(magic, stream);
ret_val = magic_stream_init(magic, stream);
ret_val = magic_remove(magic, stream);
ret_val = magic_file(magic, stream);
ret_val = (char *) magic_stream(magic, stream, length);
ret_val = (char *) magic_stream(magic, stream, true);
magic->ret_val = magic_stream(magic, stream);
ret_val = magic_stream(magic, path);
__ret_val = magic_stream(magic, stream);
ret_val = magic_stream(magic, stream, 1);
ret_val = magic_stream_free(magic, stream);
ret_val = __magic_stream(magic, stream);
_ret_val = magic_stream(magic, stream);
ret_val = magic_stream(magic, stream, 0, 0);
ret_val = (char *) magic_read(magic, stream);
/* ret_val = magic_stream(magic, stream); */
reg_val = (char *)magic_stream(magic, stream);
ret_val = magic_stream(magic, string);
&ret_val = magic_stream(magic, stream);
ret_val = magic_stream(magic, stream.get());
ret_val = magic_handle(magic, stream);
ret_val = magic_flow(magic, stream);
ret_val = magic_free(magic, stream);
ret_val = (char *) magic_stream(magic, &stream);
rt_val = magic_stream(magic, stream);
static char *ret_val = magic_stream(magic, stream);
ret_val = magic_stream(magic, strlen(stream));
ret_val = (char *)magic_stream(magic, str);
ret_val = (char *) magic_stream(magic, stream, name);
ret_val = (char *) magic_stream(magic, stream, mode);
ret_val = magic_buffer(magic, stream);
ret_val = (char *) magic_stream(Magic, stream);
RETURN_FALSE;
ret_val = magic_write(magic, stream);
return magic_stream(magic, stream);
ret_val = magic_stream( magic, stream );
ret_val = magic_entry(magic, stream);
ret_val = (char *)magic_stream(magic, stream)
ret_val = magic_stream(*magic, stream);
FILEINFO_DECLARE_INIT_OBJECT(object)
ret_val = (char *) magic_stream(magic, stream, type);
val = magic_stream(magic, stream);
ret_val = magic_stream(magic, stream, flags);
magic = magic_open(magic, NULL);
ret_val = (char *) magic_stream( magic, stream);
ret_val = magic_stream(magic, stream, '0');
ret_val = magic_update(magic, stream);
ret_val = magic_stream(magic, path, stream);
ret_val = (char *)magic_stream(magic, p);
ret_val = magic_strdup(magic, stream);
ret_val = magic_add(magic, stream);
ret_val = magic_stream(magic, stream, 0, NULL);
ret_val = magic_init_stream(magic, stream);
ret_val = magic_stream(p, stream);
FILEINFO_DECLARE_INIT_OBJECT(object);
ret_val = magic_stream(magic, stream, len);
magic_set = magic_stream(magic, stream);
magic->ret_val = (char *)magic_stream(magic, stream);
ret_val = magic_stream(magic,stream);
ret_val = (char *) magic_stream(magic, stream, 2);
unsigned char *ret_val = magic_stream(magic, stream);
ret_val = magic_stream(magic, stream, true);
ret_val = magic_stream(magic.get(), stream);
ret_val = magic_block(magic, stream);
ret_val = (char *) magique_stream(magic, stream);
ret_val = magic_stream2(magic, stream);
ret_val = (char *) magic_stream(MAGIC, stream);
ret_val = magic_stream(magic, stream, buf);
ret_val = magnetic_stream(magic, stream);
magic_load(magic, stream);
else ret_val = magic_stream(magic, stream);
ret_val = magic_process_stream(magic, stream);
ret_val = magic_stream(magic, stream, length);
ret_val = magic_translate(magic, stream);
magic_put(magic, stream);
magic.ret_val = magic_stream(magic, stream);
ret_val = magic_stream_entry(magic, stream);
ret_val = magic_transfer(magic, stream);
ret_val = magic_stream(magic, stream, p);
ret_val = magic_copy_stream(magic, stream);
ret_val = Magic_Stream(magic, stream);
ret_val = magic_state(magic, stream);
ret_val = magic_stream_get(magic, stream);
ret_val = MAX(magic, stream);
ret_val = magic_stream(magic, stream, name);
ret_val = magic_stream_p(magic, stream);
magic_free(magic, stream);
ret_val = (char *)magic_stream();
rval = magic_stream(magic, stream);
ret_val = magic_stream_new(magic, stream);
ret_val = magic_cleanup(magic, stream);
ret_val = magic_stream_valid(magic, stream);
ret_val = magic_stream(magic, stream); #endif
ret_val = magic_flush(magic, stream);
ret_val = magic_stream(magic, magic, stream);
magic_set_string(magic, stream);
ret_val = magic_stream(magic, stream, type);
magic_set_magic(magic, stream);
type = magic_stream(magic, stream);
magic_free(magic);
reg = magic_stream(magic, stream);
ret_val = (char *) magic_stream(magic, stream, sizeof(magic_stream));
ret_val = (char *) magic_stream(magic, stream, &ret_val);
ret_val = (char *)magic_stream(magic, stream, 0);
ret_val = (char *)magic_stream(magic, stream, &busy);
ret_val = (char *) magic_stream(magic, stream, NULL);
ret_val = (char *) magic_stream(magic, stream, mem);
ret_val = (char *)magic_stream(magic, stream, sizeof(finfo));
ret_val = (char *) magic_stream(magic, stream, 0);
ret_val = (char *) magic_stream(magic, stream, PR_FALSE);
ret_val = (char *) magic_stream(magic, stream, strlen(magic));
ret_val = (char *) magic_stream(magic, stream, buffer_len);
ret_val = (char *)magic_stream(magic, stream, NULL);
ret_val = (char *) magic_stream(magic, stream, finfo_path, finfo_path);
ret_val = (char *)magic_stream(magic, stream, u_int32_t * sizeof(u_int32_t));
ret_val = (char *) magic_stream(magic, stream, &finfo_ret_val);
ret_val = (char *)magic_stream(magic, stream, M_PATH);
ret_val = (char *) magic_stream(magic, stream, sizeof(slot_t));
ret_val = (char *) magic_stream(magic, stream, buf);
ret_val = (char *)magic_stream(magic, stream, sizeof(magic));
ret_val = (char *) magic_stream(magic, stream, sizeof(struct magic_descriptor));
ret_val = (char *)magic_stream(magic, stream, M_WORD);
ret_val = (char *)magic_stream(magic, stream, &omsg);
ret_val = (char *) magic_stream(magic, stream, sizeof(char));
ret_val = (char *)magic_stream(magic, stream, &ret_val);
ret_val = (char *)magic_stream(magic, stream, false);
ret_val = (char *)magic_stream(magic, stream, p);
ret_val = (char *)magic_stream(magic, '0', '0');
ret_val = (char *)magic_stream(magic, stream, '0');
ret_val = (char *) magic_stream(magic, stream, ret_val);
ret_val = magic_stream(magic, stream, '<0');
ret_val = magic_stream(magic, stream, '&0');
ret_val = (char *)magic_stream(magic, stream, '&0');
ret_val = magic_stream(magic, stream);
ret_val = (char *)magic_stream(magic, '0', '<0');
ret_val = (char *)magic_stream(magic, '0', '&0');
<ret_val = magic_stream(magic, stream);
ret_val = (char *)magic_stream(magic, '<0', '0');
ret_val = (char *)magic_stream(magic, '<0', '&0');
ret_val = (char *)magic_stream(magic, stream, '<0');
ret_val = (char *)magic_stream(magic, '0', '0');
&ret_val = magic_stream(magic, stream);
ret_val = (char *)magic_stream(magic, stream, '0');
ret_val = (char *) magic_stream(magic, stream);
<ret_val = magic_stream(magic, stream);
ret_val = (char *)magic_stream(magic, '&0', '&0');
&ret_val = magic_stream(magic, stream);
ret_val = magic_stream(magic, stream);
ret_val = (char *)magic_stream(magic, '&0', '<0');
ret_val = (char *)magic_stream(magic, '<0', '<0');
ret_val = (char *)magic_stream(magic, '&0', '0');
ret_val = magic_stream(magic, stream, '0');
