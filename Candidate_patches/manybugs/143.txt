golden:
if (nodep != NULL) { /* Dump contents of Node */ DOM_GET_OBJ(node, nodep, xmlNodePtr, nodeobj); if (node->doc != docp) { php_dom_throw_error(WRONG_DOCUMENT_ERR, dom_get_strict_error(intern->document) TSRMLS_CC); RETURN_FALSE; } buf = xmlBufferCreate(); if (!buf) { php_error_docref(NULL TSRMLS_CC, E_WARNING, "Could not fetch buffer"); RETURN_FALSE; } xmlNodeDump(buf, docp, node, 0, format); mem = (xmlChar*) xmlBufferContent(buf); if (!mem) { RETVAL_FALSE; } else { RETVAL_STRING(mem, 1); } xmlBufferFree(buf); } else { #if LIBXML_VERSION >= 20623 htmlDocDumpMemoryFormat(docp, &mem, &size, format);
inference:
htmlDocDumpMemoryFormat(docp, mem, &size, format);
htmlDocDumpMemoryFormat(docp, mem, size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size);
htmlDocDumpMemoryFormat(docp, &mem, size, format);

HTMLDocDumpMemoryFormat(docp, &mem, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, mem);
htmlDocDumpMemoryFormat(docp, &mem, size);
htmlDocDumpMemoryFormat(docp, &mem, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, 0);
htmlDocDumpMemoryFormat(docp, &mem);
htmlDocDumpMemoryFormat(docp, &mem, mem, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, size);
htmlDocDumpMemoryFormat(docp, &mem, &size, mem, format);
htmlDocDumpMemoryFormat(docp, size, format);
htmlDocDumpMemoryFormat(docp, &mem, mem, size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, &format);
htmlDocDumpMemoryFormat(docp, &mem, &size, 0);
mem = htmlDocDumpMemoryFormat(docp, &mem, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, mem);
htmlDocDumpMemoryFormat(docp, &mem, mem, format);
htmlDocDumpMemoryFormat(docp, format);
htmlDocDumpMemoryFormat(docp, &mem, format);
size = htmlDocDumpMemoryFormat(docp, &mem, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, format, size);
htmlDocDumpMemoryFormat(docp, &mem, &size, *format);
htmlDocDumpMemoryFormat (docp, &mem, &size, format);
htmlDocDumpMemoryFormat(docp, mem, size);
htmlDocDumpMemory(docp, mem, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, buf);
htmlDocDumpMemoryFormat(docp, &mem, 0, format);
htmlDocDumpMemoryFormat(docp, mem, format);
htmlDocDumpMemoryFormat(docp, &mem, size, format, size);
htmlDocDumpMemoryFormat(&mem, &size, format);
(void)htmlDocDumpMemoryFormat(docp, &mem, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, mem);
htmlDocDumpMemoryFormat(docp, &mem, size, &format);
htmlDocDumpMemoryFormat(docp, 0, &mem, &size, format);
htmlDocDumpMemoryFormat(docp, mem, mem, size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, &size);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, 1);
htmlDocDumpMemoryFormat(docp, mem, mem, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, 1);
htmlDocDumpMemoryFormat(docp, &mem, size, format, 0);
htmlDocDumpMemoryFormat(docp, &mem, 0, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, &len, format);
htmlDocDumpMemoryFormat(docp, &mem, 1);
htmlDocDumpMemoryFormat(docp, &mem, &size, 0, format);
htmlDocDumpMemoryFormat(docp, size);
htmlDocDumpMemory(docp, mem, size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size - 1, format);
htmlDocDumpMemoryFormat(docp, mem);
return htmlDocDumpMemoryFormat(docp, &mem, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, size);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, NULL);
htmlDocDumpMemoryFormat();
htmlDocDumpMemoryFormat(docp, &mem, &size, buf, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, nsize);
htmlDocDumpMemoryFormat(docp, &mem, sizeof(mem), format);
htmlDocDumpMemory(docp, &mem, &size);
htmlDocDumpMemoryFormat(docp, &mem, &maxsize, format);
htmlDocDumpMemoryFormat(docp, &mem, nsize, format);
htmlDocDumpMemoryFormat(docp, &mem, format, mem);
htmlDocDumpMemoryFormat(docp, &mem, 0, size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, len);
htmlDocDumpMemoryFormat(docp, &mem, size, format, mem);
htmlDocDumpMemoryFormat(docp, &mem, (int)&size, format);
htmlDocDumpMemoryFormat(docp, *mem, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, PR_TRUE);
htmlDocDumpMemoryFormat(docp, mem, mem, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, url);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, 0, size);
htmlDocDumpMemoryFormat(docp, &mem, size, mem);
htmlDocDumpMemoryFormat(docp,mem,size,format);
htmlDocDumpMemoryFormat(docp, &mem, &size, str);
htmlDocDumpMemoryFormat(docp, &nmem, &size, format);
htmlDocDumpMemoryFormat(docp, &id, &size, format);
htmlDocDumpMemoryFormat(docp, format, &mem);
htmlDocDumpMemoryFormat(docp, &message, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, mem, size);
htmlDocDumpMemory(docp, &mem, size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, p);
htmlDocDumpMemoryFormat(docp, &mem, &nsize, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, &type);
htmlDocDumpMemoryFormat(docp, &mem, &size, url, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, &form);
htmlDocDumpMemoryFormat(docp->doc, &mem, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, format, 0);
htmlDocDumpMemoryFormat(docp, &mem, &size, &len);
htmlDocDumpMemoryFormat(docp, &mem, size, format, PR_TRUE);
htmlDocDumpMemoryFormat(docp, &mem, mem, size);
htmlDocDumpMemoryFormat(docp, &m, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, length);
htmlDocDumpMemoryFormat(docp, &mem, &size, &charset);
htmlDocDumpMemoryFormat(docp);
htmlDocDumpMemoryFormat(docp, &memp, &size, format);
m = htmlDocDumpMemoryFormat(docp, &mem, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, flags);
htmlDocDumpMemoryFormat(docp, size, &mem);
htmlDocDumpMemoryFormat(docp, &mem, 0, size);
htmlDocDumpMemoryFormat(docp, &mem, *format);
result = htmlDocDumpMemoryFormat(docp, &mem, &size, format);
htmlDocDumpMemoryInt(docp, &mem, &size, format);
htmlDocDumpMemoryFormat(docp, mem, &size);
htmlDocDumpMemoryFormat(docp, &mem, &size, mem->format);
htmlDocDumpMemoryFormat(docp, &mem, &size, len);
htmlDocDumpMemoryFormat(docp, NULL, &mem, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, m);
htmlDocDumpMemory(docp, &mem, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, NULL, format);
htmlDocDumpFormat(docp, &mem, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, charset);
HTMLDocDumpMemory(docp, &mem, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, p);
htmlDocDumpMemoryFormat(docp, &mem, format, &size);
htmlDocDumpMemoryFormat(docp, &mem, &format);
htmlDocDumpMemoryFormat(docp, &mem, &size, u);
htmlDocDumpMemoryFormat(docp, &mem, &size, 0, size);
htmlDocDumpMemoryFormat(docp, &mem, &size, NULL);
htmlDocDumpMemoryFormat(document, &mem, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, length);
htmlDocDumpMemoryFormat(docp, 0, size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, &p);
htmlDocDumpMemoryFormat(docp, &mem, &size, new_format);
htmlDocDumpMemoryFormat(docp, &mem, &size, val);
htmlDocDumpMemoryFormat(docp, &mem, &length, format);
static htmlDocDumpMemoryFormat(docp, &mem, &size, format);
htmlDocDumpMemoryFormat(docp, 0, format);
htmlDocDumpMemoryString(docp, &mem, &size, format);
htmlDocDumpMemoryFormat2(docp, &mem, &size, format);
htmlDocDumpMemoryFormat(cp, &mem, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, mem->size, format);
htmlDocDumpMemoryFormat(docp,mem,&size,format);
htmlDocDumpMemoryFormat(docp, &mem, &size, m_format);
htmlDocDumpMemoryFormat(docp, &mem, 0);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, 2);
htmlDocDumpMemory(docp, &mem, size);
htmlDocDumpMemoryFormat(docp, &mem, &size, 0, 0);
htmlDocDumpMemory(docp, &mem, &size, format, 0);
htmlDocDumpMemoryFormat(docp, &mem, &size, NULL, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, num);
gDocDumpMemoryFormat(docp, &mem, &size, format);
htmlDocDump_MemoryFormat(docp, &mem, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, mem_format);
htmlDocDumpMemoryFormat(docp, &mem, &size, &nsize);
htmlDocDumpMemoryFormat(p, &mem, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, buf, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, &mem);
htmlDocDumpMemoryFormat(docp, &mem, &format, size);
htmlDocDumpMemoryFormat(docp, &mem, &size, formats);
htmlDocDumpMemoryFormat(docp, &mmem, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, type);
htmlDocDumpMemoryFormat(docp, 1);
htmlDocDumpMemoryFormat(docp, &xmlChar, &size, format);
htmlDocDumpMemory(docp, &mem, &size, mem);
htmlDocDumpMemoryFormat(docp, &_mem, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, &m);
htmlDocDumpMemoryFormat(docp, &mem, &size, len, format);
htmlDocDumpMemoryFormat(docp, &smem, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, flags);
htmlDocDumpMemoryFormat(docp, &mem, &size - 1);
htmlDocDumpMemoryFormat(docp, &mem, len, format);
htmlDocDumpMemoryFormat(docp, &mem, 1, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, max);
htmlDocDumpMemoryFormat(docp, &mem, &size, format); #endif
htmlDocDumpMemoryFormat(docp, &mem, &size, &num);
htmlDocDumpMemoryFormat(docp, &mem, &size;
format = htmlDocDumpMemoryFormat(docp, &mem, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, length, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, mem->size);
htmlDocDumpMemoryFormat(docp, &mem, &size, bufsize);
htmlDocDumpMemory(docp, &mem);
htmlDocDumpMemoryFormat(docp, &mem, &size, html_format);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, buf);
htmlDocDumpMemoryFormat(docp, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, &name);
htmlDocDumpMemoryFormat(docp, &mem, &size, psize);
htmlDocDumpMemoryFormat(docp, &mem, &size, &ret);
htmlDocDumpMemoryFormat(docp, &mem, size, form);
htmlDocDumpMemoryFormat(docp, &mem, &size, encoding);
htmlDocDumpMemoryFormat(&mem, size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, &u);
#endif htmlDocDumpMemoryFormat(docp, &mem, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, &string);
htmlDocDumpMemoryFormat(docp, &mem, &size, &psize);
htmlDocDumpMemoryFormat(docp, &mem, &size, format->format);
htmlDocDumpMemoryFormat(docp, &mem, &size, size, format);
htmlDocDumpMemoryFormat(docp, &size);
htmlDocDumpMemoryFormat(docp, &mem, &size, &asize);
htmlDocDumpMemoryFormat(docp, &mem, &size, &formats);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, -1);
htmlDocDumpMemoryFormat(docp, &mem)
htmlDocDumpMemory(docp, size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, html_page_format);
htmlDocDumpMemoryFormat(docp, &mem, &size, &maxsize);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, u);
htmlDocDumpMemoryFormat(docp, &mem, &size, (u_long)format);
htmlDocDumpMemoryFormat(docp, &mem, &size, &a, &b);
htmlDocDumpMemoryFormat(docp, &mem, &size, &spl);
htmlDocDumpMemoryFormat(docp, &mem, size, format, &mem);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, &mem);
htmlDocDumpMemoryFormat(docp, &mem, &size, &format, &size);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, PR_FALSE);
htmlDocDumpMemoryFormat(docp, &mem, size, f);
htmlDocDumpMemoryFormat(docp, &mem, &size, doc_props->formatoutput);
htmlDocDumpMemoryFormat(docp, &mem, &size, &mrl);
htmlDocDumpMemoryFormat(docp, &mem, &size, (struct doc_props *)format);
htmlDocDumpMemoryFormat(docp, &mem, &size, &udp, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, &flags);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, m_type);
htmlDocDumpMemoryFormat(docp, &mem, &size, &nc->format);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, &dp, &dp, &dp);
htmlDocDumpMemoryFormat(docp, &mem, &size, (struct doc_props_t *)&format);
htmlDocDumpMemoryFormat(docp, &mem, &size, mem, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, nsnull);
htmlDocDumpMemoryFormat(docp, &mem, &size, &xmlSize);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, mem, &mem);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, PR_TRUE);
htmlDocDumpMemoryFormat(docp, &mem, &size, &dst->dst_format);
htmlDocDumpMemoryFormat(docp, &mem, &size, nsnull, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, html_strlen(docp), format);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, &index);
htmlDocDumpMemoryFormat(docp, &mem, &size, &format, &ch);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, &xmlChar, &xmlChar);
htmlDocDumpMemoryFormat(docp, &mem, &size, (unsigned long)format);
htmlDocDumpMemoryFormat(docp, &mem, size, &cmp, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, &return, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, &return);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, sizeof(struct doc_props));
htmlDocDumpMemoryFormat(docp, &mem, &size, &sz);
htmlDocDumpMemoryFormat(docp, &mem, &size, &tp, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, &cc);
htmlDocDumpMemoryFormat(docp, &mem, &size, &format, &save_props);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, &aCX);
htmlDocDumpMemoryFormat(docp, &mem, &size, &css->format);
htmlDocDumpMemoryFormat(docp, &mem, &size, &tmp);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, &format);
htmlDocDumpMemoryFormat(docp, &mem, &size, &format, &mem);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, &size);
htmlDocDumpMemoryFormat(docp, &mem, &size, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, &max_format, size);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, xmlDocPtr);
htmlDocDumpMemoryFormat(docp, &mem, &size, &format, &intern->document);
htmlDocDumpMemoryFormat(docp, &mem, &size, &res);
htmlDocDumpMemoryFormat(docp, &mem, &size, &format, 0);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, &p);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, sizeof(doc_props));
htmlDocDumpMemoryFormat(docp, &mem, size, format, &segment);
htmlDocDumpMemoryFormat(docp, &mem, &size, xmldoc_props->formatoutput);
htmlDocDumpMemoryFormat(docp, &mem, size, format, max);
htmlDocDumpMemoryFormat(docp, &mem, &size, doc_props->formatoutput, nsnull);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, cc_docinfo);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, &len);
htmlDocDumpMemoryFormat(docp, &mem, size, &format, size);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, &op, op_param);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, sizeof(mem), sizeof(struct doc_props));
htmlDocDumpMemoryFormat(docp, &mem, &size, &cp, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, &maxdptr);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, &save);
htmlDocDumpMemoryFormat(docp, &mem, &size, &tmpp, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, &format, &u.uid, u.uid);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, 0, 0);
htmlDocDumpMemoryFormat(docp, &mem, &size, csslen);
htmlDocDumpMemoryFormat(docp, &mem, &size, &u, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, &format, sizeof(doc_props));
htmlDocDumpMemoryFormat(docp, &mem, &size, &format, &format, &size);
htmlDocDumpMemoryFormat(docp, &mem, &size, &int) == 0;
htmlDocDumpMemoryFormat(docp, &mem, &size, &nsMemory; &nsCRT::sep, &nsMemory);
htmlDocDumpMemoryFormat(docp, &mem, &size, &saved, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, html_class_get_class_get_class_code(id), format);
htmlDocDumpMemoryFormat(docp, &mem, &size, html_size);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, &page, &page, &page, &page, &page, &page);
htmlDocDumpMemoryFormat(docp, &mem, size, format, html_doc_props->struct_props->formatoutput);
htmlDocDumpMemoryFormat(docp, &mem, &size, &inp, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, ptr_t ptr_t, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, &advance));
htmlDocDumpMemoryFormat(docp, &mem, &size, &mbuf, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, &mem, mem);
htmlDocDumpMemoryFormat(docp, &mem, &size, nsnull);
htmlDocDumpMemoryFormat(docp, &mem, &size, &format, size);
htmlDocDumpMemoryFormat(docp, &mem, size, u_int32_t __user__);
htmlDocDumpMemoryFormat(docp, &mem, &size, ((unsigned char)format));
htmlDocDumpMemoryFormat(docp, &mem, &size, &format, &char_format);
htmlDocDumpMemoryFormat(docp, &mem, &size, &xmlFragment, &format);
htmlDocDumpMemoryFormat(docp, &mem, &size, &nsCRT::format);
htmlDocDumpMemoryFormat(docp, &mem, &size, &id, dom_document_class_entry);
htmlDocDumpMemoryFormat(docp, &mem, &size, &arena, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, aCnt);
htmlDocDumpMemoryFormat(docp, &mem, &size, format, uint32_t size);
htmlDocDumpMemoryFormat(docp, &mem, &size, xmlPtr);
htmlDocDumpMemoryFormat(docp, &mem, &size, doc_props->formatoutput, size);
htmlDocDumpMemoryFormat(docp, &mem, &size);
htmlDocDumpMemoryFormat(docp, &mem, &size, format);
&htmlDocDumpMemoryFormat(docp, &mem, &size, format);
htmlDocDumpMemoryFormat(docp, &mem, size, format);
htmlDocDumpMemoryFormat(docp, &mem, &size, format);
<htmlDocDumpMemoryFormat(docp, &mem, &size, format);
