golden:
mpn_redc_1 (rp, tp, mp, n, mip[0]);
inference:
mpn_redc_1 (b2p, tp, mp, n, mip);
mpn_redc_1(b2p, tp, mp, n, mip[0]);
mpn_redc_2 (b2p, tp, mp, n, mip[0]);

mpn_redc_1 (b2p, tp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n);
mpn_redc_1 (b2p, tp, mp, n, cnt);
mpn_redc_1 (b2p, tp, mp, n, ip[0]);
mpn_redc_1 (b2p, tp, mp, n, &mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip[1]);
mpn_redc_1 (b3p, tp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip[2]);
mpn_redc_1 (b2p, tp, mp, n, mip, 0);
mpn_redc_1 (b2p, tp, mp, n, 0);
mp_redc_1 (b2p, tp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, *mip[0]);
mpn_redc_1 (b2p, tp, mp, &n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip[0], 0);
mpn_redc_0 (b2p, tp, mp, n, mip[0]);
mpn_redc_1 (b2p, p, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, n);
mpn_redc_1 (b2p, tp, mp, n, mip[i]);
mpn_redc_1 (b2p, tp, mp, p, n, mip[0]);
(void)mpn_redc_1 (b2p, tp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, tp);
mpn_redc_1 (b2p, tp, mp, m, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip[0]));
mpn_redc_3 (b2p, tp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, i, mip[0]);
mpn_redc_1 (&b2p, tp, mp, n, mip[0]);
mpn_redc_1 (b2, tp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip[3]);
mpn_redc_1 (b2p, tp, mp, n, ep[0]);
mpn_redc_1 (b2p, tp, mp, tp, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip));
mpn_redc_1 (b2p, tp, mp, n, mip)
mpn_redc_1 (b2p, tp, mp, n, p, mip[0]);
mpn_redc_1 (b2p, tp, mp, 0, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip[n]);
mpn_redc_1 (rp, tp, mp, n, mip[0]);
(void) mpn_redc_1 (b2p, tp, mp, n, mip[0]);
mpn_dec_1 (b2p, tp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, v3);
mpn_redc_1 (b2p, tp, mp, n, mip[0] - 1);
mpn_redc_1 (b2p, tp, mp, n, *mip);
const mpn_redc_1 (b2p, tp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, v);
mpn_redc_1 (b2p, tp, mp, n, m);
mpn_redc_1 (b2p, tp, mp, n, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, p);
mpn_redc_1 (b2p, tp, mp, n, rp[0]);
mpn_redc_1 (b2p, lp, mp, n, mip[0]);
pn_redc_1 (b2p, tp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, size, mip[0]);
mpn_redc_1 (b2p, *mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, b2p);
mpn_redc_1 (b2p, tp, mp, n, mip[0], n);
mpn_redc_1 (b2p, tp, mp, n, mip[0])
mpn_redc_1 (b2p, tp, mp, n, mip, cnt);
mpn_redc_1 (b2p, tp, mp, n, &mip);
mpn_redc_1 (b2p, tp, mp, n+1, mip[0]);
mpn_redc_1 (b2p, tp, p, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, ip, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, lp);
mpn_redc_1 (b2p, tp, mp, n, rp);
mpn_redc_1 (b2p, (long)tp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip, 1);
mpn_redc_1 (b2p, tp, mp, n - 1, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, b2);
mpn_redc_1 (b2p, tp, mp, i, mip[0]);
mpn_redc_1 (b2p, tp, mp, a, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, n, mip);
mpn_redc_1 (b2p, tp, mp, n, mip[0] + 1);
mpn_dc_1 (b2p, tp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, ip[0], mip[0]);
mpn_redc_1 (b2p, tp, mp, n, 0, mip[0]);
n = mpn_redc_1 (b2p, tp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip, NULL);
mpn_redc_1 (b2p, tp, mp, (int)n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip[0], 1);
mpn_redc_1 (b2p, tp, mp, n, i);
mpn_redc_1 (b2p, tp, mp, n + 1, mip[0]);
mpn_redc_1 ((b2p, tp, mp, n, mip[0]));
mpn_redc_1 (b2p, tp, mp, n, mip[0]+1);
mpn_redc_1 (b1p, tp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, np, mip[0]);
int mpn_redc_1 (b2p, tp, mp, n, mip[0]);
_mpn_redc_1 (b2p, tp, mp, n, mip[0]);
mpn_redc_1 (tp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip, n);
mpn_redc_1 (b2p, tp, mp, n, vp);
mmpn_redc_1 (b2p, tp, mp, n, mip[0]);
struct mpn_redc_1 (b2p, tp, mp, n, mip[0]);
mpn_redc_1 (b2p, (int)tp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, cnt, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip[0], NULL);
mpn_redc_1 (b2p, tp, *mp, n, mip[0]);
mpn_redc_1 (b2p, n, mip[0]);
mpn_redc_1 (b2p, 0, mp, n, mip[0]);
mpn_redc_(b2p, tp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mi);
mpn_redc_1 (b2p, tp, mp, n, mip[0], 3);
mpn_redc_1 (b2p, tp, mp, (long)n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip[0], size);
mpn_redc_1 (b2p, tp, mpp, n, mip[0]);
mpn_redc_1 (b2p, 0, tp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, ip[0]);
mpn_redc_1 (b2p, tp, mp, n, p[0]);
mpn_redc_1 (b2p, tp, mp, n)
mpn_redc_1 (n, b2p, tp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, en, mip[0]);
mpn_redc_1 (b2p, tp, mp, 0);
mpn_redc_1 (b2p, tp, mp, n, ap[0]);
mpn_redc_1 (b2p, tp, mp, num, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, ip);
mpn_redc_4 (b2p, tp, mp, n, mip[0]);
&mpn_redc_1 (b2p, tp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, b2, mip[0]);
mpn_redc_1 (b2p, tp, mp, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, bp[0]);
mpn_redc_1 (b2p, tp, mp, n, m, mip[0]);
mpn_redc_1 (b2p, tp, 0, mp, n, mip[0]);
mpn_redc_1 (b2p, tp);
mpn_redc_1 (b2p, tp, mp, n, mip, size);
mpn_redc_1 (b2p, *tp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, l, mip[0]);
mpn_redc_1 ( b2p, tp, mp, n, mip[0] );
mpn_redc_1 (b2p, tp, mp, n, &ip[0]);
*mpn_redc_1 (b2p, tp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip[0], p);
mpn_redc_1 (b2p, tp, mp, n, mup[0]);
mpn_redc_1 (b2p, tp, mp, n, mip [0]);
mpn_redc_1 (b2p, tp, mp, n, np);
mpn_redc_1 (b2p, tp, mp, n, len, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, n - 1);
mpn_redc_1 (b2p, tp, mp, s, mip[0]);
mpn_redc_1) (b2p, tp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip[0], tp);
return mpn_redc_1 (b2p, tp, mp, n, mip[0]);
mpn_redc_1, b2p, tp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, b2p[0]);
mpn_redc_1 (b2p, tp, mp, n, mip[0], 4);
mpn_redc_1 (B2P, tp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip[4]);
m = mpn_redc_1 (b2p, tp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip - 1);
mpn_redc_1 (b2p, tp, mp, n, mip[-1]);
mpn_redc_1 (b2p, tp, mp, n, map[0]);
mpn_redc_1 (b2);
mpn_redc_1 (b2p, tp, mp, n, mip[cnt]);
mpn_redc_1 (b2p, tp, mp, n, mip == 0);
mpn_redc_1 (b2p, tp, mp, mp, n, mip);
mpn_redc_1 (b2p, tp, mp, n, mip, p);
mpn_redc_1 (b2p, tp, mp, n, cnt[0]);
mpn_redc_1 (b2p, tp, mp, n, mip[0], 2);
mpn_redc_1 (b2p, tp, mp, n, mip[0], 0, 0);
mpn_redc_1 (b2p, tp, mp, n, mip[mip]);
mpn_redc_1 (b2p, tp, mp, n, mip[0], v);
mpn_redc_1 (b2p, tp, mp, n, mip[0], np);
mpn_redc_1 ( b2p, tp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip, &mip);
mpn_redc_1 (b2p, tp, mp);
mpn_redc_1 (b2p, tp, mp, n, mip, tp);
mpn_redc_1 (b2p, mp, n, mip);
mpn_redc_1 (b2p, tp, mp, n, mip, np);
mpn_redc_1 (b2p, tp, mp, n, mip[0], rp);
mpn_redc_1 (b2p, tp, mp, n, mip, rp);
mpn_redc_1 (b2p, tp, mp, n, mip[0], ap);
mpn_redc_1 (b2p, tp, mp, n, mp_limbs[0]);
mpn_redc_1 (b2p);
mpn_redc_1 (b2p, tp, mp, n, mip[0], lp);
mpn_redc_1 (b2p, tp, mp, n, mip[0], i);
mpn_redc_1 (b2p, tp, mp, n, mip[0], en);
mpn_redc_1 (b2p, tp, mp, n, mip[0], -1);
mpn_redc_1 (b2p, tp, mp, n, mip, b2p);
mpn_redc_1 (b2p, tp, mp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip[0] - 2);
mpn_redc_1 (b2p, tp, mp, n, mip[0], b2);
mpn_redc_1 (b2p, tp, mp, n, mip[0], v3);
mpn_redc_1 (mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip[0], ip);
mpn_redc_1 (b2p, tp, mp, n, mip[0], n+1);
mpn_redc_1 (b2p, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip[0], ep);
mpn_redc_1 (b2p, tp, mp, n, mip, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, b2p->mip);
mpn_redc_1 (b2p, tp, mp, n, mip[0], ret);
mpn_redc_1 (b2p, tp, mp, n, mip[0], n)
mpn_redc_1 (b2p, tp, mp, n, mip[0], vp);
mpn_redc_1 (b2p, tp, mp, n, mip[0] - 1));
mpn_redc_1 (b2p, tp, mp, n, mip[0], dp);
mpn_redc_1 (b2p, tp, mp, n, mip[0], hp);
mpn_redc_1 (b2p, tp, mp, n, mip[0], &n);
mpn_redc_1 (b2p, tp, mp, n, b2p->b2p);
int i;
mpn_redc_1 (b2p, tp, mp, n, mip[0], cnt);
mpn_redc_1 (b2p, tp, mp, n, mp_ptr_n);
mpn_redc_1 (b2p, tp, mp, n, mip[0] + cnt);
mpn_redc_1 (b2p, tp, mp, n, mip[0], &mip);
mpn_redc_1 (b2p, tp, mp, n, n, n);
mpn_redc_1 (b2p, tp, mp, n, &mp_b2p, mp_srcptr b2p, mp_b2p, mp_b2p, mp_b2p, mp_b2p, mp_b2p, mp_b2p, mp_b2p, mp_b2p, mp_b2p, mp_b2p, mp_b2p, mp_b2p, mp_b2p, mp_b2p, mp_b2p, mp_b2p, mp_b2p, mp_b2p, mp_b2p, mp_b2p, mp_b2p, mp_b2p, mp_b2p, mp_b2p, mp_b2p, mp_b2p, mp_b2p, mp_b2p, mp_b2p, mp_b2p,
mpn_redc_1 (b2p, tp, mp, n, mip[0], (int) 0);
mpn_redc_1 (b2p, tp, mp, n, mip[0], &ip);
mpn_redc_1 (b2p, tp, mp, n, &switch);
mpn_redc_1 (b2p, tp, mp, n, mip[0]); /* Is the case where the b2p is used, in some cases we must're in the lower case. */
mpn_redc_1 (b2p, tp, mp, n, n, mip[0], b2p, b2p_rp, b2p_rp);
mpn_redc_1 (b2p, tp, mp, n, pcnt);
mpn_redc_1 (b2p, tp, mp, n, tp->tp->np_invp, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, p2p->mip[0]);
mpn_redc_1 (b2p, tp, mp, n, b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p->b2p
mpn_redc_1 (b2p, tp, mp, n, mip, (long)(mp_limb_t) b2);
mpn_redc_1 (b2p, tp, mp, n, mip[0] + (int) & 0x7fff);
mpn_redc_1 (b2p, tp, mp, n, &(n+1));
mpn_redc_1 (b2p, tp, mp, n, v2);
mpn_redc_1 (b2p, tp, mp, n, ptr_t);
mpn_redc_1 (b2p, tp, mp, n, &(mp_ptr_t)mip[0]);
mpn_redc_1 (b2p, tp, mp, n, a1, a2, a3, a4);
mpn_redc_1 (b2p, tp, mp, n, &(mp_limb_t)mip[0]);
mpn_redc_1 (b2p, tp, mp, n, spl_b2p, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip[0], &mp_ptr);
mpn_redc_1 (b2p, tp, mp, n, &tp);
mpn_redc_1 (b2p, tp, mp, n, tp->tp_size);
mpn_redc_1 (b2p, tp, mp, n, mp_ptr_tp, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mp_ptr (tp));
mpn_redc_1 (b2p, tp, mp, n, rp, p);
mpn_redc_1 (b2p, tp, mp, n, s);
mpn_redc_1 (b2p, tp, mp, n, mip, &mp_dvp, mp_fd);
mpn_redc_1 (b2p, tp, mp, n, mip[0], mp_mode);
mpn_redc_1 (b2p, tp, mp, n, n, m_ptr_len);
mpn_redc_1 (b2p, tp, mp, n, mp_limb_t ip[2], mp_limb_t ip[3], mp_limb_t ip[5], mp_limb_t ip[6], mp_limb_t ip[7]);
mpn_redc_1 (b2p, tp, mp, n, mip[0], switch);
mpn_redc_1 (b2p, tp, mp, n, src_len, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip[0], p)
mpn_redc_1 (b2p, tp, mp, n, m_p[0]);
mpn_redc_1 (b2p, tp, mp, n, mip[0], &mip[0]);
mpn_redc_1 (b2p, tp, mp, n, r, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, b2p, b2);
mpn_redc_1 (b2p, tp, mp, n, mpn_fm_ip_n);
mpn_redc_1 (b2p, tp, mp, n, srcptr_t src, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, scp, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, vp[0]);
mpn_redc_1 (b2p, tp, mp, n, &lp);
mpn_redc_1 (b2p, tp, mp, n, std::endptr_t, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mp_limb_t ip[2], mp_limb_t n, mp_limb_t n, mp_limb_t n, mp_limb_t n, mp_limb_t n, mp_limb_t n, mp_limb_t tp, mp_limb_t tp, mp_limb_t tp, mp_limb_t tp, mp_limb_t tp, mp_limb_t tp, mp_limb_t tp, mp_limb_t tp, mp_limb_t tp, mp_limb_t tp, mp_limb_t tp, mp_limb_t tp, mp_limb_t tp, mp_limb_t tp, mp_limb_t tp, mp_limb_t tp, mp_limb_t
mpn_redc_1 (b2p, tp, mp, n, mip, (void *)0, 0);
mpn_redc_1 (b2p, tp, mp, n, np->b2p_srcptr, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, &mp_limb_t, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mp_ptr_sip[0]);
mpn_redc_1 (b2p, tp, mp, n, cnt, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mp_ptr tp, mp_limb_t p, mp_limb_t p, mp_limb_t p, mp_limb_t p, mp_limb_t p, mp_limb_t p, mp_limb_t p, mp_limb_t p, mp_limb_t p, mp_limb_t p, mp_limb_t p, mp_limb_t p, mp_limb_t p, mp_limb_t p, mp_limb_t p, mp_limb_t p, mp_limb_t p, mp_limb_t p, mp_limb_t p, mp_limb_t p, mp_limb_t p, mp_limb_t p, mp_limb_t p, mp_limb_t p, mp_limb_t
mpn_redc_1 (b2p, tp, mp, n, mip[0], ptr, mptr->ptr_type);
mpn_redc_1 (b2p, tp, mp, n, p, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mp_limb_t mip[0]);
mpn_redc_1 (b2p, tp, mp, n, vp, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mp_limb_t ip[0]);
mpn_redc_1 (b2p, tp, mp, n, n + 1, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip[0]) || (mp_limb_t rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, rp, r
mpn_redc_1 (b2p, tp, mp, n, n, vp);
mpn_redc_1 (b2p, tp, mp, n, mip[0] && n  0);
mpn_redc_1 (b2p, tp, mp, n, mpn_size_t mip[0]);
mpn_redc_1 (b2p, tp, mp, n, sc, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip[0]);  else  for (i = 0; i  mip; i++)  mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp);  if (mip[0] == 0)  mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip, lp);
mpn_redc_1 (b2p, tp, mp, n, mp_ptr_dep, mp_ptr_n, mp_ptr_n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip, &n->in_dp, &n->in_dp);
mpn_redc_1 (b2p, tp, mp, n, mip[0] + (n == 0 || n == 0)));
mpn_redc_1 (b2p, tp, mp, n, mip, lbmip);
mpn_redc_1 (b2p, tp, mp, n, m, ip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip[0], b2p, b2p, b2p->mip)
mpn_redc_1 (b2p, tp, mp, n, mip, &mip[0]);
mpn_redc_1 (b2p, tp, mp, n, p2, cnt);
mpn_redc_1 (b2p, tp, mp, n, mip, ip[0]);
mpn_redc_1 (b2p, tp, mp, n, pn, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, cnt, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, &b2p);
mpn_redc_1 (b2p, tp, mp, n, mp_srcptr b2p, mp_srcptr b2p, mp_srcptr b2p, mp_srcptr b2p, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr b2p, mp_ptr b2p, mp_size_t bn, mp_srcptr b2p, mp_size_t bn, mp_srcptr b2p, mp_size_t bn, mp_srcptr b2p, mp_size_t b2p, mp_size_t bn, mp_srcptr b2p, mp_size_t bn, mp_src
mpn_redc_1 (b2p, tp, mp, n, mip, n - bp[1]);
mpn_redc_1 (b2p, tp, mp, n, mp_srcptr b2p, mp_size_t bn, mp_srcptr b2p, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr mp, mp_ptr mp, mp_ptr mp, mp_size_t n, mp_ptr p, mp_ptr p, mp_ptr p);
mpn_redc_1 (b2p, tp, mp, n, mip, b2p, b2p, b2p, b2p, b2p, b2p, b2);
mpn_redc_1 (b2p, tp, mp, n, mp_limb_t ip[2], mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mp);
mpn_redc_1 (b2p, tp, mp, n, mp_limb_t b2p, mp_limb_t bp, mp_limb_t bp, mp_limb_t b2p, mp_limb_t bn, mp_limb_t bn, mp_limb_t bn, mp_limb_t bp, mp_limb_t bn, mp_limb_t b2p, mp_limb_t bn, mp_limb_t bp, mp_limb_t bn, mp_limb_t bp, mp_limb_t bn, mp_limb_t bn, mp_limb_t bn, mp_limb_t bn, mp_limb_t bp, mp_limb_t bn, mp_limb_t bp, mp_limb_t bn, mp_limb_t bp
mpn_redc_1 (b2p, tp, mp, n, r);
mpn_redc_1 (b2p, tp, mp, n, mip[0], sizeof(mpn_binvert_itch));
mpn_redc_1 (b2p, tp, mp, n, mip[0]); &else <for (i = 0; i <mip; i++) <mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); <else <for (i = 0; i mip; i++) &mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); <else <for (i = 0; i &mip; i++) &mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); <else <for (i = 0; i <mip; i++) <mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); <else &for (i = 0; i mip; i++) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); else <for (i = 0; i &mip; i++) &mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); else <for (i = 0; i <mip; i++) &mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); else <for (i = 0; i <mip; i++) <mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); <else <for (i = 0; i <mip; i++) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); &else for (i = 0; i mip; i++) <mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); else &for (i = 0; i <mip; i++) &mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); <else &for (i = 0; i mip; i++) <mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); else for (i = 0; i <mip; i++) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); &else &for (i = 0; i mip; i++) &mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); <else for (i = 0; i &mip; i++) <mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); else for (i = 0; i <mip; i++) &mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); <else <for (i = 0; i <mip; i++) &mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); <else &for (i = 0; i &mip; i++) <mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); &else &for (i = 0; i mip; i++) <mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); &else for (i = 0; i <mip; i++) &mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); <else for (i = 0; i mip; i++) &mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); &else &for (i = 0; i &mip; i++) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); else &for (i = 0; i &mip; i++) &mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); <else for (i = 0; i &mip; i++) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); &else for (i = 0; i mip; i++) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); &else &for (i = 0; i &mip; i++) <mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); <else for (i = 0; i <mip; i++) <mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0] && n &0);
mpn_redc_1 (b2p, tp, mp, n, mip[0]); <else for (i = 0; i mip; i++) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip);
mpn_redc_1 (b2p, tp, mp, n, mip[0]); else <for (i = 0; i &mip; i++) <mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0] && n 0);
mpn_redc_1 (b2p, tp, mp, n, mip[0]); else <for (i = 0; i mip; i++) &mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip[0]); &else for (i = 0; i &mip; i++) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); else for (i = 0; i &mip; i++) &mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); &else &for (i = 0; i <mip; i++) <mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); &else for (i = 0; i <mip; i++) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); <else <for (i = 0; i &mip; i++) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); else &for (i = 0; i mip; i++) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); else &for (i = 0; i mip; i++) &mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); &else <for (i = 0; i &mip; i++) <mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); &else <for (i = 0; i mip; i++) <mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); <else &for (i = 0; i mip; i++) &mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); <else for (i = 0; i <mip; i++) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); else for (i = 0; i mip; i++) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); &else for (i = 0; i <mip; i++) <mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0] && n <0);
mpn_redc_1 (b2p, tp, mp, n, mip[0]); else &for (i = 0; i &mip; i++) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); &else <for (i = 0; i mip; i++) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); &else <for (i = 0; i &mip; i++) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
&mpn_redc_1 (b2p, tp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip[0]); else <for (i = 0; i &mip; i++) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); <else &for (i = 0; i &mip; i++) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); else for (i = 0; i <mip; i++) <mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); else for (i = 0; i &mip; i++) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); <else &for (i = 0; i <mip; i++) <mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); else <for (i = 0; i mip; i++) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); &else <for (i = 0; i <mip; i++) &mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); <else <for (i = 0; i mip; i++) <mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); <else for (i = 0; i <mip; i++) &mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); &else &for (i = 0; i <mip; i++) &mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); &else <for (i = 0; i mip; i++) &mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); else &for (i = 0; i <mip; i++) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); <else <for (i = 0; i mip; i++) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); <else &for (i = 0; i <mip; i++) &mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); &else &for (i = 0; i &mip; i++) &mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); <else for (i = 0; i &mip; i++) &mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); <else &for (i = 0; i <mip; i++) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); else &for (i = 0; i <mip; i++) <mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); &else <for (i = 0; i &mip; i++) &mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); <else for (i = 0; i mip; i++) <mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); &else <for (i = 0; i <mip; i++) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); <else &for (i = 0; i &mip; i++) &mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); &else for (i = 0; i mip; i++) &mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); else <for (i = 0; i <mip; i++) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); &else for (i = 0; i &mip; i++) &mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); &else &for (i = 0; i <mip; i++) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); else for (i = 0; i mip; i++) &mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); &else &for (i = 0; i mip; i++) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip[0]); else &for (i = 0; i mip; i++) <mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); else <for (i = 0; i mip; i++) <mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
<mpn_redc_1 (b2p, tp, mp, n, mip[0]);
mpn_redc_1 (b2p, tp, mp, n, mip[0]); else &for (i = 0; i &mip; i++) <mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); &else for (i = 0; i &mip; i++) <mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); <else <for (i = 0; i &mip; i++) <mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); else for (i = 0; i &mip; i++) <mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
mpn_redc_1 (b2p, tp, mp, n, mip[0]); else for (i = 0; i mip; i++) <mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp, mp_size_t n, mp_ptr tp); if (mip[0] == 0) mpn_redc_1 (mp_ptr rp, mp_srcptr rp, mp_size_t bn, mp_srcptr mp, mp_size_t n, mp_ptr tp); mpn_redc_1 (mp_ptr rp,
