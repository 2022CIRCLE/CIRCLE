golden:
if (Py_EnterRecursiveCall(" while encoding a JSON object")) return -1; rv = encoder_listencode_list(s, rval, obj, indent_level); Py_LeaveRecursiveCall(); return rv;
inference:
return _encoder_listencode_list(s, rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj);
return encoder_listencode_list(s, rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, 0);
return PyEncoder_listencode_list(s, rval, obj, indent_level);
return (encoder_listencode_list(s, rval, obj, indent_level));
return Encoder_listencode_list(s, rval, obj, indent_level);
return encoder_listencode_list(s, obj, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, flags);
return encoder_listencode_list(s, rval, newobj, indent_level);
return _listencode_list(s, rval, obj, indent_level);
return encoder_listencode_list(s, rval);
return encoder_listencode_list(s, rval, obj, 0);
return Py.encoder_listencode_list(s, rval, obj, indent_level);
return Py_encoder_listencode_list(s, rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, NULL);
return encoder_listencode_list(s, rval, obj, indent_level, rval);
return encoder_listencode_list(s, rval, obj, &indent_level);
return encoder_listencode_list(s, rval, obj, indent_level - 1);
return encoder_listencode_list(s, rval, obj, rval, indent_level);
return (_encoder_listencode_list(s, rval, obj, indent_level));
return _steal_list_append(s, rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, 0, indent_level);
return coder_listencode_list(s, rval, obj, indent_level);
return PyDecoder_listencode_list(s, rval, obj, indent_level);
PyReturn encoder_listencode_list(s, rval, obj, indent_level);
return encoder_listencode_list (s, rval, obj, indent_level);
return encoder_listencode_list(s, rval, &obj, indent_level);
return encoder_listencode_list(obj, indent_level);
return encoder_listencode_list(rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, p);
return _steal_list_append(rval, encoded);
return encoder_listencode_list(s, rval, obj, ssize);
return encoder_listencode_list(s, rval, obj, indent_level, null);
return _encode_listencode_list(s, rval, obj, indent_level);
return encoder_listencode_list(s, s, rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, rval);
return __encoder_listencode_list(s, rval, obj, indent_level);
return encoder_listencode_list(s, rval, (int)obj, indent_level);
return encoder_listencode_list(s, rval, obj, indent);
return _decoder_listencode_list(s, rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, -1);
return encoder_listencode_list(s, indent_level);
return decoder_listencode_list(s, rval, obj, indent_level);
return encoder_listencode_list( s, rval, obj, indent_level );
return encoder_listencode_list(s, rval, obj, indent_level, ret);
return Pyencoder_listencode_list(s, rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, true);
return PY_ENcoder_listencode_list(s, rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, _indent_level);
return encoder_listencode_list(&s, rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, false);
return s_encoder_listencode_list(s, rval, obj, indent_level);
return (Encoder_listencode_list(s, rval, obj, indent_level));
return encoder_listencode_list(s, rval, obj, NULL, indent_level);
return encoder_listencode_list(s, rval, obj, sizeof(obj));
return encoder_listencode_list(s, rval, obj, ssize, indent_level);
return encoder_encode_list(s, rval, obj, indent_level);
return PY_encoder_listencode_list(s, rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level == 0);
return encoder_listencode_list(s, rval, obj, indent_level, v);
return encoder_listencode_list(s, rval, obj, indent_level, val);
return Py_Encoder_listencode_list(s, rval, obj, indent_level);
return encoder_listencode_list(s, rval, cstr, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, size);
return PyUnicode_encode_list(s, rval, obj, indent_level);
return PyList_encoder_listencode_list(s, rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, length);
return encoder_listencode_list(s, newobj, indent_level);
return encoder_listencode_list(s, lval, obj, indent_level);
return *encoder_listencode_list(s, rval, obj, indent_level);
return encoder_listencode_list(s, retval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level)
return encoder_listencode_list(s, rval, (void *)obj, indent_level);
return encoder_listencode_list(s, rval, obj, *indent_level);
return encoder_listencode_list(s, rval, obj, indent_level+1);
return _Encoder_listencode_list(s, rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, len);
return encoder_listencode_list(s, rval, *obj, indent_level);
return encoder_listencode_list(s, rval, obj, flags, indent_level);
return encoder_listencode_list(s, rval, obj, level);
return encoder_listencode_list(s, rval, obj, indent_level, 1);
return encoder_listencode_list(s, rval, obj, type);
return encoder_listencode_list(s, rval, indent_level);
return encoder_listencode_list(s, rval, obj, flags);
return (s, rval, obj, indent_level);
return encoder_listencode(s, rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level + 1);
return encoder_listencode_list(s, rval, _obj, indent_level);
return Py_listencode_list(s, rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, sp);
return encoder_listencode_list_element(s, rval, obj, indent_level);
return encoder_listencode_list(s, i, rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, parent, indent_level);
return encoder_listencode_list(s, rval, s, obj, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, type);
return encoder_listencode_list(s, rval, obj, id, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, s);
return s_listencode_list(s, rval, obj, indent_level);
return encoder_listencode_list(s, aval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, len, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, 0, 0);
return PyEncoder_encode_list(s, rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, NULL);
return encoder_listencode_list(s, rval, obj, indent_level-1);
return encoder_listencode_list(s, rval, p, indent_level);
return encoder_listencode_list(s, rval, obj, PR_FALSE);
return encoder_listencode_list(s, rval, obj, indent_level, length);
return encoder_listencode_list(s, rval, obj, rval->indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, ep);
return encoder_listencode_list(s, &rval, obj, indent_level);
return encoder_listencode_list(s, rval, ibj, indent_level);
return encoder_listencode_list(s, indent_level, rval, obj);
return encoder_listencode_list(s, rval, obj, 1);
return encoder_listencode_list(obj, s, rval, indent_level);
return encoder_listencode_list(py, rval, obj, indent_level);
return PyENcoder_listencode_list(s, rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, obj);
return encoder_listencode_list(s, rval, p, obj, indent_level);
result = encoder_listencode_list(s, rval, obj, indent_level); return result;
return encoder_listencode_list(s, rval, (void **)obj, indent_level);
return encoder_listencode_list(s, RVAL, obj, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, debug);
return encoder_listencode_list(s, val, obj, indent_level);
return encoder_listencode_list(s, rval, 0, obj, indent_level);
return encoder_listencode_list(s, rval, obj, unsigned indent_level);
return encoder_listencode_list(s, nrval, obj, indent_level);
return PyList_listencode_list(s, rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, -1, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, res);
return encoder_listencode_list(s, rval, obj, Indent_Level);
return encoder_listencode_list(s, 0, rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, (int)indent_level);
return encoder_listencode_list(s, rval, obj, indent, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, l);
return listener_listencode_list(s, rval, obj, indent_level);
return encoder_listencode_list(s,rval,obj,indent_level);
return encoder_listencode_list(s, rval, Py_Obj, indent_level);
return encoder_listencode_list(s, rval, _steal_list, indent_level);
return encoder_listencode_list(s, (void *)rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, tmp);
return encoder_listencode_list(p, rval, obj, indent_level);
return PyTuple_listencode_list(s, rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level > 0);
return encoder_listencode_list(s, rval, ops, indent_level);
return encoder_listencode_list(s, rval, obj, (int) indent_level);
return encoder_listencode_list(s, a, rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, rv);
return encoder_listencode_list(S, rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, pi);
return encoder_listencode_list(s, (void **)rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, type, indent_level);
return encoder_listencode_list(s, rval, obj, true, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, name);
return (coder_listencode_list(s, rval, obj, indent_level));
return encoder_listencode_list(newobj, rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, path);
return encoder_listencode_list(s, rval, obj, indent_level, this);
return encoder_listencode_list(s, rval, (u_long)obj, indent_level);
return encoder_listencode_list(s, rval, obj, false);
return encoder_listencode_list(sp, rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, null, indent_level);
return encoder_listencode_list(s, rval, obj, 1, indent_level);
return encoder_listencode_list(s, *rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, size);
return encoder_listencode_list(s, rval, obj, url, indent_level);
return_encoder_listencode_list(s, rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, namespace, indent_level);
return encoder_listencode_list(s, rval, obj, Py_indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, url);
return encoder_listencode_list(s, rval, obj, indent_level, pa);
return encoder_listencode_list(s, rval, obj, indent_level, dummy);
return encoder_listencode_list(obj, rval, indent_level);
return encoder_listencode_list(s, rval, obj, s);
return encoder_listencode_list(s, rval, obj, indent_level, nil);
return encoder_listencode_list(s, rval, obj, sizeof(indent_level));
return encoder_listencode_list(s, rval, obj, id);
return encoder_listencode_list(s, rval, obj, indent_level, fp);
return encoder_listencode_list(s, rval, obj, indent_level, void);
return encoder_listencode_list(s, rval, 0);
return encoder_listencode_list(s, rval, obj, len);
return encoder_listencode_list(s, rval, u, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, buf);
return encoder_listencode_list(s, rval, obj, indent_level, td);
return _encoder_listencode_list(s, rval, obj);
return _steal_list_append(rval, cstr);
return encoder_listencode_list(s, rval, obj, indent_level, rval;
return encoder_listencode_list(s, rval, obj, indent_level, sig);
return encoder_listencode_list(s, rval, obj, int_level);
return encoder_listencode_list(s, rval, obj, val);
return encoder_listencode_list(s, rval, obj, indent_level, encoding);
return encoder_listencode_list(s, rval, obj, indent_level, param);
return encoder_listencode_list(s, rval, obj, indent_level, indent);
return encoder_listencode_list(s, rval, obj, indent_level, sl);
return _listencode_list_add(s, rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, obj);
return encoder_listencode_list(s, rval, obj, indent_level, rval->as_eol);
return encoder_listencode_list(s, rval, obj, _list_descendant_level);
return encoder_listencode_list(s, rval, obj, _encode_level);
return encoder_listencode_list(s, rval, obj, obj, indent_level, rval);
return encoder_listencode_list(s, rval, obj, indent_level, hz);
return encoder_listencode_list(s, rval, obj, indent_level, obj->obj_type);
return encoder_listencode_list(s, rval, obj, indent_level, PyPyFalse);
return encoder_listencode_list(s, rval, obj, indent_level, rval++);
return encoder_listencode_list(s, rval, obj, nsnull);
return encoder_listencode_list(s, rval, obj, indent_level, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, PyErr);
return encoder_listencode_list(s, rval, obj, indent_level, PyRefPtr);
return encoder_listencode_list(s, rval, obj, indent_level, rval, rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, htonl);
return encoder_listencode_list(s, rval, obj, l, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, Py_None);
return encoder_listencode_list(s, rval, obj, indent_level, indent_addr);
return encoder_listencode_list(s, rval, obj, indent_level, nsnull);
return encoder_listencode_list(s, rval, obj, indent_level, PyClearlist);
return encoder_listencode_list(s, rval, obj, indent_level, src_info);
return encoder_listencode_list(s, rval, obj, indent_level, hdr);
return encoder_listencode_list(s, rval, obj, indent_level, rval->ns_encoding);
return encoder_listencode_list(s, rval, obj, indent_level, trunc_count);
return encoder_listencode_list(s, rval, obj, indent_level, nc);
return encoder_listencode_list(s, rval, obj, indent_level, _steal_list_append(rval, cstr));
return encoder_listencode_list(s, rval, obj, indent_level, inttype);
return encoder_listencode_list(s, rval, obj, a_indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, _steal_list_adopt);
return encoder_listencode_list(s, rval, obj, indent_level, tmp_next);
return encoder_listencode_list(s, rval, obj, hs, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, PR_FALSE);
return encoder_listencode_list(s, rval, obj, indent_level, ne_info);
return encoder_listencode_list(s, rval, obj, indent_level, &rval);
return encoder_listencode_list(s, rval, obj, indent_level, s->i_offset);
return encoder_listencode_list(s, rval, obj, indent_level, rval, obj->seq, rval->next);
return encoder_listencode_list(s, rval, obj, indent_level, obj->type);
return encoder_listencode_list(s, rval, obj, _steal_list_append(rval, cstr));
return encoder_listencode_list(s, rval, obj, indent_level, a_len);
return encoder_listencode_list(s, rval, obj, indent_level, src);
return encoder_listencode_list(s, rval, obj, _encode_list_attr(obj));
return encoder_listencode_list(s, rval, obj, indent_level, Py_RxMask);
return encoder_listencode_list(s, rval, obj, std::indent_level);
return encoder_listencode_list(s, rval, obj, obj, rval, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, fseen);
return encoder_listencode_list(s, rval, obj, indent_level, obj->obj->obj_type);
return encoder_listencode_list(s, rval, obj, indent_level, indent_spl);
return encoder_listencode_list(s, rval, obj, indent_level, PY_None);
return encoder_listencode_list(s, rval, obj, indent_level, PY_REINTERPRET_LEVEL);
return encoder_listencode_list(s, rval, obj, indent_level, int_mode);
return encoder_listencode_list(s, rval, obj, indent_level, rval_to_url(obj), obj_to_url(obj));
return encoder_listencode_list(s, rval, obj, a_len, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, _steal_list_size);
return _listencode_list_append(s, rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, cstrlen(cstrlen(cstrlen(s) - cstrlen(obj)));
return encoder_listencode_list(s, rval, obj, slen);
return encoder_listencode_list(s, rval, obj, indent_level, (Py_Word *)&s, rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, _steal_list_length);
return encoder_listencode_list(s, rval, obj, indent_level, PySize(obj));
return encoder_listencode_list(s, rval, obj, indent_level, indent_result);
return encoder_listencode_list(s, rval, obj, indent_level, obj->cstr_oneuse());
return encoder_listencode_list(s, rval, obj, indent_level, _steal_list_append(rval, cstrlen(rval)));
return encoder_listencode_list(s, rval, obj, indent_level, nrv);
return encoder_listencode_list(s, rval, obj, indent_level, _diskpy);
return encoder_listencode_list(s, rval, obj, indent_level, std::strdup(obj));
return encoder_listencode_list(s, rval, obj, u_int16_t indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, &obj);
return encoder_listencode_list(s, rval, obj, indent_level, ni);
return encoder_listencode_list(s, rval, obj, indent_level, s.tv_offset);
return encoder_listencode_list(s, rval, obj, sl, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, lh);
return encoder_listencode_list(s, rval, obj, indent_level, &newobj);
return encoder_listencode_list(s, rval, obj, _si_Indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, rval->rval->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->obj->ob
return encoder_listencode_list(s, rval, obj, obj, indent_level, obj);
return encoder_listencode_list(s, rval, obj, indent_level, fn);
return encoder_listencode_list(s, rval, obj, indent_level, cstrlen(obj));
return encoder_listencode_list(s, rval, obj, indent_level, lb);
return encoder_listencode_list(s, rval, obj, _encode_list_type);
return encoder_listencode_list(s, rval, obj, indent_level, _steal_list_offset);
return encoder_listencode_list(s, rval, obj, indent_level, syslink);
return encoder_listencode_list(s, rval, obj, indent_level, _nodeinfo);
return encoder_listencode_list(s, rval, obj, indent_level, _steal_list_py);
return encoder_listencode_list(s, rval, obj, indent_level, PyUnicode_Check(obj));
return encoder_listencode_list(s, rval, obj, indent_level, fval);
return encoder_listencode_list(s, rval, obj, indent_level, cstr);
return encoder_listencode_list(s, rval, obj, indent_level, splx);
return encoder_listencode_list(s, rval, obj, indent_level, _steal_list_append(rval, cstrlen(_steal_list_offset_t)));
return encoder_listencode_list(s, rval, obj, indent_level, _steal_list_get(obj));
return encoder_listencode_list(s, rval, obj, rval->flags, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level, PY_C_STR_IS_INLINE);
return encoder_listencode_list(s, rval, obj, indent_level, hwnd);
return encoder_listencode_list(s, rval, obj, indent_level, rval->rval);
return encoder_listencode_list(s, rval, obj, indent_level, rval->advance(rval->advance(rval->advance(rval->advance(rval->advance(rval->advance(rval->advance(rval->advance(rval->advance(rval->advance(rval->advance(rval->advance(rval->advance(rval->advance(rval->advance(rval->advance(rval->advance(rval->advance(rval->advance(rval->advance))))))) && (*(obj == Py_None || obj == Py_True || obj == Py_False)))) && (*(obj == Py_False ||
return encoder_listencode_list(s, rval, obj, p);
return encoder_listencode_list(s, rval, obj, rval, indent_level, Py_Void_Check);
<return encoder_listencode_list(s, rval, obj, indent_level);
return encoder_listencode_list(s, rval, obj, indent_level)
return encoder_listencode_list(s, rval, obj, indent_level);
&return encoder_listencode_list(s, rval, obj, indent_level);
