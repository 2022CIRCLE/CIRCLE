golden:
if (con->conf.log_condition_handling) { TRACE("(%s) [in else] -> %s", BUF_STR(dc->key), con->cond_cache[dc->context_ndx].result == COND_RESULT_FALSE ? "false" : "we will see"); } switch (con->cond_cache[dc->context_ndx].result) { case COND_RESULT_FALSE: /* one of prev set me to FALSE */ return con->cond_cache[dc->context_ndx].result; default: break;
inference:

if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)
/* one of prev set me to FALSE */
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)
/* one of my prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result)
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result)
/* one of my prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result)  return con->cond_cache[dc->context_ndx].result;
if (dc->prev)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_condition_handling)
/* one of prev set me to FALSE */ if (result == con->cond_cache[dc->context_ndx].result)  return result;
if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of the prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
config_check_cond_cached(srv, con, dc->prev);
log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT == con->cond_cache[dc->context_ndx].result)  return COND_RESULT;
if (con->conf.log_condition_handling)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */
/* one of prev set me to FALSE */ return COND_RESULT_FALSE;
if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", con->parent->key);
COND_RESULT_FALSE = con->cond_cache[dc->context_ndx].result;
/* one of prev set me to FALSE */ if (Cond_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
if (ConD_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
if (Cond_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
if (con->conf.log_cond_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result)
/* one of prev set me to FALSE */ if (con->cond_cache[con->context_ndx].result)  return COND_RESULT_FALSE;
if (con->conf.cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
return con->cond_cache[dc->context_ndx].result;
/* one of prev set me to FALSE */ if (!con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling)
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result)  return con->cond_cache[dc->context_ndx].result;
/* one of prev set me to FALSE */ if (ConD_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) return COND_RESULT_FALSE;
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of my prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)
if (COND_RESULT == con->cond_cache[dc->context_ndx].result)  return COND_RESULT;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)
/* one of prev set me to TRUE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return TRUE;
if (con->conf.log_condition_handling == COND_RESULT_FALSE)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (dc->context_ndx == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
if (con->conf.log_condition_handling && con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (!con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (!con->cond_cache[dc->context_ndx].result)
if (con->cond_cache[dc->context_ndx].result == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result)  return (COND_RESULT_FALSE);
/* one of prev set me to FALSE. */ if (COND_RESULT == con->cond_cache[dc->context_ndx].result)  return COND_RESULT;
/* one of prev set me to FALSE */ if (COND_RESULT == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (cond_result == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[con->context_ndx].result)  return COND_RESULT_FALSE;
/* one of these prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (Cond_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return Cond_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache.result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE... */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
if (dc->prev)  if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
if (result == con->cond_cache[dc->context_ndx].result)  return result;
/*one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
if (con->cond_cache == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  return COND_RESULT_FALSE;
/* One of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
if (!con->conditional_is_valid[dc->comp])  if (con->conf.log_condition_handling)
/* one of prev set me to FALSE */ if(con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* One of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/*one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */
if (dc->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
if (con->conf.log_condition_handling)  Log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if(con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of our prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (__FILE__ == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one or more prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
if (con->conf.log_context_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling == COND_RESULT_FALSE)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if(COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (ConD_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return ConD_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx])  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return (COND_RESULT_FALSE);
/* one of prev set me to NULL */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* One of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result == 0)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (Cond_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ( COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result )  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->parent->context_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (COND_RESULT == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
if (con->conf.log_condition_handling == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/*one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result)  COND_RESULT_FALSE = COND_RESULT_FALSE;
/* one of prev set me to FALSE */ result = con->cond_cache[dc->context_ndx].result; if (result)  return result;
/* One of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)
/*one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
if (COND_RESULT_FALSE == con->cond_cache[con->context_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return (COND_RESULT_FALSE);
else  /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[cond->context_ndx].result)  return COND_RESULT_FALSE;
if (dc->prev)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE. */ if (ConD_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (cond_result == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == dc->context_ndx.result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[con->context_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE!= con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of the prev sets me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of * prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->dc_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ( COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_TRUE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_TRUE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx]->result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result == con->cond_cache[dc->context_ndx].result)
/* one of prev set me to FALSE. */ if (dc->context_ndx == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
if (dc->prev)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;  else  return COND_RESULT_FALSE;
if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE; /* one of prev set me to FALSE */
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev))  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (con->cond_cache[dc->context_ndx].result)  if (dc->parent->context_ndx)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __
if (dc->prev)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;  if (dc->context_ndx)  if (!con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_
if (con->cond_cache[dc->context_ndx].result)  if (!con->cond_cache[dc->context_ndx].result)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  if (dc->cache)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);  if (con->conf.log_condition_handling)  log_error_write(srv,
/* one of prev set me to FALSE */ if (con->conf.conf.log_result == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx))  if (dc->prev)  if (con->conf.log_state & LOG_RELEASE(dc->parent))  LOG_ERROR("cond[%d] failed" % dc->parent->key);  else  /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  /* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET)  /* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;  if (con->conf.conf.log_flags & COND_FREE)  return COND_FREE;
/* one of prev set me to FALSE */ if ((dc->conf.conf.conf_flags & COND_RESULT) == COND_RESULT_FALSE)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_flags & COND_RESULT_FALSE)  if (con->conf.log_error_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if ((con->cond_cache[dc->context_ndx].result == con->cond_cache[dc->context_ndx].result) &&!con->conf.log_condition_handling)  TRACE("cond[%d]", con->cond_cache[dc->context_ndx].result));
/* one of prev set me to FALSE */ if (con->conf.log_queue_flags & COND_RESERVER_FOREACH)  if (con->conf.log_queue_flags & COND_RESERVER_FOREACH)
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  TRACE("cond[%s],
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;  if (!con->conditional_is_valid[dc->comp])  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(s
if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result))  return COND_RESULT_FALSE;  if (dc->prev)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
if (con->conf.log_condition_handling)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);  if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  /* * If the dc->parent is not an invalid connection, we * have to check the child's prev */
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result))  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  /* * We have the permissions for this, so that the config_check_cond_cache does not use the same reason as config_check_cond_cache() */
/* one of the prev set me to FALSE */ if (dc->context_ndx!= NULL)
if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE. */ if (con->conf.log_cond_handling)  config_check_cond_cached(srv, con, dc->prev); if (!con->conditional_is_valid[dc->comp])  if (con->conf.log_condition_handling)  TRACE("cond[%s] [%s]", dc->comp, dc->comp, dc->comp);
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE)  if (dc->debug)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (dc->prev)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);  if (!con->conditional_is_valid[dc->comp])  if (con->conf.log_condition_handling)  TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;  if (!con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  if (!con->conditional_is_valid[dc->comp])  if (con->conf.log_condition_handling)  TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (con->conf.log_condition_handling)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  if (dc->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result)  if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.conf_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (dc->result!= NULL)
if (!con->conditional_is_valid[dc->comp])  if (con->conf.log_condition_handling)  TRACE("cond[%s] is valid", dc->comp);
if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);  if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE. */ if (dc->context_ndx->result)  return COND_RESULT_FALSE;  if (dc->parent)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE. */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].dummy))  /* XXX should go here! */
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE))  if (con->conf.log_flags & COND_RESULT_FALSE)  if (con->conf.log_flags & COND_RESULT_FALSE)  if (con->conf.log_flags & COND_RESULT_FALSE)  if (con->conf.log_flags & COND_RESULT_FALSE)  if (con->conf.log_flags & COND_RESULT_FALSE)  TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result));   else  log_error_write(srv, _
if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result)  /* one of prev set me to FALSE */ return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->conf.log_type == COND_COND_ENTRY)  return COND_COND_ENTRY;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;  if (dc->prev)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);  if (!con->conditional_is_valid[dc->comp])  if (con->conf.log_condition_
/* one of prev set me to FALSE. */ if (dc->context_ndx!= NULL && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  if (dc->parent->context_ndx!= NULL)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);  if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling && (con->conf.log_condition_handling) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (con->conf.conf_cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
if (!con->conditional_is_valid[dc->comp])  if (con->conf.log_condition_handling)  TRACE("cond[%d]n", con->cond_cache[dc->context_ndx].result);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result)  if (dc->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb
if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (dc->flags & DEBUG_COND_SIZE)  if (dc->conf.log_cond_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  if (!con->conditional_is_valid[dc->comp])  if (con->conf.log_condition_handling)  TRACE("cond[%s]
/* one of the prev set me to FALSE */ if (con->conf.log_state == COND_RESULT_FALSE)  return COND_RESULT_FALSE;
if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  if (!con->conditional_is_valid[dc->comp])  if (con->conf.log_condition_handling)  TRACE("cond[%s]", con->cond_cache
if (con->conf.conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result)   if (dc->prev)  if (con->conf.log_condition_handling)  log_error_
/* one of prev set me to FALSE */ if (!con->cond_cache[dc->context_ndx].result)  return config_check_cond_nocache(srv, con, dc->context_ndx);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  if (con->conf.log_condition_handling)
/* one of prev set me to FALSE */ if (dc->conf.conf_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)  TRACE("cond[%s] = %s", con->cond_cache[dc->context_ndx].result, dc->parent->context_ndx);
if (dc->dc_flags & FI_DEAD)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling)  if (!con->conf.log_condition_handling)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  if (COND
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (con->conf.log_error_handling)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  if (dc->context_ndx->result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;  if (dc->prev)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);  if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);  if (config_check_cond_cached
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result &&!con->conf.log_condition_handling)  TRACE("cond[%d]" % con->cond_cache[dc->context_ndx].result");
if (con->cond_cache[dc->context_ndx].result)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);   if (dc->prev)  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  if (con->conf.log_condition_handling)  log_error_write(srv, __F
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level)  if (con->conf.log_level == COND_RESULT_FALSE)  if (con->conf.log_level == COND_RESULT_FALSE)  return COND_RESULT_FALSE;  if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
if (con->conf.log_condition_handling)  config_check_cond_cached(srv, con, dc->context_ndx);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;  if (dc->prev)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result)  if (con->conf.conf_flags & COND_RESULT_FALSE)  /* get user base cache */ if (con->conf.conf.log_context_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  if (!con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (!con->cond_cache[dc->context_ndx].result)  TRACE("cond[%d] = " "against" % dc->context_ndx);
if (con->conf.log_cond_cache[dc->context_ndx].result)  /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
if (!con->conditional_is_valid[dc->comp])  if (con->conf.log_condition_handling)  TRACE("cond[%s]n", dc->parent->key);
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE)  return COND_RESULT_FALSE;  if (dc->prev)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result)  /* one of prev set me to FALSE */ if (con->conf.log_condition_handling)  if (!con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling)  TRACE("cond[%d][%d]", dc->context_ndx, dc->conf.log_condition_handling, dc->dc_parent->key, dc->dc_parent->key, dc->dc_socket->flags, dc->dc_socket->context_ndx);
if (con->conf.conf_error_handling)  if (con->conf.conf_error_handling)  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  if (con->conf.log_condition_handling)  TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;  if (dc->prev)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);  if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (dc->parent->context_ndx)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if ((con->cond_cache[dc->context_ndx].result) && (con->conf.log_condition_handling & COND_RESULT_FALSE))  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (((con->cond_cache[dc->context_ndx].result) == con->cond_cache[dc->context_ndx].result) && (con->conf.log_condition_handling))  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (dc->dc_flags & COND_RESULT_FALSE)  /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling)  if (con->conf.log_cache_handling)  config_check_cond_cached(srv, con, dc->parent);  else  config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);  if (config_check_cond_cached
/* one of prev set me to FALSE */ if (dc->context_ndx.result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  if (dc->parent && con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv
/* one of prev set me to FALSE */ if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE */ if (dc->context_ndx->dv_type == COND_NONE)  TRACE("cond[%s]n", con->cond_cache[dc->context_ndx].result));
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__
/* one of the prev set me to FALSE */ if ((dc->context_ndx = con->cond_cache[dc->context_ndx].result) || (con->conf.log_condition_handling) == COND_RESULT_FALSE)  return COND_RESULT_FALSE;
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  return COND_RESULT_FALSE;   if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  /* XXX */ return COND_RESULT_FALSE;  if (!con->conditional_is_valid[dc->comp])  if (con->conf.log_condition_handling)  TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling)  TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]);   if (con->conf.log_condition_handling)  TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]);   if (con->
/* one of the prev set me to FALSE */ if (con->conf.log_flags & COND_RESULT_FALSE)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);  if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result)  return COND_RESULT_
/* one of prev set me to FALSE */ if (con->conf.conf_result == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of the prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (dc->prev)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (dc->need_context_and_no_result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE)  return COND_RESULT_FALSE;  if (!con->conditional_is_valid[dc->comp])  if (con->conf.log_condition_handling)  TRACE("cond[%d] [%s]", srv, con->context_ndx->prev);  if (con->conf.log_condition_handling)  if (con->conf.log_condition_handling)  TRACE("cond[%d] [%s]", srv, con->context_ndx->prev);  if (con->conf.log_condition_handling)  TRACE("cond[%d] [%s]", srv, con->context_ndx->prev);  if (
if (dc->parent->context_ndx)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  TRACE("cond[%s]", con->conf.log_condition_handling);
if (!con->conditional_is_valid[dc->comp])  if (con->conf.log_condition_handling)  TRACE("cond[%d]n", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  if (dc->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE_
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  /* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);  if (config_check_cond_cached(sr
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;  if (dc->parent)  if (dc->parent->context_ndx)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE)  return COND_RESULT_FALSE;  if (con->conf.conf_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);  if (config_check_cond_cached(
if (!con->cond_cache[dc->context_ndx].result)  /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling)  if (con->conf.log_condition_handling)  /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;  if (dc->prev)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;  if (dc->dc_socket)  if (dc->dc_socket)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (con->conf.log_error_handling && con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (dc->conf.get_conditional_handling(dc->context_ndx) == 0)
if (con->conf.log_condition_handling)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (con->conf.log_warning && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  TRACE("cond[%s] = COND_RESULT_FALSE" % dc->parent, dc->parent->key);
/* one of prev set me to FALSE. */ if (con->conf.log_condition_handling)  return COND_RESULT_FALSE;
if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if (dc->parent->context_ndx && con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling)  config_check_cond_cached(srv, con, dc->parent); if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (dc->dc_result == con->cond_cache[dc->dc_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_queue_rtl && con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)  return COND_RESULT_FALSE;   if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)  if
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling)  log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);  if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)

/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <return con->cond_cache[dc->context_ndx].result;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->parent && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) &if (con->conf.conf_flags & COND_RESULT_FALSE) </* get user base cache */ if (con->conf.conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if ( COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) &if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) if (con->conf.conf_flags & COND_RESULT_FALSE) &/* get user base cache */ if (con->conf.conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (!con->cond_cache[dc->context_ndx].result) <return config_check_cond_nocache(srv, con, dc->context_ndx);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
if (con->conf.conf_error_handling) if (con->conf.conf_error_handling) <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE */ if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &return (COND_RESULT_FALSE);
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) <if (con->conf.log_cache_handling) config_check_cond_cached(srv, con, dc->parent); &else &config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (con->cond_cache[dc->context_ndx].result) if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if (COND_RESULT == con->cond_cache[dc->context_ndx].result) return COND_RESULT;
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) <if (dc->prev) if (con->conf.log_state & LOG_RELEASE(dc->parent)) <LOG_ERROR("cond[%d] failed" % dc->parent->key); else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of our prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) &if (!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) &if (dc->debug) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one or more prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of * prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) <if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (con->conf.conf_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) if (!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) <if (con->conf.conf_flags & COND_RESULT_FALSE) /* get user base cache */ if (con->conf.conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ result = con->cond_cache[dc->context_ndx].result; if (result) &return result;
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling)
if (dc->flags & DEBUG_COND_SIZE) if (dc->conf.log_cond_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) &if (con->conf.log_cache_handling) config_check_cond_cached(srv, con, dc->parent); <else &config_check_cond_cached(srv, con, dc->parent);
if (con->cond_cache[dc->context_ndx].result) &if (!con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) &if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if ((con->cond_cache[dc->context_ndx].result == con->cond_cache[dc->context_ndx].result) &&!con->conf.log_condition_handling) &TRACE("cond[%d]", con->cond_cache[dc->context_ndx].result));
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->dc_socket) <if (dc->dc_socket) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->parent) <if (dc->parent->context_ndx) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* XXX */ return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) return COND_RESULT_FALSE; if (con->conf.conf_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
if (con->cond_cache[dc->context_ndx].result) if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (dc->conf.conf_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) &TRACE("cond[%s] = %s", con->cond_cache[dc->context_ndx].result, dc->parent->context_ndx);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (con->conf.conf_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE */ if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* XXX */ return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) &if (con->conf.log_cache_handling) config_check_cond_cached(srv, con, dc->parent); <else <config_check_cond_cached(srv, con, dc->parent);
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) &if (!con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->parent && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->parent) if (dc->parent->context_ndx) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->context_ndx) if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (con->conf.conf_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.conf_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ result = con->cond_cache[dc->context_ndx].result; if (result) return result;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) /* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
if (con->conf.conf_error_handling) <if (con->conf.conf_error_handling) if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of the prev set me to FALSE */ if (con->conf.log_state == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (con->conf.conf_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (dc->flags & DEBUG_COND_SIZE) if (dc->conf.log_cond_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->conf.conf_error_handling) <if (con->conf.conf_error_handling) if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/*one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE. */ if (con->conf.log_cond_handling) config_check_cond_cached(srv, con, dc->prev); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%s] [%s]", dc->comp, dc->comp, dc->comp);
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (con->conf.conf_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) &if (dc->debug) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%d]<n", con->cond_cache[dc->context_ndx].result);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* XXX */ return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
</* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) <if (dc->debug) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) <if (dc->prev) if (con->conf.log_state & LOG_RELEASE(dc->parent)) &LOG_ERROR("cond[%d] failed" % dc->parent->key); else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (con->cond_cache[dc->context_ndx].result) <if (!con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->parent && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
</* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->parent) if (dc->parent->context_ndx) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) &if (con->conf.log_cache_handling) &config_check_cond_cached(srv, con, dc->parent); else &config_check_cond_cached(srv, con, dc->parent);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) if (!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) &/* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) &if (con->conf.conf_flags & COND_RESULT_FALSE) /* get user base cache */ if (con->conf.conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) return COND_RESULT_FALSE; <if (dc->parent) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE. */ if (dc->context_ndx!= NULL && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->parent->context_ndx!= NULL) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) <if (con->conf.log_level == COND_RESULT_FALSE) if (con->conf.log_level == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) <if (con->conf.conf_flags & COND_RESULT_FALSE) </* get user base cache */ if (con->conf.conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (con->cond_cache[dc->context_ndx].result) if (!con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE. */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].dummy)) </* XXX should go here! */
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE. */ if (con->conf.log_cond_handling) config_check_cond_cached(srv, con, dc->prev); if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%s] [%s]", dc->comp, dc->comp, dc->comp);
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) return COND_RESULT_FALSE; if (con->conf.conf_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->context_ndx) &if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) &return COND_RESULT_FALSE; &if (dc->parent) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) if (!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
if (con->conf.conf_error_handling) <if (con->conf.conf_error_handling) &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->parent && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) &if (con->conf.conf_flags & COND_RESULT_FALSE) </* get user base cache */ if (con->conf.conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.conf_error_handling) <if (con->conf.conf_error_handling) &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (result == con->cond_cache[dc->context_ndx].result) return result;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if(COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->parent && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
&if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (con->conf.conf_error_handling) if (con->conf.conf_error_handling) &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* * We have the permissions for this, so that the config_check_cond_cache does not use the same reason as config_check_cond_cache() */
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->parent) <if (dc->parent->context_ndx) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE */ if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &&if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (dc->flags & DEBUG_COND_SIZE) &if (dc->conf.log_cond_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of * prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
if (dc->flags & DEBUG_COND_SIZE) &if (dc->conf.log_cond_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
if (dc->prev) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->context_ndx) &if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) &if (dc->debug) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
else &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/*one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) </* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) if (!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE. */ if (COND_RESULT == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
</* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->dc_socket) if (dc->dc_socket) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->parent) if (dc->parent->context_ndx) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (con->conf.conf_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling == COND_RESULT_FALSE) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) <return COND_RESULT_FALSE; if (dc->parent) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) <if (con->conf.log_level == COND_RESULT_FALSE) <if (con->conf.log_level == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of these prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) if (!con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) /* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
if (dc->flags & DEBUG_COND_SIZE) if (dc->conf.log_cond_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) <if (dc->debug) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->conf.log_error_handling && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->cond_cache[dc->context_ndx].result) &if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (con->cond_cache[dc->context_ndx].result == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%s]<n", dc->parent->key);
if (dc->flags & DEBUG_COND_SIZE) <if (dc->conf.log_cond_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (dc->prev) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* XXX */ return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of my prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%d]<n", con->cond_cache[dc->context_ndx].result);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->dc_socket) &if (dc->dc_socket) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of the prev set me to FALSE */ if ((dc->context_ndx = con->cond_cache[dc->context_ndx].result) || (con->conf.log_condition_handling) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) <if (!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
&if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if (con->conf.log_error_handling) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) if (con->conf.log_cache_handling) &config_check_cond_cached(srv, con, dc->parent); &else config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if ((con->cond_cache[dc->context_ndx].result) && (con->conf.log_condition_handling & COND_RESULT_FALSE)) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%d]<n", dc->parent->key);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->parent && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to NULL */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) <if (!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) &if (con->conf.log_level == COND_RESULT_FALSE) &if (con->conf.log_level == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* XXX */ return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (dc->flags & DEBUG_COND_SIZE) if (dc->conf.log_cond_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%d]n", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <return con->cond_cache[dc->context_ndx].result;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE */ if (dc->dc_flags & COND_RESULT_FALSE) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) &if (con->conf.log_cache_handling) &config_check_cond_cached(srv, con, dc->parent); <else &config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) if (con->conf.log_cache_handling) config_check_cond_cached(srv, con, dc->parent); else config_check_cond_cached(srv, con, dc->parent);
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) &if (con->conf.log_level == COND_RESULT_FALSE) if (con->conf.log_level == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->dc_socket) <if (dc->dc_socket) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) if (con->conf.log_level == COND_RESULT_FALSE) <if (con->conf.log_level == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (con->conf.conf_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of * prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->conf.log_type == COND_COND_ENTRY) &return COND_COND_ENTRY;
if (dc->flags & DEBUG_COND_SIZE) &if (dc->conf.log_cond_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
if (con->conf.conf_error_handling) if (con->conf.conf_error_handling) <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) <if (con->conf.log_level == COND_RESULT_FALSE) &if (con->conf.log_level == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &else <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (dc->context_ndx == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) &if (con->conf.log_level == COND_RESULT_FALSE) <if (con->conf.log_level == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->context_ndx) &if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* XXX */ return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* XXX */ return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) &/* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (con->conf.conf_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) if (dc->debug) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) if (dc->debug) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* XXX */ return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
if (con->cond_cache[dc->context_ndx].result) <if (dc->parent->context_ndx) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (con->cond_cache[dc->context_ndx].result) <if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
if (con->cond_cache[dc->context_ndx].result) &if (!con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) <return COND_RESULT_FALSE; <if (dc->parent) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] is valid", dc->comp);
/*one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
if (con->cond_cache[dc->context_ndx].result) <return con->cond_cache[dc->context_ndx].result;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) &if (dc->prev) if (con->conf.log_state & LOG_RELEASE(dc->parent)) <LOG_ERROR("cond[%d] failed" % dc->parent->key); else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) if (!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->conf.conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) <if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx]) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_error_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->cond_cache[dc->context_ndx].result) &if (!con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to NULL */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) &if (!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) TRACE("cond[%s]", con->conf.log_condition_handling);
if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of the prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
if (con->conf.conf_error_handling) &if (con->conf.conf_error_handling) <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->dc_socket) <if (dc->dc_socket) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->dc_socket) <if (dc->dc_socket) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (ConD_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (con->conf.conf_error_handling) if (con->conf.conf_error_handling) if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) <if (con->conf.conf_flags & COND_RESULT_FALSE) </* get user base cache */ if (con->conf.conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
<if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) if (con->conf.conf_flags & COND_RESULT_FALSE) </* get user base cache */ if (con->conf.conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) /* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if (con->conf.log_queue_flags & COND_RESERVER_FOREACH) <if (con->conf.log_queue_flags & COND_RESERVER_FOREACH)
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &&if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE */ if (dc->context_ndx->dv_type == COND_NONE) <TRACE("cond[%s]n", con->cond_cache[dc->context_ndx].result));
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->dc_socket) &if (dc->dc_socket) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->dc_socket) if (dc->dc_socket) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) &if (con->conf.log_cache_handling) <config_check_cond_cached(srv, con, dc->parent); &else config_check_cond_cached(srv, con, dc->parent);
if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* * We have the permissions for this, so that the config_check_cond_cache does not use the same reason as config_check_cond_cache() */
/* one of prev set me to FALSE... */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <else return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) if (con->conf.log_level == COND_RESULT_FALSE) &if (con->conf.log_level == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
if (con->cond_cache[dc->context_ndx].result) if (!con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if (dc->dc_flags & COND_RESULT_FALSE) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) if (con->conf.log_level == COND_RESULT_FALSE) <if (con->conf.log_level == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
if (con->cond_cache[dc->context_ndx].result) &if (dc->parent->context_ndx) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) &if (dc->prev) if (con->conf.log_state & LOG_RELEASE(dc->parent)) &LOG_ERROR("cond[%d] failed" % dc->parent->key); else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->parent->context_ndx].result) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE. */ if (Cond_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
if (dc->result!= NULL)
/*one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->dc_socket) &if (dc->dc_socket) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) <if (dc->prev) <if (con->conf.log_state & LOG_RELEASE(dc->parent)) LOG_ERROR("cond[%d] failed" % dc->parent->key); &else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) if (con->conf.log_level == COND_RESULT_FALSE) <if (con->conf.log_level == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (con->conf.conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE. */ if (con->conf.log_cond_handling) <config_check_cond_cached(srv, con, dc->prev); if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%s] [%s]", dc->comp, dc->comp, dc->comp);
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) if (con->conf.log_level == COND_RESULT_FALSE) if (con->conf.log_level == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->parent && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->dc_socket) if (dc->dc_socket) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (con->conf.conf_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
if (con->cond_cache[dc->context_ndx].result) <if (!con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* XXX */ return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) &if (dc->prev) &if (con->conf.log_state & LOG_RELEASE(dc->parent)) <LOG_ERROR("cond[%d] failed" % dc->parent->key); else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) <if (con->conf.conf_flags & COND_RESULT_FALSE) /* get user base cache */ if (con->conf.conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (con->cond_cache[dc->context_ndx].result) if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) &if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
if (con->conf.conf_error_handling) &if (con->conf.conf_error_handling) &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (con->conf.conf_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) return COND_RESULT_FALSE; <if (dc->parent) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_error_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) /* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) if (!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) &return COND_RESULT_FALSE; &if (dc->parent) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
if (dc->prev) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) &if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) </* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) &if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE. */ if (dc->context_ndx!= NULL && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->parent->context_ndx!= NULL) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) &if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE */ if (dc->context_ndx == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (dc->dc_flags & COND_RESULT_FALSE) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->conf.log_cond_handling) &config_check_cond_cached(srv, con, dc->prev); if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%s] [%s]", dc->comp, dc->comp, dc->comp);
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) if (con->conf.log_cache_handling) <config_check_cond_cached(srv, con, dc->parent); else config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.conf_error_handling) if (con->conf.conf_error_handling) &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (con->conf.log_condition_handling)
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE */ if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_error_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (con->conf.conf_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) &/* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->dc_socket) <if (dc->dc_socket) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) if (dc->debug) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of my prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%s]n", dc->parent->key);
if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
if (con->conf.conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) &if (dc->prev) if (con->conf.log_condition_handling) log_error_
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
<if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &<if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (con->conf.conf_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%s]&n", dc->parent->key);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->parent && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <&if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) /* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* XXX */ return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE. */ if (con->conf.conf_cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
if (!con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) return (COND_RESULT_FALSE);
if (con->conf.conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->parent) if (dc->parent->context_ndx) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->parent) &if (dc->parent->context_ndx) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%d]&n", con->cond_cache[dc->context_ndx].result);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) if (con->conf.log_level == COND_RESULT_FALSE) &if (con->conf.log_level == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE */ if ( COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result ) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
&/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) <if (!con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
if (con->conf.conf_error_handling) &if (con->conf.conf_error_handling) if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->parent) &if (dc->parent->context_ndx) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->parent) <if (dc->parent->context_ndx) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) &if (!con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE */ if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) <if (!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE */ if (__FILE__ == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->parent) if (dc->parent->context_ndx) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (con->conf.conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) <if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[cond->context_ndx].result) &return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
if (con->conf.conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* One of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) <if (dc->debug) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx]->result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->context_ndx) &if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) if (con->conf.log_level == COND_RESULT_FALSE) &if (con->conf.log_level == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (ConD_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE. */ if (con->conf.log_cond_handling) <config_check_cond_cached(srv, con, dc->prev); if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%s] [%s]", dc->comp, dc->comp, dc->comp);
if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->cond_cache[dc->context_ndx].result) <if (!con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE. */ if (con->conf.log_cond_handling) config_check_cond_cached(srv, con, dc->prev); if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%s] [%s]", dc->comp, dc->comp, dc->comp);
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (dc->flags & DEBUG_COND_SIZE) if (dc->conf.log_cond_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->parent) <if (dc->parent->context_ndx) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* One of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of my prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/*one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
if (con->conf.conf_error_handling) <if (con->conf.conf_error_handling) if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
if (!con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) &if (dc->debug) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
<if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (con->conf.conf_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->dc_socket) <if (dc->dc_socket) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (dc->dc_flags & COND_RESULT_FALSE) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) <if (dc->debug) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result == 0) <return COND_RESULT_FALSE;
if (ConD_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->parent) &if (dc->parent->context_ndx) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (con->conf.conf_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of my prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->parent && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/*one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) if (dc->debug) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) </* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
if (con->conf.conf_error_handling) &if (con->conf.conf_error_handling) if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return (COND_RESULT_FALSE);
if (con->cond_cache[dc->context_ndx].result) <if (!con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &&if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
if (dc->flags & DEBUG_COND_SIZE) <if (dc->conf.log_cond_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) if (con->conf.log_cache_handling) config_check_cond_cached(srv, con, dc->parent); &else &config_check_cond_cached(srv, con, dc->parent);
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->parent && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) <if (dc->debug) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->context_ndx) &if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->parent) if (dc->parent->context_ndx) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (con->cond_cache[dc->context_ndx].result) &return con->cond_cache[dc->context_ndx].result;
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (dc->flags & DEBUG_COND_SIZE) &if (dc->conf.log_cond_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (con->conf.conf_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if ( COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->parent) &if (dc->parent->context_ndx) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) if (con->conf.log_level == COND_RESULT_FALSE) if (con->conf.log_level == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) if (dc->prev) <if (con->conf.log_state & LOG_RELEASE(dc->parent)) &LOG_ERROR("cond[%d] failed" % dc->parent->key); <else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of the prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) if (con->conf.log_cache_handling) &config_check_cond_cached(srv, con, dc->parent); else config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->parent) &if (dc->parent->context_ndx) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE */ if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &config_check_cond_cached(srv, con, dc->parent); if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
if (con->conf.conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) &if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if (Cond_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return Cond_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (con->conf.conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) if (dc->prev) if (con->conf.log_condition_handling) log_error_
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (con->conf.conf_error_handling) if (con->conf.conf_error_handling) if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (con->conf.conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) <if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (Cond_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (cond_result == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%s]n", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) &/* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) return COND_RESULT_FALSE; <if (dc->parent) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) <if (con->conf.log_level == COND_RESULT_FALSE) <if (con->conf.log_level == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) if (dc->prev) <if (con->conf.log_state & LOG_RELEASE(dc->parent)) LOG_ERROR("cond[%d] failed" % dc->parent->key); &else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->context_ndx) <if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->parent && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (dc->need_context_and_no_result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) <if (con->conf.conf_flags & COND_RESULT_FALSE) &/* get user base cache */ if (con->conf.conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) COND_RESULT_FALSE = COND_RESULT_FALSE;
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) &if (dc->prev) <if (con->conf.log_state & LOG_RELEASE(dc->parent)) LOG_ERROR("cond[%d] failed" % dc->parent->key); else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) if (!con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE. */ if (COND_RESULT == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) if (!con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) &if (!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) &if (con->conf.conf_flags & COND_RESULT_FALSE) /* get user base cache */ if (con->conf.conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; else &return COND_RESULT_FALSE;
if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) <if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->context_ndx) &if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (con->conf.conf_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* One of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) &if (con->conf.log_level == COND_RESULT_FALSE) &if (con->conf.log_level == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) return COND_RESULT_FALSE; if (dc->parent) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (!con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->dc_socket) &if (dc->dc_socket) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%d]&n", con->cond_cache[dc->context_ndx].result);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) <if (con->conf.conf_flags & COND_RESULT_FALSE) &/* get user base cache */ if (con->conf.conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) &if (!con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* One of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
if (dc->prev) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) &if (con->conf.log_cache_handling) &config_check_cond_cached(srv, con, dc->parent); <else config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &<if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (con->conf.conf_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
if (con->conf.conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
if (con->cond_cache[dc->context_ndx].result == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->cond_cache[dc->context_ndx].result) <if (!con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if ( COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result ) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->parent) if (dc->parent->context_ndx) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
<if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) <return COND_RESULT_FALSE; <if (dc->parent) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->context_ndx) <if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if(COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of our prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) &if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) <if (con->conf.log_cache_handling) <config_check_cond_cached(srv, con, dc->parent); &else <config_check_cond_cached(srv, con, dc->parent);
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (con->cond_cache[dc->context_ndx].result) <if (!con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) if (dc->debug) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) <if (con->conf.log_cache_handling) config_check_cond_cached(srv, con, dc->parent); else &config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->context_ndx) <if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) <if (con->conf.log_level == COND_RESULT_FALSE) <if (con->conf.log_level == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) &if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) &return COND_RESULT_FALSE; &if (dc->parent) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->parent) &if (dc->parent->context_ndx) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) &if (dc->prev) if (con->conf.log_state & LOG_RELEASE(dc->parent)) <LOG_ERROR("cond[%d] failed" % dc->parent->key); <else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->cond_cache[dc->context_ndx].result) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) <if (dc->debug) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* XXX */ return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) &/* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* XXX */ return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &<if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE. */ if (dc->context_ndx!= NULL && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->parent->context_ndx!= NULL) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.conf_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%s]<n", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->parent) <if (dc->parent->context_ndx) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
&/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) </* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to NULL */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
if (con->cond_cache[dc->context_ndx].result) &if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE */ if (dc->context_ndx == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (con->cond_cache[dc->context_ndx].result) if (dc->parent->context_ndx) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%d]n", dc->parent->key);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (dc->need_context_and_no_result) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (con->conf.conf_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) TRACE("cond[%s]", con->conf.log_condition_handling);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of these prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->parent) <if (dc->parent->context_ndx) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) <if (con->conf.conf_flags & COND_RESULT_FALSE) /* get user base cache */ if (con->conf.conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if(con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) /* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
if (dc->flags & DEBUG_COND_SIZE) if (dc->conf.log_cond_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (con->conf.conf_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->cond_cache[dc->context_ndx].result) &if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* XXX */ return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
&if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) /* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (ConD_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) if (con->conf.log_level == COND_RESULT_FALSE) <if (con->conf.log_level == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) /* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%s]n", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) if (con->conf.log_level == COND_RESULT_FALSE) if (con->conf.log_level == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of our prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) &if (!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->context_ndx) if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) <if (dc->debug) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &Log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
if (con->conf.conf_error_handling) if (con->conf.conf_error_handling) if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) &if (!con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (dc->flags & DEBUG_COND_SIZE) <if (dc->conf.log_cond_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) if (dc->prev) &if (con->conf.log_state & LOG_RELEASE(dc->parent)) &LOG_ERROR("cond[%d] failed" % dc->parent->key); else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[con->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) &if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE. */ if (Cond_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->conf.log_cond_handling) &config_check_cond_cached(srv, con, dc->prev); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s]", dc->comp, dc->comp, dc->comp);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->parent && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of these prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of the prev set me to FALSE */ if (con->conf.log_state == COND_RESULT_FALSE) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) &if (con->conf.log_cache_handling) <config_check_cond_cached(srv, con, dc->parent); <else config_check_cond_cached(srv, con, dc->parent);
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of the prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (!con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.conf_error_handling) if (con->conf.conf_error_handling) if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%d]&n", con->cond_cache[dc->context_ndx].result);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) <if (!con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) <if (dc->prev) &if (con->conf.log_state & LOG_RELEASE(dc->parent)) <LOG_ERROR("cond[%d] failed" % dc->parent->key); else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (con->conf.conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) &if (dc->prev) if (con->conf.log_condition_handling) log_error_
if (con->conf.conf_error_handling) <if (con->conf.conf_error_handling) &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) </* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE */ if (cond_result == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->context_ndx->result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->parent) &if (dc->parent->context_ndx) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) if (con->conf.conf_flags & COND_RESULT_FALSE) &/* get user base cache */ if (con->conf.conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.conf_error_handling) &if (con->conf.conf_error_handling) if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) /* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
if (con->conf.conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) return COND_RESULT_FALSE; &if (dc->parent) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) <return COND_RESULT_FALSE; <if (dc->parent) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) TRACE("cond[%s]", con->conf.log_condition_handling);
if (con->cond_cache[dc->context_ndx].result) <if (!con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) <if (con->conf.conf_flags & COND_RESULT_FALSE) </* get user base cache */ if (con->conf.conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE */ if(COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (dc->flags & DEBUG_COND_SIZE) &if (dc->conf.log_cond_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%d]&n", dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) &if (con->conf.conf_flags & COND_RESULT_FALSE) </* get user base cache */ if (con->conf.conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) &if (con->conf.log_level == COND_RESULT_FALSE) if (con->conf.log_level == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%s]<n", dc->parent->key);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) /* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%s] is valid", dc->comp);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->parent) <if (dc->parent->context_ndx) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
if (con->conf.conf_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->dc_socket) if (dc->dc_socket) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->cond_cache[dc->context_ndx].result) <if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE */ if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
if (con->cond_cache[dc->context_ndx].result) <if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->parent && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if (!con->cond_cache[dc->context_ndx].result) return config_check_cond_nocache(srv, con, dc->context_ndx);
/* one of the prev sets me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) if (con->conf.log_cache_handling) <config_check_cond_cached(srv, con, dc->parent); else <config_check_cond_cached(srv, con, dc->parent);
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (dc->prev) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->dc_socket) <if (dc->dc_socket) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* XXX */ return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%s]<n", dc->parent->key);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (con->cond_cache[dc->context_ndx].result) if (!con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (con->cond_cache[dc->context_ndx].result) <if (dc->parent->context_ndx) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (con->conf.conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) &if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->dc_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
if (dc->flags & DEBUG_COND_SIZE) if (dc->conf.log_cond_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) if (dc->debug) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->context_ndx) &if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <&if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) <if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
if (dc->flags & DEBUG_COND_SIZE) <if (dc->conf.log_cond_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* XXX */ return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) if (dc->debug) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
if (con->cond_cache[dc->context_ndx].result) &if (dc->parent->context_ndx) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* XXX */ return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE */ if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) &return COND_RESULT_FALSE; if (dc->parent) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) <if (con->conf.log_cache_handling) &config_check_cond_cached(srv, con, dc->parent); &else <config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) </* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
if (dc->flags & DEBUG_COND_SIZE) &if (dc->conf.log_cond_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &else return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->parent) &if (dc->parent->context_ndx) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->cond_cache[dc->context_ndx].result) if (!con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (con->conf.log_cond_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) if (dc->prev) if (con->conf.log_state & LOG_RELEASE(dc->parent)) &LOG_ERROR("cond[%d] failed" % dc->parent->key); else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) &if (!con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) <if (dc->prev) <if (con->conf.log_state & LOG_RELEASE(dc->parent)) LOG_ERROR("cond[%d] failed" % dc->parent->key); <else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%d]&n", con->cond_cache[dc->context_ndx].result);
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) </* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) <return COND_RESULT_FALSE; &if (dc->parent) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (con->conf.conf_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
&/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) <if (dc->prev) &if (con->conf.log_state & LOG_RELEASE(dc->parent)) LOG_ERROR("cond[%d] failed" % dc->parent->key); else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (con->conf.conf_error_handling) &if (con->conf.conf_error_handling) if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (con->conf.conf_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE. */ if (con->conf.log_cond_handling) &config_check_cond_cached(srv, con, dc->prev); if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%s] [%s]", dc->comp, dc->comp, dc->comp);
if (dc->flags & DEBUG_COND_SIZE) <if (dc->conf.log_cond_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->parent) <if (dc->parent->context_ndx) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (con->conf.conf_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.conf_error_handling) &if (con->conf.conf_error_handling) if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
&if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (con->conf.conf_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->dc_socket) if (dc->dc_socket) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->cond_cache[dc->context_ndx].result) <if (!con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->dc_socket) &if (dc->dc_socket) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->dc_socket) <if (dc->dc_socket) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* XXX */ return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one or more prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of the prev set me to FALSE */ if (con->conf.log_state == COND_RESULT_FALSE) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <<if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
if (dc->flags & DEBUG_COND_SIZE) if (dc->conf.log_cond_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) if (dc->debug) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (!con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->context_ndx) <if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
if (con->conf.conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) <if (dc->prev) if (con->conf.log_condition_handling) log_error_
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->context_ndx) <if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* XXX */ return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->parent->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* One of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->dc_socket) if (dc->dc_socket) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) <if (con->conf.log_level == COND_RESULT_FALSE) <if (con->conf.log_level == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE */ if ( COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result ) &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
<if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (dc->dc_flags & FI_DEAD) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (con->cond_cache[dc->context_ndx].result) <if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) <if (dc->prev) &if (con->conf.log_state & LOG_RELEASE(dc->parent)) LOG_ERROR("cond[%d] failed" % dc->parent->key); <else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &&if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
if (dc->flags & DEBUG_COND_SIZE) if (dc->conf.log_cond_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) return COND_RESULT_FALSE; if (dc->parent) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (con->conf.conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) <if (dc->prev) if (con->conf.log_condition_handling) log_error_
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) <if (dc->debug) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->cond_cache[dc->context_ndx].result == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (dc->flags & DEBUG_COND_SIZE) if (dc->conf.log_cond_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if(COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) if (dc->debug) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) <if (con->conf.log_level == COND_RESULT_FALSE) <if (con->conf.log_level == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (con->conf.conf_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
if (con->cond_cache[dc->context_ndx].result) if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) if (dc->debug) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) if (dc->prev) if (con->conf.log_state & LOG_RELEASE(dc->parent)) <LOG_ERROR("cond[%d] failed" % dc->parent->key); &else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (con->cond_cache[dc->context_ndx].result) <if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) <if (con->conf.log_level == COND_RESULT_FALSE) &if (con->conf.log_level == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if(con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (((con->cond_cache[dc->context_ndx].result) == con->cond_cache[dc->context_ndx].result) && (con->conf.log_condition_handling)) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (dc->prev) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->dc_socket) <if (dc->dc_socket) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) <if (dc->prev) <if (con->conf.log_state & LOG_RELEASE(dc->parent)) &LOG_ERROR("cond[%d] failed" % dc->parent->key); <else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &&if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) if (dc->debug) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->context_ndx->result) <return COND_RESULT_FALSE;
</* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) if (con->conf.conf_flags & COND_RESULT_FALSE) &/* get user base cache */ if (con->conf.conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->dc_socket) &if (dc->dc_socket) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
&if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) &if (dc->debug) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of our prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (con->conf.conf_error_handling) &if (con->conf.conf_error_handling) &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE */ if (COND_RESULT == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
if (con->cond_cache[dc->context_ndx].result) if (!con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (dc->context_ndx->dv_type == COND_NONE) TRACE("cond[%s]n", con->cond_cache[dc->context_ndx].result));
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->conf.conf_error_handling) <if (con->conf.conf_error_handling) <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; else &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->parent) <if (dc->parent->context_ndx) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.conf_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) &return COND_RESULT_FALSE; if (dc->parent) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
<if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
else </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) &if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if (ConD_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->dc_socket) if (dc->dc_socket) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) <return COND_RESULT_FALSE; <if (dc->parent) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* XXX */ return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (ConD_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->parent) &if (dc->parent->context_ndx) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) if (!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; /* one of prev set me to FALSE */
/* one of prev set me to FALSE */ if (cond_result == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE */ if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->parent && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) &/* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <<if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (con->cond_cache[dc->context_ndx].result) &if (!con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
if (con->conf.conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) &if (dc->prev) if (con->conf.log_condition_handling) log_error_
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->context_ndx) &if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (con->conf.log_error_handling) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) return COND_RESULT_FALSE; if (con->conf.conf_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) &if (con->conf.log_cache_handling) config_check_cond_cached(srv, con, dc->parent); &else &config_check_cond_cached(srv, con, dc->parent);
if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->cond_cache == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) <if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE */ if (con->conf.cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) </* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE */ if (con->conf.log_error_handling) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) &return COND_RESULT_FALSE; <if (dc->parent) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) return COND_RESULT_FALSE; if (dc->parent) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) <if (con->conf.log_level == COND_RESULT_FALSE) if (con->conf.log_level == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of * prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->dc_socket) <if (dc->dc_socket) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &<if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
if (!con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (!con->cond_cache[dc->context_ndx].result) &TRACE("cond[%d] = " "against" % dc->context_ndx);
if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%s]n", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return (COND_RESULT_FALSE);
if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) /* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE. */ if (con->conf.log_cond_handling) config_check_cond_cached(srv, con, dc->prev); if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%s] [%s]", dc->comp, dc->comp, dc->comp);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
if (dc->flags & DEBUG_COND_SIZE) &if (dc->conf.log_cond_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE. */ if (con->conf.log_cond_handling) &config_check_cond_cached(srv, con, dc->prev); if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%s] [%s]", dc->comp, dc->comp, dc->comp);
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) &return COND_RESULT_FALSE; <if (dc->parent) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) <return COND_RESULT_FALSE; <if (dc->parent) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
if (con->conf.conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) if (dc->prev) if (con->conf.log_condition_handling) log_error_
if (con->conf.log_condition_handling == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) <if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) &if (con->conf.log_level == COND_RESULT_FALSE) <if (con->conf.log_level == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
if (dc->flags & DEBUG_COND_SIZE) if (dc->conf.log_cond_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) &if (con->conf.log_level == COND_RESULT_FALSE) <if (con->conf.log_level == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) return COND_RESULT_FALSE; if (con->conf.conf_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (COND_RESULT == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache.result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of the prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &TRACE("cond[%d][%d]", dc->context_ndx, dc->conf.log_condition_handling, dc->dc_parent->key, dc->dc_parent->key, dc->dc_socket->flags, dc->dc_socket->context_ndx);
if (con->conf.conf_error_handling) if (con->conf.conf_error_handling) &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) </* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE */ if (dc->parent->context_ndx && con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->parent && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->parent) if (dc->parent->context_ndx) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) &if (con->conf.log_cache_handling) <config_check_cond_cached(srv, con, dc->parent); else <config_check_cond_cached(srv, con, dc->parent);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) </* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) &if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->dc_socket) if (dc->dc_socket) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) <if (con->conf.conf_flags & COND_RESULT_FALSE) /* get user base cache */ if (con->conf.conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) TRACE("cond[%s]", con->conf.log_condition_handling);
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->cond_cache[dc->context_ndx].result) &if (dc->parent->context_ndx) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (con->cond_cache[dc->context_ndx].result) <if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->context_ndx) &if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%d]&n", dc->parent->key);
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
if (con->cond_cache[dc->context_ndx].result) <if (!con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) if (!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (con->conf.conf_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (con->conf.log_condition_handling) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == dc->context_ndx.result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* XXX */ return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* XXX */ return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (con->conf.conf_error_handling) &if (con->conf.conf_error_handling) if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) if (con->conf.conf_flags & COND_RESULT_FALSE) /* get user base cache */ if (con->conf.conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (con->conf.conf_error_handling) &if (con->conf.conf_error_handling) if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE */ if (con->conf.log_queue_rtl && con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) &if (con->conf.conf_flags & COND_RESULT_FALSE) &/* get user base cache */ if (con->conf.conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &else &return COND_RESULT_FALSE;
if (dc->flags & DEBUG_COND_SIZE) if (dc->conf.log_cond_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%d]&n", dc->parent->key);
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (dc->flags & DEBUG_COND_SIZE) &if (dc->conf.log_cond_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (COND_RESULT == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <<if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/*one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (con->conf.conf_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) if (con->conf.log_cache_handling) &config_check_cond_cached(srv, con, dc->parent); else <config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) &/* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (con->conf.conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) &if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) &if (con->conf.log_cache_handling) <config_check_cond_cached(srv, con, dc->parent); &else <config_check_cond_cached(srv, con, dc->parent);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) if (dc->prev) &if (con->conf.log_state & LOG_RELEASE(dc->parent)) LOG_ERROR("cond[%d] failed" % dc->parent->key); <else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->parent && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
if (dc->flags & DEBUG_COND_SIZE) <if (dc->conf.log_cond_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) if (!con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <return (COND_RESULT_FALSE);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) &if (dc->debug) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->context_ndx) &if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]<n", dc->parent->key);
if (con->conf.conf_error_handling) if (con->conf.conf_error_handling) &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (dc->flags & DEBUG_COND_SIZE) <if (dc->conf.log_cond_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) if (!con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) &if (con->conf.log_level == COND_RESULT_FALSE) <if (con->conf.log_level == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->parent && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) <if (dc->prev) if (con->conf.log_state & LOG_RELEASE(dc->parent)) LOG_ERROR("cond[%d] failed" % dc->parent->key); <else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->dc_socket) <if (dc->dc_socket) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (!con->cond_cache[dc->context_ndx].result) TRACE("cond[%d] = " "against" % dc->context_ndx);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (con->conf.log_condition_handling) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) &if (con->conf.conf_flags & COND_RESULT_FALSE) /* get user base cache */ if (con->conf.conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) if (dc->debug) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) &if (!con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (con->cond_cache[dc->context_ndx].result) &if (dc->parent->context_ndx) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE */ if (Cond_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (con->conf.conf_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%d]&n", dc->parent->key);
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%d]&n", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) &if (dc->prev) if (con->conf.log_state & LOG_RELEASE(dc->parent)) LOG_ERROR("cond[%d] failed" % dc->parent->key); &else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].dummy)) &/* XXX should go here! */
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) &if (!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of the prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (con->conf.conf_error_handling) &if (con->conf.conf_error_handling) <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->parent && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->parent && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->dc_socket) <if (dc->dc_socket) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->parent) if (dc->parent->context_ndx) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) &/* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE. */ if (con->conf.log_cond_handling) &config_check_cond_cached(srv, con, dc->prev); if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%s] [%s]", dc->comp, dc->comp, dc->comp);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) if (!con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) if (dc->prev) &if (con->conf.log_state & LOG_RELEASE(dc->parent)) LOG_ERROR("cond[%d] failed" % dc->parent->key); else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) &if (!con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) <if (dc->prev) if (con->conf.log_state & LOG_RELEASE(dc->parent)) LOG_ERROR("cond[%d] failed" % dc->parent->key); else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) if (dc->prev) &if (con->conf.log_state & LOG_RELEASE(dc->parent)) <LOG_ERROR("cond[%d] failed" % dc->parent->key); &else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) &return COND_RESULT_FALSE; &if (dc->parent) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) &if (!con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) &/* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) &if (dc->debug) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) <if (!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->parent) if (dc->parent->context_ndx) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) &if (con->conf.conf_flags & COND_RESULT_FALSE) </* get user base cache */ if (con->conf.conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) &if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
if (con->conf.conf_error_handling) if (con->conf.conf_error_handling) &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) /* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) &return COND_RESULT_FALSE; <if (dc->parent) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) if (con->conf.log_cache_handling) <config_check_cond_cached(srv, con, dc->parent); &else config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* XXX */ return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* XXX */ return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one or more prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (con->conf.conf_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) <if (dc->debug) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) /* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->cache) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%s]n", dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of my prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->context_ndx) if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <return COND_RESULT_FALSE;
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->dc_socket) if (dc->dc_socket) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (con->conf.conf_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->cond_cache == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) <if (con->conf.log_cache_handling) <config_check_cond_cached(srv, con, dc->parent); else config_check_cond_cached(srv, con, dc->parent);
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* XXX */ return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE */ if (cond_result == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) /* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
if (con->conf.conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) if (dc->prev) if (con->conf.log_condition_handling) log_error_
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) if (con->conf.conf_flags & COND_RESULT_FALSE) </* get user base cache */ if (con->conf.conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) <if (con->conf.log_level == COND_RESULT_FALSE) &if (con->conf.log_level == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->context_ndx) &if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
if (con->cond_cache[dc->context_ndx].result) &if (!con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->parent) if (dc->parent->context_ndx) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->parent) &if (dc->parent->context_ndx) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (con->cond_cache[dc->context_ndx].result) &if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* XXX */ return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
if (con->cond_cache[dc->context_ndx].result) if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) &return COND_RESULT_FALSE; if (dc->parent) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->parent && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
if (con->cond_cache[dc->context_ndx].result) if (!con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* XXX */ return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) &/* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%s] is valid", dc->comp);
/* one of prev set me to FALSE */ if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%s] is valid", dc->comp);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (con->conf.conf_error_handling) if (con->conf.conf_error_handling) <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) /* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
if (dc->flags & DEBUG_COND_SIZE) <if (dc->conf.log_cond_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of my prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* XXX */ return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) if (dc->prev) if (con->conf.log_state & LOG_RELEASE(dc->parent)) &LOG_ERROR("cond[%d] failed" % dc->parent->key); <else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; else <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if(COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/*one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (con->conf.conf_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) </* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/*one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->parent && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one or more prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->context_ndx) &if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of the prev set me to FALSE */ if (dc->context_ndx!= NULL)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) if (con->conf.conf_flags & COND_RESULT_FALSE) </* get user base cache */ if (con->conf.conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->cond_cache[dc->context_ndx].result) if (dc->parent->context_ndx) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) if (!con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of the prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) if (con->conf.log_level == COND_RESULT_FALSE) &if (con->conf.log_level == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->parent && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
if (con->conf.conf_error_handling) if (con->conf.conf_error_handling) <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) if (!con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->cache) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE. */ if (Cond_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) &if (dc->prev) <if (con->conf.log_state & LOG_RELEASE(dc->parent)) <LOG_ERROR("cond[%d] failed" % dc->parent->key); &else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->context_ndx) <if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->cond_cache[dc->context_ndx].result) <if (!con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) &if (con->conf.conf_flags & COND_RESULT_FALSE) &/* get user base cache */ if (con->conf.conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (con->conf.conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) <if (dc->prev) if (con->conf.log_condition_handling) log_error_
if (con->cond_cache[dc->context_ndx].result) <if (dc->parent->context_ndx) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->parent && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->dc_socket) <if (dc->dc_socket) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
if (COND_RESULT_FALSE == con->cond_cache[con->context_ndx].result) <return COND_RESULT_FALSE;
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to NULL */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->context_ndx) if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* * We have the permissions for this, so that the config_check_cond_cache does not use the same reason as config_check_cond_cache() */
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (con->conf.conf_error_handling) <if (con->conf.conf_error_handling) &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->parent && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) if (con->conf.log_level == COND_RESULT_FALSE) &if (con->conf.log_level == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) if (con->conf.log_cache_handling) <config_check_cond_cached(srv, con, dc->parent); <else <config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (con->conf.conf_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <else &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* XXX */ return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/*one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->dc_ndx].result) return COND_RESULT_FALSE;
if (Cond_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (dc->flags & DEBUG_COND_SIZE) &if (dc->conf.log_cond_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; else return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) &if (dc->debug) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) return COND_RESULT_FALSE; &if (dc->parent) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) <if (con->conf.log_cache_handling) <config_check_cond_cached(srv, con, dc->parent); else &config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) &if (con->conf.log_level == COND_RESULT_FALSE) &if (con->conf.log_level == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE. */ if (con->conf.log_cond_handling) <config_check_cond_cached(srv, con, dc->prev); if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%s] [%s]", dc->comp, dc->comp, dc->comp);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (cond_result == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) &/* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (con->cond_cache[dc->context_ndx].result) &if (!con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
if (con->conf.conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->parent) <if (dc->parent->context_ndx) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
if (con->conf.conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) if (dc->prev) if (con->conf.log_condition_handling) log_error_
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->cond_cache[dc->context_ndx].result) &if (!con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->context_ndx) <if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) <if (dc->prev) if (con->conf.log_state & LOG_RELEASE(dc->parent)) &LOG_ERROR("cond[%d] failed" % dc->parent->key); <else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) &if (dc->debug) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) return COND_RESULT_FALSE; <if (dc->parent) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->dc_socket) if (dc->dc_socket) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (con->cond_cache[dc->context_ndx].result) &if (!con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->parent && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
if (dc->flags & DEBUG_COND_SIZE) &if (dc->conf.log_cond_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) </* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) <return COND_RESULT_FALSE; if (dc->parent) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &TRACE("cond[%s]", con->conf.log_condition_handling);
if (con->conf.conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) &if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) <return COND_RESULT_FALSE; &if (dc->parent) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->parent && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; else return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (dc->flags & DEBUG_COND_SIZE) <if (dc->conf.log_cond_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) if (con->conf.conf_flags & COND_RESULT_FALSE) </* get user base cache */ if (con->conf.conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%s]n", dc->parent->key);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) if (con->conf.conf_flags & COND_RESULT_FALSE) </* get user base cache */ if (con->conf.conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &else &return COND_RESULT_FALSE;
if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <else return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
if (con->conf.conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) &if (dc->prev) if (con->conf.log_condition_handling) log_error_
if (con->conf.conf_error_handling) <if (con->conf.conf_error_handling) <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE. */ if (con->conf.log_cond_handling) <config_check_cond_cached(srv, con, dc->prev); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%s] [%s]", dc->comp, dc->comp, dc->comp);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->parent && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->dc_socket) &if (dc->dc_socket) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) if (dc->prev) <if (con->conf.log_state & LOG_RELEASE(dc->parent)) &LOG_ERROR("cond[%d] failed" % dc->parent->key); &else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &TRACE("cond[%s]", con->conf.log_condition_handling);
if (dc->flags & DEBUG_COND_SIZE) &if (dc->conf.log_cond_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <<if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (con->conf.conf_error_handling) if (con->conf.conf_error_handling) &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (con->cond_cache[dc->context_ndx].result)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->context_ndx) <if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->parent && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) &if (dc->prev) if (con->conf.log_state & LOG_RELEASE(dc->parent)) <LOG_ERROR("cond[%d] failed" % dc->parent->key); &else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[con->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->parent && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (con->conf.conf_error_handling) <if (con->conf.conf_error_handling) &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if (dc->context_ndx->dv_type == COND_NONE) <TRACE("cond[%s]<n", con->cond_cache[dc->context_ndx].result));
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (con->conf.conf_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->cond_cache[dc->context_ndx].result) <if (!con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) <if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->dc_socket) &if (dc->dc_socket) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%d]n", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->context_ndx->result) <return COND_RESULT_FALSE;
if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) &/* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) <if (con->conf.log_cache_handling) config_check_cond_cached(srv, con, dc->parent); &else config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) &if (con->conf.conf_flags & COND_RESULT_FALSE) &/* get user base cache */ if (con->conf.conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) if (con->conf.conf_flags & COND_RESULT_FALSE) /* get user base cache */ if (con->conf.conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) &if (con->conf.log_cache_handling) <config_check_cond_cached(srv, con, dc->parent); <else <config_check_cond_cached(srv, con, dc->parent);
if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) if (con->conf.log_level == COND_RESULT_FALSE) &if (con->conf.log_level == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if(con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->cond_cache[dc->context_ndx].result) if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) &if (con->conf.log_cache_handling) &config_check_cond_cached(srv, con, dc->parent); else config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->parent && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache.result) &return COND_RESULT_FALSE;
if (con->conf.conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) &if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) if (con->conf.log_level == COND_RESULT_FALSE) &if (con->conf.log_level == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[cond->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_warning && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <TRACE("cond[%s] = COND_RESULT_FALSE" % dc->parent, dc->parent->key);
/*one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->cache) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->dc_ndx].result) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.conf_error_handling) &if (con->conf.conf_error_handling) <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) <if (dc->debug) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) if (!con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* XXX */ return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
&if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%s] is valid", dc->comp);
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) <if (con->conf.log_cache_handling) <config_check_cond_cached(srv, con, dc->parent); <else &config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) &if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE. */ if (cond_result == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) if (con->conf.log_level == COND_RESULT_FALSE) if (con->conf.log_level == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) &return COND_RESULT_FALSE; &if (dc->parent) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
if (dc->flags & DEBUG_COND_SIZE) &if (dc->conf.log_cond_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->parent && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
&if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (dc->flags & DEBUG_COND_SIZE) <if (dc->conf.log_cond_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) if (con->conf.conf_flags & COND_RESULT_FALSE) &/* get user base cache */ if (con->conf.conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->cond_cache[dc->context_ndx].result) if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) &return COND_RESULT_FALSE; <if (dc->parent) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (con->conf.log_error_handling) &return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%s]&n", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->cache) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE. */ if (COND_RESULT == con->cond_cache[dc->context_ndx].result) return COND_RESULT;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) if (con->conf.log_cache_handling) &config_check_cond_cached(srv, con, dc->parent); <else &config_check_cond_cached(srv, con, dc->parent);
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (con->conf.conf_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) &if (!con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->context_ndx) if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) <config_check_cond_cached(srv, con, dc->context_ndx);
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) <if (!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_error_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) if (con->conf.log_level == COND_RESULT_FALSE) &if (con->conf.log_level == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result)
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (con->conf.conf_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <<if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) <if (dc->prev) <if (con->conf.log_state & LOG_RELEASE(dc->parent)) <LOG_ERROR("cond[%d] failed" % dc->parent->key); else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) &if (!con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE. */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].dummy)) /* XXX should go here! */
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) <if (con->conf.conf_flags & COND_RESULT_FALSE) &/* get user base cache */ if (con->conf.conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* XXX */ return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (con->conf.conf_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->context_ndx) &if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) &if (con->conf.conf_flags & COND_RESULT_FALSE) /* get user base cache */ if (con->conf.conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) <if (dc->prev) <if (con->conf.log_state & LOG_RELEASE(dc->parent)) <LOG_ERROR("cond[%d] failed" % dc->parent->key); &else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->conf.log_cond_handling) <config_check_cond_cached(srv, con, dc->prev); if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%s] [%s]", dc->comp, dc->comp, dc->comp);
/* one of prev set me to FALSE */ if (con->conf.conf_result == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (dc->flags & DEBUG_COND_SIZE) if (dc->conf.log_cond_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
if (con->cond_cache[dc->context_ndx].result) if (dc->parent->context_ndx) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->dc_socket) if (dc->dc_socket) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
if (con->cond_cache[dc->context_ndx].result) return con->cond_cache[dc->context_ndx].result;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result == con->cond_cache[dc->context_ndx].result)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of my prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* XXX */ return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* One of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->parent) <if (dc->parent->context_ndx) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) &return COND_RESULT_FALSE; if (dc->parent) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (con->conf.conf_error_handling) &if (con->conf.conf_error_handling) <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
if (!con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) &if (con->conf.log_cache_handling) &config_check_cond_cached(srv, con, dc->parent); &else &config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->parent) <if (dc->parent->context_ndx) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of these prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) TRACE("cond[%s]", con->conf.log_condition_handling);
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%d]&n", con->cond_cache[dc->context_ndx].result);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* XXX */ return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) <if (!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->parent) &if (dc->parent->context_ndx) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* One of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) <if (con->conf.log_level == COND_RESULT_FALSE) if (con->conf.log_level == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) <if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) if (con->conf.log_level == COND_RESULT_FALSE) <if (con->conf.log_level == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == dc->context_ndx.result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <TRACE("cond[%s]", con->conf.log_condition_handling);
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->context_ndx) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of the prev sets me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->dc_socket) if (dc->dc_socket) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) &if (con->conf.log_level == COND_RESULT_FALSE) if (con->conf.log_level == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE */ if(con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((dc->conf.conf.conf_flags & COND_RESULT) == COND_RESULT_FALSE) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (dc->conf.conf_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) <TRACE("cond[%s] = %s", con->cond_cache[dc->context_ndx].result, dc->parent->context_ndx);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->parent) <if (dc->parent->context_ndx) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
else &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) &if (dc->prev) <if (con->conf.log_state & LOG_RELEASE(dc->parent)) &LOG_ERROR("cond[%d] failed" % dc->parent->key); &else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <TRACE("cond[%s]", con->conf.log_condition_handling);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) &if (!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) <return COND_RESULT_FALSE; if (dc->parent) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) if (con->conf.log_level == COND_RESULT_FALSE) if (con->conf.log_level == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) </* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
<if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->dc_socket) &if (dc->dc_socket) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE */ if (con->conf.conf.log_result == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* XXX */ return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx]) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
if (con->conf.conf_error_handling) <if (con->conf.conf_error_handling) &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of my prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->context_ndx) if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->parent) &if (dc->parent->context_ndx) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->parent) <if (dc->parent->context_ndx) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) <if (!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <TRACE("cond[%s]", con->conf.log_condition_handling);
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%s]n", dc->parent->key);
if (ConD_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) return COND_RESULT_FALSE; if (dc->parent) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
if (con->cond_cache[dc->context_ndx].result) <if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (con->cond_cache[dc->context_ndx].result) if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) &if (con->conf.log_cache_handling) <config_check_cond_cached(srv, con, dc->parent); else &config_check_cond_cached(srv, con, dc->parent);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->dc_socket) <if (dc->dc_socket) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
if (con->conf.conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) <if (dc->prev) if (con->conf.log_condition_handling) log_error_
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (con->conf.conf_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (dc->flags & DEBUG_COND_SIZE) if (dc->conf.log_cond_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (con->conf.conf_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->dc_socket) <if (dc->dc_socket) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if (!con->cond_cache[dc->context_ndx].result) &return config_check_cond_nocache(srv, con, dc->context_ndx);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE */ if (result == con->cond_cache[dc->context_ndx].result) return result;
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) &if (dc->debug) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) &return COND_RESULT_FALSE; &if (dc->parent) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->parent && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) <return COND_RESULT_FALSE; &if (dc->parent) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
if (con->conf.conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) <if (dc->prev) if (con->conf.log_condition_handling) log_error_
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%s] is valid", dc->comp);
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->context_ndx) <if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
if (con->cond_cache[dc->context_ndx].result) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of these prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_error_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/*one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) <if (con->conf.log_cache_handling) &config_check_cond_cached(srv, con, dc->parent); else <config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->dc_socket) &if (dc->dc_socket) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
if (dc->dc_flags & FI_DEAD) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) <if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->conf.log_cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if(con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->parent && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if (result == con->cond_cache[dc->context_ndx].result) <return result;
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) if (con->conf.log_level == COND_RESULT_FALSE) if (con->conf.log_level == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) <if (dc->prev) &if (con->conf.log_state & LOG_RELEASE(dc->parent)) <LOG_ERROR("cond[%d] failed" % dc->parent->key); <else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if (COND_RESULT == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.conf_error_handling) &if (con->conf.conf_error_handling) <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.conf_error_handling) if (con->conf.conf_error_handling) <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
if (con->conf.conf_error_handling) &if (con->conf.conf_error_handling) <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) <return COND_RESULT_FALSE; if (dc->parent) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of * prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) if (con->conf.log_level == COND_RESULT_FALSE) <if (con->conf.log_level == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
if (con->cond_cache[dc->context_ndx].result) &if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", con->parent->key);
if (con->conf.conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) <if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) if (!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to TRUE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return TRUE;
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->parent) <if (dc->parent->context_ndx) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%d]<n", dc->parent->key);
if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* XXX */ return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->parent) &if (dc->parent->context_ndx) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* XXX */ return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; else &return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
if (con->cond_cache[dc->context_ndx].result) <if (dc->parent->context_ndx) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->parent->context_ndx].result) <return COND_RESULT_FALSE;
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) if (dc->prev) &if (con->conf.log_state & LOG_RELEASE(dc->parent)) &LOG_ERROR("cond[%d] failed" % dc->parent->key); &else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (Cond_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of my prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) /* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (con->conf.log_condition_handling == COND_RESULT_FALSE) <return COND_RESULT_FALSE;
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%d]n", con->cond_cache[dc->context_ndx].result);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->parent->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->parent) &if (dc->parent->context_ndx) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) <if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) if (dc->debug) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
if (!con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (con->cond_cache[dc->context_ndx].result) &if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->parent) if (dc->parent->context_ndx) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) &if (dc->prev) <if (con->conf.log_state & LOG_RELEASE(dc->parent)) &LOG_ERROR("cond[%d] failed" % dc->parent->key); else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) &if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) if (dc->prev) &if (con->conf.log_state & LOG_RELEASE(dc->parent)) <LOG_ERROR("cond[%d] failed" % dc->parent->key); else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.conf_error_handling) if (con->conf.conf_error_handling) if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
if (con->conf.conf_error_handling) <if (con->conf.conf_error_handling) if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%d]&n", con->cond_cache[dc->context_ndx].result);
if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) if (con->conf.log_cache_handling) &config_check_cond_cached(srv, con, dc->parent); &else <config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) &if (!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* XXX */ return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
if (con->cond_cache[dc->context_ndx].result) &if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) &if (dc->debug) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) if (dc->debug) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE. */ if (con->conf.log_cond_handling) <config_check_cond_cached(srv, con, dc->prev); if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%s] [%s]", dc->comp, dc->comp, dc->comp);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) /* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE */ if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (con->conf.conf_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) &if (con->conf.log_level == COND_RESULT_FALSE) if (con->conf.log_level == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE */ if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) <if (con->conf.conf_flags & COND_RESULT_FALSE) /* get user base cache */ if (con->conf.conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->parent && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
<if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if ((con->cond_cache[dc->context_ndx].result == con->cond_cache[dc->context_ndx].result) &&!con->conf.log_condition_handling) <TRACE("cond[%d]", con->cond_cache[dc->context_ndx].result));
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) if (dc->debug) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) <if (con->conf.log_cache_handling) config_check_cond_cached(srv, con, dc->parent); else config_check_cond_cached(srv, con, dc->parent);
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (con->conf.conf_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (con->conf.conf_error_handling) &if (con->conf.conf_error_handling) &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* XXX */ return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) <if (con->conf.log_cache_handling) &config_check_cond_cached(srv, con, dc->parent); &else config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) <if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result &&!con->conf.log_condition_handling) &TRACE("cond[%d]" % con->cond_cache[dc->context_ndx].result");
if (Cond_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) <if (con->conf.log_cache_handling) &config_check_cond_cached(srv, con, dc->parent); <else config_check_cond_cached(srv, con, dc->parent);
if (dc->conf.get_conditional_handling(dc->context_ndx) == 0)
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) <if (dc->debug) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->cond_cache[dc->context_ndx].result) <if (!con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->cache) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
if (!con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (con->cond_cache[dc->context_ndx].result) <if (dc->parent->context_ndx) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) <if (con->conf.log_level == COND_RESULT_FALSE) &if (con->conf.log_level == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE. */ if (con->conf.log_cond_handling) <config_check_cond_cached(srv, con, dc->prev); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%s] [%s]", dc->comp, dc->comp, dc->comp);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <TRACE("cond[%s]", con->conf.log_condition_handling);
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->context_ndx) <if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE. */ if (con->conf.log_cond_handling) config_check_cond_cached(srv, con, dc->prev); if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%s] [%s]", dc->comp, dc->comp, dc->comp);
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->parent->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (dc->flags & DEBUG_COND_SIZE) &if (dc->conf.log_cond_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <TRACE("cond[%d][%d]", dc->context_ndx, dc->conf.log_condition_handling, dc->dc_parent->key, dc->dc_parent->key, dc->dc_socket->flags, dc->dc_socket->context_ndx);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->context_ndx) <if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
if (con->conf.conf_error_handling) &if (con->conf.conf_error_handling) &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (con->cond_cache[dc->context_ndx].result) <if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (con->conf.conf_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) <if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
&if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (dc->flags & DEBUG_COND_SIZE) if (dc->conf.log_cond_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->dc_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE */ if (con->cond_cache[con->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) if (dc->prev) if (con->conf.log_condition_handling) log_error_
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (dc->flags & DEBUG_COND_SIZE) if (dc->conf.log_cond_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->parent && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) &if (con->conf.log_cache_handling) config_check_cond_cached(srv, con, dc->parent); &else config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) &if (con->conf.conf_flags & COND_RESULT_FALSE) &/* get user base cache */ if (con->conf.conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (con->cond_cache[dc->context_ndx].result) <if (!con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) <return COND_RESULT_FALSE; <if (dc->parent) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE. */ if (dc->context_ndx!= NULL && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->parent->context_ndx!= NULL) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (dc->flags & DEBUG_COND_SIZE) if (dc->conf.log_cond_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (con->conf.conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) <if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result == 0) &return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* One of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <else <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->parent) &if (dc->parent->context_ndx) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* XXX */ return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->dc_socket) &if (dc->dc_socket) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
if (ConD_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) /* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* XXX */ return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (con->cond_cache[dc->context_ndx].result) <if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->parent && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if (COND_RESULT_TRUE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_TRUE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) &if (con->conf.log_cache_handling) config_check_cond_cached(srv, con, dc->parent); else <config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* XXX */ return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->context_ndx) <if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) return COND_RESULT_FALSE; if (con->conf.conf_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (dc->flags & DEBUG_COND_SIZE) if (dc->conf.log_cond_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (con->conf.conf_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) &return COND_RESULT_FALSE; <if (dc->parent) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) <if (con->conf.log_cache_handling) config_check_cond_cached(srv, con, dc->parent); <else config_check_cond_cached(srv, con, dc->parent);
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE */ if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_error_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) TRACE("cond[%s]", con->conf.log_condition_handling);
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <TRACE("cond[%s]", con->conf.log_condition_handling);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->context_ndx->result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%s] is valid", dc->comp);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* XXX */ return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
if (con->cond_cache[dc->context_ndx].result) if (!con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->parent) &if (dc->parent->context_ndx) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (con->cond_cache[dc->context_ndx].result) if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* XXX */ return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (COND_RESULT == con->cond_cache[dc->context_ndx].result) &return COND_RESULT;
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of my prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
if (con->conf.conf_error_handling) <if (con->conf.conf_error_handling) &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* XXX */ return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->context_ndx) <if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &<if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (con->conf.conf_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) &if (con->conf.log_level == COND_RESULT_FALSE) if (con->conf.log_level == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) &return COND_RESULT_FALSE; &if (dc->parent) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->parent && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
<if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]&n", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result &&!con->conf.log_condition_handling) TRACE("cond[%d]" % con->cond_cache[dc->context_ndx].result");
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) <if (con->conf.log_cache_handling) <config_check_cond_cached(srv, con, dc->parent); <else <config_check_cond_cached(srv, con, dc->parent);
if (con->cond_cache[dc->context_ndx].result) <if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) &if (dc->debug) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->conf.conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) <if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if (__FILE__ == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
if (con->conf.conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) &if (con->conf.log_cache_handling) config_check_cond_cached(srv, con, dc->parent); <else config_check_cond_cached(srv, con, dc->parent);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (con->conf.log_cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) &if (dc->prev) if (con->conf.log_state & LOG_RELEASE(dc->parent)) &LOG_ERROR("cond[%d] failed" % dc->parent->key); &else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
if (dc->flags & DEBUG_COND_SIZE) if (dc->conf.log_cond_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->context_ndx) if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &config_check_cond_cached(srv, con, dc->parent); if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE */ if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->dc_socket) if (dc->dc_socket) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (con->cond_cache[dc->context_ndx].result) &if (!con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) config_check_cond_cached(srv, con, dc->parent); if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) <if (con->conf.log_cache_handling) &config_check_cond_cached(srv, con, dc->parent); &else &config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[cond->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
if (con->cond_cache[dc->context_ndx].result) if (dc->parent->context_ndx) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (con->conf.conf_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) if (dc->prev) if (con->conf.log_state & LOG_RELEASE(dc->parent)) LOG_ERROR("cond[%d] failed" % dc->parent->key); else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (con->conf.conf_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE */ if (dc->conf.conf_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) TRACE("cond[%s] = %s", con->cond_cache[dc->context_ndx].result, dc->parent->context_ndx);
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) &if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%s]&n", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) <if (con->conf.log_level == COND_RESULT_FALSE) &if (con->conf.log_level == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->parent && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) &return COND_RESULT_FALSE; <if (dc->parent) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) <if (dc->prev) &if (con->conf.log_state & LOG_RELEASE(dc->parent)) <LOG_ERROR("cond[%d] failed" % dc->parent->key); &else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (con->conf.cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (con->cond_cache[dc->context_ndx].result) <if (!con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (con->conf.log_error_handling && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
if (dc->flags & DEBUG_COND_SIZE) <if (dc->conf.log_cond_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (con->conf.conf_error_handling) <if (con->conf.conf_error_handling) <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE. */ if (con->conf.log_cond_handling) &config_check_cond_cached(srv, con, dc->prev); if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%s] [%s]", dc->comp, dc->comp, dc->comp);
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->dc_socket) &if (dc->dc_socket) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
if (con->cond_cache[dc->context_ndx].result) &if (!con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) <if (con->conf.log_cache_handling) <config_check_cond_cached(srv, con, dc->parent); &else &config_check_cond_cached(srv, con, dc->parent);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE... */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
if (con->cond_cache[dc->context_ndx].result) if (!con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->cond_cache[dc->context_ndx].result) <if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->parent && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->context_ndx) &if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) <if (dc->debug) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->parent && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) </* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) <return COND_RESULT_FALSE; &if (dc->parent) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) return COND_RESULT_FALSE; &if (dc->parent) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_error_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (con->conf.conf_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* XXX */ return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) if (dc->prev) if (con->conf.log_state & LOG_RELEASE(dc->parent)) <LOG_ERROR("cond[%d] failed" % dc->parent->key); <else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (con->conf.conf_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) &if (dc->debug) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
if (con->cond_cache[dc->context_ndx].result) &if (dc->parent->context_ndx) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <&if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <else &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->parent && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->dc_socket) &if (dc->dc_socket) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) if (con->conf.log_cache_handling) config_check_cond_cached(srv, con, dc->parent); <else <config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
&if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->dc_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (dc->parent->context_ndx && con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (con->conf.conf_error_handling) <if (con->conf.conf_error_handling) <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%d]&n", con->cond_cache[dc->context_ndx].result);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->dc_socket) <if (dc->dc_socket) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE. */ if (dc->context_ndx!= NULL && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->parent->context_ndx!= NULL) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &TRACE("cond[%s]", con->conf.log_condition_handling);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* * If the dc->parent is not an invalid connection, we * have to check the child's prev */
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) <if (!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->parent) <if (dc->parent->context_ndx) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) /* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->parent && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) &if (con->conf.conf_flags & COND_RESULT_FALSE) /* get user base cache */ if (con->conf.conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) TRACE("cond[%s]", con->conf.log_condition_handling);
&if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) <if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (dc->dc_flags & FI_DEAD) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->parent) <if (dc->parent->context_ndx) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->dc_socket) if (dc->dc_socket) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->parent) if (dc->parent->context_ndx) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
if (con->conf.conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) if (dc->prev) if (con->conf.log_condition_handling) log_error_
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* XXX */ return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* XXX */ return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", con->parent->key);
if (con->conf.log_condition_handling) config_check_cond_cached(srv, con, dc->context_ndx);
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) &if (dc->debug) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->cond_cache[dc->context_ndx].result) if (!con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->parent && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/*one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE... */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) &if (con->conf.conf_flags & COND_RESULT_FALSE) </* get user base cache */ if (con->conf.conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (con->cond_cache[dc->context_ndx].result) &if (!con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (con->cond_cache[dc->context_ndx].result) if (dc->parent->context_ndx) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%d]n", con->cond_cache[dc->context_ndx].result);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->parent && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if ( COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) <if (con->conf.log_level == COND_RESULT_FALSE) <if (con->conf.log_level == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->context_ndx->result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) return COND_RESULT_FALSE; if (dc->parent) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
if (con->conf.conf_error_handling) if (con->conf.conf_error_handling) if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <<if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
if (con->conf.conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE */ if (Cond_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return Cond_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) &if (!con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->parent && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (con->conf.conf_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (con->conf.log_condition_handling == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE */ if ((con->cond_cache[dc->context_ndx].result) && (con->conf.log_condition_handling & COND_RESULT_FALSE)) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (con->conf.conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) if (con->conf.conf_flags & COND_RESULT_FALSE) /* get user base cache */ if (con->conf.conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) <if (con->conf.log_level == COND_RESULT_FALSE) <if (con->conf.log_level == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE */ if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
</* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (con->cond_cache[dc->context_ndx].result) if (dc->parent->context_ndx) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if (Cond_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
if (con->cond_cache[dc->context_ndx].result) if (dc->parent->context_ndx) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE */ if (COND_RESULT == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE. */ if (con->conf.log_cond_handling) <config_check_cond_cached(srv, con, dc->prev); if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%s] [%s]", dc->comp, dc->comp, dc->comp);
if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->dc_socket) if (dc->dc_socket) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) &if (dc->prev) if (con->conf.log_state & LOG_RELEASE(dc->parent)) LOG_ERROR("cond[%d] failed" % dc->parent->key); <else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) <if (con->conf.conf_flags & COND_RESULT_FALSE) </* get user base cache */ if (con->conf.conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; else <return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (con->cond_cache[dc->context_ndx].result) if (!con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &config_check_cond_cached(srv, con, dc->parent); if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) return COND_RESULT_FALSE; if (dc->parent) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
&/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) &if (con->conf.log_level == COND_RESULT_FALSE) <if (con->conf.log_level == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) &if (con->conf.log_level == COND_RESULT_FALSE) &if (con->conf.log_level == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->context_ndx) &if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
if (con->conf.conf_error_handling) if (con->conf.conf_error_handling) <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%d]&n", con->cond_cache[dc->context_ndx].result);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) </* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) &if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->dc_socket) <if (dc->dc_socket) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
if (dc->flags & DEBUG_COND_SIZE) &if (dc->conf.log_cond_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
if (con->conf.conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) &if (con->conf.conf_flags & COND_RESULT_FALSE) &/* get user base cache */ if (con->conf.conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
if (dc->flags & DEBUG_COND_SIZE) &if (dc->conf.log_cond_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) &if (con->conf.log_cache_handling) &config_check_cond_cached(srv, con, dc->parent); else <config_check_cond_cached(srv, con, dc->parent);
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) if (dc->prev) &if (con->conf.log_state & LOG_RELEASE(dc->parent)) &LOG_ERROR("cond[%d] failed" % dc->parent->key); <else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE */ if (con->conf.conf_result == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->context_ndx) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
else </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) &if (dc->prev) &if (con->conf.log_state & LOG_RELEASE(dc->parent)) LOG_ERROR("cond[%d] failed" % dc->parent->key); &else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->context_ndx) &if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &else <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (con->cond_cache[dc->context_ndx].result) &if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) &if (con->conf.log_cache_handling) <config_check_cond_cached(srv, con, dc->parent); <else &config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) &/* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
if (con->conf.conf_error_handling) if (con->conf.conf_error_handling) <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) &if (con->conf.log_level == COND_RESULT_FALSE) <if (con->conf.log_level == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (con->conf.conf_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->dc_socket) &if (dc->dc_socket) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->dc_socket) if (dc->dc_socket) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (con->cond_cache[dc->context_ndx].result) <if (dc->parent->context_ndx) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[con->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) if (con->conf.log_cache_handling) config_check_cond_cached(srv, con, dc->parent); else <config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (con->cond_cache[dc->context_ndx].result) if (!con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if ( COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (con->conf.conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) &if (dc->prev) if (con->conf.log_condition_handling) log_error_
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%d]<n", dc->parent->key);
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->context_ndx) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
if (!con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) &if (dc->debug) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one or more prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE */ result = con->cond_cache[dc->context_ndx].result; if (result) <return result;
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) &return COND_RESULT_FALSE; if (dc->parent) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
if (con->conf.conf_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) &return COND_RESULT_FALSE; <if (dc->parent) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) if (con->conf.log_cache_handling) config_check_cond_cached(srv, con, dc->parent); &else config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE */ if (__FILE__ == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE */ if ( COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/*one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[cond->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->context_ndx) <if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) <if (con->conf.log_cache_handling) config_check_cond_cached(srv, con, dc->parent); else <config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->parent) <if (dc->parent->context_ndx) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) <if (dc->debug) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) return COND_RESULT_FALSE; &if (dc->parent) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
if (dc->flags & DEBUG_COND_SIZE) &if (dc->conf.log_cond_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) &if (dc->prev) if (con->conf.log_state & LOG_RELEASE(dc->parent)) &LOG_ERROR("cond[%d] failed" % dc->parent->key); <else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE */ if ((con->cond_cache[dc->context_ndx].result) && (con->conf.log_condition_handling & COND_RESULT_FALSE)) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* XXX */ return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->context_ndx->result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (((con->cond_cache[dc->context_ndx].result) == con->cond_cache[dc->context_ndx].result) && (con->conf.log_condition_handling)) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE */ if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (Cond_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->context_ndx->result) &return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) &if (dc->parent->context_ndx) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) <if (con->conf.log_cache_handling) &config_check_cond_cached(srv, con, dc->parent); else config_check_cond_cached(srv, con, dc->parent);
if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (con->cond_cache[dc->context_ndx].result) if (!con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->parent && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[con->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) return COND_RESULT_FALSE; &if (dc->parent) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (con->conf.conf_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
if (COND_RESULT == con->cond_cache[dc->context_ndx].result) &return COND_RESULT;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) &if (con->conf.conf_flags & COND_RESULT_FALSE) /* get user base cache */ if (con->conf.conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) if (dc->prev) <if (con->conf.log_state & LOG_RELEASE(dc->parent)) <LOG_ERROR("cond[%d] failed" % dc->parent->key); else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (con->conf.conf_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result)
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
if (!con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
<if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->conf.log_cond_handling) &config_check_cond_cached(srv, con, dc->prev); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%s] [%s]", dc->comp, dc->comp, dc->comp);
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) &return COND_RESULT_FALSE; <if (dc->parent) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->parent && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if (COND_RESULT_TRUE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_TRUE;
if (con->conf.conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) <if (dc->prev) if (con->conf.log_condition_handling) log_error_
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if ((dc->conf.conf.conf_flags & COND_RESULT) == COND_RESULT_FALSE) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.conf_error_handling) &if (con->conf.conf_error_handling) &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) TRACE("cond[%s]", con->conf.log_condition_handling);
if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to TRUE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return TRUE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* One of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->parent && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->parent && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.conf_error_handling) &if (con->conf.conf_error_handling) &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) &if (con->conf.conf_flags & COND_RESULT_FALSE) /* get user base cache */ if (con->conf.conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of the prev sets me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) <if (con->conf.conf_flags & COND_RESULT_FALSE) &/* get user base cache */ if (con->conf.conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) <if (con->conf.log_level == COND_RESULT_FALSE) if (con->conf.log_level == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->parent) if (dc->parent->context_ndx) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) if (con->conf.log_level == COND_RESULT_FALSE) <if (con->conf.log_level == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) <if (!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* XXX */ return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) <if (dc->prev) &if (con->conf.log_state & LOG_RELEASE(dc->parent)) &LOG_ERROR("cond[%d] failed" % dc->parent->key); else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* XXX */ return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (con->conf.conf_error_handling) <if (con->conf.conf_error_handling) &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return (COND_RESULT_FALSE);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE. */ if (dc->context_ndx!= NULL && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->parent->context_ndx!= NULL) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &&if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->parent && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) &if (con->conf.log_cache_handling) &config_check_cond_cached(srv, con, dc->parent); <else <config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling == COND_RESULT_FALSE) <return COND_RESULT_FALSE;
if (COND_RESULT == con->cond_cache[dc->context_ndx].result) <return COND_RESULT;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->context_ndx) <if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->context_ndx) <if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) return COND_RESULT_FALSE; if (con->conf.conf_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->context_ndx) if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (ConD_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return ConD_RESULT_FALSE;
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) if (dc->debug) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) &if (con->conf.log_cache_handling) &config_check_cond_cached(srv, con, dc->parent); &else <config_check_cond_cached(srv, con, dc->parent);
if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (con->conf.log_cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (con->conf.conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) <if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%d]<n", con->cond_cache[dc->context_ndx].result);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* XXX */ return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE */ if ((con->cond_cache[dc->context_ndx].result == con->cond_cache[dc->context_ndx].result) &&!con->conf.log_condition_handling) TRACE("cond[%d]", con->cond_cache[dc->context_ndx].result));
if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
if (con->cond_cache[dc->context_ndx].result) <if (!con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->dc_socket) &if (dc->dc_socket) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) if (dc->debug) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) if (dc->prev) <if (con->conf.log_state & LOG_RELEASE(dc->parent)) <LOG_ERROR("cond[%d] failed" % dc->parent->key); &else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.conf_error_handling) &if (con->conf.conf_error_handling) <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &&if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
<if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) <return COND_RESULT_FALSE; &if (dc->parent) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if (result == con->cond_cache[dc->context_ndx].result) &return result;
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]n", dc->parent->key);
if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (dc->flags & DEBUG_COND_SIZE) &if (dc->conf.log_cond_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) </* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (con->conf.conf_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->cond_cache[dc->context_ndx].result) <if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) &if (!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (con->cond_cache[dc->context_ndx].result) &if (!con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->context_ndx) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) <if (con->conf.conf_flags & COND_RESULT_FALSE) &/* get user base cache */ if (con->conf.conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) &if (dc->prev) &if (con->conf.log_state & LOG_RELEASE(dc->parent)) LOG_ERROR("cond[%d] failed" % dc->parent->key); else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) return COND_RESULT_FALSE; &if (dc->parent) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) if (!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* * If the dc->parent is not an invalid connection, we * have to check the child's prev */
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
if (COND_RESULT_FALSE == con->cond_cache[con->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->context_ndx) &if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
if (con->cond_cache[dc->context_ndx].result) if (!con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) &return COND_RESULT_FALSE; <if (dc->parent) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* One of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
if (con->cond_cache[dc->context_ndx].result) if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (con->cond_cache[dc->context_ndx].result) &if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%d]<n", dc->parent->key);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (con->conf.log_cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.conf.log_result == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (con->conf.log_error_handling && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (ConD_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return ConD_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) if (con->conf.log_cache_handling) &config_check_cond_cached(srv, con, dc->parent); <else config_check_cond_cached(srv, con, dc->parent);
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%d]<n", dc->parent->key);
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) if (con->conf.log_cache_handling) <config_check_cond_cached(srv, con, dc->parent); &else <config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
if (con->conf.conf_error_handling) &if (con->conf.conf_error_handling) <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE. */ if (dc->dc_result == con->cond_cache[dc->dc_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) return COND_RESULT_FALSE; if (con->conf.conf_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%s]n", dc->parent->key);
if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%d]<n", con->cond_cache[dc->context_ndx].result);
if (con->conf.conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->dc_socket) if (dc->dc_socket) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <else return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) <if (!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* One of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) &if (!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (!con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
&if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) return con->cond_cache[dc->context_ndx].result;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (Cond_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of our prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &&if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) &if (con->conf.log_cache_handling) <config_check_cond_cached(srv, con, dc->parent); else config_check_cond_cached(srv, con, dc->parent);
if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) if (con->conf.log_level == COND_RESULT_FALSE) if (con->conf.log_level == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[con->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE */ if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) if (con->conf.log_cache_handling) <config_check_cond_cached(srv, con, dc->parent); <else &config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* XXX */ return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (con->conf.conf_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (con->cond_cache[dc->context_ndx].result) if (!con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
if (con->cond_cache[dc->context_ndx].result) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) <if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (con->conf.conf_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE. */ if (dc->context_ndx == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->conf.log_cond_handling) config_check_cond_cached(srv, con, dc->prev); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%s] [%s]", dc->comp, dc->comp, dc->comp);
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) &return COND_RESULT_FALSE; if (dc->parent) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/*one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->dc_socket) if (dc->dc_socket) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) if (con->conf.conf_flags & COND_RESULT_FALSE) /* get user base cache */ if (con->conf.conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->context_ndx) <if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* XXX */ return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_error_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
if (con->cond_cache[dc->context_ndx].result == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->parent && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE. */ if (con->conf.log_condition_handling) &return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) &if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->parent) &if (dc->parent->context_ndx) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &<if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE */ if (dc->context_ndx->dv_type == COND_NONE) &TRACE("cond[%s]<n", con->cond_cache[dc->context_ndx].result));
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->parent && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) if (!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) return COND_RESULT_FALSE; if (dc->parent) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if ( COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (con->conf.conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) <if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (con->conf.conf_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->context_ndx) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
&if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* XXX */ return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", con->parent->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[con->context_ndx].result) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (dc->flags & DEBUG_COND_SIZE) &if (dc->conf.log_cond_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->dc_socket) &if (dc->dc_socket) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to TRUE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return TRUE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &<if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->context_ndx) if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE. */ if (Cond_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%d]<n", con->cond_cache[dc->context_ndx].result);
/* one of prev set me to FALSE */ if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) if (con->conf.log_cache_handling) <config_check_cond_cached(srv, con, dc->parent); &else &config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->parent) <if (dc->parent->context_ndx) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (con->cond_cache[dc->context_ndx].result) &if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) &if (con->conf.conf_flags & COND_RESULT_FALSE) &/* get user base cache */ if (con->conf.conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <else <return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) <return COND_RESULT_FALSE; <if (dc->parent) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (dc->flags & DEBUG_COND_SIZE) &if (dc->conf.log_cond_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (con->conf.conf_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->cond_cache[dc->context_ndx].result) <if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) if (dc->debug) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) <if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) <if (con->conf.conf_flags & COND_RESULT_FALSE) &/* get user base cache */ if (con->conf.conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (Cond_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->cond_cache[dc->context_ndx].result) <if (!con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
if (con->conf.conf_error_handling) <if (con->conf.conf_error_handling) <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (ConD_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) &return COND_RESULT_FALSE; if (dc->parent) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) &if (dc->debug) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if (con->conf.log_error_handling) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->conf.conf_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->cond_cache[dc->context_ndx].result) if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) &if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) <return COND_RESULT_FALSE; <if (dc->parent) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) <return COND_RESULT_FALSE; if (dc->parent) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &else return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* XXX */ return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%d]n", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) &if (con->conf.log_level == COND_RESULT_FALSE) <if (con->conf.log_level == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
if (con->cond_cache[dc->context_ndx].result) &if (!con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE. */ if (ConD_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) &if (dc->prev) &if (con->conf.log_state & LOG_RELEASE(dc->parent)) LOG_ERROR("cond[%d] failed" % dc->parent->key); <else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) &if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if (con->conf.log_queue_flags & COND_RESERVER_FOREACH) if (con->conf.log_queue_flags & COND_RESERVER_FOREACH)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (con->conf.conf_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) <if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->parent) if (dc->parent->context_ndx) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%d]<n", dc->parent->key);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->dc_socket) <if (dc->dc_socket) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%d]n", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (con->cond_cache[dc->context_ndx].result) <if (!con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) if (con->conf.conf_flags & COND_RESULT_FALSE) /* get user base cache */ if (con->conf.conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &return con->cond_cache[dc->context_ndx].result;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) &if (!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) </* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx]) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (dc->context_ndx->dv_type == COND_NONE) <TRACE("cond[%s]&n", con->cond_cache[dc->context_ndx].result));
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
if (dc->prev) &if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) if (dc->debug) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <else <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of my prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return (COND_RESULT_FALSE);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) <if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) <if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) <if (con->conf.log_level == COND_RESULT_FALSE) &if (con->conf.log_level == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache.result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->cache) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%d]&n", con->cond_cache[dc->context_ndx].result);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->parent) if (dc->parent->context_ndx) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE */ if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (con->conf.conf_error_handling) <if (con->conf.conf_error_handling) if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) &if (dc->debug) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%s] is valid", dc->comp);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%d]&n", dc->parent->key);
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->parent && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <<if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) &return COND_RESULT_FALSE; &if (dc->parent) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) &if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) TRACE("cond[%s]", con->conf.log_condition_handling);
if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (dc->context_ndx == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (Cond_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return Cond_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE */ if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) <if (!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE */ if (COND_RESULT_TRUE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_TRUE;
/* one of prev set me to FALSE */ if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->parent) if (dc->parent->context_ndx) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->parent) <if (dc->parent->context_ndx) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->context_ndx) if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
if (con->conf.conf_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (con->cond_cache[dc->context_ndx].result) <if (!con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of the prev sets me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* XXX */ return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->context_ndx) if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->context_ndx) <if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->parent && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) &if (!con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
if (con->conf.conf_error_handling) &if (con->conf.conf_error_handling) if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) <if (!con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
if (con->conf.log_cond_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->parent) &if (dc->parent->context_ndx) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) &if (!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (con->conf.conf_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
if (con->conf.conf_error_handling) if (con->conf.conf_error_handling) if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) <if (con->conf.conf_flags & COND_RESULT_FALSE) &/* get user base cache */ if (con->conf.conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
if (COND_RESULT_FALSE == con->cond_cache[con->context_ndx].result) return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.conf_error_handling) if (con->conf.conf_error_handling) &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) &/* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->context_ndx) <if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%d]n", con->cond_cache[dc->context_ndx].result);
if (dc->flags & DEBUG_COND_SIZE) if (dc->conf.log_cond_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &else <return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) <if (dc->debug) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <TRACE("cond[%s]", con->conf.log_condition_handling);
<if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of the prev sets me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%s]&n", dc->parent->key);
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
if (con->cond_cache[dc->context_ndx].result) &if (!con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->cache) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%d]n", dc->parent->key);
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (con->conf.conf_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->parent) <if (dc->parent->context_ndx) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE. */ if (con->conf.log_cond_handling) &config_check_cond_cached(srv, con, dc->prev); if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%s] [%s]", dc->comp, dc->comp, dc->comp);
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) <if (!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->context_ndx) &if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
if (con->conf.conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) if (dc->prev) if (con->conf.log_condition_handling) log_error_
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; /* one of prev set me to FALSE */
/* one of prev set me to FALSE. */ if (con->conf.log_cond_handling) <config_check_cond_cached(srv, con, dc->prev); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s]", dc->comp, dc->comp, dc->comp);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) <if (con->conf.conf_flags & COND_RESULT_FALSE) </* get user base cache */ if (con->conf.conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &<if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
if (dc->flags & DEBUG_COND_SIZE) <if (dc->conf.log_cond_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%d]<n", dc->parent->key);
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) <return COND_RESULT_FALSE; <if (dc->parent) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->parent && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE */ if ( COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result ) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (Cond_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) <if (con->conf.log_level == COND_RESULT_FALSE) &if (con->conf.log_level == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) &if (con->conf.log_level == COND_RESULT_FALSE) if (con->conf.log_level == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) if (con->conf.conf_flags & COND_RESULT_FALSE) /* get user base cache */ if (con->conf.conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of the prev set me to FALSE */ if (con->conf.log_flags & COND_RESULT_FALSE) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) <if (dc->debug) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->context_ndx) &if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
&if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (con->conf.conf_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) &if (dc->prev) <if (con->conf.log_state & LOG_RELEASE(dc->parent)) LOG_ERROR("cond[%d] failed" % dc->parent->key); <else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) <if (dc->prev) <if (con->conf.log_state & LOG_RELEASE(dc->parent)) &LOG_ERROR("cond[%d] failed" % dc->parent->key); &else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &&if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
if (con->cond_cache[dc->context_ndx].result) <if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%s]&n", dc->parent->key);
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) &if (!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->cond_cache[dc->context_ndx].result) <if (!con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (con->conf.conf_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (dc->flags & DEBUG_COND_SIZE) &if (dc->conf.log_cond_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (((con->cond_cache[dc->context_ndx].result) == con->cond_cache[dc->context_ndx].result) && (con->conf.log_condition_handling)) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE... */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->parent && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
if (con->conf.conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) if (dc->prev) if (con->conf.log_condition_handling) log_error_
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) &if (con->conf.conf_flags & COND_RESULT_FALSE) &/* get user base cache */ if (con->conf.conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) TRACE("cond[%d][%d]", dc->context_ndx, dc->conf.log_condition_handling, dc->dc_parent->key, dc->dc_parent->key, dc->dc_socket->flags, dc->dc_socket->context_ndx);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->dc_socket) &if (dc->dc_socket) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) <if (dc->debug) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (ConD_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* XXX */ return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) <if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->parent && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%d]<n", con->cond_cache[dc->context_ndx].result);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (con->conf.log_cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if (con->cond_cache[con->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) &if (dc->prev) &if (con->conf.log_state & LOG_RELEASE(dc->parent)) <LOG_ERROR("cond[%d] failed" % dc->parent->key); &else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) if (!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE. */ if (COND_RESULT == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->cond_cache[dc->context_ndx].result) <if (dc->parent->context_ndx) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) <return COND_RESULT_FALSE; &if (dc->parent) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
if (dc->flags & DEBUG_COND_SIZE) &if (dc->conf.log_cond_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (con->conf.conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) if (dc->prev) if (con->conf.log_condition_handling) log_error_
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->cond_cache[dc->context_ndx].result) <if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) &if (con->conf.log_cache_handling) <config_check_cond_cached(srv, con, dc->parent); &else &config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) &if (dc->debug) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <TRACE("cond[%s]", con->conf.log_condition_handling);
if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->context_ndx) if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &COND_RESULT_FALSE = COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (con->cond_cache[dc->context_ndx].result) &if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (con->cond_cache[dc->context_ndx].result) &if (!con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) <if (con->conf.log_cache_handling) <config_check_cond_cached(srv, con, dc->parent); <else config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->parent && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if (dc->dc_flags & COND_RESULT_FALSE) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) if (con->conf.log_cache_handling) config_check_cond_cached(srv, con, dc->parent); &else <config_check_cond_cached(srv, con, dc->parent);
if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (dc->flags & DEBUG_COND_SIZE) &if (dc->conf.log_cond_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (con->conf.conf_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) &if (con->conf.log_level == COND_RESULT_FALSE) <if (con->conf.log_level == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->cache) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->conf.conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) <if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (con->cond_cache[con->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) &if (!con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) /* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (con->conf.conf_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; else return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->parent && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (con->conf.log_queue_rtl && con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) <return COND_RESULT_FALSE; &if (dc->parent) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
if (con->cond_cache[dc->context_ndx].result) if (dc->parent->context_ndx) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx]->result) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) &return COND_RESULT_FALSE; &if (dc->parent) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <COND_RESULT_FALSE = COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) if (dc->debug) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of these prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* XXX */ return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->parent && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) return COND_RESULT_FALSE; <if (dc->parent) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (con->conf.conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) if (dc->prev) if (con->conf.log_condition_handling) log_error_
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <TRACE("cond[%s]", con->conf.log_condition_handling);
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) if (!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (con->conf.conf_error_handling) &if (con->conf.conf_error_handling) <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (con->cond_cache[dc->context_ndx].result) <if (!con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
if (con->conf.conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) &if (con->conf.log_level == COND_RESULT_FALSE) <if (con->conf.log_level == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->context_ndx) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if ((dc->conf.conf.conf_flags & COND_RESULT) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if(COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <config_check_cond_cached(srv, con, dc->parent); if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->parent && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* One of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if (dc->context_ndx.result) <return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (con->conf.conf_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <TRACE("cond[%s]", con->conf.log_condition_handling);
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) </* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) <if (!con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->context_ndx) if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%s] is valid", dc->comp);
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) &if (con->conf.log_cache_handling) config_check_cond_cached(srv, con, dc->parent); else config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <config_check_cond_cached(srv, con, dc->parent); if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
if (con->conf.conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) &if (dc->prev) if (con->conf.log_condition_handling) log_error_
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* XXX */ return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
if (con->conf.conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) if (dc->prev) if (con->conf.log_condition_handling) log_error_
if (con->conf.log_cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) &if (con->conf.log_cache_handling) &config_check_cond_cached(srv, con, dc->parent); &else config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (con->conf.log_cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
if (con->cond_cache[dc->context_ndx].result) <if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->context_ndx->result) <return COND_RESULT_FALSE;
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE */ if (!con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) if (con->conf.log_cache_handling) &config_check_cond_cached(srv, con, dc->parent); &else &config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) if (con->conf.log_cache_handling) config_check_cond_cached(srv, con, dc->parent); else &config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) <return COND_RESULT_FALSE; if (dc->parent) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) &/* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* XXX */ return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (con->conf.conf_error_handling) if (con->conf.conf_error_handling) <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%d]n", con->cond_cache[dc->context_ndx].result);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) if (!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->parent && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE. */ if (COND_RESULT == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->parent && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) <if (dc->prev) if (con->conf.log_state & LOG_RELEASE(dc->parent)) LOG_ERROR("cond[%d] failed" % dc->parent->key); &else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->parent && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) if (con->conf.log_cache_handling) <config_check_cond_cached(srv, con, dc->parent); else &config_check_cond_cached(srv, con, dc->parent);
if (con->conf.conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) <if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) <if (dc->prev) &if (con->conf.log_state & LOG_RELEASE(dc->parent)) &LOG_ERROR("cond[%d] failed" % dc->parent->key); &else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <TRACE("cond[%s]", con->conf.log_condition_handling);
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) if (!con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) &if (con->conf.conf_flags & COND_RESULT_FALSE) </* get user base cache */ if (con->conf.conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* XXX */ return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) if (con->conf.conf_flags & COND_RESULT_FALSE) /* get user base cache */ if (con->conf.conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of the prev set me to FALSE */ if ((dc->context_ndx = con->cond_cache[dc->context_ndx].result) || (con->conf.log_condition_handling) == COND_RESULT_FALSE) <return COND_RESULT_FALSE;
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) TRACE("cond[%s]", con->conf.log_condition_handling);
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (con->conf.conf_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* XXX */ return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->dc_socket) <if (dc->dc_socket) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
if (con->conf.conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) &if (dc->prev) if (con->conf.log_condition_handling) log_error_
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) &if (dc->debug) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
if (con->cond_cache[dc->context_ndx].result) &if (!con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
if (con->cond_cache[dc->context_ndx].result) if (!con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
if (con->cond_cache[dc->context_ndx].result) if (!con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
&if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) if (dc->prev) &if (con->conf.log_state & LOG_RELEASE(dc->parent)) <LOG_ERROR("cond[%d] failed" % dc->parent->key); <else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
<if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) <if (dc->debug) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ return COND_RESULT_FALSE;
/* one of my prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (dc->flags & DEBUG_COND_SIZE) <if (dc->conf.log_cond_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->parent) if (dc->parent->context_ndx) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
if (con->conf.log_condition_handling) Log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) &if (con->conf.log_level == COND_RESULT_FALSE) &if (con->conf.log_level == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) <return COND_RESULT_FALSE; if (dc->parent) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->parent) if (dc->parent->context_ndx) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) <return COND_RESULT_FALSE; if (dc->parent) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE. */ if (con->conf.log_condition_handling) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (dc->flags & DEBUG_COND_SIZE) <if (dc->conf.log_cond_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) <if (con->conf.conf_flags & COND_RESULT_FALSE) &/* get user base cache */ if (con->conf.conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (dc->context_ndx == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) return COND_RESULT_FALSE; if (dc->parent) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE. */ if (con->conf.log_cond_handling) config_check_cond_cached(srv, con, dc->prev); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s]", dc->comp, dc->comp, dc->comp);
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) return COND_RESULT_FALSE; <if (dc->parent) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) return COND_RESULT_FALSE; &if (dc->parent) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) if (dc->debug) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[con->context_ndx].result) <return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if (ConD_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (dc->context_ndx->dv_type == COND_NONE) TRACE("cond[%s]&n", con->cond_cache[dc->context_ndx].result));
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) config_check_cond_cached(srv, con, dc->parent); if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
<if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%s]&n", dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) <if (con->conf.log_cache_handling) config_check_cond_cached(srv, con, dc->parent); <else <config_check_cond_cached(srv, con, dc->parent);
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* One of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->parent) &if (dc->parent->context_ndx) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) <if (con->conf.log_cache_handling) config_check_cond_cached(srv, con, dc->parent); &else <config_check_cond_cached(srv, con, dc->parent);
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) return COND_RESULT_FALSE; <if (dc->parent) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) &if (con->conf.conf_flags & COND_RESULT_FALSE) </* get user base cache */ if (con->conf.conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) &if (con->conf.conf_flags & COND_RESULT_FALSE) /* get user base cache */ if (con->conf.conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (dc->dc_flags & COND_RESULT_FALSE) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) if (!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (con->cond_cache[dc->context_ndx].result) <if (dc->parent->context_ndx) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (con->cond_cache[dc->context_ndx].result) if (!con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) <if (dc->prev) &if (con->conf.log_state & LOG_RELEASE(dc->parent)) LOG_ERROR("cond[%d] failed" % dc->parent->key); &else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) <if (con->conf.conf_flags & COND_RESULT_FALSE) </* get user base cache */ if (con->conf.conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) return COND_RESULT_FALSE; if (con->conf.conf_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) if (dc->prev) if (con->conf.log_state & LOG_RELEASE(dc->parent)) LOG_ERROR("cond[%d] failed" % dc->parent->key); <else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) <if (dc->prev) &if (con->conf.log_state & LOG_RELEASE(dc->parent)) &LOG_ERROR("cond[%d] failed" % dc->parent->key); <else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->dc_socket) <if (dc->dc_socket) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%s]&n", dc->parent->key);
if (con->conf.conf_error_handling) <if (con->conf.conf_error_handling) if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* One of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->conf.conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) <if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE. */ if (dc->context_ndx == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) &if (dc->prev) <if (con->conf.log_state & LOG_RELEASE(dc->parent)) <LOG_ERROR("cond[%d] failed" % dc->parent->key); <else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%d]&n", dc->parent->key);
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%s]&n", dc->parent->key);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (con->conf.conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) &if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if (dc->dc_flags & COND_RESULT_FALSE) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) &if (con->conf.log_level == COND_RESULT_FALSE) if (con->conf.log_level == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) if (dc->debug) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE */ if (dc->dc_flags & COND_RESULT_FALSE) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) </* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
else </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%d]&n", dc->parent->key);
if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (!con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) &if (con->conf.log_level == COND_RESULT_FALSE) &if (con->conf.log_level == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->parent && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) &if (!con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE */ if (con->conf.cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->parent && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->dc_socket) &if (dc->dc_socket) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->parent) &if (dc->parent->context_ndx) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <TRACE("cond[%s]", con->conf.log_condition_handling);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (con->cond_cache[dc->context_ndx].result) <if (!con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
if (con->conf.conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) &if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <TRACE("cond[%s]", con->conf.log_condition_handling);
if (con->cond_cache[dc->context_ndx].result) &if (!con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of our prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
if (dc->flags & DEBUG_COND_SIZE) <if (dc->conf.log_cond_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) &if (dc->prev) <if (con->conf.log_state & LOG_RELEASE(dc->parent)) LOG_ERROR("cond[%d] failed" % dc->parent->key); &else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE!= con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) &if (con->conf.conf_flags & COND_RESULT_FALSE) </* get user base cache */ if (con->conf.conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->context_ndx) if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (ConD_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return ConD_RESULT_FALSE;
/* one of prev set me to FALSE */ if (dc->context_ndx->dv_type == COND_NONE) TRACE("cond[%s]<n", con->cond_cache[dc->context_ndx].result));
/* one of prev set me to FALSE. */ if (Cond_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE */ if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) &if (con->conf.conf_flags & COND_RESULT_FALSE) /* get user base cache */ if (con->conf.conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == dc->context_ndx.result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) <if (dc->debug) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->dc_socket) &if (dc->dc_socket) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of the prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
<if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) if (dc->prev) &if (con->conf.log_state & LOG_RELEASE(dc->parent)) LOG_ERROR("cond[%d] failed" % dc->parent->key); &else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) <if (con->conf.log_cache_handling) <config_check_cond_cached(srv, con, dc->parent); &else config_check_cond_cached(srv, con, dc->parent);
else &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* * If the dc->parent is not an invalid connection, we * have to check the child's prev */
/* One of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
if (con->conf.conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <&if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) <if (!con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->parent) if (dc->parent->context_ndx) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE. */ if (cond_result == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (dc->flags & DEBUG_COND_SIZE) if (dc->conf.log_cond_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (con->cond_cache[dc->context_ndx].result) &if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (con->conf.conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) &if (dc->prev) if (con->conf.log_condition_handling) log_error_
if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
if (con->cond_cache[dc->context_ndx].result) &if (!con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (dc->context_ndx->dv_type == COND_NONE) &TRACE("cond[%s]&n", con->cond_cache[dc->context_ndx].result));
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) /* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->parent) &if (dc->parent->context_ndx) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->parent) if (dc->parent->context_ndx) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
if (con->cond_cache[dc->context_ndx].result) if (dc->parent->context_ndx) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) <if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (dc->flags & DEBUG_COND_SIZE) if (dc->conf.log_cond_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) </* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->parent && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->dc_socket) &if (dc->dc_socket) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) if (dc->debug) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) <if (con->conf.log_level == COND_RESULT_FALSE) if (con->conf.log_level == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) if (dc->prev) if (con->conf.log_state & LOG_RELEASE(dc->parent)) &LOG_ERROR("cond[%d] failed" % dc->parent->key); &else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[cond->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) <if (con->conf.conf_flags & COND_RESULT_FALSE) </* get user base cache */ if (con->conf.conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->context_ndx) &if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &TRACE("cond[%s]", con->conf.log_condition_handling);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[con->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <&if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) &/* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->parent && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) <if (dc->debug) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%s]<n", dc->parent->key);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) <if (dc->debug) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (con->conf.conf_cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) <if (con->conf.log_cache_handling) &config_check_cond_cached(srv, con, dc->parent); <else &config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) TRACE("cond[%s]", con->conf.log_condition_handling);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (con->conf.conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) &if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) </* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* XXX */ return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) <if (con->conf.log_level == COND_RESULT_FALSE) if (con->conf.log_level == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
if (!con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (dc->flags & DEBUG_COND_SIZE) &if (dc->conf.log_cond_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->dc_socket) if (dc->dc_socket) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) <if (con->conf.log_level == COND_RESULT_FALSE) if (con->conf.log_level == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
if (con->cond_cache[dc->context_ndx].result) &if (!con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
if (con->cond_cache[dc->context_ndx].result == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) /* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
if (con->conf.log_condition_handling) &config_check_cond_cached(srv, con, dc->context_ndx);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%d]&n", dc->parent->key);
if (dc->flags & DEBUG_COND_SIZE) <if (dc->conf.log_cond_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* XXX */ return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (con->conf.conf_error_handling) &if (con->conf.conf_error_handling) &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->parent) <if (dc->parent->context_ndx) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) &/* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
<if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->context_ndx) <if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) &/* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) <if (con->conf.log_cache_handling) &config_check_cond_cached(srv, con, dc->parent); <else <config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (con->conf.conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) <if (con->conf.log_level == COND_RESULT_FALSE) if (con->conf.log_level == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) <if (con->conf.log_level == COND_RESULT_FALSE) if (con->conf.log_level == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
if (con->conf.conf_error_handling) <if (con->conf.conf_error_handling) <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, "sb", "go parent", dc->parent->key);
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (con->cond_cache[dc->context_ndx].result) if (!con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) return con->cond_cache[dc->context_ndx].result;
/* one of prev set me to FALSE */ if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
if (dc->flags & DEBUG_COND_SIZE) &if (dc->conf.log_cond_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) &if (dc->prev) &if (con->conf.log_state & LOG_RELEASE(dc->parent)) &LOG_ERROR("cond[%d] failed" % dc->parent->key); &else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->context_ndx) <if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->cond_cache[dc->context_ndx].result) &if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) if (!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) if (con->conf.conf_flags & COND_RESULT_FALSE) &/* get user base cache */ if (con->conf.conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->dc_socket) &if (dc->dc_socket) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) &if (!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (con->cond_cache[dc->context_ndx].result) if (!con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
if (con->conf.conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) <if (dc->prev) if (con->conf.log_condition_handling) log_error_
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
&if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->context_ndx) <if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) </* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) </* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) return COND_RESULT_FALSE; &if (dc->parent) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) &if (con->conf.conf_flags & COND_RESULT_FALSE) &/* get user base cache */ if (con->conf.conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) </* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* XXX */ return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (con->conf.conf_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) if (dc->prev) if (con->conf.log_condition_handling) log_error_
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE!= con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx]) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) <if (dc->debug) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) &if (dc->prev) if (con->conf.log_state & LOG_RELEASE(dc->parent)) LOG_ERROR("cond[%d] failed" % dc->parent->key); else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return (COND_RESULT_FALSE);
if (con->conf.conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) &if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->parent) <if (dc->parent->context_ndx) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &return con->cond_cache[dc->context_ndx].result;
if (con->cond_cache[dc->context_ndx].result) &if (!con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->context_ndx->result) return COND_RESULT_FALSE;
if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->cond_cache[dc->context_ndx].result) &if (dc->parent->context_ndx) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE */ if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) &/* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_warning && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) TRACE("cond[%s] = COND_RESULT_FALSE" % dc->parent, dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) &if (!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (Cond_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) <if (dc->prev) <if (con->conf.log_state & LOG_RELEASE(dc->parent)) &LOG_ERROR("cond[%d] failed" % dc->parent->key); else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->cond_cache[dc->context_ndx].result) <if (!con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* XXX */ return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (con->conf.cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* XXX */ return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one or more prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (dc->context_ndx.result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
if (con->cond_cache[dc->context_ndx].result) &if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (con->conf.conf_error_handling) if (con->conf.conf_error_handling) if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (!con->cond_cache[dc->context_ndx].result)
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->parent && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) <if (con->conf.log_cache_handling) <config_check_cond_cached(srv, con, dc->parent); else <config_check_cond_cached(srv, con, dc->parent);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE. */ if (con->conf.log_type == COND_COND_ENTRY) <return COND_COND_ENTRY;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &TRACE("cond[%s]", con->conf.log_condition_handling);
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->dc_socket) &if (dc->dc_socket) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) &return COND_RESULT_FALSE; if (dc->parent) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (ConD_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%s]<n", dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) &if (con->conf.log_cache_handling) config_check_cond_cached(srv, con, dc->parent); &else <config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (ConD_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE. */ if (ConD_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (dc->flags & DEBUG_COND_SIZE) if (dc->conf.log_cond_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) <if (dc->prev) if (con->conf.log_state & LOG_RELEASE(dc->parent)) <LOG_ERROR("cond[%d] failed" % dc->parent->key); <else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* XXX */ return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE. */ if (ConD_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
</* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%s]<n", dc->parent->key);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of the prev sets me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) /* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* XXX */ return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) &if (con->conf.log_level == COND_RESULT_FALSE) &if (con->conf.log_level == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->dc_socket) <if (dc->dc_socket) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE */ if ( COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result ) return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) &if (dc->parent->context_ndx) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) <if (dc->prev) if (con->conf.log_state & LOG_RELEASE(dc->parent)) &LOG_ERROR("cond[%d] failed" % dc->parent->key); &else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) &if (con->conf.log_cache_handling) config_check_cond_cached(srv, con, dc->parent); else &config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) <if (con->conf.log_cache_handling) &config_check_cond_cached(srv, con, dc->parent); else &config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) &if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) if (!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE. */ if (dc->dc_result == con->cond_cache[dc->dc_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) <if (!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->conf.conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) <if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE */ if (cond_result == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->dc_socket) if (dc->dc_socket) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of the prev set me to FALSE */ if (con->conf.log_flags & COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) <if (!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of the prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->context_ndx) &if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[con->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE... */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if (con->conf.log_queue_flags & COND_RESERVER_FOREACH) &if (con->conf.log_queue_flags & COND_RESERVER_FOREACH)
if (con->conf.conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) &if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%d]<n", con->cond_cache[dc->context_ndx].result);
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) TRACE("cond[%s]", con->conf.log_condition_handling);
if (con->conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) &/* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (dc->flags & DEBUG_COND_SIZE) &if (dc->conf.log_cond_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[con->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* XXX */ return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result == 0) return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) </* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* XXX */ return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE. */ if (con->conf.conf_cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (con->conf.conf_error_handling) if (con->conf.conf_error_handling) <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (con->conf.conf_error_handling) &if (con->conf.conf_error_handling) &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%d]n", con->cond_cache[dc->context_ndx].result);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) &if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) if (con->conf.log_level == COND_RESULT_FALSE) if (con->conf.log_level == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->parent) &if (dc->parent->context_ndx) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (con->cond_cache[dc->context_ndx].result) &if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) <if (dc->debug) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) <if (con->conf.conf_flags & COND_RESULT_FALSE) &/* get user base cache */ if (con->conf.conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <<if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE */ if (con->conf.log_cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) return COND_RESULT_FALSE; <if (dc->parent) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
if (con->conf.conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) <if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE */ if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->context_ndx) if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%d]n", con->cond_cache[dc->context_ndx].result);
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) <if (con->conf.log_cache_handling) config_check_cond_cached(srv, con, dc->parent); <else &config_check_cond_cached(srv, con, dc->parent);
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%d]n", con->cond_cache[dc->context_ndx].result);
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) if (dc->prev) if (con->conf.log_condition_handling) log_error_
if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) &/* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
if (con->cond_cache[dc->context_ndx].result) <if (!con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) <if (!con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
&if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->dc_socket) &if (dc->dc_socket) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) if (con->conf.log_level == COND_RESULT_FALSE) <if (con->conf.log_level == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
if (dc->flags & DEBUG_COND_SIZE) if (dc->conf.log_cond_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &<if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) &if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (dc->flags & DEBUG_COND_SIZE) if (dc->conf.log_cond_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE */ if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to NULL */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->parent && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->cond_cache[dc->context_ndx].result == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) if (con->conf.conf_flags & COND_RESULT_FALSE) </* get user base cache */ if (con->conf.conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) <if (con->conf.log_level == COND_RESULT_FALSE) <if (con->conf.log_level == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return (COND_RESULT_FALSE);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <Log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling && (con->conf.log_condition_handling) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) &/* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->context_ndx) &if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) if (dc->debug) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) &if (dc->prev) &if (con->conf.log_state & LOG_RELEASE(dc->parent)) &LOG_ERROR("cond[%d] failed" % dc->parent->key); <else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* XXX */ return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) if (con->conf.conf_flags & COND_RESULT_FALSE) /* get user base cache */ if (con->conf.conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
if (con->cond_cache[dc->context_ndx].result) if (!con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) &if (dc->prev) &if (con->conf.log_state & LOG_RELEASE(dc->parent)) <LOG_ERROR("cond[%d] failed" % dc->parent->key); <else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) if (con->conf.conf_flags & COND_RESULT_FALSE) </* get user base cache */ if (con->conf.conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (!con->cond_cache[dc->context_ndx].result) <TRACE("cond[%d] = " "against" % dc->context_ndx);
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) if (con->conf.conf_flags & COND_RESULT_FALSE) &/* get user base cache */ if (con->conf.conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <&if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE. */ if (dc->context_ndx!= NULL && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->parent->context_ndx!= NULL) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE. */ if (dc->context_ndx == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) <if (con->conf.conf_flags & COND_RESULT_FALSE) /* get user base cache */ if (con->conf.conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
if (dc->flags & DEBUG_COND_SIZE) <if (dc->conf.log_cond_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) <if (!con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->dc_socket) if (dc->dc_socket) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) /* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (con->conf.log_condition_handling && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (dc->flags & DEBUG_COND_SIZE) <if (dc->conf.log_cond_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE. */ if (con->conf.log_cond_handling) &config_check_cond_cached(srv, con, dc->prev); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%s] [%s]", dc->comp, dc->comp, dc->comp);
if (con->cond_cache[dc->context_ndx].result) <if (!con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->parent) <if (dc->parent->context_ndx) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <&if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->parent) <if (dc->parent->context_ndx) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx]) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->cond_cache[dc->context_ndx].result) <if (dc->parent->context_ndx) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <TRACE("cond[%s]", con->conf.log_condition_handling);
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; /* one of prev set me to FALSE */
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) <if (con->conf.log_level == COND_RESULT_FALSE) &if (con->conf.log_level == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (dc->need_context_and_no_result) &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->parent) if (dc->parent->context_ndx) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (con->conf.conf_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) if (dc->prev) <if (con->conf.log_state & LOG_RELEASE(dc->parent)) &LOG_ERROR("cond[%d] failed" % dc->parent->key); else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) /* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) &if (dc->debug) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) &if (dc->prev) <if (con->conf.log_state & LOG_RELEASE(dc->parent)) &LOG_ERROR("cond[%d] failed" % dc->parent->key); <else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* XXX */ return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->parent) if (dc->parent->context_ndx) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->parent->context_ndx].result) return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &else &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
if (dc->flags & DEBUG_COND_SIZE) <if (dc->conf.log_cond_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) </* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE. */ if (con->conf.log_cond_handling) config_check_cond_cached(srv, con, dc->prev); if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%s] [%s]", dc->comp, dc->comp, dc->comp);
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->parent) &if (dc->parent->context_ndx) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) <if (con->conf.conf_flags & COND_RESULT_FALSE) /* get user base cache */ if (con->conf.conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE. */ if (dc->context_ndx!= NULL && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->parent->context_ndx!= NULL) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
if (con->cond_cache[dc->context_ndx].result) if (!con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) <if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (con->cond_cache[dc->context_ndx].result) if (!con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) &if (dc->debug) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <TRACE("cond[%s]", con->conf.log_condition_handling);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (con->cond_cache[dc->context_ndx].result) if (!con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) if (con->conf.conf_flags & COND_RESULT_FALSE) &/* get user base cache */ if (con->conf.conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (dc->prev) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) return COND_RESULT_FALSE; if (dc->parent) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->dc_socket) if (dc->dc_socket) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) if (con->conf.log_cache_handling) &config_check_cond_cached(srv, con, dc->parent); else &config_check_cond_cached(srv, con, dc->parent);
if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) if (dc->prev) <if (con->conf.log_state & LOG_RELEASE(dc->parent)) LOG_ERROR("cond[%d] failed" % dc->parent->key); <else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->dc_socket) &if (dc->dc_socket) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
if (con->cond_cache[dc->context_ndx].result) &if (!con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* XXX */ return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) if (con->conf.conf_flags & COND_RESULT_FALSE) &/* get user base cache */ if (con->conf.conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <&if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) <if (dc->prev) if (con->conf.log_state & LOG_RELEASE(dc->parent)) <LOG_ERROR("cond[%d] failed" % dc->parent->key); &else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->cond_cache == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE */ if (con->conf.log_queue_rtl && con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
&/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) if (dc->prev) <if (con->conf.log_state & LOG_RELEASE(dc->parent)) <LOG_ERROR("cond[%d] failed" % dc->parent->key); <else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.conf_error_handling) <if (con->conf.conf_error_handling) <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) if (dc->debug) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) if (!con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) if (con->conf.log_level == COND_RESULT_FALSE) if (con->conf.log_level == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[cond->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) &return COND_RESULT_FALSE; if (dc->parent) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) if (dc->prev) if (con->conf.log_state & LOG_RELEASE(dc->parent)) LOG_ERROR("cond[%d] failed" % dc->parent->key); &else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &TRACE("cond[%s]", con->conf.log_condition_handling);
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->context_ndx) if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <<if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%d]<n", con->cond_cache[dc->context_ndx].result);
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE */ if (con->conf.log_cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->parent && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->parent && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) &if (con->conf.conf_flags & COND_RESULT_FALSE) </* get user base cache */ if (con->conf.conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result &&!con->conf.log_condition_handling) <TRACE("cond[%d]" % con->cond_cache[dc->context_ndx].result");
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->parent && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->dc_socket) &if (dc->dc_socket) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
if (con->cond_cache[dc->context_ndx].result) &if (!con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) <if (!con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[con->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) <if (dc->prev) <if (con->conf.log_state & LOG_RELEASE(dc->parent)) LOG_ERROR("cond[%d] failed" % dc->parent->key); else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->cond_cache[dc->context_ndx].result) <if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) return COND_RESULT_FALSE; <if (dc->parent) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) &/* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) &if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) <if (!con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) <if (!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) </* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
if (con->conf.conf_error_handling) &if (con->conf.conf_error_handling) if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) <if (con->conf.conf_flags & COND_RESULT_FALSE) /* get user base cache */ if (con->conf.conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
&/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <else &return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
if (con->conf.conf_error_handling) if (con->conf.conf_error_handling) &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (dc->flags & DEBUG_COND_SIZE) &if (dc->conf.log_cond_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->context_ndx) &if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (con->conf.conf_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) &/* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of the prev set me to FALSE */ if (con->conf.log_flags & COND_RESULT_FALSE) &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling == COND_RESULT_FALSE) &return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) &/* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->parent) if (dc->parent->context_ndx) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) <if (con->conf.conf_flags & COND_RESULT_FALSE) /* get user base cache */ if (con->conf.conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%d]<n", con->cond_cache[dc->context_ndx].result);
if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%d]n", dc->parent->key);
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) if (dc->prev) <if (con->conf.log_state & LOG_RELEASE(dc->parent)) LOG_ERROR("cond[%d] failed" % dc->parent->key); else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (dc->flags & DEBUG_COND_SIZE) <if (dc->conf.log_cond_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
<if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->dc_socket) if (dc->dc_socket) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE. */ if (dc->context_ndx!= NULL && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->parent->context_ndx!= NULL) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.conf_error_handling) <if (con->conf.conf_error_handling) if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (con->conf.conf_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->dc_socket) <if (dc->dc_socket) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
if (con->conf.conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) &if (dc->prev) if (con->conf.log_condition_handling) log_error_
if (con->conf.conf_error_handling) if (con->conf.conf_error_handling) &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->cond_cache[dc->context_ndx].result) &if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
if (con->cond_cache[dc->context_ndx].result) &if (dc->parent->context_ndx) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx]->result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->parent && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->parent && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) <return COND_RESULT_FALSE; &if (dc->parent) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->dc_socket) <if (dc->dc_socket) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) &if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) &/* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
if (con->cond_cache[dc->context_ndx].result) if (!con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->dc_socket) if (dc->dc_socket) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (dc->flags & DEBUG_COND_SIZE) <if (dc->conf.log_cond_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (dc->parent->context_ndx && con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (dc->context_ndx == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) &if (dc->debug) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->parent && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (con->conf.conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) <if (dc->prev) if (con->conf.log_condition_handling) log_error_
if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->dc_socket) &if (dc->dc_socket) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* XXX */ return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (con->cond_cache[dc->context_ndx].result) if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (con->conf.conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) <if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->parent && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->parent) &if (dc->parent->context_ndx) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
if (dc->flags & DEBUG_COND_SIZE) if (dc->conf.log_cond_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
if (con->conf.conf_error_handling) <if (con->conf.conf_error_handling) if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if (con->conf.log_warning && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &TRACE("cond[%s] = COND_RESULT_FALSE" % dc->parent, dc->parent->key);
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) if (con->conf.log_level == COND_RESULT_FALSE) <if (con->conf.log_level == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) <if (con->conf.conf_flags & COND_RESULT_FALSE) </* get user base cache */ if (con->conf.conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (con->conf.conf_result == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) &if (con->conf.log_level == COND_RESULT_FALSE) if (con->conf.log_level == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->dc_socket) &if (dc->dc_socket) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* XXX */ return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) &TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%d]n", dc->parent->key);
if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) &if (!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->parent && con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of * prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; else <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (result == con->cond_cache[dc->context_ndx].result) &return result;
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->cache) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (dc->flags & DEBUG_COND_SIZE) <if (dc->conf.log_cond_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->parent && con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) <if (dc->debug) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) </* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->dc_socket) <if (dc->dc_socket) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (dc->dc_flags & COND_RESULT_FALSE) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->dc_ndx].result) <return COND_RESULT_FALSE;
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->context_ndx) if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &else return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->context_ndx) <if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (dc->flags & DEBUG_COND_SIZE) <if (dc->conf.log_cond_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE */ if (con->conf.log_error_handling) <return COND_RESULT_FALSE;
if (COND_RESULT == con->cond_cache[dc->context_ndx].result) return COND_RESULT;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) return COND_RESULT_FALSE; &if (dc->parent) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (COND_RESULT == con->cond_cache[dc->context_ndx].result) <return COND_RESULT;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) if (!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->parent) <if (dc->parent->context_ndx) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
&if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->parent && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (Cond_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_cond_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <config_check_cond_cached(srv, con, dc->parent); if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) <if (!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (con->conf.conf_error_handling) <if (con->conf.conf_error_handling) <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->context_ndx) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) &if (dc->prev) &if (con->conf.log_state & LOG_RELEASE(dc->parent)) &LOG_ERROR("cond[%d] failed" % dc->parent->key); else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) &if (con->conf.log_level == COND_RESULT_FALSE) &if (con->conf.log_level == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->context_ndx) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to NULL */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE. */ if (con->conf.log_cond_handling) config_check_cond_cached(srv, con, dc->prev); if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) &TRACE("cond[%s] [%s]", dc->comp, dc->comp, dc->comp);
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) <if (!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
<if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (dc->context_ndx.result) &return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (con->conf.conf_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
if (dc->flags & DEBUG_COND_SIZE) if (dc->conf.log_cond_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
if(con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%d]n", dc->parent->key);
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) <if (dc->debug) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) if (dc->prev) if (con->conf.log_state & LOG_RELEASE(dc->parent)) <LOG_ERROR("cond[%d] failed" % dc->parent->key); else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (con->conf.conf_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->dc_socket) <if (dc->dc_socket) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) if (con->conf.log_cache_handling) &config_check_cond_cached(srv, con, dc->parent); <else <config_check_cond_cached(srv, con, dc->parent);
if (con->conf.conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) &if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE. */ if (ConD_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) if (con->conf.conf_flags & COND_RESULT_FALSE) </* get user base cache */ if (con->conf.conf.log_context_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (COND_RESULT == con->cond_cache[dc->context_ndx].result) <return COND_RESULT;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (COND_RESULT == con->cond_cache[dc->context_ndx].result) &return COND_RESULT;
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->context_ndx) <if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
if (dc->flags & DEBUG_COND_SIZE) <if (dc->conf.log_cond_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
if (con->conf.conf_error_handling) &if (con->conf.conf_error_handling) &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->parent) &if (dc->parent->context_ndx) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%d]n", con->cond_cache[dc->context_ndx].result);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* XXX */ return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
if (con->conf.conf_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (con->conf.conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) <if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE. */ if (con->conf.log_type == COND_COND_ENTRY) return COND_COND_ENTRY;
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (con->conf.log_cond_cache[dc->context_ndx].result) &/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) &/* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (ConD_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) <if (con->conf.log_level == COND_RESULT_FALSE) <if (con->conf.log_level == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_condition_handling) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->dc_socket) if (dc->dc_socket) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) &if (con->conf.conf_flags & COND_RESULT_FALSE) &/* get user base cache */ if (con->conf.conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) <if (con->conf.log_level == COND_RESULT_FALSE) &if (con->conf.log_level == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->context_ndx) <if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) if (con->conf.log_level == COND_RESULT_FALSE) &if (con->conf.log_level == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
if (con->cond_cache[dc->context_ndx].result) if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
if (con->conf.conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <&if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx]) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) &if (dc->debug) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) &if (dc->debug) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->dc_socket) <if (dc->dc_socket) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (cond_result == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
if (con->conf.conf_error_handling) <if (con->conf.conf_error_handling) if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) &if (con->conf.log_level == COND_RESULT_FALSE) &if (con->conf.log_level == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) <if (dc->debug) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
&if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (dc->flags & DEBUG_COND_SIZE) <if (dc->conf.log_cond_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
if (con->conf.log_condition_handling && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->context_ndx) <if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
if (con->cond_cache[dc->context_ndx].result) <if (!con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) &if (dc->prev) <if (con->conf.log_state & LOG_RELEASE(dc->parent)) <LOG_ERROR("cond[%d] failed" % dc->parent->key); else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) if (con->conf.conf_flags & COND_RESULT_FALSE) </* get user base cache */ if (con->conf.conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->parent) &if (dc->parent->context_ndx) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of the prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* XXX */ return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE */ if (con->conf.conf.log_result == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (con->conf.conf_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->context_ndx) &if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->context_ndx) <if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_error_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (con->conf.conf_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) if (con->conf.conf_flags & COND_RESULT_FALSE) /* get user base cache */ if (con->conf.conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) &if (!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) if (con->conf.conf_flags & COND_RESULT_FALSE) &/* get user base cache */ if (con->conf.conf.log_context_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
/* one of prev set me to FALSE */ if ( COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result ) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) <TRACE("cond[%d]<n", dc->parent->key);
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->parent) if (dc->parent->context_ndx) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->parent) if (dc->parent->context_ndx) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == CON
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) </* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->dc_socket) if (dc->dc_socket) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE. */ if (dc->context_ndx && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == CON
if (dc->flags & DEBUG_COND_SIZE) &if (dc->conf.log_cond_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) config_check_cond_cached(srv, con, dc->parent); if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &TRACE("cond[%d]<n", dc->parent->key);
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) <return COND_RESULT_FALSE; if (dc->parent) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) <if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[con->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->conf.log_level >= con->conf.log_level) &if (con->conf.log_level == COND_RESULT_FALSE) if (con->conf.log_level == COND_RESULT_FALSE) <return COND_RESULT_FALSE; &if (dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->dc->
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of the prev set me to FALSE */ if ((con->conf.log_condition_handling & COND_RESULT_FALSE) == COND_RESULT_FALSE) <return COND_RESULT_FALSE; if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->context_ndx) &if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->dc_socket) if (dc->dc_socket) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) return COND_RESULT_FALSE; if (con->conf.conf_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; if (dc->context_ndx) &if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; &if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE */ if (dc->context_ndx->dv_type == COND_NONE) &TRACE("cond[%s]n", con->cond_cache[dc->context_ndx].result));
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) <if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) config_check_cond_cached(srv, con,
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) <if (dc->debug) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
/* one of prev set me to FALSE... */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]", con->cond_cache
if (dc->prev) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <TRACE("cond[%d][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->context_ndx, con->context_ndx);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) <if (!con->conf.log_condition_handling) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE */ if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s][%s][%s][%s]", srv, dc->parent->key, dc->prev->key, dc->prev->key, dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE */ if ((dc->dc->conf.conf_flags & COND_RESULT_FALSE) == con->cond_cache[dc->context_ndx].result) <if (con->conf.conf_flags & COND_RESULT_FALSE) </* get user base cache */ if (con->conf.conf.log_context_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb",
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->parent) if (dc->parent->context_ndx) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) <TRACE("cond[%s]<n", dc->parent->key);
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) if (con->conf.log_cache_handling) <config_check_cond_cached(srv, con, dc->parent); <else config_check_cond_cached(srv, con, dc->parent);
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) /* one of prev set me to FALSE */ if (con->conf.log_condition_handling) <if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) if (con->conf.log_cache_handling) config_check_cond_cached(srv, con, dc->parent); <else config_check_cond_cached(srv, con, dc->parent);
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->cond_cache[dc->context_ndx].result) &if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) TRACE("cond[%s]", con->conf.log_condition_handling);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; if (dc->context_ndx) if (!con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) <if (!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->dc_socket) <if (dc->dc_socket) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->dc_socket) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) &if (!con->conf.log_condition_handling) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) </* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) /* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->context_ndx) if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev)
if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%d]n", con->cond_cache[dc->context_ndx].result);
if (dc->parent->context_ndx) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* XXX */ return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) <if (con->conf.log_flags & COND_RESULT_FALSE) &if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (con->conf.conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) &if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) &if (dc->debug) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* * If we are at the end of the loop, we have no data to create it. */ if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(sr
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result &&!con->cond_cache[dc->context_ndx].ds_segments) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].ds_segments) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, con->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE!= con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == CON
/* one of the prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE;
/* one of the config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) return COND_RESULT_FALSE; <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_F
/* one of prev set me to FALSE */ if ((config_check_cond_cached(srv, con, dc->context_ndx) == 0) && (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)) return COND_RESULT_FALSE; if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key
/* one of prev set me to FALSE */ if ((dc->cache_rdf_key!= NULL) && (con->conf.log_flags & COND_RESULT_FALSE)) &if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) <if (con->conf.log_flags & COND_RESULT_FALSE) if (con->conf.log_flags & COND_RESULT_FALSE) TRACE("cond[%d],%d", con->cond_cache[dc->context_ndx].result)); else log_error_write(srv, _
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of prev set me to FALSE */ if (con->conf.log_cond_handling) &if (!con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (COND
if (con->conf.conf_error_handling) if (con->conf.conf_error_handling) if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
if (con->conf.log_state & LOG_RELEASE(dc->context_ndx)) <if (dc->prev) <if (con->conf.log_state & LOG_RELEASE(dc->parent)) <LOG_ERROR("cond[%d] failed" % dc->parent->key); <else /* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; if (dc->parent) <if (dc->parent->context_ndx) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of the prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE
if (result == con->cond_cache[dc->context_ndx].result) <return result;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; &if (dc->prev) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, con->cond_cache[dc->context_ndx].result) return COND_RESULT_
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) &if (dc->debug) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) &if (dc->debug) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (dc->parent->context_ndx) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &TRACE("cond[%s]", con->conf.log_condition_handling);
if (con->conf.conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &TRACE("cond[%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s] [%s]", srv_srv, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context_ndx].result) if (dc->prev) if (con->conf.log_condition_handling) log_error_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* XXX */ return COND_RESULT_FALSE; &if (!con->conditional_is_valid[dc->comp]) <if (con->conf.log_condition_handling) <TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE */ if (Cond_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb
if (con->cond_cache[dc->context_ndx].result) <if (!con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) if (dc->debug) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) =
if (dc->prev) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
if (con->cond_cache[dc->context_ndx].result) if (!con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (config_check_cond_cached(srv, con
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__,
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* XXX */ return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of my prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (dc->parent->context_ndx) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key);
/* one of prev set me to FALSE. */ if (dc->dc_result == con->cond_cache[dc->dc_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (!con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (dc->flags & DEBUG_COND_SIZE) <if (dc->conf.log_cond_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE. */ if (((srv = dc->context_ndx)->prev) == COND_RESULT_FALSE) &return COND_RESULT_FALSE; if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (con->conf.log_condition_handling) TRACE("cond[%d] [%s]", srv, con->context_ndx->prev); if (
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
/* one of prev set me to FALSE */ if (!dc->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (dc->parent && con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &/* XXX */ return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) &if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->conf.log_condition_handling) TRACE("cond[%s](%s)", con->conf.conditional_is_valid[dc->comp]); if (con->
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) ==
if (con->conf.conf_error_handling) <if (con->conf.conf_error_handling) &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
/* one of prev set me to FALSE. */ if (COND_RESULT == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__
if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (dc->prev) if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <return COND_RESULT_FALSE;
if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv,
/* one of prev set me to FALSE */ if (con->cond_cache[dc->context_ndx].result && COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key);
if (dc->flags & DEBUG_COND_SIZE) <if (dc->conf.log_cond_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s]
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (dc->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE_
if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(s
/* one of the prev set me to FALSE */ if ((COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) && dc->dc_event.flags & COND_RESULT_FALSE) &return COND_RESULT_FALSE; <if (con->conf.conf_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) <if (dc->debug) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE */ if ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->cond_cache[dc->context_ndx].result) && ((srv = con->conf.log_condition_handling))) && (dc->prev)) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key);
/* one of prev set me to FALSE. */ if (dc->context_ndx->result) <return COND_RESULT_FALSE; &if (dc->parent) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", d
/* one of prev set me to FALSE. */ if ((config_check_cond_cached(srv, con, dc->context_ndx)) == COND_RESULT_FALSE) if (dc->debug) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE)
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->context_ndx) &if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_
if (con->conf.log_condition_handling) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; <if (!con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s][%s][%s][%s][%s]", dc->context_ndx, con->context_ndx, con->conf.log_condition_handling, con->context_
if (dc->prev) <if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (!con->conditional_is_valid[dc->comp]) if (con->conf.log_condition_handling) TRACE("cond[%s] [%s] [%s] [%s] [%s]", con->cond_cache[dc->context_ndx].result, con->cond_cache[dc->context
/* one of the prev set me to FALSE */ if ((dc->context_ndx = con->cond_cache[dc->context_ndx].result) || (con->conf.log_condition_handling) == COND_RESULT_FALSE) &return COND_RESULT_FALSE;
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (dc->parent) &if (dc->parent->context_ndx) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) &return COND_RESULT_FALSE; <if (dc->prev) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE
if (con->conf.log_condition_handling) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
if (dc->prev) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if
if (con->conf.conf_error_handling) <if (con->conf.conf_error_handling) <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev->key) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev",
if (con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (dc->prev) if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __F
/* one of prev set me to FALSE */ if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) <if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (con->conf.log_condition_handling)
/* one of prev set me to FALSE */ if (con->conf.conf.log_cache_handling) if (con->conf.log_cache_handling) config_check_cond_cached(srv, con, dc->parent); <else &config_check_cond_cached(srv, con, dc->parent);
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) <if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <unk>
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) /* the %s, which is a CCP */ if (con->conf.conf_flags & COND_RESULT_FLAGS_SOCKET) /* The 'Prev' flag is a SOCKET */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result) return COND_RESULT_FALSE; &if (con->conf.conf.log_flags & COND_FREE) return COND_FREE;
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); &if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(
/* one of prev set me to FALSE */ if (COND_RESULT_FALSE == con->cond_cache[dc->context_ndx].result)
if (con->conf.log_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &if (con->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) TRACE("cond[%s],
/* one of prev set me to FALSE. */ if (con->cond_cache[dc->context_ndx].result) &if (con->conf.log_condition_handling) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); <if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) &log_error_write(srv, __FILE__, __LINE__, "sb", "go prev", dc->prev->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) log_error_write(srv, __FILE__, __LINE__, "
if (con->conf.log_condition_handling) if (con->conf.log_condition_handling) &log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->prev) == COND_RESULT_FALSE) <log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->key); if (config_check_cond_cached(srv, con, dc->parent) == COND_RESULT_FALSE) if (dc->conf.log_condition_handling) log_error_write(srv, __FILE__, __LINE__, "sb", "go parent", dc->parent->
