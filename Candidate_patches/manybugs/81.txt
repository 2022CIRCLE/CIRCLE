golden:
tif->tif_flags &= ~TIFF_BUF4WRITE;
inference:
#endif

tif->tif_flags |= TIFF_CODERSETUP;
return (0);
tif->tif_rawcp = NULL;
tif->tif_rawcp = NULL; tif->tif_rawcc = 0;
else  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;
if (tif->tif_flags & TIFF_CODERSETUP) return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) return (0);
/* * Set state to appear as if a * strip has just been read in. */
tif->tif_rawcc = NULL;
else  tif->tif_rawcp = NULL;
tif->tif_curstrip = strip;
tif->tif_flags |= TIFF_CODESETUP;
return 0;
break;
if (!(tif->tif_flags & TIFF_CODERSETUP)) return (0);
tif->tif_flags &= TIFF_CODERSETUP;
else tif->tif_rawcp = NULL;
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0;
if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0);
/* * Set state to appear as if a strip has just been read in. */
splx(s);
TIFF_UNLOCK(tif);
return NULL;
tif->tif_rawcc = 0;
return (NULL);
if (*tif->tif_flags & TIFF_CODERSETUP) return (0);
tif->tif_rawcp = 0;
/* XXX */
if (tif->tif_rawcp == NULL) return (0);
free(tif->tif_rawcp);
if ((*tif->tif_flags & TIFF_CODERSETUP) == 0) return (0);
/* Set state to appear as if a * strip has just been read in. */
free(tif->tif_flags);
if(tif->tif_flags & TIFF_CODERSETUP) return (0);
tif->tif_curstrip = 0;
*tif->tif_flags |= TIFF_CODERSETUP;
tif->tif_flags |= TIF_CODERSETUP;
if (strip % td->td_stripsperimage) * td->td_rowsperstrip = 0;
if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0);
tif->tif_rawcp = tif->tif_rawdata;
TIFFStartStrip(tif, uint32 strip);
#ifdef DEBUG
tif->tif_rawcc = NULL; tif->tif_rawcc = 0;
flags |= TIFF_CODERSETUP;
if (tif->tif_flags & TIFF_CODERSETUP) return 0;
*/
tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = 0;
(*tif->tif_flags & TIFF_CODERSETUP) = 0;
if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0;
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) return ((0));
tif->tif_freecp = NULL;
if (tif->tif_flags & TIFF_CODESETUP) return (0);
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip;
if (tif->tif_flags & TIFF_CODERSETUP) break;
if (!tif->tif_flags || TIFF_CODERSETUP) return (0);
int i;
TIFF_LOCK_ASSERT(tif);
if (tif->tif_flags & TIFF_CODERSETUP) tif->tif_curstrip = strip;
if (tif->tif_flags&TIFF_CODERSETUP) return (0);
tif->tif_iocmd = 0;
if (!(*tif->tif_flags & TIFF_CODERSETUP)) return (0);
else
if (tif->tif_flags & TIFF_CODERSETUP)
if (!(*tif->tif_setupdecode)(tif)) return (0);
if (tif->tif_rawcp == NULL) return 0;
if((tif->tif_flags & TIFF_CODERSETUP) == 0) return (0);
free(tif);
TIFF_LOCK(tif);
if (tif->tif_flags | TIFF_CODERSETUP) return (0);
tif->tif_end = 0;
tif->tif_rawcc = NULL; tif->tif_rawcc = NULL;
free(strip);
tif->tif_rawdata = NULL;
if ((tif->tif_flags & TIFF_CODERSETUP)!= 0) return (0);
/* Set state to appear as if a strip has just been read in. */
else  tif->tif_rawcp = tif->tif_rawdata;
TIF_UNLOCK(tif);
tif->tif_cp = NULL;
tif->tif_rawcp = NULL; tif->tif_rawcc = NULL;
if (tif->tif_flags & TIFF_CODERSETUP) return (NULL);
tif->tif_writecp = NULL;
return ((*tif->tif_flags & TIFF_CODERSETUP)(tif));
tif->tif_rawc = NULL;
if (tif->tif_flags & TIFF_CODERSETUP) return ((0));
i = 0;
if (tif->tif_flags & TIFF_CODERSETUP) continue;
TIFFStartStrip(tif, strip);
tif->tif_flags |= TIFF_CODERSETUP;  tif->tif_curstrip = strip;
tif->tif_error = 0;
tif->tif_cleanup = 0;
tif->tif_cc = 0;
if (tif->tif_flags & TIFF_CODERSETUP)  return (0);
return ((*tif->tif_rawcp = tif->tif_rawdata);
else return (0);
if ((tif->tif_flags & TIFF_CODESETUP) == 0) return (0);
tif->tif_freecp = NULL; tif->tif_freecc = 0;
tif->tif_flags = TIFF_CODERSETUP;
tif->tif_writecp = NULL; tif->tif_rawcc = 0;
if (!tif->tif_flags & TIFF_CODERSETUP) return (0);
tif->tif_readcp = NULL;
if (tif->tif_rawcp == NULL)  tif->tif_rawcc = NULL;
tif->tif_lock = 0;
free(tif->tif_flags | TIFF_CODERSETUP);
continue;
if ((tif->tif_flags & TIFF_CODERSETUP) == 0)
free(tif->tif_rawcc);
@endif
else tif->tif_rawcc = NULL;
#else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; #endif
tif->tif_readcp = NULL; tif->tif_rawcc = 0;
return (1);
tif->tif_cflags |= TIFF_CODERSETUP;
TIFFStartStrip(tif);
else  tif->tif_rawcc = NULL; tif->tif_rawcc = 0;
tif->tif_cnt = 0;
tif->tif_row = 0;
else if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0;
else  tif->tif_rawcp = NULL; tif->tif_rawcc = NULL;
#if 0
if (tif->tif_rawcp == NULL) return (NULL);
tif->tif_predecode = tif->tif_predecode;
#else
tif->tif_rawc = NULL; tif->tif_rawcc = 0;
*td->td_rowsperstrip = 0;
return (tif->tif_flags & TIFF_CODERSETUP);
delete tif->tif_rawcp;
tif->tif_type = tif->tif_type;
return ((*tif->tif_rawcp = NULL) tif->tif_rawcc = 0;
/*
if (strip == 0) return (0);
tif->tif_lineno = 0;
tif->tif_rawcp = 0; tif->tif_rawcc = 0;
if (!(tif->tif_setupdecode)(tif)) return (0);
if (*tif->tif_flags |= TIFF_CODERSETUP) return (0);
#else tif->tif_flags |= TIFF_CODERSETUP; #endif
if (tif->tif_flags |= TIFF_CODERSETUP) return (0);
tif->tif_index = 0;
(*tif->tif_rawcp = NULL);
if (!((tif->tif_flags & TIFF_CODERSETUP)(tif))) return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) return (NULL);
tif->tif_cp = NULL; tif->tif_rawcc = 0;
if (tif->tif_flags & TIFF_CODERSETUP) return (1);
exit(1);
return(NULL);
tif->tif_flags |= TIFF_CODERSETUP; #endif
tif->tif_flush = 0;
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) break;
return ((*tif->tif_rawcp = NULL) tif->tif_rawdata;
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) return 0;
else tif->tif_rawcp = tif->tif_rawdata;
tif->tif_rawcp = NULL; tif->tif_rawdata = NULL;
if ((tif->tif_flags & TIFF_CODERSETUP)  0) return (0);
tif->tif_rawdata = 0;
tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else
return (tif->tif_rawcp = NULL);
return ((*tif->tif_rawcp = NULL); tif->tif_rawcc = 0;
else  tif->tif_rawcc = NULL;
else if (tif->tif_rawcp == NULL) return (0);
else  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else
if (tif->tif_rawcp!= NULL) tif->tif_rawcc = 0;
tif->tif_curdir = strip;
if (tif->tif_rawcp == NULL)  tif->tif_rawcc = 0;
TIFFStartStrip(tif, &tif->tif_dir);
/* * Set state to appear as a * strip has just been read in. */
tif->tif_flags |= TIFF_CODERSETUP
;
tif->tif_line = strip; tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];  return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_needsclean)  tif->tif_clean = 1;
if (tif->tif_curstrip == 0)  tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW)  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags&TIFF_NO_RUN) tif->tif_rawcp = NULL; tif->tif_rawcc = 0;
if ((tif->tif_flags & TIFF_CODERSETUP) == 0)  if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW)  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];  return ((*tif->tif_predecode)(tif, (uint16)(strip /
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_rawcp = NULL; tif->tif_rawcc = 0;
/* * Set state to appear as if a strip has just been read in. */ tif->tif_stripbytecount = td->td_stripbytecount; tif->tif_stripbytecount = td->td_stripbytecount; tif->tif_stripbytecount = td->td_stripbytecount;
/* * If we're doing the first time we've thrown any TIFF a TIFF that may come up. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) return (0); tif->tif_flags |= TIFF_CODERSETUP;
tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];  return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0)  if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW)  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];  return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
/* * If we can't have a strip, make a false one if it's really * an error, * but it's not an error! */ tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
else  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];  return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return_return
return ((*tif->tif_freecp)(tif, (uint16)(strip / td->td_freecc)));
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0)  if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW)  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];  return ((*tif->tif_predecode)(tif, (uint16)(strip
if ((tif->tif_rawcp = &tif->tif_rawdata) == 0) tif->tif_rawcc = 0;
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0))  if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP;  tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW)  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if (tif->tif_curstrip == 0)  tif->tif_curstrip = 0;
if ((tif->tif_flags & TIFF_CODERSETUP) == 0)  if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW)  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];  return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if (!((*tif->tif_flags & TIFF_CODERSETUP)(tif))) return (0);
return ((*tif->tif_rawcp = NULL) & tif->tif_rawcc);
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0))  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];  return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_linkcp = NULL; tif->tif_linkcc = 0;
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP)  if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW)  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];  return ((*tif->tif_predecode)(tif, (uin
return ((*tif->tif_rawcp = tif->tif_rawdata); tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
/* XXX: A write and write an interrupt */
tif->tif_labels[tif->tif_labels.size] = strip;
if (tif->tif_flags&TIFF_UNUSED) tif->tif_unuseused = 0;
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip)  if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW)  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];  return ((*tif->tif_pre
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW)  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];  return ((*tif->tif_predecode)(tif
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW)  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];  return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#ifdef NECKO /* XXX */ #endif
else  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];  return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));  return (0);
tif->tif_bp = NULL;
return ((*tif->tif_rawcp = tif->tif_rawdata) & (td->td_rawdata[strip]));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) return (0); tif->tif_flags |= TIFF_CODERSETUP;
if (tif->tif_flags&TIFF_PARAGING)  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];  return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (((*tif->tif_syslogstr)tif->tif_syslogstr)->tif_syslogstr = 0;
if (tif->tif_flags & TIFF_NOLINE)  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];  return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags&TIFF_CONTRACTID) tif->tif_flags |= TIFF_CONTRACTID;
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip)  if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW)  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];  return ((*tif->tif_
/* * * If we are moving over the strip, set the strip from the byte buffer, and it has changed * to the byte array. */ tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
/* Set state to appear as if a * strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return ((0));
if (tif->tif_flags & TIFF_CODERSETUP)  if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW)  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];   return ((*tif->tif_predecode)(tif, (uint16)(strip / t
tif->tif_intstack = NULL;
if ((tif->tif_flags & TIFF_CODERSETUP) == 0)  if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW)  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];  return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_POINTER) == 0)  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];  return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_datasize = strip;
else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL)  tif->tif_rawcc = NULL; tif->tif_rawcc = NULL;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
tif->tif_newdecode = 0;
tif->tif_linenum = strip;
if (tif->tif_curstrip == 0)  tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW)  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];  return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));  return (0);
tif->tif_curstrip = tif->tif_curstrip;
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP)  tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW)  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];  return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_freecnt)(tif, &tif->tif_freecnt));
if (!tif->tif_relative)  if ((tif->tif_relative)(tif)) return (-1);
if (tif->tif_rawcp == NULL)  tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];  return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_data = &tif->tif_rawdata;
#if defined(XP_MAC) &&!defined(XP_MACOSX) if (!((tif->tif_flags & TIFF_CODERSETUP)(tif))) return (0); #endif
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0)  if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW)  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
/* * Create a thread that is read in the table. */ tif->tif_reset = 0;
/* * No current rest data exists. */
if ((tif->tif_savename)(tif->tif_flags & TIFF_SARCH) == 0) return (NULL);
/* XXX this should be an error. */ tif->tif_separator = 0; if (tif->tif_separator!= 0) return (0); tif->tif_separator = 0;
tif->tif_debuggapgapgapgapgap = 0;
return ((*tif->tif_nextdecode)(tif, (uint16)(strip / td->td_nextdecode)));
else  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_id & TIFF_ID_IN)!= 0) return (0);
tif->tif_cb = tif->tif_cb;
if (tif->tif_curstrip && (*tif->tif_flags & TIFF_CODERSETUP)) return (0);
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip;
tif->tif_erased = PR_FALSE;
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0)  if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP;  tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW)  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
tif->tif_flags |= TIFF_CODERSETUP;  tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW)  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * The same type as * a strip has just been read in. */ tif->tif_freecp = NULL;
return ((*tif->tif_rawcp = NULL) & (((*tif->tif_rawcc = 0) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if (tif->tif_firstdecode)  tif->tif_firstdecode = strip;
if (tif->tif_flags & TIFF_COMMAND) tif->tif_filepath = 0;
if (tif->tif_flags&TIFF_ROOTFAIT) return (0);
tif->tif_insn = NULL;
tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];  return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#if defined(XP_MAC) || defined(XP_MACOSX) /* XXX */ if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * Set state to appear as if a * strip has just been read in. */ tif->tif_link = &tif->tif_link;
if ((tif->tif_flags & TIFF_MODESETUP) == 0)  tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW)  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];  return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags&TIFF_RUNCOMMAND) tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0)  if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW)  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];  return ((*tif->tif_predecode)(tif, (uin
tif->tif_cr = 0;
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '0' && tif->tif_flags & TIFF_CODERSETUP)  if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP;  tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW)  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_
tif->tif_init = 0;
if (tif->tif_vflags & TIFF_CODERSETUP)  if (tif->tif_vflags & TIFF_CODERSETUP)  tif->tif_vflags |= TIFF_CODERSETUP;   tif->tif_rand = strip;
tif->tif_next = 0;
/* * Set state to appear as if a * strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0);
if (tif->tif_unclp) return (0);
if (tif->tif_flags & TIFF_NOSTEADRUN)  tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW)  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];  return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));  return (0);
if (tif->tif_flags & TIFF_M_RUNNING)  if ((tif->tif_flags & TIFF_M_RUNNING) == 0)  if (!(*tif->tif_flags & TIFF_M_RUNNING)(tif)) return (0); tif->tif_flags |= TIFF_M_RUNNING;
/* * Restore the state to be represented. */ if (tif->tif_rlags & TIFF_RELEASE) return (0);
/* * Set state to appear as if a * strip has just been read in. */ tif->tif_rep = tif->tif_rep; tif->tif_flags |= TIFF_CODERSETUP;
tif->tif_removecp = NULL; tif->tif_removecc = 0;
if (!(*tif->tif_get_flags |= TIFF_CODERSETUP)) return (0);
/* FIXME: * Don't tell if a * strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (tif->tif_curstrip = strip) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW)  tif->tif_rawcp = NULL; tif->tif_rawcc = 0;  else  tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
tif->tif_tflags |= TIFF_CODERSETUP;

/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
<else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_MODESETUP) == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if (tif->tif_flags&TIFF_PARAGING) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) &if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_MODESETUP) == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* FIXME: * Don't tell if a * strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (tif->tif_curstrip = strip) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '&0' && tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) <tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
<else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_NOLINE) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_MODESETUP) == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
/* FIXME: * Don't tell if a * strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (tif->tif_curstrip = strip) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '0' && tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if ((tif->tif_flags & TIFF_MODESETUP) == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else
if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
return ((*tif->tif_rawcp = NULL) & (((*tif->tif_rawcc = 0) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0;
if (tif->tif_flags&TIFF_PARAGING) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else
if ((tif->tif_flags & TIFF_MODESETUP) == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_flags & TIFF_CODERSETUP)(tif));
if ((tif->tif_flags & TIFF_MODESETUP) == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '0' && tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
<else tif->tif_rawcp = NULL;
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) &if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if (tif->tif_flags & TIFF_NOLINE) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_rawcp = NULL) & (((*tif->tif_rawcc = 0) & <(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif
else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) &tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_vflags & TIFF_CODERSETUP) &if (tif->tif_vflags & TIFF_CODERSETUP) <tif->tif_vflags |= TIFF_CODERSETUP; tif->tif_rand = strip;
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '<0' && tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0;
if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '&0' && tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
<else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif
if (tif->tif_needsclean) &tif->tif_clean = 1;
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
&tif->tif_rawcp = NULL; tif->tif_rawcc = 0;
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
else tif->tif_rawcp = NULL;
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '0' && tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
&else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_MODESETUP) == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
else tif->tif_rawcc = NULL; tif->tif_rawcc = 0;
if (tif->tif_flags&TIFF_PARAGING) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
return ((*tif->tif_rawcp = NULL) & (((*tif->tif_rawcc = 0) & &(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
#endif
#endif
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) &if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if (tif->tif_flags & TIFF_M_RUNNING) &if ((tif->tif_flags & TIFF_M_RUNNING) == 0) if (!(*tif->tif_flags & TIFF_M_RUNNING)(tif)) return (0); tif->tif_flags |= TIFF_M_RUNNING;
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '0' && tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if (tif->tif_flags & TIFF_NOSTEADRUN) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_rawcp = NULL) & <(((*tif->tif_rawcc = 0) & (((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
&else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
<else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) <tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
<else
else <tif->tif_rawcp = NULL; tif->tif_rawcc = NULL;
if ((tif->tif_flags & TIFF_POINTER) == 0) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOLINE) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) <if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif
if (tif->tif_rawcp == NULL) <tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) <tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) <if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if (tif->tif_flags&TIFF_PARAGING) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_MODESETUP) == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_POINTER) == 0) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '0' && tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) &if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
return NULL;
<else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) <tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if (tif->tif_vflags & TIFF_CODERSETUP) if (tif->tif_vflags & TIFF_CODERSETUP) &tif->tif_vflags |= TIFF_CODERSETUP; <<tif->tif_rand = strip;
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
return ((*tif->tif_rawcp = tif->tif_rawdata) & &(td->td_rawdata[strip]));
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
return ((*tif->tif_rawcp = NULL) & &(((*tif->tif_rawcc = 0) & <(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif
if (tif->tif_flags & TIFF_NOSTEADRUN) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags & TIFF_NOSTEADRUN) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
else &tif->tif_rawcp = NULL; tif->tif_rawcc = NULL;
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '&0' && tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if (tif->tif_flags & TIFF_NOSTEADRUN) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) &if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '&0' && tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
/* FIXME: * Don't tell if a * strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (tif->tif_curstrip = strip) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags&TIFF_PARAGING) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_vflags & TIFF_CODERSETUP) &if (tif->tif_vflags & TIFF_CODERSETUP) &tif->tif_vflags |= TIFF_CODERSETUP; &tif->tif_rand = strip;
if (tif->tif_flags&TIFF_PARAGING) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
&if (tif->tif_flags & TIFF_CODERSETUP) return (0);
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOLINE) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) &tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_POINTER) == 0) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) &tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_vflags & TIFF_CODERSETUP) &if (tif->tif_vflags & TIFF_CODERSETUP) tif->tif_vflags |= TIFF_CODERSETUP; tif->tif_rand = strip;
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_vflags & TIFF_CODERSETUP) &if (tif->tif_vflags & TIFF_CODERSETUP) &tif->tif_vflags |= TIFF_CODERSETUP; &<tif->tif_rand = strip;
else &tif->tif_rawcp = tif->tif_rawdata;
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if (tif->tif_flags & TIFF_NOLINE) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_rawcp = tif->tif_rawdata); tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
return ((*tif->tif_rawcp = tif->tif_rawdata) & (td->td_rawdata[strip]));
if ((tif->tif_flags & TIFF_POINTER) == 0) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if (tif->tif_vflags & TIFF_CODERSETUP) <if (tif->tif_vflags & TIFF_CODERSETUP) tif->tif_vflags |= TIFF_CODERSETUP; &tif->tif_rand = strip;
return ((*tif->tif_rawcp = NULL) & <(((*tif->tif_rawcc = 0) & &(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) &tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags&TIFF_PARAGING) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags&TIFF_RUNCOMMAND) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags&TIFF_PARAGING) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '0' && tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip;
&else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) <tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
return (0);
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if (tif->tif_flags & TIFF_NOLINE) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_MODESETUP) == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags&TIFF_PARAGING) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if ((tif->tif_flags & TIFF_MODESETUP) == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
else <tif->tif_rawcc = NULL;
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags&TIFF_PARAGING) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) &tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
tif->tif_line = strip; tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) tif->tif_rawcc = NULL;
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
return ((*tif->tif_rawcp = NULL) & (((*tif->tif_rawcc = 0) & <(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
return ((*tif->tif_rawcp = NULL) & <(((*tif->tif_rawcc = 0) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if (tif->tif_rawcp == NULL) <tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
return ((*tif->tif_rawcp = NULL) & (((*tif->tif_rawcc = 0) & (((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
return ((*tif->tif_rawcp = NULL) & &(((*tif->tif_rawcc = 0) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_MODESETUP) == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if (tif->tif_flags & TIFF_NOSTEADRUN) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOSTEADRUN) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* * If we can't have a strip, make a false one if it's really * an error, * but it's not an error! */ tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) 0) return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
/* FIXME: * Don't tell if a * strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (tif->tif_curstrip = strip) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (tif->tif_flags&TIFF_RUNCOMMAND) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif
<else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) &tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) <if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '0' && tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
return ((*tif->tif_rawcp = NULL) & <(((*tif->tif_rawcc = 0) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
<else <tif->tif_rawcp = NULL;
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if (tif->tif_flags&TIFF_PARAGING) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags&TIFF_PARAGING) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '0' && tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
tif->tif_line = strip; tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
return ((*tif->tif_rawcp = tif->tif_rawdata); tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_rawcp == NULL) &tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_flags & TIFF_CODERSETUP) return (0);
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '&0' && tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if (tif->tif_flags&TIFF_PARAGING) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_line = strip; tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags&TIFF_PARAGING) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (tif->tif_rawcp == NULL) &tif->tif_rawcc = 0;
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_POINTER) == 0) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if (tif->tif_flags&TIFF_PARAGING) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_rawcp == NULL) <tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
return ((*tif->tif_rawcp = NULL) & &(((*tif->tif_rawcc = 0) & (((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
return ((*tif->tif_nextdecode)(tif, (uint16)(strip / td->td_nextdecode)));
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_rawcp = NULL) & &(((*tif->tif_rawcc = 0) & &(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOLINE) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '<0' && tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
&#endif
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
&else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) &tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
tif->tif_rawcp = NULL; tif->tif_rawcc = 0;
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif
if ((tif->tif_flags & TIFF_POINTER) == 0) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_line = strip; tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if (tif->tif_firstdecode) &tif->tif_firstdecode = strip;
tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if (tif->tif_flags & TIFF_NOLINE) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '&0' && tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_MODESETUP) == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if ((tif->tif_flags & TIFF_MODESETUP) == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
<else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_MODESETUP) == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
&else tif->tif_rawcc = NULL; tif->tif_rawcc = 0;
if (tif->tif_flags & TIFF_NOLINE) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif
if ((tif->tif_flags & TIFF_POINTER) == 0) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_rawcp = NULL) & &(((*tif->tif_rawcc = 0) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOSTEADRUN) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) <tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if ((tif->tif_flags & TIFF_MODESETUP) == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOSTEADRUN) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags & TIFF_NOSTEADRUN) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
return ((*tif->tif_rawcp = NULL) & (((*tif->tif_rawcc = 0) & &(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0;
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if (tif->tif_flags & TIFF_M_RUNNING) <if ((tif->tif_flags & TIFF_M_RUNNING) == 0) if (!(*tif->tif_flags & TIFF_M_RUNNING)(tif)) return (0); tif->tif_flags |= TIFF_M_RUNNING;
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) <if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if (tif->tif_vflags & TIFF_CODERSETUP) <if (tif->tif_vflags & TIFF_CODERSETUP) &tif->tif_vflags |= TIFF_CODERSETUP; &&tif->tif_rand = strip;
if (tif->tif_flags & TIFF_NOLINE) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
<else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_vflags & TIFF_CODERSETUP) <if (tif->tif_vflags & TIFF_CODERSETUP) <tif->tif_vflags |= TIFF_CODERSETUP; &tif->tif_rand = strip;
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
return ((*tif->tif_rawcp = NULL) & <(((*tif->tif_rawcc = 0) & (((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if (tif->tif_flags & TIFF_NOSTEADRUN) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
<tif->tif_rawcp = NULL; tif->tif_rawcc = 0;
if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if (tif->tif_flags & TIFF_NOLINE) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) &tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_MODESETUP) == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_rawcp = NULL) & <(((*tif->tif_rawcc = 0) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '<0' && tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
/* FIXME: * Don't tell if a * strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (tif->tif_curstrip = strip) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
return ((*tif->tif_rawcp = NULL) & <(((*tif->tif_rawcc = 0) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
/* FIXME: * Don't tell if a * strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (tif->tif_curstrip = strip) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) &if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) <if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOLINE) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '0' && tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
return ((*tif->tif_rawcp = NULL) & &(((*tif->tif_rawcc = 0) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if (tif->tif_rawcp == NULL) <tif->tif_rawcc = NULL;
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) <if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if (tif->tif_rawcp == NULL) &tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0;
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOSTEADRUN) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '<0' && tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if (tif->tif_flags&TIFF_PARAGING) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags&TIFF_PARAGING) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_rawcp = NULL) & (((*tif->tif_rawcc = 0) & &(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
return ((*tif->tif_rawcp = NULL) & <(((*tif->tif_rawcc = 0) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) <tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '<0' && tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '<0' && tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * * If we are moving over the strip, set the strip from the byte buffer, and it has changed * to the byte array. */ tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags&TIFF_RUNCOMMAND) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
tif->tif_flags |= TIFF_CODERSETUP;
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if (tif->tif_flags & TIFF_NOLINE) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '<0' && tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
&else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
return ((*tif->tif_rawcp = NULL) & <(((*tif->tif_rawcc = 0) & (((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* FIXME: * Don't tell if a * strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (tif->tif_curstrip = strip) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if (tif->tif_flags & TIFF_NOSTEADRUN) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if (tif->tif_flags & TIFF_NOSTEADRUN) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else <tif->tif_rawcc = NULL; tif->tif_rawcc = 0;
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
tif->tif_line = strip; tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) <tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_MODESETUP) == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags&TIFF_RUNCOMMAND) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if (tif->tif_flags & TIFF_NOLINE) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_vflags & TIFF_CODERSETUP) &if (tif->tif_vflags & TIFF_CODERSETUP) <tif->tif_vflags |= TIFF_CODERSETUP; <&tif->tif_rand = strip;
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
&else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags&TIFF_PARAGING) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
<else <tif->tif_rawcp = NULL;
&else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = NULL;
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) &tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '&0' && tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if (tif->tif_flags & TIFF_NOSTEADRUN) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if (tif->tif_flags & TIFF_NOLINE) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
<else tif->tif_rawcp = NULL; tif->tif_rawcc = 0;
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_POINTER) == 0) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_vflags & TIFF_CODERSETUP) if (tif->tif_vflags & TIFF_CODERSETUP) tif->tif_vflags |= TIFF_CODERSETUP; tif->tif_rand = strip;
else tif->tif_rawcp = tif->tif_rawdata;
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
tif->tif_line = strip; tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if (tif->tif_rawcp == NULL) &tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
/* FIXME: * Don't tell if a * strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (tif->tif_curstrip = strip) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) <tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags&TIFF_PARAGING) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* * * If we are moving over the strip, set the strip from the byte buffer, and it has changed * to the byte array. */ tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
if (tif->tif_flags&TIFF_PARAGING) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '0' && tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
<else tif->tif_rawcp = tif->tif_rawdata;
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if (tif->tif_vflags & TIFF_CODERSETUP) &if (tif->tif_vflags & TIFF_CODERSETUP) <tif->tif_vflags |= TIFF_CODERSETUP; <<tif->tif_rand = strip;
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags&TIFF_PARAGING) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) <tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOSTEADRUN) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) &if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
<else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* FIXME: * Don't tell if a * strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (tif->tif_curstrip = strip) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
return ((*tif->tif_rawcp = NULL) & (((*tif->tif_rawcc = 0) & &(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if ((tif->tif_flags & TIFF_POINTER) == 0) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip;
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
&else <tif->tif_rawcc = NULL;
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_rawcp == NULL) <tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_rawcp = NULL) & &(((*tif->tif_rawcc = 0) & (((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if (tif->tif_flags&TIFF_PARAGING) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_vflags & TIFF_CODERSETUP) <if (tif->tif_vflags & TIFF_CODERSETUP) &tif->tif_vflags |= TIFF_CODERSETUP; <tif->tif_rand = strip;
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (tif->tif_flags & TIFF_M_RUNNING) &if ((tif->tif_flags & TIFF_M_RUNNING) == 0) <if (!(*tif->tif_flags & TIFF_M_RUNNING)(tif)) return (0); tif->tif_flags |= TIFF_M_RUNNING;
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '&0' && tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_rawcp == NULL) <tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) &if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if (tif->tif_flags&TIFF_PARAGING) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (!tif->tif_relative) &if ((tif->tif_relative)(tif)) return (-1);
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif
if (tif->tif_flags & TIFF_NOLINE) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) <if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif
<else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) <tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_POINTER) == 0) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_line = strip; tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_NOLINE) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if ((tif->tif_flags & TIFF_POINTER) == 0) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOSTEADRUN) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
/* FIXME: * Don't tell if a * strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (tif->tif_curstrip = strip) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
else
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_vflags & TIFF_CODERSETUP) &if (tif->tif_vflags & TIFF_CODERSETUP) <tif->tif_vflags |= TIFF_CODERSETUP; &tif->tif_rand = strip;
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (tif->tif_flags&TIFF_PARAGING) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) <tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_rawcp == NULL) &tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '<0' && tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0;
tif->tif_line = strip; tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_POINTER) == 0) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
else tif->tif_rawcp = NULL; tif->tif_rawcc = NULL;
if (tif->tif_flags&TIFF_PARAGING) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_vflags & TIFF_CODERSETUP) &if (tif->tif_vflags & TIFF_CODERSETUP) &tif->tif_vflags |= TIFF_CODERSETUP; <tif->tif_rand = strip;
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_firstdecode) <tif->tif_firstdecode = strip;
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
&else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) &tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_vflags & TIFF_CODERSETUP) <if (tif->tif_vflags & TIFF_CODERSETUP) <tif->tif_vflags |= TIFF_CODERSETUP; <tif->tif_rand = strip;
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_POINTER) == 0) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOLINE) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '0' && tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOLINE) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_rawcp = NULL) & <(((*tif->tif_rawcc = 0) & (((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
return ((*tif->tif_freecp)(tif, (uint16)(strip / td->td_freecc)));
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
<else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) &tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '&0' && tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
&else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) <tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags&TIFF_PARAGING) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_NOSTEADRUN) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
return ((*tif->tif_rawcp = NULL) & &(((*tif->tif_rawcc = 0) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if (tif->tif_flags & TIFF_NOLINE) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_MODESETUP) == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '&0' && tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_rawcp == NULL) &tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_MODESETUP) == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) <tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_POINTER) == 0) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
/* * If we can't have a strip, make a false one if it's really * an error, * but it's not an error! */ tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
&else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags&TIFF_PARAGING) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_vflags & TIFF_CODERSETUP) <if (tif->tif_vflags & TIFF_CODERSETUP) <tif->tif_vflags |= TIFF_CODERSETUP; tif->tif_rand = strip;
if (tif->tif_flags & TIFF_NOSTEADRUN) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '0' && tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) &if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
return ((*tif->tif_rawcp = NULL) & &(((*tif->tif_rawcc = 0) & (((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif
if (tif->tif_flags & TIFF_NOLINE) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_NOSTEADRUN) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags&TIFF_RUNCOMMAND) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (tif->tif_flags & TIFF_NOLINE) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_vflags & TIFF_CODERSETUP) <if (tif->tif_vflags & TIFF_CODERSETUP) tif->tif_vflags |= TIFF_CODERSETUP; <tif->tif_rand = strip;
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) &tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_NOLINE) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
else tif->tif_rawcp = NULL; tif->tif_rawcc = NULL;
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_flags & TIFF_NOLINE) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_vflags & TIFF_CODERSETUP) &if (tif->tif_vflags & TIFF_CODERSETUP) tif->tif_vflags |= TIFF_CODERSETUP; <&tif->tif_rand = strip;
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) <if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
return ((*tif->tif_rawcp = NULL) & <(((*tif->tif_rawcc = 0) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) <if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if ((tif->tif_flags & TIFF_POINTER) == 0) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) <if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if (tif->tif_flags & TIFF_NOSTEADRUN) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
tif->tif_flags &= <TIFF_CODERSETUP;
if (tif->tif_vflags & TIFF_CODERSETUP) if (tif->tif_vflags & TIFF_CODERSETUP) tif->tif_vflags |= TIFF_CODERSETUP; &<tif->tif_rand = strip;
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
else tif->tif_rawcp = NULL;
if ((tif->tif_flags & TIFF_MODESETUP) == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) &tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_MODESETUP) == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '0' && tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
<else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) <if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
&else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags & TIFF_NOSTEADRUN) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if ((tif->tif_flags & TIFF_MODESETUP) == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_MODESETUP) == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '&0' && tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if (tif->tif_flags & TIFF_NOLINE) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * If we can't have a strip, make a false one if it's really * an error, * but it's not an error! */ tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif
if (tif->tif_vflags & TIFF_CODERSETUP) if (tif->tif_vflags & TIFF_CODERSETUP) &tif->tif_vflags |= TIFF_CODERSETUP; <tif->tif_rand = strip;
if ((tif->tif_flags & TIFF_POINTER) == 0) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif
if (tif->tif_vflags & TIFF_CODERSETUP) if (tif->tif_vflags & TIFF_CODERSETUP) &tif->tif_vflags |= TIFF_CODERSETUP; tif->tif_rand = strip;
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
&else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_vflags & TIFF_CODERSETUP) if (tif->tif_vflags & TIFF_CODERSETUP) <tif->tif_vflags |= TIFF_CODERSETUP; &tif->tif_rand = strip;
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_MODESETUP) == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '0' && tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) &if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
&else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_MODESETUP) == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '&0' && tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if (tif->tif_vflags & TIFF_CODERSETUP) <if (tif->tif_vflags & TIFF_CODERSETUP) <tif->tif_vflags |= TIFF_CODERSETUP; <<tif->tif_rand = strip;
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_flags&TIFF_PARAGING) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_POINTER) == 0) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
return ((*tif->tif_rawcp = NULL) & <(((*tif->tif_rawcc = 0) & &(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if (tif->tif_flags & TIFF_NOLINE) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else tif->tif_rawcc = NULL;
/* * * If we are moving over the strip, set the strip from the byte buffer, and it has changed * to the byte array. */ tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOSTEADRUN) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif
if (tif->tif_vflags & TIFF_CODERSETUP) &if (tif->tif_vflags & TIFF_CODERSETUP) tif->tif_vflags |= TIFF_CODERSETUP; &<tif->tif_rand = strip;
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
&else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if ((tif->tif_flags & TIFF_POINTER) == 0) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_flags &= TIFF_CODERSETUP;
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else tif->tif_rawcc = NULL;
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
<else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
&else tif->tif_rawcp = NULL; tif->tif_rawcc = NULL;
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
<else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_rawcp = NULL) & (((*tif->tif_rawcc = 0) & <(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if (tif->tif_flags & TIFF_NOSTEADRUN) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
/* * If we can't have a strip, make a false one if it's really * an error, * but it's not an error! */ tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
return ((*tif->tif_rawcp = NULL) & <(((*tif->tif_rawcc = 0) & &(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if (tif->tif_flags&TIFF_PARAGING) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0;
if (tif->tif_flags & TIFF_NOSTEADRUN) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if ((tif->tif_flags & TIFF_POINTER) == 0) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
return ((*tif->tif_rawcp = NULL) & &(((*tif->tif_rawcc = 0) & (((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
<tif->tif_flags |= TIFF_CODERSETUP;
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if (tif->tif_flags&TIFF_PARAGING) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_MODESETUP) == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0;
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if ((tif->tif_flags & TIFF_POINTER) == 0) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if (tif->tif_flags&TIFF_PARAGING) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_flags &= TIFF_CODERSETUP;
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_NOLINE) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '&0' && tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '&0' && tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if ((tif->tif_flags & TIFF_MODESETUP) == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags&TIFF_PARAGING) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
&else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) <tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags&TIFF_PARAGING) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_MODESETUP) == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_rawcp = NULL) & &(((*tif->tif_rawcc = 0) & &(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOSTEADRUN) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_POINTER) == 0) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '&0' && tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if ((tif->tif_flags & TIFF_POINTER) == 0) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) &tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0;
if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if (tif->tif_vflags & TIFF_CODERSETUP) if (tif->tif_vflags & TIFF_CODERSETUP) &tif->tif_vflags |= TIFF_CODERSETUP; &&tif->tif_rand = strip;
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
&else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if (tif->tif_vflags & TIFF_CODERSETUP) &if (tif->tif_vflags & TIFF_CODERSETUP) tif->tif_vflags |= TIFF_CODERSETUP; &tif->tif_rand = strip;
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '<0' && tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) <tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
&else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if (tif->tif_flags & TIFF_NOSTEADRUN) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
return ((*tif->tif_rawcp = NULL) & &(((*tif->tif_rawcc = 0) & &(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '0' && tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '0' && tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if (tif->tif_vflags & TIFF_CODERSETUP) <if (tif->tif_vflags & TIFF_CODERSETUP) &tif->tif_vflags |= TIFF_CODERSETUP; <&tif->tif_rand = strip;
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '<0' && tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (tif->tif_rawcp == NULL) <tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* FIXME: * Don't tell if a * strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (tif->tif_curstrip = strip) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif
if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
return ((*tif->tif_rawcp = NULL) & <(((*tif->tif_rawcc = 0) & <(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
&else <tif->tif_rawcp = tif->tif_rawdata;
if ((tif->tif_flags & TIFF_POINTER) == 0) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOLINE) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '0' && tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
<return (0);
/* * If we can't have a strip, make a false one if it's really * an error, * but it's not an error! */ tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_MODESETUP) == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '<0' && tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
return ((*tif->tif_rawcp = tif->tif_rawdata); tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if ((tif->tif_flags & TIFF_MODESETUP) == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
<else &tif->tif_rawcc = NULL;
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if (tif->tif_rawcp == NULL) <tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#if defined(XP_MAC) || defined(XP_MACOSX) /* XXX */ if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
<else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '<0' && tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if (tif->tif_flags & TIFF_NOSTEADRUN) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_POINTER) == 0) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_vflags & TIFF_CODERSETUP) &if (tif->tif_vflags & TIFF_CODERSETUP) tif->tif_vflags |= TIFF_CODERSETUP; <<tif->tif_rand = strip;
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_rawcp = NULL) & &(((*tif->tif_rawcc = 0) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
/* FIXME: * Don't tell if a * strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (tif->tif_curstrip = strip) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_POINTER) == 0) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags&TIFF_PARAGING) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if (tif->tif_vflags & TIFF_CODERSETUP) &if (tif->tif_vflags & TIFF_CODERSETUP) &tif->tif_vflags |= TIFF_CODERSETUP; tif->tif_rand = strip;
if (tif->tif_flags & TIFF_NOSTEADRUN) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_MODESETUP) == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) <if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '&0' && tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if (tif->tif_curstrip == 0) tif->tif_curstrip = 0;
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) <tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if (tif->tif_flags&TIFF_PARAGING) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (tif->tif_vflags & TIFF_CODERSETUP) <if (tif->tif_vflags & TIFF_CODERSETUP) tif->tif_vflags |= TIFF_CODERSETUP; <<tif->tif_rand = strip;
#if defined(XP_MAC) || defined(XP_MACOSX) /* XXX */ if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_NOLINE) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_POINTER) == 0) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOLINE) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
<else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags & TIFF_NOLINE) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_POINTER) == 0) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) &if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if (tif->tif_flags&TIFF_PARAGING) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
&return (0);
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOLINE) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_rawcp = NULL) & (((*tif->tif_rawcc = 0) & <(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '0' && tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
tif->tif_rawcp = NULL; tif->tif_rawcc = 0;
if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0;
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (tif->tif_flags & TIFF_NOLINE) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) <tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_rawcp == NULL) &tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
/* * * If we are moving over the strip, set the strip from the byte buffer, and it has changed * to the byte array. */ tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_MODESETUP) == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if (tif->tif_vflags & TIFF_CODERSETUP) if (tif->tif_vflags & TIFF_CODERSETUP) <tif->tif_vflags |= TIFF_CODERSETUP; <tif->tif_rand = strip;
/* FIXME: * Don't tell if a * strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (tif->tif_curstrip = strip) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
return ((*tif->tif_rawcp = NULL) & <(((*tif->tif_rawcc = 0) & &(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
<else <tif->tif_rawcp = tif->tif_rawdata;
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '&0' && tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else tif->tif_rawcp = NULL;
if (tif->tif_flags & TIFF_M_RUNNING) <if ((tif->tif_flags & TIFF_M_RUNNING) == 0) <if (!(*tif->tif_flags & TIFF_M_RUNNING)(tif)) return (0); tif->tif_flags |= TIFF_M_RUNNING;
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_POINTER) == 0) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOLINE) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) &if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_POINTER) == 0) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_NOSTEADRUN) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) &tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '&0' && tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '&0' && tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_NOSTEADRUN) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags & TIFF_NOLINE) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = NULL;
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '<0' && tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if (tif->tif_flags&TIFF_PARAGING) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) <if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
return ((*tif->tif_rawcp = NULL) & &(((*tif->tif_rawcc = 0) & <(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOLINE) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else
if (tif->tif_vflags & TIFF_CODERSETUP) <if (tif->tif_vflags & TIFF_CODERSETUP) &tif->tif_vflags |= TIFF_CODERSETUP; tif->tif_rand = strip;
tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if ((tif->tif_flags & TIFF_MODESETUP) == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if (tif->tif_flags & TIFF_NOSTEADRUN) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
return 0;
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_rawcp == NULL) &tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if (tif->tif_flags & TIFF_NOSTEADRUN) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '&0' && tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_flags&TIFF_PARAGING) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
<else tif->tif_rawcc = NULL;
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
tif->tif_line = strip; tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else &tif->tif_rawcc = NULL; tif->tif_rawcc = 0;
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags&TIFF_PARAGING) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
&else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_CODERSETUP) == 0)
if (tif->tif_flags & TIFF_NOLINE) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) &tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if ((tif->tif_flags & TIFF_POINTER) == 0) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) <tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_POINTER) == 0) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if ((tif->tif_flags & TIFF_POINTER) == 0) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_MODESETUP) == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if ((tif->tif_flags & TIFF_POINTER) == 0) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_rawcp = NULL) & &(((*tif->tif_rawcc = 0) & <(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
return ((*tif->tif_rawcp = NULL) & (((*tif->tif_rawcc = 0) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* FIXME: * Don't tell if a * strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (tif->tif_curstrip = strip) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
return ((*tif->tif_rawcp = NULL) & (((*tif->tif_rawcc = 0) & (((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
tif->tif_line = strip; tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else
if ((tif->tif_flags & TIFF_POINTER) == 0) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
<else tif->tif_rawcp = NULL; tif->tif_rawcc = NULL;
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if (!tif->tif_relative) if ((tif->tif_relative)(tif)) return (-1);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_MODESETUP) == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_CODERSETUP)
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if (tif->tif_flags & TIFF_NOLINE) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
#if defined(XP_MAC) || defined(XP_MACOSX) /* XXX */ if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '0' && tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0;
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) &if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags&TIFF_PARAGING) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '<0' && tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* FIXME: * Don't tell if a * strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (tif->tif_curstrip = strip) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) <if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if ((tif->tif_flags & TIFF_POINTER) == 0) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_POINTER) == 0) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_MODESETUP) == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else <tif->tif_rawcp = NULL;
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if (tif->tif_flags&TIFF_PARAGING) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) &tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) &if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) <tif->tif_rawcc = 0;
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
&else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) <tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_NOSTEADRUN) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_flags&TIFF_PARAGING) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_rawcp = NULL) & <(((*tif->tif_rawcc = 0) & (((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if (tif->tif_vflags & TIFF_CODERSETUP) if (tif->tif_vflags & TIFF_CODERSETUP) tif->tif_vflags |= TIFF_CODERSETUP; <&tif->tif_rand = strip;
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if (tif->tif_flags&TIFF_PARAGING) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else tif->tif_rawcp = tif->tif_rawdata;
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) <if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if (tif->tif_flags & TIFF_NOLINE) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) <if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if (tif->tif_flags & TIFF_M_RUNNING) <if ((tif->tif_flags & TIFF_M_RUNNING) == 0) &if (!(*tif->tif_flags & TIFF_M_RUNNING)(tif)) return (0); tif->tif_flags |= TIFF_M_RUNNING;
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '<0' && tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
&else &tif->tif_rawcp = NULL;
if (tif->tif_flags & TIFF_NOLINE) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_vflags & TIFF_CODERSETUP) &if (tif->tif_vflags & TIFF_CODERSETUP) &tif->tif_vflags |= TIFF_CODERSETUP; &&tif->tif_rand = strip;
else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_POINTER) == 0) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if (tif->tif_flags & TIFF_CODERSETUP) <return (0);
if (tif->tif_flags&TIFF_RUNCOMMAND) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
&else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* FIXME: * Don't tell if a * strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (tif->tif_curstrip = strip) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
if (tif->tif_rawcp == NULL) <tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) &tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '<0' && tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
&else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
/* FIXME: * Don't tell if a * strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (tif->tif_curstrip = strip) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
<else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) &tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
return ((*tif->tif_rawcp = NULL) & &(((*tif->tif_rawcc = 0) & &(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_POINTER) == 0) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
return ((*tif->tif_rawcp = NULL) & &(((*tif->tif_rawcc = 0) & <(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if (tif->tif_flags & TIFF_NOSTEADRUN) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags & TIFF_M_RUNNING) if ((tif->tif_flags & TIFF_M_RUNNING) == 0) if (!(*tif->tif_flags & TIFF_M_RUNNING)(tif)) return (0); tif->tif_flags |= TIFF_M_RUNNING;
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if (tif->tif_flags&TIFF_PARAGING) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) &tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
<else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) &tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags&TIFF_PARAGING) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if (tif->tif_flags & TIFF_NOLINE) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_vflags & TIFF_CODERSETUP) <if (tif->tif_vflags & TIFF_CODERSETUP) tif->tif_vflags |= TIFF_CODERSETUP; &&tif->tif_rand = strip;
if ((tif->tif_flags & TIFF_POINTER) == 0) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_vflags & TIFF_CODERSETUP) if (tif->tif_vflags & TIFF_CODERSETUP) <tif->tif_vflags |= TIFF_CODERSETUP; &&tif->tif_rand = strip;
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOSTEADRUN) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if (tif->tif_flags & TIFF_NOLINE) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_vflags & TIFF_CODERSETUP) if (tif->tif_vflags & TIFF_CODERSETUP) <tif->tif_vflags |= TIFF_CODERSETUP; <&tif->tif_rand = strip;
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else tif->tif_rawcp = NULL; tif->tif_rawcc = NULL;
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if (tif->tif_rawcp == NULL) <tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_MODESETUP) == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) <tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags&TIFF_PARAGING) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
return ((*tif->tif_rawcp = NULL) & (((*tif->tif_rawcc = 0) & (((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) <if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) &if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if ((tif->tif_flags & TIFF_MODESETUP) == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) <tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
<else tif->tif_rawcp = NULL; tif->tif_rawcc = 0;
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags & TIFF_NOLINE) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if (tif->tif_curstrip == 0) &tif->tif_curstrip = 0;
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
tif->tif_line = strip; tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) <tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_rawcp = NULL) & &(((*tif->tif_rawcc = 0) & (((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if ((tif->tif_flags & TIFF_MODESETUP) == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) &tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if (tif->tif_flags & TIFF_NOSTEADRUN) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_line = strip; tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_POINTER) == 0) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_line = strip; tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags&TIFF_PARAGING) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '<0' && tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
return ((*tif->tif_rawcp = NULL) & <(((*tif->tif_rawcc = 0) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_vflags & TIFF_CODERSETUP) if (tif->tif_vflags & TIFF_CODERSETUP) <tif->tif_vflags |= TIFF_CODERSETUP; <<tif->tif_rand = strip;
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) <if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if (tif->tif_flags & TIFF_NOLINE) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) &if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_POINTER) == 0) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
return ((*tif->tif_rawcp = NULL) & (((*tif->tif_rawcc = 0) & &(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if (tif->tif_rawcp == NULL) <tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if (tif->tif_rawcp == NULL) &tif->tif_rawcc = NULL;
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_rawcp = NULL) & <(((*tif->tif_rawcc = 0) & <(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if ((tif->tif_flags & TIFF_CODERSETUP) <0) return (0);
if ((tif->tif_flags & TIFF_POINTER) == 0) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
tif->tif_line = strip; tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_rawcp = NULL) & <(((*tif->tif_rawcc = 0) & (((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
tif->tif_line = strip; tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else tif->tif_rawcc = NULL; tif->tif_rawcc = 0;
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_MODESETUP) == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
&else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * * If we are moving over the strip, set the strip from the byte buffer, and it has changed * to the byte array. */ tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
<else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if (tif->tif_vflags & TIFF_CODERSETUP) if (tif->tif_vflags & TIFF_CODERSETUP) <tif->tif_vflags |= TIFF_CODERSETUP; &<tif->tif_rand = strip;
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
<else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '<0' && tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if (tif->tif_flags & TIFF_NOSTEADRUN) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags & TIFF_NOSTEADRUN) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '<0' && tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0;
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) &tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) &if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '0' && tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = NULL;
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if ((tif->tif_flags & TIFF_MODESETUP) == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_POINTER) == 0) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if ((tif->tif_flags & TIFF_MODESETUP) == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_NOLINE) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '<0' && tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else tif->tif_rawcp = NULL; tif->tif_rawcc = 0;
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '<0' && tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if ((tif->tif_flags & TIFF_POINTER) == 0) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif
&else tif->tif_rawcp = NULL; tif->tif_rawcc = 0;
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_vflags & TIFF_CODERSETUP) if (tif->tif_vflags & TIFF_CODERSETUP) tif->tif_vflags |= TIFF_CODERSETUP; <<tif->tif_rand = strip;
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '0' && tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOSTEADRUN) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_MODESETUP) == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if ((tif->tif_flags & TIFF_POINTER) == 0) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_vflags & TIFF_CODERSETUP) if (tif->tif_vflags & TIFF_CODERSETUP) tif->tif_vflags |= TIFF_CODERSETUP; &tif->tif_rand = strip;
return ((*tif->tif_rawcp = NULL) & &(((*tif->tif_rawcc = 0) & &(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* FIXME: * Don't tell if a * strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (tif->tif_curstrip = strip) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
if (tif->tif_flags & TIFF_NOLINE) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_rawcp = NULL) & &(((*tif->tif_rawcc = 0) & <(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '<0' && tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if ((tif->tif_flags & TIFF_POINTER) == 0) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if ((tif->tif_flags & TIFF_MODESETUP) == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
&else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOSTEADRUN) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if (tif->tif_vflags & TIFF_CODERSETUP) &if (tif->tif_vflags & TIFF_CODERSETUP) tif->tif_vflags |= TIFF_CODERSETUP; &&tif->tif_rand = strip;
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if (tif->tif_flags&TIFF_RUNCOMMAND) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
return ((*tif->tif_rawcp = NULL) & (((*tif->tif_rawcc = 0) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if ((tif->tif_flags & TIFF_MODESETUP) == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags&TIFF_PARAGING) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_vflags & TIFF_CODERSETUP) if (tif->tif_vflags & TIFF_CODERSETUP) <tif->tif_vflags |= TIFF_CODERSETUP; tif->tif_rand = strip;
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if (tif->tif_flags & TIFF_NOSTEADRUN) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if (tif->tif_flags & TIFF_NOSTEADRUN) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
return ((*tif->tif_rawcp = NULL) & <(((*tif->tif_rawcc = 0) & <(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if (tif->tif_flags & TIFF_NOSTEADRUN) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags&TIFF_PARAGING) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_flags & TIFF_NOLINE) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if ((tif->tif_flags & TIFF_POINTER) == 0) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* FIXME: * Don't tell if a * strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (tif->tif_curstrip = strip) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif
/* * If we can't have a strip, make a false one if it's really * an error, * but it's not an error! */ tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
&else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) &tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_POINTER) == 0) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else tif->tif_rawcp = NULL;
tif->tif_flags |= TIFF_CODESETUP;
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_flags |= TIFF_CODERSETUP;
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_rawcp = NULL) & (((*tif->tif_rawcc = 0) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
return ((*tif->tif_rawcp = tif->tif_rawdata); tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif
if (tif->tif_flags & TIFF_CODERSETUP) return (0);
tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '<0' && tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) &tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
<else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) <tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_NOLINE) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_NOSTEADRUN) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_POINTER) == 0) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '&0' && tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if (tif->tif_flags & TIFF_NOLINE) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif
if (tif->tif_vflags & TIFF_CODERSETUP) <if (tif->tif_vflags & TIFF_CODERSETUP) tif->tif_vflags |= TIFF_CODERSETUP; tif->tif_rand = strip;
if ((tif->tif_flags & TIFF_POINTER) == 0) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_flags & TIFF_NOLINE) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOSTEADRUN) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
return ((*tif->tif_rawcp = NULL) & <(((*tif->tif_rawcc = 0) & &(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) &if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '&0' && tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
return ((*tif->tif_rawcp = tif->tif_rawdata); tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags & TIFF_NOLINE) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOLINE) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
else <tif->tif_rawcp = NULL;
else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) &tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * If we can't have a strip, make a false one if it's really * an error, * but it's not an error! */ tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if ((tif->tif_flags & TIFF_MODESETUP) == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return (0);
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags & TIFF_NOSTEADRUN) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
return ((*tif->tif_rawcp = NULL) & &(((*tif->tif_rawcc = 0) & (((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
<else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (tif->tif_flags & TIFF_NOSTEADRUN) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (tif->tif_rawcp == NULL) &tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
return ((*tif->tif_rawcp = NULL) & (((*tif->tif_rawcc = 0) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_NOSTEADRUN) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_rawcp == NULL) &tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOSTEADRUN) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (tif->tif_flags & TIFF_NOLINE) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
/* FIXME: * Don't tell if a * strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (tif->tif_curstrip = strip) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
return ((*tif->tif_rawcp = NULL) & (((*tif->tif_rawcc = 0) & &(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
tif->tif_line = strip; tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
return ((*tif->tif_rawcp = NULL) & &(((*tif->tif_rawcc = 0) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOSTEADRUN) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags&TIFF_PARAGING) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* FIXME: * Don't tell if a * strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (tif->tif_curstrip = strip) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
<else &tif->tif_rawcp = NULL;
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
<#endif
if ((tif->tif_flags & TIFF_MODESETUP) == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_vflags & TIFF_CODERSETUP) <if (tif->tif_vflags & TIFF_CODERSETUP) &tif->tif_vflags |= TIFF_CODERSETUP; <<tif->tif_rand = strip;
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if (tif->tif_flags & TIFF_NOLINE) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags&TIFF_PARAGING) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) <if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
<else &tif->tif_rawcc = NULL; tif->tif_rawcc = 0;
tif->tif_line = strip; tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_POINTER) == 0) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_POINTER) == 0) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_rawcp = tif->tif_rawdata); tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
return ((*tif->tif_rawcp = NULL) & <(((*tif->tif_rawcc = 0) & &(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) <if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if (tif->tif_flags & TIFF_NOLINE) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if (tif->tif_flags & TIFF_M_RUNNING) if ((tif->tif_flags & TIFF_M_RUNNING) == 0) &if (!(*tif->tif_flags & TIFF_M_RUNNING)(tif)) return (0); tif->tif_flags |= TIFF_M_RUNNING;
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if (tif->tif_flags&TIFF_PARAGING) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if (tif->tif_flags&TIFF_PARAGING) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags&TIFF_PARAGING) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '&0' && tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if (tif->tif_flags & TIFF_NOLINE) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = NULL;
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_vflags & TIFF_CODERSETUP) &if (tif->tif_vflags & TIFF_CODERSETUP) <tif->tif_vflags |= TIFF_CODERSETUP; &&tif->tif_rand = strip;
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_POINTER) == 0) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
else &tif->tif_rawcc = NULL;
return ((*tif->tif_rawcp = tif->tif_rawdata); tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
if (tif->tif_flags & TIFF_NOLINE) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) <tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOLINE) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) <tif->tif_curstrip = 0;
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '0' && tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
tif->tif_line = strip; tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_POINTER) == 0) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else &tif->tif_rawcp = tif->tif_rawdata;
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if ((tif->tif_flags & TIFF_POINTER) == 0) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags&TIFF_PARAGING) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '<0' && tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if (tif->tif_flags&TIFF_PARAGING) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOLINE) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
<else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags & TIFF_NOSTEADRUN) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
tif->tif_line = strip; tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (tif->tif_flags & TIFF_NOLINE) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_flags &= &TIFF_CODERSETUP;
tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip;
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_POINTER) == 0) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
&else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) <tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_MODESETUP) == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* * If we can't have a strip, make a false one if it's really * an error, * but it's not an error! */ tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * * If we are moving over the strip, set the strip from the byte buffer, and it has changed * to the byte array. */ tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
if ((tif->tif_flags & TIFF_POINTER) == 0) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) &tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_NOLINE) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
<else &tif->tif_rawcp = NULL;
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
&else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_NOSTEADRUN) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
/* * * If we are moving over the strip, set the strip from the byte buffer, and it has changed * to the byte array. */ tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_MODESETUP) == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOSTEADRUN) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
tif->tif_line = strip; tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if (tif->tif_flags & TIFF_NOLINE) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) &tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
&else &tif->tif_rawcc = NULL;
if ((tif->tif_flags & TIFF_MODESETUP) == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_POINTER) == 0) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags&TIFF_PARAGING) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_flags & TIFF_NOSTEADRUN) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
return ((*tif->tif_rawcp = NULL) & <(((*tif->tif_rawcc = 0) & <(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
&tif->tif_flags |= TIFF_CODERSETUP;
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_POINTER) == 0) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) <if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags & TIFF_M_RUNNING) &if ((tif->tif_flags & TIFF_M_RUNNING) == 0) &if (!(*tif->tif_flags & TIFF_M_RUNNING)(tif)) return (0); tif->tif_flags |= TIFF_M_RUNNING;
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '&0' && tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_vflags & TIFF_CODERSETUP) &if (tif->tif_vflags & TIFF_CODERSETUP) &tif->tif_vflags |= TIFF_CODERSETUP; <<tif->tif_rand = strip;
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if (tif->tif_rawcp == NULL) &tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '<0' && tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_vflags & TIFF_CODERSETUP) <if (tif->tif_vflags & TIFF_CODERSETUP) &tif->tif_vflags |= TIFF_CODERSETUP; &tif->tif_rand = strip;
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif
if ((tif->tif_flags & TIFF_MODESETUP) == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_rawcp = NULL) & <(((*tif->tif_rawcc = 0) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if (tif->tif_flags & TIFF_NOSTEADRUN) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (!tif->tif_relative) <if ((tif->tif_relative)(tif)) return (-1);
tif->tif_line = strip; tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) <if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
&else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) &tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_MODESETUP) == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOSTEADRUN) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_rawcp == NULL) &tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if (tif->tif_flags & TIFF_NOSTEADRUN) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_POINTER) == 0) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif
if (tif->tif_flags&TIFF_PARAGING) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_MODESETUP) == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags&TIFF_PARAGING) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_MODESETUP) == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_POINTER) == 0) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_POINTER) == 0) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOSTEADRUN) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
<else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
return ((*tif->tif_rawcp = NULL) & (((*tif->tif_rawcc = 0) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
<if (tif->tif_flags & TIFF_CODERSETUP) return (0);
<else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) <tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if (tif->tif_vflags & TIFF_CODERSETUP) &if (tif->tif_vflags & TIFF_CODERSETUP) &tif->tif_vflags |= TIFF_CODERSETUP; <&tif->tif_rand = strip;
if (tif->tif_rawcp == NULL) &tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
/* FIXME: * Don't tell if a * strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (tif->tif_curstrip = strip) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
if (tif->tif_needsclean) <tif->tif_clean = 1;
if (tif->tif_flags & TIFF_NOSTEADRUN) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) &if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
tif->tif_line = strip; tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if (tif->tif_flags & TIFF_NOLINE) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_MODESETUP) == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags & TIFF_NOSTEADRUN) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
tif->tif_line = strip; tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
<else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags&TIFF_PARAGING) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
&else &tif->tif_rawcp = NULL;
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) &if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
/* FIXME: * Don't tell if a * strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (tif->tif_curstrip = strip) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) &if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_NOLINE) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if ((tif->tif_flags & TIFF_MODESETUP) == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (tif->tif_flags & TIFF_NOSTEADRUN) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOSTEADRUN) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_vflags & TIFF_CODERSETUP) <if (tif->tif_vflags & TIFF_CODERSETUP) <tif->tif_vflags |= TIFF_CODERSETUP; <&tif->tif_rand = strip;
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '<0' && tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if (tif->tif_flags&TIFF_PARAGING) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0;
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if (tif->tif_flags & TIFF_NOLINE) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOLINE) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) &tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '0' && tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if (tif->tif_flags & TIFF_NOSTEADRUN) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
else &tif->tif_rawcp = NULL;
else <tif->tif_rawcp = NULL;
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_MODESETUP) == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOSTEADRUN) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if ((tif->tif_flags & TIFF_POINTER) == 0) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_MODESETUP) == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_MODESETUP) == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
/* FIXME: * Don't tell if a * strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (tif->tif_curstrip = strip) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_rawcp = NULL) & (((*tif->tif_rawcc = 0) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
<else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) &tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags&TIFF_PARAGING) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
<else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) &tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_NOLINE) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if ((tif->tif_flags & TIFF_MODESETUP) == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
&else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags & TIFF_NOLINE) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOLINE) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) &tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) &if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if ((tif->tif_flags & TIFF_MODESETUP) == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '0' && tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags & TIFF_NOLINE) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOLINE) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_vflags & TIFF_CODERSETUP) if (tif->tif_vflags & TIFF_CODERSETUP) &tif->tif_vflags |= TIFF_CODERSETUP; <&tif->tif_rand = strip;
if ((tif->tif_flags & TIFF_MODESETUP) == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_line = strip; tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
return ((*tif->tif_rawcp = NULL) & <(((*tif->tif_rawcc = 0) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '0' && tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if ((tif->tif_flags & TIFF_MODESETUP) == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* FIXME: * Don't tell if a * strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (tif->tif_curstrip = strip) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif
if (tif->tif_flags & TIFF_NOLINE) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_MODESETUP) == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
<else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
return ((*tif->tif_rawcp = NULL) & (((*tif->tif_rawcc = 0) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) &if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
&else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) &tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if ((tif->tif_flags & TIFF_POINTER) == 0) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
<else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) <if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
return ((*tif->tif_rawcp = NULL) & &(((*tif->tif_rawcc = 0) & &(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = NULL;
<else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
return ((*tif->tif_rawcp = NULL) & &(((*tif->tif_rawcc = 0) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
break;
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif
if ((tif->tif_flags & TIFF_CODERSETUP) &0) return (0);
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags&TIFF_RUNCOMMAND) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_MODESETUP) == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) &tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if (tif->tif_rawcp == NULL) <tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags&TIFF_PARAGING) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_rawcp = NULL) & (((*tif->tif_rawcc = 0) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* * * If we are moving over the strip, set the strip from the byte buffer, and it has changed * to the byte array. */ tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else
if (tif->tif_flags & TIFF_NOLINE) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_POINTER) == 0) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOSTEADRUN) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
<else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) <tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_vflags & TIFF_CODERSETUP) if (tif->tif_vflags & TIFF_CODERSETUP) &tif->tif_vflags |= TIFF_CODERSETUP; &<tif->tif_rand = strip;
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else <tif->tif_rawcc = NULL;
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif
<else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOSTEADRUN) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
<else <tif->tif_rawcc = NULL; tif->tif_rawcc = 0;
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if ((tif->tif_flags & TIFF_MODESETUP) == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_vflags & TIFF_CODERSETUP) <if (tif->tif_vflags & TIFF_CODERSETUP) tif->tif_vflags |= TIFF_CODERSETUP; <&tif->tif_rand = strip;
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
return ((*tif->tif_rawcp = NULL) & (((*tif->tif_rawcc = 0) & (((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
&else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) <tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif
if ((tif->tif_flags & TIFF_POINTER) == 0) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_rawcp = NULL) & (((*tif->tif_rawcc = 0) & <(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) <tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
else <tif->tif_rawcp = NULL; tif->tif_rawcc = NULL;
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
return ((*tif->tif_rawcp = tif->tif_rawdata) & <(td->td_rawdata[strip]));
if ((tif->tif_flags & TIFF_MODESETUP) == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
&else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) <tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) &if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif
if (tif->tif_flags & TIFF_CODERSETUP) &return (0);
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_POINTER) == 0) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOSTEADRUN) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
tif->tif_line = strip; tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (tif->tif_flags & TIFF_NOLINE) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
return ((*tif->tif_rawcp = tif->tif_rawdata); tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '0' && tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
if ((tif->tif_flags & TIFF_MODESETUP) == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
&else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif
if (tif->tif_flags&TIFF_PARAGING) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_MODESETUP) == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
&else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) &tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if (tif->tif_flags&TIFF_PARAGING) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_MODESETUP) == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) <tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) <if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if (tif->tif_flags&TIFF_PARAGING) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if ((tif->tif_flags & TIFF_MODESETUP) == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) <if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_POINTER) == 0) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_rawcp == NULL) &tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_NOSTEADRUN) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_NOSTEADRUN) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_MODESETUP) == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
&else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) <tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if (tif->tif_flags & TIFF_M_RUNNING) if ((tif->tif_flags & TIFF_M_RUNNING) == 0) <if (!(*tif->tif_flags & TIFF_M_RUNNING)(tif)) return (0); tif->tif_flags |= TIFF_M_RUNNING;
if (tif->tif_vflags & TIFF_CODERSETUP) &if (tif->tif_vflags & TIFF_CODERSETUP) <tif->tif_vflags |= TIFF_CODERSETUP; &<tif->tif_rand = strip;
if (tif->tif_flags & TIFF_NOLINE) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_vflags & TIFF_CODERSETUP) <if (tif->tif_vflags & TIFF_CODERSETUP) tif->tif_vflags |= TIFF_CODERSETUP; &<tif->tif_rand = strip;
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (tif->tif_flags & TIFF_NOSTEADRUN) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags & TIFF_NOSTEADRUN) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* FIXME: * Don't tell if a * strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (tif->tif_curstrip = strip) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags&TIFF_PARAGING) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_vflags & TIFF_CODERSETUP) if (tif->tif_vflags & TIFF_CODERSETUP) tif->tif_vflags |= TIFF_CODERSETUP; <tif->tif_rand = strip;
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if ((tif->tif_flags & TIFF_MODESETUP) == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = NULL;
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) <if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_MODESETUP) == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_POINTER) == 0) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_rawcp = NULL) & &(((*tif->tif_rawcc = 0) & <(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
&else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_NOSTEADRUN) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_POINTER) == 0) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_MODESETUP) == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
&else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) &tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if (tif->tif_flags & TIFF_NOSTEADRUN) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else <tif->tif_rawcp = tif->tif_rawdata;
if (tif->tif_flags & TIFF_NOSTEADRUN) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_POINTER) == 0) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_POINTER) == 0) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_MODESETUP) == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (tif->tif_flags & TIFF_NOSTEADRUN) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if ((tif->tif_flags & TIFF_POINTER) == 0) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) <tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if (tif->tif_flags & TIFF_NOLINE) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_vflags & TIFF_CODERSETUP) if (tif->tif_vflags & TIFF_CODERSETUP) &tif->tif_vflags |= TIFF_CODERSETUP; &tif->tif_rand = strip;
if (tif->tif_flags&TIFF_PARAGING) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0;
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags&TIFF_PARAGING) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
else &tif->tif_rawcp = NULL;
<else
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if (tif->tif_flags & TIFF_NOLINE) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '&0' && tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) <tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_NOSTEADRUN) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags&TIFF_PARAGING) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * If we can't have a strip, make a false one if it's really * an error, * but it's not an error! */ tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '&0' && tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
tif->tif_line = strip; tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '0' && tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if (tif->tif_rawcp == NULL) &tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_rawcp == NULL) <tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) &if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '<0' && tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) &if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif
if (tif->tif_flags&TIFF_PARAGING) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else tif->tif_rawcp = NULL; tif->tif_rawcc = 0;
if (tif->tif_flags & TIFF_NOSTEADRUN) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_rawcp == NULL) <tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags&TIFF_PARAGING) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_POINTER) == 0) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags&TIFF_PARAGING) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) &if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if (tif->tif_flags & TIFF_NOLINE) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if ((tif->tif_flags & TIFF_POINTER) == 0) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_rawcp = NULL) & <(((*tif->tif_rawcc = 0) & <(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if (tif->tif_rawcp == NULL) <tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
&else tif->tif_rawcp = NULL;
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
<else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) <tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_rawcp == NULL) &tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (tif->tif_flags & TIFF_NOLINE) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
else &tif->tif_rawcc = NULL; tif->tif_rawcc = 0;
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_NOSTEADRUN) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_MODESETUP) == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
if ((tif->tif_flags & TIFF_MODESETUP) == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (tif->tif_flags & TIFF_NOLINE) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if (tif->tif_rawcp == NULL) &tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags&TIFF_PARAGING) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_line = strip; tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
return ((*tif->tif_rawcp = tif->tif_rawdata); tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * * If we are moving over the strip, set the strip from the byte buffer, and it has changed * to the byte array. */ tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags&TIFF_PARAGING) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if (tif->tif_flags & TIFF_NOLINE) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = NULL;
tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0;
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags&TIFF_PARAGING) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_rawcp = NULL) & <(((*tif->tif_rawcc = 0) & <(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags&TIFF_PARAGING) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else <tif->tif_rawcp = NULL;
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_vflags & TIFF_CODERSETUP) <if (tif->tif_vflags & TIFF_CODERSETUP) <tif->tif_vflags |= TIFF_CODERSETUP; &<tif->tif_rand = strip;
tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) <tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if (tif->tif_vflags & TIFF_CODERSETUP) &if (tif->tif_vflags & TIFF_CODERSETUP) tif->tif_vflags |= TIFF_CODERSETUP; <tif->tif_rand = strip;
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_POINTER) == 0) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags & TIFF_NOSTEADRUN) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
&else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
#if defined(XP_MAC) || tif->tif_namespaces[tif->tif_namespaces] == '&0' && tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_namespaces & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* * Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_
if ((tif->tif_flags & TIFF_MODESETUP) == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) <if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if ((tif->tif_flags & TIFF_MODESETUP) == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
if (tif->tif_rawcp == NULL) <tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else &tif->tif_rawcp = NULL; tif->tif_rawcc = NULL;
&else tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif
<else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_MODESETUP) == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if ((tif->tif_flags & TIFF_POINTER) == 0) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
return ((*tif->tif_rawcp = NULL) & &(((*tif->tif_rawcc = 0) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if ((tif->tif_flags & TIFF_POINTER) == 0) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_needsclean) tif->tif_clean = 1;
if (tif->tif_rawcp == NULL) tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_vflags & TIFF_CODERSETUP) if (tif->tif_vflags & TIFF_CODERSETUP) tif->tif_vflags |= TIFF_CODERSETUP; &&tif->tif_rand = strip;
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_POINTER) == 0) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if (tif->tif_flags&TIFF_PARAGING) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_vflags & TIFF_CODERSETUP) &if (tif->tif_vflags & TIFF_CODERSETUP) <tif->tif_vflags |= TIFF_CODERSETUP; <tif->tif_rand = strip;
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
<else &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) <tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* FIXME: * Don't tell if a * strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (tif->tif_curstrip = strip) return (0); tif->tif_flags |= TIFF_CODERSETUP; tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
if (tif->tif_flags&TIFF_PARAGING) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
&else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif
if ((tif->tif_flags & TIFF_NOSCAPE)!= 0) if (!(tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (tif->tif_flags & TIFF_NOSTEADRUN) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_flags&TIFF_RUNCOMMAND) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip];
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_POINTER) == 0) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
return ((*tif->tif_rawcp = NULL) & (((*tif->tif_rawcc = 0) & <(((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
if ((tif->tif_rawcp!= NULL) && (tif->tif_rawcc == 0)) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
else if ((tif->tif_rawcp = NULL) && tif->tif_rawdata == NULL) <tif->tif_rawcc = NULL; tif->tif_rawcc = NULL; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
<else tif->tif_rawcp = NULL; tif->tif_rawcc = NULL;
return ((*tif->tif_rawcp = NULL) & (((*tif->tif_rawcc = 0) & (((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & <(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if (tif->tif_flags & TIFF_CODERSETUP) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if (((*tif->tif_files & TIFF_CODERSETUP) == 0) && ((*tif->tif_files & TIFF_CODERSETUP) == 0)) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc
<else &tif->tif_rawcp = tif->tif_rawdata;
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if (tif->tif_firstdecode) tif->tif_firstdecode = strip;
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
&else &tif->tif_rawcp = NULL; tif->tif_rawcc = NULL;
if (tif->tif_flags&TIFF_PARAGING) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
<else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td
if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / t
if (tif->tif_flags & TIFF_NOSTEADRUN) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_rawcp == NULL) &tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags& TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip /
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
return ((*tif->tif_rawcp = NULL) & &(((*tif->tif_rawcc = 0) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif
if (tif->tif_curstrip == 0) <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
/* XXX we could do this. */ if (tif->tif_flags & TIFF_CODERSETUP) return (0); if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; &return ((*tif->tif_predecode)(tif
if ((tif->tif_flags & TIFF_POINTER) == 0) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; <return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* * Set state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_flags |= TIFF_CODERSETUP; <tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbyte
else <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* * * Get tif-flags for a strip. */ if (tif->tif_flags & TIFF_CODERSETUP) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
&else <tif->tif_rawcc = NULL; tif->tif_rawcc = 0;
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_vflags & TIFF_CODERSETUP) <if (tif->tif_vflags & TIFF_CODERSETUP) &tif->tif_vflags |= TIFF_CODERSETUP; &<tif->tif_rand = strip;
if (tif->tif_vflags & TIFF_CODERSETUP) <if (tif->tif_vflags & TIFF_CODERSETUP) <tif->tif_vflags |= TIFF_CODERSETUP; &&tif->tif_rand = strip;
return ((*tif->tif_rawcp = NULL) & (((*tif->tif_rawcc = 0) & (((*tif->tif_rawdata) & &(((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & (((*tif->tif_rawdata) & ((tif->tif_rawdata)) & (((*tif->tif_rawdata)) & (((*tif->t
#ifdef TIFF_SPACE_S_NO_LINE if ((tif->tif_flags & TIFF_CODERSETUP) == 0) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags & TIFF_NOREADRAW) <tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) &if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) &if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
if (tif->tif_curstrip == 0) &tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage))); return (0);
if (tif->tif_curstrip == 0) tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; &else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
if (tif->tif_flags&TIFF_PARAGING) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; &return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_stripsperimage)));
/* XXX: don't return a tif, a strip with the state to appear as if a strip has just been read in. */ if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td
/* * Set state to appear as if a strip has just been read in. */ if (tif->tif_flags & TIFF_CODERSETUP) if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_predecode)(tif, (uin
/* Set state to appear as if a * strip has just been read in. */ static int TIFFStartStrip(TIFF* tif, uint32 strip) if (!(*tif->tif_flags & TIFF_CODERSETUP)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; else <tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_rawbytecount[strip]; return ((*tif->tif_pre
if ((tif->tif_flags & TIFF_CODERSETUP) == 0) <if (!(*tif->tif_setupdecode)(tif)) return (0); tif->tif_curstrip = strip; tif->tif_row = (strip % td->td_stripsperimage) * td->td_rowsperstrip; if (tif->tif_flags&TIFF_NOREADRAW) &tif->tif_rawcp = NULL; tif->tif_rawcc = 0; <else &tif->tif_rawcp = tif->tif_rawdata; tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip]; return ((*tif->tif_predecode)(tif, (uint16)(strip / td->td_
