golden:
if (Py_EnterRecursiveCall(" while encoding a JSON object"))  return -1; rv = encoder_listencode_dict(s, rval, obj, indent_level); Py_LeaveRecursiveCall(); return rv;
inference:
return _encoder_listencode_dict(s, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj);
return encoder_listencode_dict(s, rval, obj, indent_level, 0);
return PyEncoder_listencode_dict(s, rval, obj, indent_level);
return (encoder_listencode_dict(s, rval, obj, indent_level));
return Encoder_listencode_dict(s, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, flags);
return encoder_listencode_dict(s, obj, indent_level);
return encoder_listencode_dict(s, rval, newobj, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, NULL);
return encoder_listencode_dict(s, rval);
return _listencode_dict(s, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, rval);
return encoder_listencode_dict(s, rval, obj, &indent_level);
return encoder_listencode_dict(s, rval, obj, 0);
return Py.encoder_listencode_dict(s, rval, obj, indent_level);
return Py_encoder_listencode_dict(s, rval, obj, indent_level);
return encoder_listencode_dict (s, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, rval, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level - 1);
return coder_listencode_dict(s, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, &obj, indent_level);
return encoder_listencode_dict(rval, obj, indent_level);
return (_encoder_listencode_dict(s, rval, obj, indent_level));
return encoder_listencode_dict(s, rval, obj, indent_level, p);
return PyDecoder_listencode_dict(s, rval, obj, indent_level);
return _encode_listencode_dict(s, rval, obj, indent_level);
PyReturn encoder_listencode_dict(s, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, 0, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, null);
return encoder_listencode_dict(s, s, rval, obj, indent_level);
return __encoder_listencode_dict(s, rval, obj, indent_level);
return encoder_listencode_dict( s, rval, obj, indent_level );
return encoder_listencode_dict(s, rval, obj, ssize);
return encoder_listencode_dict(s, rval, (int)obj, indent_level);
return _decoder_listencode_dict(s, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, ret);
return encoder_listencode_dict(&s, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, rval);
return encoder_listencode_dict(s, rval, obj, indent_level, true);
return _steal_list_append(rval, encoded);
return PY_ENcoder_listencode_dict(s, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, indent);
return encoder_listencode_dict(s, rval, obj, indent_level, -1);
return encoder_listencode_dict(s, rval, obj, indent_level, false);
return encoder_listencode_dict(s, rval, obj, indent_level, val);
return encoder_listencode_dict(s, rval, obj, indent_level)
return decoder_listencode_dict(s, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, v);
return encoder_listencode_dict(obj, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, s);
return encoder_listencode_dict(s, indent_level);
return encoder_listencode_dict(s, rval, obj, sizeof(obj));
return encoder_listencode_dict(s, rval, obj, indent_level == 0);
return _steal_list_append(s, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, _indent_level);
return encoder_listencode_dict(s, rval, obj, ssize, indent_level);
return encoder_listencode_dict(s, rval, obj, level);
return encoder_listencode_dict(s, rval, obj, indent_level, size);
return _listencode_list(s, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, length);
return encoder_listencode_dict(s, rval, obj, indent_level+1);
return Pyencoder_listencode_dict(s, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, NULL, indent_level);
return encoder_listencode_dict(s, lval, obj, indent_level);
return (Encoder_listencode_dict(s, rval, obj, indent_level));
return encoder_listencode_dict(s, rval, _obj, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, len);
return encoder_listencode_dict(s, rval, obj, flags, indent_level);
return encoder_listencode_dict(s, rval, (void *)obj, indent_level);
return encoder_listencode_dict(s, i, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, type);
return _Encoder_listencode_dict(s, rval, obj, indent_level);
return _encoder_listencode_list(s, rval, obj, indent_level);
return encoder_listencode_dict(s, retval, obj, indent_level);
return encoder_listencode_dict(s, rval, *obj, indent_level);
return Py_Encoder_listencode_dict(s, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, s, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, 1);
return encoder_listencode_dict(s, rval, cstr, indent_level);
return PY_encoder_listencode_dict(s, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, parent, indent_level);
return encoder_listencode_dict(s, rval, obj, *indent_level);
return encoder_listencode_dict(s, rval, obj, id, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, type);
return encoder_listencode_dict(s, rval, obj, rval->indent_level);
return encoder_listencode_dict(s, rval, obj, flags);
return encoder_listencode_dict(s, rval, obj, indent_level, sp);
return encoder_listencode_dict(s, newobj, indent_level);
return *encoder_listencode_dict(s, rval, obj, indent_level);
return s_encoder_listencode_dict(s, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, indent_level);
return encoder_listencode_dict(obj, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level + 1);
return Py_listencode_dict(s, rval, obj, indent_level);
return encoder_listencode_dict(s, &rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, 0, 0);
return encoder_listencode_dict(s, rval, p, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level-1);
return encoder_listencode_dict(s, val, obj, indent_level);
return encoder_listencode_dict(s, indent_level, rval, obj);
return encoder_listencode_dict(s, rval, 0, obj, indent_level);
return encoder_listencode_dict(p, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, debug);
return encoder_listencode_dict(py, rval, obj, indent_level);
return encoder_listencode_dict(s, aval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, len, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, length);
return encoder_listencode_dict(s,rval,obj,indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, rv);
return encoder_listencode_dict(s, 0, rval, obj, indent_level);
return encoder_listencode_dict(S, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, ep);
return encoder_listencode_dict(s, rval, obj, indent_level, res);
return encoder_encode_dict(s, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, type, indent_level);
return encoder_listencode_dict(s, rval, obj, PR_FALSE);
result = encoder_listencode_dict(s, rval, obj, indent_level); return result;
return encoder_listencode_dict(s, rval, (void **)obj, indent_level);
return PyList_encoder_listencode_dict(s, rval, obj, indent_level);
return encoder_listencode_dict(obj, rval, indent_level);
return encoder_listencode_dict(s, rval, obj, NULL);
return encoder_listencode_dict(s, rval, obj, indent_level, l);
return encoder_listencode_dict(s, rval, obj, indent_level, tmp);
return encoder_listencode_dict(s, rval, obj, indent_level, pi);
return encoder_listencode_dict(s, rval, ibj, indent_level);
return encoder_listencode_dict(s, nrval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, dummy);
return encoder_listencode_dict(s, *rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, Indent_Level);
return encoder_listencode_dict(s, rval, obj, 1);
return encoder_listencode_dict(s, a, rval, obj, indent_level);
return (coder_listencode_dict(s, rval, obj, indent_level));
return _steal_listencode_dict(s, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, out);
return encoder_listencode_dict(s, rval, obj, unsigned indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, result);
return encoder_listencode_dict(s, rval, obj, indent_level, path);
return _encoder_listencode(s, rval, obj, indent_level);
return s_listencode_dict(s, rval, obj, indent_level);
return encoder_listencode_dict(s, RVAL, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, this);
return encoder_listencode_dict(s, rval, obj, true, indent_level);
return encoder_listencode_dict(s, rval, obj, sizeof obj);
return encoder_listencode_dict(s, rval, obj, size);
return encoder_listencode_dict(s, rval, obj, s);
return encoder_listencode_dict(s, rval, obj, indent_level, name);
return encoder_listencode_dict(s, rval, obj, obj);
return encoder_listencode_dict(s, rval, obj, indent_level, url);
return PY_ENCODER_listencode_dict(s, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, s, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, pa);
return PyENcoder_listencode_dict(s, rval, obj, indent_level);
return PyUnicode_encode_dict(s, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, ops, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, nil);
return encoder_listencode_dict(s, rval, obj, indent, indent_level);
return encoder_listencode_dict(s, rval, obj, namespace, indent_level);
return _encoded_listencode_dict(s, rval, obj, indent_level);
return listener_listencode_dict(s, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, td);
return encoder_listencode_dict(s, (void *)rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, url, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, fp);
return encoder_listencode_dict(newobj, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, id);
return encoder_listencode_dict(s, rval, obj, -1, indent_level);
return encoder_listencode_dict(s, &rval, &obj, indent_level);
return encoder_listencode_dict(s, (void **)rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, false);
return encoder_listencode_dict(s, rval, obj, indent_level, buf);
return encoder_listencode_dict(s, rval, p, indent_level);
return encoder_listencode(s, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, sizeof(indent_level));
return PY_listencode_dict(s, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level > 0);
return _steal_list_append(rval, cstr);
return encoder_listencode_dict(s, rval, obj, indent_level, sig);
return encoder_listencode_dict(s, rval, obj, indent_level, void);
return encoder_listencode_dict(s, rval, obj, indent_level, rval;
return encoder_listencode_dict(s, rval, object, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, param);
return encoder_listencode_dict(s, rval, 0);
return (s, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, encoding);
return encoder_listencode_dict(s, rval, obj, indent_level, id);
return encoder_listencode_dict(s, rval, obj, int_level);
return encoder_listencode_dict(s, rval, obj, rv);
return encoder_listencode_dict(s, rval, obj, val);
return encoder_listencode_dict(s, rval, obj, indent_level, &s);
return _encoder_listencode_dict(s, rval, obj);
return encoder_listencode_dict(s, rval, obj, len);
return encoder_listencode_dict(s, rval, obj, indent_level, sb);

return encoder_listencode_dict(s, rval, obj, indent_level, ap);
return encoder_listencode_dict(s, rval, obj, indent_level, hdr);
return encoder_listencode_dict(s, rval, obj, indent_level, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, __unused);
return encoder_listencode_dict(s, rval, obj, indent_level, hz);
return _steal_list_append(rval, cstrlen(cstrlen(s)));
return encoder_listencode_dict(s, rval, obj, uintmax_t indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, _indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, &opt);
return encoder_listencode_dict(s, rval, obj, rval->length);
return encoder_listencode_dict(s, rval, obj, indent_level, sizeof(*obj));
return encoder_listencode_dict(s, rval, obj, nsDependentCString(nsDependentCString(indent_level)));
return encoder_listencode_dict(s, rval, obj, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, sizeof(obj), u);
return encoder_listencode_dict(s, rval, obj, _steal_list_append(rval, cstrlen(obj));
return encoder_listencode_dict(s, rval, obj, indent_level, &obj->obj->obj->obj->obj_type);
return encoder_listencode_dict(s, rval, obj, p, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, rval->end);
return encoder_listencode_dict(s, rval, obj, indent_level, rval->io_refs);
return encoder_listencode_dict(s, rval, obj, indent_level, _encoded_const_string(obj));
return encoder_listencode_dict(s, rval, obj, indent_level, indent_desc);
return encoder_listencode_dict(s, rval, obj, indent_level, adpr);
return encoder_listencode_dict(s, rval, obj, indent_level, nsnull);
return encoder_listencode_dict(s, rval, obj, indent_level, obj);
return encoder_listencode_dict(s, rval, obj, indent_level, PyDict_Check(obj));
return encoder_listencode_dict(s, rval, obj, s.length);
return encoder_listencode_dict(s, rval, obj, ap_obj, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, cstrlen(cstrlen));
return encoder_listencode_dict(s, rval, obj, indent_level, rval->indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, integ_level);
return encoder_listencode_dict(s, rval, obj, indent_level, cstrlen(obj));
return encoder_listencode_dict(s, rval, obj, indent_level, Py_SIZE_MAX);
return encoder_listencode_dict(s, rval, obj, indent_level, tbl);
return encoder_listencode_dict(s, rval, obj, indent_level, sl);
return encoder_listencode_dict(s, rval, obj, indent_level, rval->rval->obj->idx);
return encoder_listencode_dict(s, rval, obj, indent_level, obj->obj);
return encoder_listencode_dict(s, rval, obj, indent_level, _encoded_const(obj));
return encoder_listencode_dict(s, rval, obj, indent_level, rval->td_type);
return encoder_listencode_dict(s, rval, obj, indent_level, PyArena_Unicode(obj), PyArena_Mask(obj), PyArena_Encoding_Conversion(obj), PyArena_Mask(obj), PyArena_Encoding_Conversion(obj), PyArena_Mask(obj), PyArena_Mask(obj), PyArena_Mask(obj), PyArena_Mask(obj), PyArena_Mask(obj), PyArena_Mask(obj), PyArena_Mask(obj), PyArena_Mask(obj), PyArena_Mask(obj), PyArena_Mask(obj), PyArena_Mask(obj), PyArena
return encoder_listencode_dict(s, rval, obj, indent_level, _steal_list_append(rval, cstr));
return encoder_listencode_dict(s, rval, obj, indent_level, PyArena_Initial);
return encoder_listencode_dict(s, rval, obj, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, cpy);
return encoder_listencode_dict(s, rval, obj, indent_level, _steal_list_append(rval, cstrlen(obj));
return encoder_listencode_dict(s, rval, obj, indent_level, acl);
return encoder_listencode_dict(s, rval, obj, indent_level, lv);
return encoder_listencode_dict(s, rval, obj, p);
return encoder_listencode_dict(s, rval, obj, n);
return encoder_listencode_dict(s, rval, obj, indent_level, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level, obj->encode_list_size);
return encoder_listencode_dict(s, rval, obj, indent_level, htonl);
return encoder_listencode_dict(s, rval, obj, indent_level, symbol_get_child(obj));
return encoder_listencode_dict(s, rval, obj, indent_level, obj, obj, obj, obj);
return encoder_listencode_dict(s, rval, obj, indent_level, rval->opt.ds_type);
return encoder_listencode_dict(s, rval, obj, indent_level, rval->len);
return encoder_listencode_dict(s, rval, obj, indent_level, hwnd);
return encoder_listencode_dict(s, rval, obj, indent_level, PY_SIZE);
return encoder_listencode_dict(s, rval, obj, io_ctrl);
return encoder_listencode_dict(s, rval, obj, indent_level, _symbol_list);
return encoder_listencode_dict(s, rval, obj, indent_level, Py_Arena_Fail);
return encoder_listencode_dict(s, rval, obj, indent_level, PR_TRUE);
return encoder_listencode_dict(s, rval, obj, &si);
return encoder_listencode_dict(s, rval, obj, indent_level, sa);
return encoder_listencode_dict(s, rval, obj, _sin_level);
return encoder_listencode_dict(s, rval, obj, indent_level, cnt);
return encoder_listencode_dict(s, rval, obj, indent_level, sizeof(obj));
return encoder_listencode_dict(s, rval, obj, indent_level, obj, &obj);
return encoder_listencode_dict(s, rval, obj, indent_level, PyPyUnicode_Check(obj));
return _steal_list_append(rval, _steal_list_append(encoder_listencode_dict(s, rval, obj, indent_level));
return encoder_listencode_dict(s, rval, obj, obj_obj, indent_level);
return encoder_listencode_dict(s, rval, obj, i);
return encoder_listencode_dict(s, rval, obj, indent_level, nodeinfo);
return encoder_listencode_dict(s, rval, obj, indent_level, PyInt_Check(obj));
return encoder_listencode_dict(s, rval, obj, indent_level, splx);
return encoder_listencode_dict(s, rval, obj, indent_level, sc);
return encoder_listencode_dict(s, rval, obj, indent_level, rval->obj_name);
return encoder_listencode_dict(s, rval, obj, indent_level, Py_EncoderObject *obj);
return encoder_listencode_dict(s, rval, obj, indent_level, rval_next);
return _listencode_list_encode(s, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, obj, indent_level, _neg_obj);
return encoder_listencode_dict(s, rval, obj, indent_level, fs_obj);
return encoder_listencode_dict(s, rval, obj, indent_level, std::one);
return encoder_listencode_dict(s, rval, obj, indent_level, ints);
return encoder_listencode_dict(s, rval, obj, obj_level);
return encoder_listencode_dict(s, rval, obj, _steal_list_append(rval, cstr));
return encoder_listencode_dict(s, rval, obj, indent_level, PY_PyIsList);
return encoder_listencode_dict(s, rval, obj, indent_level, &arg);
return encoder_listencode_dict(s, rval, obj, indent_level, rval, obj);
return encoder_listencode_dict(s, rval, obj, indent_level, rval->list);
return encoder_listencode_dict(s, rval, obj, indent_level, ptr);
return encoder_listencode_dict(s, rval, obj, indent_level, cstr);
return encoder_listencode_dict(s, rval, obj, indent_level, rval->nodetype);
return encoder_listencode_dict(s, rval, obj, obj, indent_level, PyDict_Check(obj));
return encoder_listencode_dict(s, rval, obj, indent_level, rval++);
return encoder_listencode_dict(s, rval, obj, indent_level, lp, p);
return encoder_listencode_dict(s, rval, obj, indent_level, rval->encoded);
&return encoder_listencode_dict(s, rval, obj, indent_level);
<return encoder_listencode_dict(s, rval, obj, indent_level);
return encoder_listencode_dict(s, rval, obj, indent_level);
