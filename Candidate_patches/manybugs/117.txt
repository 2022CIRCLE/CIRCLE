golden:
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0);
inference:
buffer_pool_append(yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor);
buffer_pool_append((ctx->unused_buffers, yymsp[-3].minor.yy0));
buffer_pool_append(ctx->unused_buffers, yymsp[-2].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0);

buffer_pool_append(ctx->unused_buffers, yymsp[-4].minor.yy0);
buffer_pool_append(yymsp[-3].minor.yy0, ctx->unused_buffers);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, 0);
buffer_pool_append(ctx->unused_buffers, yymsp[-1].minor.yy0);
buffer_pool_append(ctx->unused_buffers, &yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, (int)yymsp[-3].minor.yy0);
buffer_pool_append(yymsp[3].minor.yy0);
buffer_pool_append((ctx->unused_buffers), yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, (long)yymsp[-3].minor.yy0);
buffer_pool_append((ctx->unused_buffers) yymsp[-3].minor.yy0);
buffer_pool_append(&ctx->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append(yymsp[-3].minor);
buffer_pool_append(ctx->unused_buffers, min(yymsp[-3].minor.yy0));
buffer_pool_append(&yymsp[-3].minor.yy0);
buffer_pool_append((ctx->unused_buffers) &yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, 0, yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[0].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3]->minor.yy0);
buffer_pool_append(ctx->unused_buffers, (yymsp[-3].minor.yy0));
buffer_pool_append(ctx->unused_buffers, minor.yy0);
buffer_pool_append(ch->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append(yymsp->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, (void *)yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3]);
buffer_pool_append(yyMsp[-3].minor.yy0);
buffer_pool_append((ctx->unused_buffers)(yymsp[-3].minor.yy0));
buffer_pool_append(ctx->unused_buffers);
buffer_pool_append (ctx->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append((ctx->unused_buffers)&yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.xy0);
buffer_pool_append(ctx->unused_buffers, yymsp[3].minor);
buffer_pool_append( ctx->unused_buffers, yymsp[-3].minor.yy0 );
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, NULL);
buffer_pool_append(yymsp[-2].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0 - 1);
buffer_pool_append(yymsp[-4].minor.yy0);
buffer_pool_append((long)ctx->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append(&yypParser->yystack[yypParser->yyidx]);
buffer_pool_append(ctx->unused_buffers, yymsp.minor.yy0);
buffer_pool_append(ctx->unused_buffers, NULL, yymsp[-3].minor.yy0);
buffer_pool_append((yymsp[-3].minor.yy0]));
buffer_pool_append(ctx->unused_buffers, *yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor));
buffer_pool_append(ctx->unused_buffers, yymsp[-5].minor.yy0);
buffer_pool_append(sc->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor)
buffer_pool_append((ctx->unused_buffers)yymsp[-3].minor.yy0);
buffer_pool_append((ctx->unused_buffers) & yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy);
buffer_pool_append((ctx->unused_buffers) + yymsp[-3].minor.yy0);
buffer_pool_append( yymsp[-3].minor.yy0 );
buffer_pool_append(yymsp[-3].minor.yy0, 0);
buffer_pool_append(yymsp[-1].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, 1);
buffer_pool_append(yy->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-6].minor.yy0);
buffer_pool_append(yymsp[-3].minor, ctx->unused_buffers);
buffer_pool_append(&yy->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append(yymsp[-3].minor.yy0)
buffer_pool_append(&yymsp->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0 + 1);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0+1);
buffer_pool_append(0, yymsp[-3].minor.yy0);
buffer_pool_append( ctx->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append(tmp, yymsp[-3].minor.yy0);
buffer_pool_append((ctx->unused_buffers*) yymsp[-3].minor.yy0);
buffer_pool_append((ctx->unused_buffers) - yymsp[-3].minor.yy0);
buffer_pool_append(yymsp[-3]);
buffer_pool_append(ctx->unused_buffers, NULL);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor;
(void) buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[i].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor, 0);
buffer_pool_append(ctx->unused_buffers, yymsp->minor.yy0);
buffer_pool_append(yymsp[-3]->minor.yy0);
buffer_pool_append((ctx->unused_buffers *)yymsp[-3].minor.yy0);
buffer_pool_append(yymsp, yymsp[-3].minor.yy0);
buffer_pool_append((ctx->unused_buffers *) yymsp[-3].minor.yy0);
buffer_pool_append(xp->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yysp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0)
buf_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, (char *)yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers[3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, (long) yymsp[-3].minor.yy0);
buffer_pool_append(curthread->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yyMsp[-3].minor);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor).yy0;
buffer_pool_append(ctx->unused_buffers, min(yymsp[-3].minor));
buffer_pool_append(lhs->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[4].minor.yy0);
buffer_pool_append( (ctx->unused_buffers, yymsp[-3].minor.yy0));
buffer_pool_append(yyms[-3].minor.yy0);
buffer_pool_append(buffer_pool, yymsp[-3].minor.yy0);
buffer_pool_append(conn->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, int yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[--yy].minor.yy0);
buffer_pool_append((ctx->unused_buffers)[-3].minor.yy0);
buffer_pool_append(yymsp[-3].minor, yymsp[-3].minor.yy0);
buffer_pool_append( (ctx->unused_buffers, yymsp[-3].minor.yy0) );
buffer_pool_append(ctx->unused_buffers, yymsp[3].minor.yy0, 0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.get());
buffer_pool_append(yymsp.minor.yy0);
buffer_pool_append(ctx->unused_buffers, yy.minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor->yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, -1);
buffer_pool_append(ctx->unused_buffers, 0);
buffer_pool_append((ctx->unused_buffers)->minor.yy0);
buffer_pool_append(__func__, yymsp[-3].minor.yy0);
buffer_pool_append((ctx->unused_buffers*)yymsp[-3].minor.yy0);
buffer_pool_append((caddr_t)yymsp[-3].minor.yy0);
buffer_pool_append((ctx->unused_buffers)->yymsp[-3].minor.yy0);
buffer_pool_append(th->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, (void **)yymsp[-3].minor.yy0);
buffer_pool_append(yymsp[-3].minor)
buffer_pool_append((int)yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-len].minor.yy0);
buffer_pool_append(ctx->unused_buffers, 1);
buffer_pool_append(bp->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append(yymsp[3].minor.yy0, ctx->unused_buffers);
buffer_pool_append(ctx->unused_buffers, yymsp[2].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy1);
buffer_pool_append(sp->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append(lctx->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append(__unused_buffers, yymsp[-3].minor.yy0);
*buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor) - 1;
buffer_pool_append((u_long)yymsp[-3].minor.yy0);
buffer_pool_append(xs->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append((ctx->unused_buffers[-3].minor.yy0]));
buffer_pool_append((caddr_t) yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, len);
size_t buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append((long)yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor - 1);
buffer_pool_append((void *)yymsp[-3].minor.yy0);
buffer_pool_append(nbuffers, yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yy_minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[--y].minor.yy0);
buffer_pool_append(&yyMsp[-3].minor.yy0);
buffer_pool_append(aCtx->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, minor);
buffer_pool_append(0, ctx->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append(ptx->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append(this->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append((void *) yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3][0].minor.yy0);
buffer_pool_append(CX->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, intminor.yy0);
buffer_pool_append(yymsp[-3].minor.yy0, &ctx->unused_buffers);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, p);
buffer_pool_append(ctx->unused_buffers, curthread->minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, 2);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0]);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, size);
buffer_pool_append(ctx->unused_buffers, (double)yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, ctx->minor.yy0);
buffer_pool_append (yymsp[-3].minor.yy0);
buffer_pool_append((ctx->unused_buffers)[3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0));
buffer_pool_append(ctx->unused_buffers, YYMsp[-3].minor.yy0);
buffer_pool_append(yymsp[-3].minor.xy0);
buffer_pool_append(ctx->unused_buffers, p[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, buf[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, min);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0-1);
buffer_pool_append(ctx->unused_buffers[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].nminor.yy0);
buffer_pool_append(yymsp[-3].minor.yy0, sizeof(yymsp));
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor)[0];
buffer_pool_append(ctx->unused_buffers, yymsp[3]->minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[ -3].minor.yy0 );
buffer_pool_append(yyMsg[-3].minor.yy0);
buffer_pool_append(yysp[-3].minor.yy0);
buffer_pool_append((ctx->unused_buffers)+(yymsp[-3].minor.yy0));
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy2);
buffer_pool_append(%s, yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yy->minor.yy0);
buffer_pool_append(yymsp[-3].minor, 0);
buffer_pool_append(ccx->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0++);
buffer_pool_append((ctx->unused_buffers) + (yymsp[-3].minor.yy0));
buffer_pool_append((yymsp[-3].minor));
buffer_pool_append(ctx->unused_buffers, yyMsp[-3].minor.yy0);
buffer_pool_append((ctx->unused_buffers)  yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor[0]);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, len);
buffer_pool_append(ctx->unused_buffers, sizeof(yymsp[-3].minor));
buffer_pool_append(ctx->unused_buffers, yyms[-3].minor);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, yymsp[-3].size);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, yymsp[-4].minor.xymax);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, yymsp[-1].yytype);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, ctx->unused_buffers);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, yymsp[-2].minor);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, yymsp[-3].minor.size);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, yymsp[-3].nominor.symbol);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, &yy_refresult);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, YY_MEM_BUFFER_SIZE);
buffer_pool_append((ctx->unused_buffers) / yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0); /* XXX This is necessary since the result has already been destroyed */
buffer_pool_append(ctx->unused_buffers, (u_long)yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, yymsp[3].next);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, sizeof(yyMsg));
buffer_pool_append(ctx->unused_buffers, yymsp[3].minor.yy0, &yypParser->yystack[yypParser->yyidx]);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, (caddr_t)yymsp->minor);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, &yypParser->yysize);
buffer_pool_append((ctx->unused_buffers)->ctx->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, yymsp[-3].name);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, yymsp[-2].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[3].minor.yy0, ((size_t)yyminorTYPE));
buffer_pool_append((ctx->unused_buffers - 1), yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, (intptr_t)yymsp[-3].minor.yy0);
buffer_pool_append((uintptr_t)((uintptr_t)ctx->unused_buffers), yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, yymsp[3].minor.yy0);
buffer_pool_append((yy->unused_buffers) yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, yymsp[-3].usec.xod, yymsp[-3].usec.xod, yymsp[-3].usec.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, &yypParser->yystack[yypParser->yyidx]);
buffer_pool_append((yyMsg[0])? ctx->unused_buffers : yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, yymsp[-3].freelist);
buffer_pool_append((u_long)ctx->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, yymsp[-3].no_buffles[2]);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, &yypParser->yymstack[yypParser->yyidx]);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, &yy_reduce_rb);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, sizeof(yymsp));
buffer_pool_append(((ctx->unused_buffers[0])->minor.yy0));
buffer_pool_append(ctx->unused_buffers, ((char *)yymsp[-3].minor.yy0));
buffer_pool_append((uintptr_t)ctx->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, p->yyint);
buffer_pool_append((void *) ctx->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append((yyMsg[-3].minor.yy0])? yymsp[-3].minor.yy0 : ctx->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, yymsp[-3].maxidx);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, yymsp[3].insert);
buffer_pool_append(ctx->unused_buffers, (void **) yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, (unsigned long)yymsp[-3].minor.yy0);
buffer_pool_append((u_int)(ctx->unused_buffers, yymsp[-3].minor.yy0));
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, yymsp[-3].hw);
buffer_pool_append(ctx->unused_buffers, (yymsp[-3].minor.yy0] && yymsp[-3].minor));
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, yymsp[-1].td);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, sizeof(yyMsp));
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, yymsp[-3].flags);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, &yypParser->yyidx);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, yymsp[-3].nb_addr);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, &yymsp[--yymsp].yynum);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, yypParser->yy_stack[yypParser->yyidx]);
buffer_pool_append(((char*)ctx->unused_buffers, yymsp[-3].minor.yy0));
buffer_pool_append(ctx->unused_buffers, (caddr_t)yymsp[-3].minor.yy0);
buffer_pool_append((ctx->unused_buffers)->ptr_buffer, yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, YYMINORTYPE);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, &yypParser->yymsp);
buffer_pool_append(((yy)yymsp[-3].minor.yy0));
buffer_pool_append(ctx->unused_buffers, yymsp[3].minor.yy0, yymsp[0].buffers, yymsp[1].minor.yy0);
buffer_pool_append((ctx->unused_buffers & YYM_SUBSTACK));
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, sizeof(buffer_pool_next));
buffer_pool_append(ctx->unused_buffers, (unsigned char*)yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, &yypParser->yypParser->yypParser->yyidx);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, yymsp[-3].hdr);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, yymsp[-4].minor.yy0);
buffer_pool_append(ctx->unused_buffers, (ctx_flags & YY_FILE_SUCCESS)->minor.yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, yymsp[-3].yy0);
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0, yymsp[-3].minor.hz);
buffer_pool_append(ctx->unused_buffers, (intptr_t) yymsp[-3].minor.yy0);
buffer_pool_append((ctx->unused_buffers & <YYM_SUBSTACK));
buffer_pool_append(ctx->unused_buffers, yymsp[-3].minor.yy0);
buffer_pool_append((ctx->unused_buffers) &yymsp[-3].minor.yy0);
buffer_pool_append((ctx->unused_buffers) <yymsp[-3].minor.yy0);
buffer_pool_append((ctx->unused_buffers & &YYM_SUBSTACK));
buffer_pool_append((ctx->unused_buffers & YYM_SUBSTACK));
buffer_pool_append((ctx->unused_buffers) yymsp[-3].minor.yy0);
buffer_pool_append(ctx->unused_buffers, (ctx_flags & <YY_FILE_SUCCESS)->minor.yy0);
buffer_pool_append(ctx->unused_buffers, (ctx_flags & &YY_FILE_SUCCESS)->minor.yy0);
buffer_pool_append(ctx->unused_buffers, (ctx_flags & YY_FILE_SUCCESS)->minor.yy0);
