
Set c = r.getAnnotations();
c = r.getAnnotations();
Selection c = r.getAnnotations();
r = r.getAnnotations();
r.getAnnotations();
List c = r.getAnnotations();
Collection c = r;
nsresult rv;
Collection c = r.getAnnotations();
Collection c;
nsresult r;
Range c = r.getAnnotations();
Collection c = new ArrayList();
Collection c = r.getAnnotations();
int c = r.getAnnotations();
lc = r.getAnnotations();
char* c = r.getAnnotations();
aResult = r.getAnnotations();
rv = r.getAnnotations();
XYZCollection c = r.getAnnotations();
ULong c = r.getAnnotations();
Collection c = r.findAnnotations();
Collection c = r.iterator();
Reference c = r.getAnnotations();
Object c = r.getAnnotations();
ArrayList c = r.getAnnotations();
Collection c = r.getData();
if (r) Collection c = r.getAnnotations();
Collection c = null;
PRInt32 c = r.getAnnotations();
Collection c = (Collection)r.getAnnotations();
Class c = r.getAnnotations();
XYZ Collection c = r.getAnnotations();
final Collection c = r.getAnnotations();
nsAutoString c;
Collection c = (Collection) r.getAnnotations();
return r.getAnnotations();
res = r.getAnnotations();
tmp = r.getAnnotations();
Integer c = r.getAnnotations();
Collection c = r.getChildren();
Collection c = r.GetAnnotations();
Collection c = iterator.next();
char *c = r.getAnnotations();
Collection c = this.annotations.get();
XXX Collection c = r.getAnnotations();
Collection c = aResult.getAnnotations();
List c;
nsAutoString c = r.getAnnotations();
SetCollection c = r.getAnnotations();
Collection c=r.getAnnotations();
Iterator c = r.getAnnotations();
Collection c = r.getObservers();
nsCollection c = r.getAnnotations();
List c = r.getAnnotations();
List c = r;
rc = r.getAnnotations();
Collections c = r.getAnnotations();
XY_Collection c = r.getAnnotations();
u.d = r.getAnnotations();
Collection c = m.getAnnotations();
Element c = r.getAnnotations();
Cell c = r.getAnnotations();
Return c = r.getAnnotations();
Collection c = r.getNativeAnnotations();
C = r.getAnnotations();
return Collection c = r.getAnnotations();
+= r.getAnnotations();
Document c = r.getAnnotations();
Collection c = aRange.getAnnotations();
NS_ENSURE_ARG_POINTER(r);
int c;
CollectionXYZ> c = r.getAnnotations();
List c = new ArrayList();
iterator c = r.getAnnotations();
col = r.getAnnotations();
Collection c = this.r.getAnnotations();
Collation c = r.getAnnotations();
::Collection c = r.getAnnotations();
Collection c = r.annotations;
Collection c = r.firstChild;
Collection c = r.getNewAnnotations();
Collection c = r.getAnnotations().clone();
Item c = r.getAnnotations();
(void) Collection c = r.getAnnotations();
aResult.c = r.getAnnotations();
Iterator c = r.iterator();
char c = r.getAnnotations();
*c = r.getAnnotations();
Collection c = r.getElements();
Line c = r.getAnnotations();
nsresult result = r.getAnnotations();
PRUint32 c = r.getAnnotations();
Selection c;
r = r;
Collection c = r.nodes;
XULCollection c = r.getAnnotations();
Collection c = r.getAnodes();
Collection c = &r.getAnnotations();
Set result = r.getAnnotations();
XYAnnotation c = r.getAnnotations();
Collection c = r.next;
Set c = (Set)r.getAnnotations();
CollCollection c = r.getAnnotations();
Collection c = r.getCurrentAnnotations();
nsresult Collection c;
List c = r.iterator();
l = r.getAnnotations();
Collection c = r.getAnnotations;
Collection c = r.getList();
cols = r.getAnnotations();
Collection c = annotations.get();
Collection c = r.getAttributes();
Collection c = 0;
Collection c = r.getDatasets();
PRBool c = r.getAnnotations();
int result = r.getAnnotations();
Settings c = r.getAnnotations();
List c = r.findAnnotations();
Iterator c = this.annotations.iterator();
i = r.getAnnotations();
nsresult Collection c = null;
Collection c = this.annotations.get(r);
Collection c = r.getRangeAnnotations();
r.getAnnotations().clear();
c = r;
Collection c = r.getAnnotations(null);
Collection c = r.getHiddenAnnotations();
Collection c = r.getFirst();
if (r)
Allocator c = r.getAnnotations();
Collection c = r.getAnnotes();
Collection c = r.getAnim();
Collection c = r.getAnnotations(&c);
Collection c = r.get();
return r;
nsresult rv = NS_OK;
Collection c = r.getView().getAnnotations();
char* c;
Selection c = r;
ListXYAnnotation> c;
Collection c = r.getAnnotations( );
Collection c = r.getAnotations();
Object c;
Collection c = r.getInstance().getAnnotations();
Collection c = r.getParent().getAnnotations();
Collection c = r.getAnnotations(false);
Collection c = r.clone();
Collection c = r.getCells();
#endif
List c = r.getAnnotes();
Collection c = r.getAnnotations ();
r.getAnnotations() = 0;
Collection c = r.nodes.get();
Collection c = r.elements();
Collection c = r.findAnnotes();
List c = r.getAnnotations;
List c = this.annotations.get();
Collection c = r.nodeList();
nsresult r = null;
Collection c = r.getNativeAnnotes();
Collection c = r.getObject().get();
Collection c = r.getInstance().get();
Collection c = r.getAnnotations() - 1;
nsresult r = NS_OK;
Collection c = r.getAnnotations(*this);
List c = r.getAnnotations( );
Collection c = r.getAnnotations() + 1;
Collection c = r.getANNotations();
List c = r.getAnnotations(null);
Collection c = r.getAnnotations(0, 0);
Collection c = r.getAnnotations(this);
List c = r.getAnnotations().clone();
Collection c = r.getAnnotations(true);
Collection c = r.getAnnotations().get();
Collection c = r.getAnnotations(0, 0, 0);
nsAutoString c; r.getAnnotations();
if (!r.getAnnotations()) return;
Collection c = r.elementAt(0,0);
List c = r.getAnnotations(&c);
nsCOMPtrnsIAtom> tag;
if (!r.getAnnotations())  return;
Collection c = r.getAnnotationsAsList();
Collection c = r.getAnnotations(0,0);
Iterator iterator = this.annotations.iterator();
Collection c = r.getAnnotationsAsInt();
List c = r.getAnnotations(*this);
Collection c = r.getAnnotations(&r);
if (r.getAnnotations() == 0) return;
if (savedContents)  aClone = r.getAnnotations();
nsresult r = r.getAnnotations();
XY_collection c = r.getAnnotations();
nsRect r(0, r.getValueAxis());
if (r.getCount() >= 0)  if (! r.isRemoved())  return;
nsresult Collection c = r.getAnnotations();
if (Range)  c = r.getAnnotations();  else  c = r.getAnnotations();
nsresult r; nsGenericElement* r;
for (i = 0; i  rangeCount; i++)  if (IsInArray(&rangeList[i]))  /* not done yet */ if (rangeList[i].remaining == 0)  /* Not complete */
if (r.getInstance() == aResult)  return 0;
Collection c = r.get('AnnotationCount');
if (r)  Collection c = r.getAnnotations();  else  if (r)  fprintf(stderr, "%s: %sn", this, r.get(), r.get());
Collection c = r.nsInstance().getAnnotations();
for (i = 0; i  r.getAnodes; i++)  r = r.getAnodes[i]; if (r)  r.addAnodes(r.annotations, r.next) - 1;
if (r.hasNavigation)  Selection c = r.navigation;  else  Selection c = r.navigation;
if (r)  r = r.getAnnotations();
if (r.getAnnotations() == 0)  return;
XYPath path;
if (! r.getAnnotations())  Collection c = r.getAnnotations();
if (r.getIndex()  0)
if (!r.isAssigned()) return 0; r.isAssigned = true;
if (!aContent) return null;
Collection c = r.get("Annotations", 0);
nsAtom* collection c = r.getAnnotations();
Collection c = r.getMatching();
Collection c = r.getContainedAnnotations();
Collection c = r.mCluster.getAnnotations();
Collection c = r.getAnnotations(&aCurrentBatch);
if (r)  Collection c = r.getAnnotations();
XYBool isDomainAxis =  0 ; XYBool isDomainAxis = 0 ;
Collection c = r.get().get();
nsresult rv = r.getAnnotations();
Collection c = r.getAnnotations(*this.annotationList);
nsAutoString col; r.getAncestorCols().Count(col); col = col.GetAncestorCols(); col = col.GetAncestorCols(); col.GetAncestorCols().Count(col); col.GetAncestorCols().Count(col); col.GetAncestorCols().Count(col); col.GetAncestorCols().Count(col); col.GetAncestorCols().Count(col); col.GetAncestorCols().Count(col); col.GetAncestorCols().Count(col); col.GetAncestorCols().Count(col); col.GetAncestorCols().Count(col); col.GetAncestorCols().Count(col); col.GetAncestorCols().Count(col); col.GetAncestorCols().Count(col); col.GetAncestorCols().Count(col); col.GetAncestorCols().Count(col); col.GetAncestorCols().Count(
Collection c = r.getArray().elementAt(0);
nsAnnotations::Collection c = r.getAnnotations();
XYArray* c = r.getAnnotations();
Collection c = r.getIndexOfAnnotations();
NS_PRECONDITION(r, "bad range"); if (needDataRange)  *this = r.getDataRange();
if (!r.isFrame()) return;
Collection c = r.get(nsAutoString(""));
nsCOMPtrnsIAtom> collection c;
/* * We're just trying to do this on the other end of the range. */ Collection c = r.getAnnotations();
nsGenericHTMLElement::Collection c = r.getAnnotations();
XYAnnotation* collection c = r.getAnnotations();
Collection c = r.getAppendAnnotations();
if (!nonCanInclude)  int list = 0; for (i = 0; i  r.numChildren; i++)  if (nonCanInclude)  list = r.elementAt(i); if (list)  nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
Collection c = r.getArray(&r);
Collection c = r.getAppendData();
if (null == this.annotations)  if (! (r.get()))  return NS_ERROR_NULL_POINTER;  else  return NS_OK;
if (r.getAnnotations() == 0)  return false;
if (isContainer)  char* c; r = r.getAnnotations();
SetupCurrentLines c = r.getAnnotations();
Collection c = (Reference *)r.getAnnotations();
if (r.getChildren() == null)  nsAutoString c;
if (isInline)  InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2)  int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1;  else  x1 = y1;
if (Range)  Collection c = r.getAnnotations();  else  SetRanges(&c);
if (r)  nsRect range = r.getRangeCount(); for (; range > 0; range --)  nsRect range; range--; range = 0;  range = 0;
if (r.getAnnotations()  0)  r = r.getAnnotations();
Collection c = r.getXMLAnnotations();
/* * Set the data of the map to the axis. */ int retVal; for (i = 0; i  c; i++)  int retVal = r.getIndex(i);
nsIView* currentView = null; nsCOMPtrnsISupports> isupports = null; if (mView)  nsCOMPtrnsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView))  return r.mView;  nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if ((r!= r) && (r.getAnnotations()!= 0))  Collection c = r.getAnnotations();  else  nsAutoString data[r.get()]; if (data[r.get()])  if (! data[r.get()]) return;
if (strcmp(r.getAnnotations(), "str") == 0)  c = strcmp(r.getAnnotations(), "str");  else  c = r.getAnnotations();
Collection c = r.getArray();
/* * First run a list of mapped datasets, but not yet */
r.removeObject("");
nsresult rv; nsCOMPtrnsISupports> container = do_QueryInterface(r); if (NS_SUCCEEDED(rv))  rv = container.GetFirst();
if (isAxis) return -1; Collection c = r.getAnnotations();
if (!r.isPositioned()) return;
nsISupportsArray::Collection c = r.getAnnotations();
Collection c = (CellList*)r.getAnnotations();
if (isDomainAxis)  Collection c = r.getAnnotations();  else
char *c; r.getAnnotations();
nsGenericDOMDataSource::Collection c = r.getAnnotations();
SetIterator iter = r.getAnnotations();

if (!nonCanInclude) <int list = 0; for (i = 0; i <r.numChildren; i++) <if (nonCanInclude) list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (Range) Collection c = r.getAnnotations(); <else SetRanges(&c);
ListXYAnnotation> c;
if (null == this.annotations) if (! (r.get())) return NS_ERROR_NULL_POINTER; <else &return NS_OK;
if (null == this.annotations) <if (! (r.get())) <return NS_ERROR_NULL_POINTER; <else <return NS_OK;
&for (i = 0; i r.getAnodes; i++) &r = r.getAnodes[i]; if (r) r.addAnodes(r.annotations, r.next) - 1;
for (i = 0; i r.getAnodes; i++) r = r.getAnodes[i]; if (r) r.addAnodes(r.annotations, r.next) - 1;
&for (i = 0; i rangeCount; i++) <if (IsInArray(&rangeList[i])) &/* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
nsIView* currentView = null; nsCOMPtr<nsISupports> isupports = null; if (mView) &nsCOMPtr&nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) <return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (null == this.annotations) <if (! (r.get())) return NS_ERROR_NULL_POINTER; else <return NS_OK;
if (isDomainAxis) <Collection c = r.getAnnotations(); else
if (r.hasNavigation) Selection c = r.navigation; else <Selection c = r.navigation;
if (!nonCanInclude) int list = 0; for (i = 0; i r.numChildren; i++) <if (nonCanInclude) &list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
XYBool isDomainAxis = <0 &; XYBool isDomainAxis = <0 <;
nsIView* currentView = null; nsCOMPtrnsISupports> isupports = null; if (mView) <nsCOMPtrnsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) &return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (r) &Collection c = r.getAnnotations(); &else if (r) <fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (r) Collection c = r.getAnnotations(); else <if (r) fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (Range) &Collection c = r.getAnnotations(); else &SetRanges(&c);
&for (i = 0; i rangeCount; i++) &if (IsInArray(&rangeList[i])) &/* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if ((r!= r) && (r.getAnnotations()!= 0)) Collection c = r.getAnnotations(); <else &nsAutoString data[r.get()]; if (data[r.get()]) if (! data[r.get()]) return;
nsIView* currentView = null; nsCOMPtr&nsISupports> isupports = null; if (mView) nsCOMPtr<nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) &return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
nsresult rv; nsCOMPtr&nsISupports> container = do_QueryInterface(r); if (NS_SUCCEEDED(rv)) rv = container.GetFirst();
if ((r!= r) && (r.getAnnotations()!= 0)) <Collection c = r.getAnnotations(); &else &nsAutoString data[r.get()]; if (data[r.get()]) if (! data[r.get()]) return;
if (r) &nsRect range = r.getRangeCount(); for (; range > 0; range --) nsRect range; range--; range = 0; &range = 0;
if (Range) <c = r.getAnnotations(); &else <c = r.getAnnotations();
<for (i = 0; i &r.getAnodes; i++) <r = r.getAnodes[i]; if (r) <r.addAnodes(r.annotations, r.next) - 1;
for (i = 0; i r.getAnodes; i++) &r = r.getAnodes[i]; if (r) r.addAnodes(r.annotations, r.next) - 1;
for (i = 0; i <r.getAnodes; i++) &r = r.getAnodes[i]; if (r) &r.addAnodes(r.annotations, r.next) - 1;
if (r) &Collection c = r.getAnnotations(); else <if (r) fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (!nonCanInclude) &int list = 0; for (i = 0; i <r.numChildren; i++) &if (nonCanInclude) &list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (r.getAnnotations() == 0) <return false;
nsresult rv; nsCOMPtr&nsISupports> container = do_QueryInterface(r); if (NS_SUCCEEDED(rv)) &rv = container.GetFirst();
/* * Set the data of the map to the axis. */ int retVal; for (i = 0; i c; i++) &int retVal = r.getIndex(i);
if ((r!= r) && (r.getAnnotations()!= 0)) &Collection c = r.getAnnotations(); else <nsAutoString data[r.get()]; if (data[r.get()]) if (! data[r.get()]) return;
if (strcmp(r.getAnnotations(), "str") == 0) c = strcmp(r.getAnnotations(), "str"); &else <c = r.getAnnotations();
if (Range) <c = r.getAnnotations(); &else c = r.getAnnotations();
if (r) Collection c = r.getAnnotations(); &else &if (r) <fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (isInline) <InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) <int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; else &x1 = y1;
for (i = 0; i rangeCount; i++) if (IsInArray(&rangeList[i])) &/* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (Range) <c = r.getAnnotations(); else c = r.getAnnotations();
CollectionXYZ> c = r.getAnnotations();
&for (i = 0; i &rangeCount; i++) if (IsInArray(&rangeList[i])) &/* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (r) &Collection c = r.getAnnotations(); <else if (r) &fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (null == this.annotations) <if (! (r.get())) &return NS_ERROR_NULL_POINTER; &else return NS_OK;
if (!nonCanInclude) int list = 0; for (i = 0; i &r.numChildren; i++) &if (nonCanInclude) list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
for (i = 0; i &r.getAnodes; i++) &r = r.getAnodes[i]; if (r) &r.addAnodes(r.annotations, r.next) - 1;
if ((r!= r) && (r.getAnnotations()!= 0)) <Collection c = r.getAnnotations(); <else nsAutoString data[r.get()]; if (data[r.get()]) if (! data[r.get()]) return;
if (!nonCanInclude) int list = 0; for (i = 0; i <r.numChildren; i++) <if (nonCanInclude) &list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
XYBool isDomainAxis = &0 <; XYBool isDomainAxis = 0 &;
if (r) Collection c = r.getAnnotations(); else <if (r) <fprintf(stderr, "%s: %sn", this, r.get(), r.get());
nsIView* currentView = null; nsCOMPtrnsISupports> isupports = null; if (mView) &nsCOMPtr&nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
for (i = 0; i r.getAnodes; i++) &r = r.getAnodes[i]; if (r) &r.addAnodes(r.annotations, r.next) - 1;
if (r) &Collection c = r.getAnnotations(); &else if (r) &fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (r.getAnnotations() == 0) <return;
if (r) <Collection c = r.getAnnotations(); else <if (r) fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (r) nsRect range = r.getRangeCount(); for (; range > 0; range --) &nsRect range; range--; range = 0; <range = 0;
if (r.hasNavigation) <Selection c = r.navigation; else Selection c = r.navigation;
nsresult rv; nsCOMPtrnsISupports> container = do_QueryInterface(r); if (NS_SUCCEEDED(rv)) &rv = container.GetFirst();
if (r.hasNavigation) <Selection c = r.navigation; <else &Selection c = r.navigation;
XYBool isDomainAxis = 0 ; XYBool isDomainAxis = &0 ;
if (r) <Collection c = r.getAnnotations(); &else &if (r) <fprintf(stderr, "%s: %sn", this, r.get(), r.get());
/* * Set the data of the map to the axis. */ int retVal; for (i = 0; i <c; i++) int retVal = r.getIndex(i);
if (Range) Collection c = r.getAnnotations(); &else &SetRanges(&c);
if (r) Collection c = r.getAnnotations(); <else if (r) <fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if ((r!= r) && (r.getAnnotations()!= 0)) &Collection c = r.getAnnotations(); &else <nsAutoString data[r.get()]; if (data[r.get()]) &if (! data[r.get()]) return;
if ((r!= r) && (r.getAnnotations()!= 0)) &Collection c = r.getAnnotations(); &else nsAutoString data[r.get()]; if (data[r.get()]) <if (! data[r.get()]) return;
nsIView* currentView = null; nsCOMPtrnsISupports> isupports = null; if (mView) &nsCOMPtr<nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) &return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
nsIView* currentView = null; nsCOMPtr&nsISupports> isupports = null; if (mView) <nsCOMPtrnsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (r.getAnnotations() <0) r = r.getAnnotations();
if (null == this.annotations) <if (! (r.get())) return NS_ERROR_NULL_POINTER; <else return NS_OK;
if (r) Collection c = r.getAnnotations(); else &if (r) <fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (r.getInstance() == aResult) return 0;
XYBool isDomainAxis = &0 ; XYBool isDomainAxis = 0 ;
if (r) &Collection c = r.getAnnotations(); <else &if (r) <fprintf(stderr, "%s: %sn", this, r.get(), r.get());
<for (i = 0; i r.getAnodes; i++) r = r.getAnodes[i]; if (r) r.addAnodes(r.annotations, r.next) - 1;
&for (i = 0; i &rangeCount; i++) &if (IsInArray(&rangeList[i])) </* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (r) Collection c = r.getAnnotations(); <else <if (r) &fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (isInline) <InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) <int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; else <x1 = y1;
if (r) <Collection c = r.getAnnotations(); &else if (r) &fprintf(stderr, "%s: %sn", this, r.get(), r.get());
nsIView* currentView = null; nsCOMPtr<nsISupports> isupports = null; if (mView) &nsCOMPtr&nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) &return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (null == this.annotations) if (! (r.get())) return NS_ERROR_NULL_POINTER; <else <return NS_OK;
for (i = 0; i &rangeCount; i++) &if (IsInArray(&rangeList[i])) /* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
for (i = 0; i <r.getAnodes; i++) <r = r.getAnodes[i]; if (r) <r.addAnodes(r.annotations, r.next) - 1;
if ((r!= r) && (r.getAnnotations()!= 0)) <Collection c = r.getAnnotations(); else nsAutoString data[r.get()]; if (data[r.get()]) if (! data[r.get()]) return;
if (Range) <Collection c = r.getAnnotations(); else &SetRanges(&c);
XYBool isDomainAxis = &0 <; XYBool isDomainAxis = &0 &;
r = r.getAnnotations();
if (r) <Collection c = r.getAnnotations(); else if (r) <fprintf(stderr, "%s: %sn", this, r.get(), r.get());
XYBool isDomainAxis = &0 &; XYBool isDomainAxis = <0 <;
XYBool isDomainAxis = &0 &; XYBool isDomainAxis = &0 ;
for (i = 0; i <rangeCount; i++) &if (IsInArray(&rangeList[i])) &/* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if ((r!= r) && (r.getAnnotations()!= 0)) &Collection c = r.getAnnotations(); <else nsAutoString data[r.get()]; if (data[r.get()]) if (! data[r.get()]) return;
if (r) Collection c = r.getAnnotations(); else &if (r) fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if ((r!= r) && (r.getAnnotations()!= 0)) <Collection c = r.getAnnotations(); &else &nsAutoString data[r.get()]; if (data[r.get()]) &if (! data[r.get()]) return;
if (isInline) &InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; <else <x1 = y1;
if (!nonCanInclude) <int list = 0; for (i = 0; i &r.numChildren; i++) &if (nonCanInclude) list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (isInline) &InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) &int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; else &x1 = y1;
&for (i = 0; i r.getAnodes; i++) &r = r.getAnodes[i]; if (r) &r.addAnodes(r.annotations, r.next) - 1;
<for (i = 0; i &rangeCount; i++) if (IsInArray(&rangeList[i])) &/* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
&for (i = 0; i <rangeCount; i++) if (IsInArray(&rangeList[i])) /* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (isInline) <InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; <else &x1 = y1;
if (isInline) <InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; <else x1 = y1;
if (null == this.annotations) <if (! (r.get())) return NS_ERROR_NULL_POINTER; <else &return NS_OK;
if (r.getIndex() &0)
nsIView* currentView = null; nsCOMPtr&nsISupports> isupports = null; if (mView) <nsCOMPtr&nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (null == this.annotations) &if (! (r.get())) <return NS_ERROR_NULL_POINTER; &else return NS_OK;
if (strcmp(r.getAnnotations(), "str") == 0) <c = strcmp(r.getAnnotations(), "str"); &else <c = r.getAnnotations();
if (r.getInstance() == aResult) <return 0;
if (r.getCount() >= 0) if (! r.isRemoved()) <return;
<for (i = 0; i &r.getAnodes; i++) <r = r.getAnodes[i]; if (r) r.addAnodes(r.annotations, r.next) - 1;
<for (i = 0; i <r.getAnodes; i++) r = r.getAnodes[i]; if (r) r.addAnodes(r.annotations, r.next) - 1;
<for (i = 0; i r.getAnodes; i++) &r = r.getAnodes[i]; if (r) &r.addAnodes(r.annotations, r.next) - 1;
if (isInline) <InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) &int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; <else <x1 = y1;
if (r) <Collection c = r.getAnnotations(); &else <if (r) <fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (isInline) <InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; <else <x1 = y1;
nsIView* currentView = null; nsCOMPtr&nsISupports> isupports = null; if (mView) nsCOMPtrnsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (r) &Collection c = r.getAnnotations(); &else &if (r) &fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (r) <Collection c = r.getAnnotations(); else if (r) fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (Range) &Collection c = r.getAnnotations(); &else SetRanges(&c);
if (r) <Collection c = r.getAnnotations(); <else <if (r) <fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (r) nsRect range = r.getRangeCount(); for (; range > 0; range --) <nsRect range; range--; range = 0; <range = 0;
if (null == this.annotations) <if (! (r.get())) <return NS_ERROR_NULL_POINTER; else return NS_OK;
if (r) &nsRect range = r.getRangeCount(); for (; range > 0; range --) <nsRect range; range--; range = 0; &range = 0;
/* * Set the data of the map to the axis. */ int retVal; for (i = 0; i &c; i++) <int retVal = r.getIndex(i);
if (!nonCanInclude) int list = 0; for (i = 0; i <r.numChildren; i++) &if (nonCanInclude) <list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (null == this.annotations) &if (! (r.get())) <return NS_ERROR_NULL_POINTER; <else return NS_OK;
<for (i = 0; i &rangeCount; i++) <if (IsInArray(&rangeList[i])) /* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
XYBool isDomainAxis = <0 &; XYBool isDomainAxis = 0 <;
nsIView* currentView = null; nsCOMPtr<nsISupports> isupports = null; if (mView) &nsCOMPtrnsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) <return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (isInline) &InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; <else x1 = y1;
if (r) <Collection c = r.getAnnotations(); &else <if (r) &fprintf(stderr, "%s: %sn", this, r.get(), r.get());
&for (i = 0; i <rangeCount; i++) if (IsInArray(&rangeList[i])) &/* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
XYBool isDomainAxis = 0 &; XYBool isDomainAxis = <0 &;
if (r.getAnnotations() == 0) &return;
if (Range) <Collection c = r.getAnnotations(); <else SetRanges(&c);
XYBool isDomainAxis = 0 <; XYBool isDomainAxis = <0 &;
if (null == this.annotations) &if (! (r.get())) &return NS_ERROR_NULL_POINTER; &else return NS_OK;
if (!nonCanInclude) <int list = 0; for (i = 0; i &r.numChildren; i++) &if (nonCanInclude) &list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
nsIView* currentView = null; nsCOMPtr<nsISupports> isupports = null; if (mView) nsCOMPtr&nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) &return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (strcmp(r.getAnnotations(), "str") == 0) &c = strcmp(r.getAnnotations(), "str"); <else <c = r.getAnnotations();
if (null == this.annotations) <if (! (r.get())) <return NS_ERROR_NULL_POINTER; <else &return NS_OK;
if (r.hasNavigation) <Selection c = r.navigation; <else Selection c = r.navigation;
if (r.hasNavigation) <Selection c = r.navigation; &else &Selection c = r.navigation;
<for (i = 0; i <rangeCount; i++) if (IsInArray(&rangeList[i])) /* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (null == this.annotations) if (! (r.get())) <return NS_ERROR_NULL_POINTER; <else return NS_OK;
nsIView* currentView = null; nsCOMPtrnsISupports> isupports = null; if (mView) nsCOMPtr<nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if ((r!= r) && (r.getAnnotations()!= 0)) &Collection c = r.getAnnotations(); <else <nsAutoString data[r.get()]; if (data[r.get()]) if (! data[r.get()]) return;
if (r) &Collection c = r.getAnnotations(); else if (r) &fprintf(stderr, "%s: %sn", this, r.get(), r.get());
Collection c = r.getAnnotations();
if (isInline) &InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; else &x1 = y1;
<for (i = 0; i r.getAnodes; i++) <r = r.getAnodes[i]; if (r) &r.addAnodes(r.annotations, r.next) - 1;
nsIView* currentView = null; nsCOMPtrnsISupports> isupports = null; if (mView) &nsCOMPtrnsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) &return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (isDomainAxis) <Collection c = r.getAnnotations(); <else
if (null == this.annotations) if (! (r.get())) <return NS_ERROR_NULL_POINTER; &else <return NS_OK;
for (i = 0; i <rangeCount; i++) &if (IsInArray(&rangeList[i])) </* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (r) <nsRect range = r.getRangeCount(); for (; range > 0; range --) &nsRect range; range--; range = 0; &range = 0;
if (isDomainAxis) Collection c = r.getAnnotations(); <else
if ((r!= r) && (r.getAnnotations()!= 0)) &Collection c = r.getAnnotations(); else nsAutoString data[r.get()]; if (data[r.get()]) if (! data[r.get()]) return;
c = r.getAnnotations();
if (r) &Collection c = r.getAnnotations(); &else &if (r) <fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (null == this.annotations) if (! (r.get())) return NS_ERROR_NULL_POINTER; &else &return NS_OK;
if (!nonCanInclude) <int list = 0; for (i = 0; i &r.numChildren; i++) <if (nonCanInclude) <list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (!nonCanInclude) &int list = 0; for (i = 0; i r.numChildren; i++) <if (nonCanInclude) <list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
<for (i = 0; i rangeCount; i++) &if (IsInArray(&rangeList[i])) &/* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (r) nsRect range = r.getRangeCount(); for (; range > 0; range --) nsRect range; range--; range = 0; &range = 0;
&for (i = 0; i <r.getAnodes; i++) <r = r.getAnodes[i]; if (r) &r.addAnodes(r.annotations, r.next) - 1;
if (null == this.annotations) if (! (r.get())) <return NS_ERROR_NULL_POINTER; else <return NS_OK;
if (Range) c = r.getAnnotations(); else &c = r.getAnnotations();
if (null == this.annotations) <if (! (r.get())) <return NS_ERROR_NULL_POINTER; &else return NS_OK;
if (isDomainAxis) <Collection c = r.getAnnotations(); &else
&for (i = 0; i &r.getAnodes; i++) &r = r.getAnodes[i]; if (r) r.addAnodes(r.annotations, r.next) - 1;
if (null == this.annotations) <if (! (r.get())) <return NS_ERROR_NULL_POINTER; <else return NS_OK;
if (!nonCanInclude) int list = 0; for (i = 0; i r.numChildren; i++) if (nonCanInclude) &list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
XYBool isDomainAxis = <0 <; XYBool isDomainAxis = <0 &;
if ((r!= r) && (r.getAnnotations()!= 0)) &Collection c = r.getAnnotations(); <else nsAutoString data[r.get()]; if (data[r.get()]) <if (! data[r.get()]) return;
<for (i = 0; i <rangeCount; i++) &if (IsInArray(&rangeList[i])) /* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (r) <nsRect range = r.getRangeCount(); for (; range > 0; range --) nsRect range; range--; range = 0; <range = 0;
<for (i = 0; i <rangeCount; i++) &if (IsInArray(&rangeList[i])) &/* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (r) <Collection c = r.getAnnotations(); &else if (r) fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (isInline) InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; &else x1 = y1;
<for (i = 0; i rangeCount; i++) <if (IsInArray(&rangeList[i])) </* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if ((r!= r) && (r.getAnnotations()!= 0)) Collection c = r.getAnnotations(); &else nsAutoString data[r.get()]; if (data[r.get()]) if (! data[r.get()]) return;
if (Range) <c = r.getAnnotations(); <else &c = r.getAnnotations();
if (null == this.annotations) if (! (r.get())) &return NS_ERROR_NULL_POINTER; <else return NS_OK;
for (i = 0; i <rangeCount; i++) <if (IsInArray(&rangeList[i])) &/* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
<for (i = 0; i r.getAnodes; i++) &r = r.getAnodes[i]; if (r) <r.addAnodes(r.annotations, r.next) - 1;
if (isInline) InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) &int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; else <x1 = y1;
if (isInline) <InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) &int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; &else <x1 = y1;
if (Range) &c = r.getAnnotations(); else <c = r.getAnnotations();
if ((r!= r) && (r.getAnnotations()!= 0)) &Collection c = r.getAnnotations(); <else &nsAutoString data[r.get()]; if (data[r.get()]) &if (! data[r.get()]) return;
nsIView* currentView = null; nsCOMPtr&nsISupports> isupports = null; if (mView) <nsCOMPtr<nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) <return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (isInline) &InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) &int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; &else <x1 = y1;
if (!nonCanInclude) int list = 0; for (i = 0; i r.numChildren; i++) &if (nonCanInclude) &list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
XYBool isDomainAxis = 0 <; XYBool isDomainAxis = <0 <;
if ((r!= r) && (r.getAnnotations()!= 0)) <Collection c = r.getAnnotations(); &else <nsAutoString data[r.get()]; if (data[r.get()]) <if (! data[r.get()]) return;
NS_PRECONDITION(r, "bad range"); if (needDataRange) &*this = r.getDataRange();
for (i = 0; i &rangeCount; i++) <if (IsInArray(&rangeList[i])) </* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
&for (i = 0; i r.getAnodes; i++) r = r.getAnodes[i]; if (r) <r.addAnodes(r.annotations, r.next) - 1;
&for (i = 0; i <r.getAnodes; i++) r = r.getAnodes[i]; if (r) <r.addAnodes(r.annotations, r.next) - 1;
if (!nonCanInclude) <int list = 0; for (i = 0; i &r.numChildren; i++) if (nonCanInclude) <list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (!nonCanInclude) &int list = 0; for (i = 0; i r.numChildren; i++) if (nonCanInclude) <list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (r) Collection c = r.getAnnotations(); &else <if (r) &fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (!nonCanInclude) &int list = 0; for (i = 0; i r.numChildren; i++) &if (nonCanInclude) list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (!nonCanInclude) &int list = 0; for (i = 0; i r.numChildren; i++) &if (nonCanInclude) &list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
<for (i = 0; i rangeCount; i++) &if (IsInArray(&rangeList[i])) </* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if ((r!= r) && (r.getAnnotations()!= 0)) &Collection c = r.getAnnotations(); <else nsAutoString data[r.get()]; if (data[r.get()]) &if (! data[r.get()]) return;
if ((r!= r) && (r.getAnnotations()!= 0)) Collection c = r.getAnnotations(); else nsAutoString data[r.get()]; if (data[r.get()]) <if (! data[r.get()]) return;
if (isInline) <InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) <int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; &else x1 = y1;
Collection&XYZ> c = r.getAnnotations();
if (!nonCanInclude) int list = 0; for (i = 0; i &r.numChildren; i++) <if (nonCanInclude) &list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (isContainer) <char* c; r = r.getAnnotations();
if (!nonCanInclude) <int list = 0; for (i = 0; i r.numChildren; i++) &if (nonCanInclude) <list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (r) <Collection c = r.getAnnotations(); &else <if (r) fprintf(stderr, "%s: %sn", this, r.get(), r.get());
<for (i = 0; i rangeCount; i++) <if (IsInArray(&rangeList[i])) /* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
&for (i = 0; i &r.getAnodes; i++) &r = r.getAnodes[i]; if (r) <r.addAnodes(r.annotations, r.next) - 1;
if (null == this.annotations) if (! (r.get())) <return NS_ERROR_NULL_POINTER; else &return NS_OK;
if (null == this.annotations) <if (! (r.get())) <return NS_ERROR_NULL_POINTER; &else &return NS_OK;
XYBool isDomainAxis = <0 <; XYBool isDomainAxis = 0 ;
if (isInline) <InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; else <x1 = y1;
if (r) <Collection c = r.getAnnotations(); <else if (r) <fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if ((r!= r) && (r.getAnnotations()!= 0)) Collection c = r.getAnnotations(); <else <nsAutoString data[r.get()]; if (data[r.get()]) <if (! data[r.get()]) return;
for (i = 0; i rangeCount; i++) if (IsInArray(&rangeList[i])) </* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (isInline) &InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) <int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; else &x1 = y1;
if ((r!= r) && (r.getAnnotations()!= 0)) Collection c = r.getAnnotations(); <else <nsAutoString data[r.get()]; if (data[r.get()]) if (! data[r.get()]) return;
if (r) Collection c = r.getAnnotations(); &else <if (r) <fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (r) <Collection c = r.getAnnotations(); else &if (r) &fprintf(stderr, "%s: %sn", this, r.get(), r.get());
nsIView* currentView = null; nsCOMPtr<nsISupports> isupports = null; if (mView) <nsCOMPtr&nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) <return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (Range) <Collection c = r.getAnnotations(); else SetRanges(&c);
if ((r!= r) && (r.getAnnotations()!= 0)) Collection c = r.getAnnotations(); else <nsAutoString data[r.get()]; if (data[r.get()]) if (! data[r.get()]) return;
if (r) &Collection c = r.getAnnotations(); else &if (r) &fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (strcmp(r.getAnnotations(), "str") == 0) <c = strcmp(r.getAnnotations(), "str"); &else &c = r.getAnnotations();
if (Range) <c = r.getAnnotations(); &else &c = r.getAnnotations();
nsIView* currentView = null; nsCOMPtrnsISupports> isupports = null; if (mView) &nsCOMPtr&nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) <return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (Range) c = r.getAnnotations(); <else <c = r.getAnnotations();
if (r) r = r.getAnnotations();
<for (i = 0; i <r.getAnodes; i++) &r = r.getAnodes[i]; if (r) &r.addAnodes(r.annotations, r.next) - 1;
if (null == this.annotations) &if (! (r.get())) <return NS_ERROR_NULL_POINTER; else &return NS_OK;
if (r.hasNavigation) <Selection c = r.navigation; else <Selection c = r.navigation;
&for (i = 0; i rangeCount; i++) <if (IsInArray(&rangeList[i])) /* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
for (i = 0; i rangeCount; i++) <if (IsInArray(&rangeList[i])) &/* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (isInline) &InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) &int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; else <x1 = y1;
nsIView* currentView = null; nsCOMPtr<nsISupports> isupports = null; if (mView) &nsCOMPtr<nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (r.hasNavigation) Selection c = r.navigation; else &Selection c = r.navigation;
if (r) Collection c = r.getAnnotations(); <else if (r) &fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (r.getAnnotations() == 0) return false;
if (!nonCanInclude) <int list = 0; for (i = 0; i &r.numChildren; i++) &if (nonCanInclude) <list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (r.hasNavigation) Selection c = r.navigation; else Selection c = r.navigation;
if (Range) &Collection c = r.getAnnotations(); <else &SetRanges(&c);
if (r) <nsRect range = r.getRangeCount(); for (; range > 0; range --) nsRect range; range--; range = 0; range = 0;
if ((r!= r) && (r.getAnnotations()!= 0)) Collection c = r.getAnnotations(); else nsAutoString data[r.get()]; if (data[r.get()]) &if (! data[r.get()]) return;
if (r.getInstance() == aResult) &return 0;
if (isInline) InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) &int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; &else x1 = y1;
if (Range) &c = r.getAnnotations(); <else c = r.getAnnotations();
nsIView* currentView = null; nsCOMPtrnsISupports> isupports = null; if (mView) <nsCOMPtr&nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) <return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
NS_PRECONDITION(r, "bad range"); if (needDataRange) <*this = r.getDataRange();
if (!nonCanInclude) &int list = 0; for (i = 0; i r.numChildren; i++) if (nonCanInclude) &list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
for (i = 0; i <rangeCount; i++) if (IsInArray(&rangeList[i])) </* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if ((r!= r) && (r.getAnnotations()!= 0)) Collection c = r.getAnnotations(); <else nsAutoString data[r.get()]; if (data[r.get()]) &if (! data[r.get()]) return;
nsIView* currentView = null; nsCOMPtr&nsISupports> isupports = null; if (mView) <nsCOMPtr<nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) &return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
for (i = 0; i <rangeCount; i++) <if (IsInArray(&rangeList[i])) /* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (null == this.annotations) if (! (r.get())) return NS_ERROR_NULL_POINTER; &else <return NS_OK;
XYBool isDomainAxis = &0 &; XYBool isDomainAxis = 0 &;
if (r.getCount() >= 0) <if (! r.isRemoved()) return;
XYBool isDomainAxis = <0 <; XYBool isDomainAxis = &0 &;
for (i = 0; i r.getAnodes; i++) &r = r.getAnodes[i]; if (r) <r.addAnodes(r.annotations, r.next) - 1;
/* * Set the data of the map to the axis. */ int retVal; for (i = 0; i <c; i++) <int retVal = r.getIndex(i);
if (r) &Collection c = r.getAnnotations(); &else <if (r) &fprintf(stderr, "%s: %sn", this, r.get(), r.get());
nsIView* currentView = null; nsCOMPtr&nsISupports> isupports = null; if (mView) nsCOMPtr<nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) <return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (isInline) InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) <int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; else &x1 = y1;
for (i = 0; i &rangeCount; i++) &if (IsInArray(&rangeList[i])) </* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (null == this.annotations) <if (! (r.get())) &return NS_ERROR_NULL_POINTER; else &return NS_OK;
if (null == this.annotations) <if (! (r.get())) return NS_ERROR_NULL_POINTER; &else return NS_OK;
if (isInline) InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) &int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; <else <x1 = y1;
if (!nonCanInclude) <int list = 0; for (i = 0; i &r.numChildren; i++) <if (nonCanInclude) &list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
nsIView* currentView = null; nsCOMPtr<nsISupports> isupports = null; if (mView) <nsCOMPtrnsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (null == this.annotations) &if (! (r.get())) &return NS_ERROR_NULL_POINTER; else return NS_OK;
if (isInline) <InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) &int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; &else &x1 = y1;
nsIView* currentView = null; nsCOMPtrnsISupports> isupports = null; if (mView) <nsCOMPtr&nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
&for (i = 0; i <rangeCount; i++) <if (IsInArray(&rangeList[i])) </* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (null == this.annotations) &if (! (r.get())) <return NS_ERROR_NULL_POINTER; &else <return NS_OK;
&for (i = 0; i rangeCount; i++) if (IsInArray(&rangeList[i])) </* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (isInline) &InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) &int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; <else x1 = y1;
if ((r!= r) && (r.getAnnotations()!= 0)) <Collection c = r.getAnnotations(); <else <nsAutoString data[r.get()]; if (data[r.get()]) if (! data[r.get()]) return;
XYBool isDomainAxis = <0 ; XYBool isDomainAxis = <0 ;
if (r)
for (i = 0; i &rangeCount; i++) if (IsInArray(&rangeList[i])) </* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (isInline) InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; <else <x1 = y1;
if (r) <Collection c = r.getAnnotations(); <else if (r) fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if ((r!= r) && (r.getAnnotations()!= 0)) <Collection c = r.getAnnotations(); <else <nsAutoString data[r.get()]; if (data[r.get()]) <if (! data[r.get()]) return;
<for (i = 0; i rangeCount; i++) if (IsInArray(&rangeList[i])) </* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (Range) c = r.getAnnotations(); &else <c = r.getAnnotations();
if (null == this.annotations) if (! (r.get())) &return NS_ERROR_NULL_POINTER; else &return NS_OK;
&for (i = 0; i &r.getAnodes; i++) <r = r.getAnodes[i]; if (r) <r.addAnodes(r.annotations, r.next) - 1;
if ((r!= r) && (r.getAnnotations()!= 0)) &Collection c = r.getAnnotations(); else nsAutoString data[r.get()]; if (data[r.get()]) &if (! data[r.get()]) return;
XYBool isDomainAxis = 0 &; XYBool isDomainAxis = 0 ;
XYBool isDomainAxis = 0 ; XYBool isDomainAxis = 0 &;
nsIView* currentView = null; nsCOMPtr&nsISupports> isupports = null; if (mView) &nsCOMPtr<nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) <return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (!nonCanInclude) int list = 0; for (i = 0; i r.numChildren; i++) <if (nonCanInclude) list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (null == this.annotations) &if (! (r.get())) <return NS_ERROR_NULL_POINTER; <else &return NS_OK;
if (isInline) &InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) <int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; &else x1 = y1;
/* * Set the data of the map to the axis. */ int retVal; for (i = 0; i &c; i++) &int retVal = r.getIndex(i);
if (r.getAnnotations() &0) &r = r.getAnnotations();
if (strcmp(r.getAnnotations(), "str") == 0) <c = strcmp(r.getAnnotations(), "str"); &else c = r.getAnnotations();
if ((r!= r) && (r.getAnnotations()!= 0)) &Collection c = r.getAnnotations(); &else <nsAutoString data[r.get()]; if (data[r.get()]) <if (! data[r.get()]) return;
if (r.hasNavigation) &Selection c = r.navigation; <else Selection c = r.navigation;
if ((r!= r) && (r.getAnnotations()!= 0)) <Collection c = r.getAnnotations(); <else &nsAutoString data[r.get()]; if (data[r.get()]) if (! data[r.get()]) return;
if (isInline) <InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) <int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; else x1 = y1;
XYBool isDomainAxis = 0 &; XYBool isDomainAxis = 0 <;
if (!nonCanInclude) int list = 0; for (i = 0; i &r.numChildren; i++) if (nonCanInclude) &list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
XYBool isDomainAxis = 0 ; XYBool isDomainAxis = 0 <;
if (null == this.annotations) &if (! (r.get())) <return NS_ERROR_NULL_POINTER; else return NS_OK;
nsIView* currentView = null; nsCOMPtrnsISupports> isupports = null; if (mView) <nsCOMPtr&nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) &return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (!r.getAnnotations()) <return;
/* * Set the data of the map to the axis. */ int retVal; for (i = 0; i c; i++) <int retVal = r.getIndex(i);
if (isInline) <InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) &int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; else &x1 = y1;
if ((r!= r) && (r.getAnnotations()!= 0)) Collection c = r.getAnnotations(); &else <nsAutoString data[r.get()]; if (data[r.get()]) &if (! data[r.get()]) return;
if (r) <Collection c = r.getAnnotations(); &else if (r) <fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (null == this.annotations) &if (! (r.get())) return NS_ERROR_NULL_POINTER; &else <return NS_OK;
nsIView* currentView = null; nsCOMPtr<nsISupports> isupports = null; if (mView) &nsCOMPtrnsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
nsIView* currentView = null; nsCOMPtrnsISupports> isupports = null; if (mView) <nsCOMPtr<nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (isInline) <InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) &int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; &else x1 = y1;
for (i = 0; i r.getAnodes; i++) <r = r.getAnodes[i]; if (r) r.addAnodes(r.annotations, r.next) - 1;
if (r) Collection c = r.getAnnotations(); <else &if (r) fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (Range) c = r.getAnnotations(); &else c = r.getAnnotations();
for (i = 0; i rangeCount; i++) &if (IsInArray(&rangeList[i])) &/* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
for (i = 0; i r.getAnodes; i++) r = r.getAnodes[i]; if (r) <r.addAnodes(r.annotations, r.next) - 1;
nsresult rv; nsCOMPtrnsISupports> container = do_QueryInterface(r); if (NS_SUCCEEDED(rv)) <rv = container.GetFirst();
XYBool isDomainAxis = <0 &; XYBool isDomainAxis = &0 <;
XYBool isDomainAxis = 0 ; XYBool isDomainAxis = &0 &;
if (isInline) <InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; &else x1 = y1;
if ((r!= r) && (r.getAnnotations()!= 0)) <Collection c = r.getAnnotations(); else <nsAutoString data[r.get()]; if (data[r.get()]) if (! data[r.get()]) return;
nsIView* currentView = null; nsCOMPtr&nsISupports> isupports = null; if (mView) <nsCOMPtr&nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) <return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (Range) c = r.getAnnotations(); <else &c = r.getAnnotations();
if (isInline) <InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) <int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; <else <x1 = y1;
if (!r.getAnnotations()) &return;
if (null == this.annotations) &if (! (r.get())) <return NS_ERROR_NULL_POINTER; else <return NS_OK;
if (Range) &c = r.getAnnotations(); else c = r.getAnnotations();
if (!nonCanInclude) int list = 0; for (i = 0; i <r.numChildren; i++) if (nonCanInclude) list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (isInline) <InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) <int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; &else <x1 = y1;
if (null == this.annotations) &if (! (r.get())) return NS_ERROR_NULL_POINTER; else return NS_OK;
&for (i = 0; i r.getAnodes; i++) r = r.getAnodes[i]; if (r) r.addAnodes(r.annotations, r.next) - 1;
if (!r.getAnnotations()) return;
&for (i = 0; i rangeCount; i++) <if (IsInArray(&rangeList[i])) </* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (strcmp(r.getAnnotations(), "str") == 0) c = strcmp(r.getAnnotations(), "str"); <else c = r.getAnnotations();
nsIView* currentView = null; nsCOMPtr&nsISupports> isupports = null; if (mView) nsCOMPtr&nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (!nonCanInclude) <int list = 0; for (i = 0; i &r.numChildren; i++) if (nonCanInclude) &list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (r.hasNavigation) &Selection c = r.navigation; else Selection c = r.navigation;
XYBool isDomainAxis = <0 ; XYBool isDomainAxis = 0 ;
if (r) Collection c = r.getAnnotations(); <else &if (r) <fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if ((r!= r) && (r.getAnnotations()!= 0)) Collection c = r.getAnnotations(); else &nsAutoString data[r.get()]; if (data[r.get()]) <if (! data[r.get()]) return;
if (null == this.annotations) <if (! (r.get())) <return NS_ERROR_NULL_POINTER; &else <return NS_OK;
&for (i = 0; i rangeCount; i++) &if (IsInArray(&rangeList[i])) </* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (isInline) <InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; else &x1 = y1;
if (r) &Collection c = r.getAnnotations(); else &if (r) fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (!nonCanInclude) <int list = 0; for (i = 0; i r.numChildren; i++) &if (nonCanInclude) list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (null == this.annotations) &if (! (r.get())) &return NS_ERROR_NULL_POINTER; <else <return NS_OK;
if (null == this.annotations) <if (! (r.get())) return NS_ERROR_NULL_POINTER; else &return NS_OK;
if (!nonCanInclude) int list = 0; for (i = 0; i &r.numChildren; i++) <if (nonCanInclude) <list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (r) <nsRect range = r.getRangeCount(); for (; range > 0; range --) &nsRect range; range--; range = 0; range = 0;
if (r) <r = r.getAnnotations();
if (r) &Collection c = r.getAnnotations(); <else &if (r) &fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (!nonCanInclude) int list = 0; for (i = 0; i r.numChildren; i++) &if (nonCanInclude) <list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if ((r!= r) && (r.getAnnotations()!= 0)) <Collection c = r.getAnnotations(); else nsAutoString data[r.get()]; if (data[r.get()]) &if (! data[r.get()]) return;
if (isDomainAxis) Collection c = r.getAnnotations(); else
if (isInline) InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) <int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; &else <x1 = y1;
nsresult rv; nsCOMPtr<nsISupports> container = do_QueryInterface(r); if (NS_SUCCEEDED(rv)) &rv = container.GetFirst();
for (i = 0; i &r.getAnodes; i++) &r = r.getAnodes[i]; if (r) <r.addAnodes(r.annotations, r.next) - 1;
<for (i = 0; i r.getAnodes; i++) r = r.getAnodes[i]; if (r) &r.addAnodes(r.annotations, r.next) - 1;
nsIView* currentView = null; nsCOMPtr&nsISupports> isupports = null; if (mView) nsCOMPtrnsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) <return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (!nonCanInclude) &int list = 0; for (i = 0; i &r.numChildren; i++) <if (nonCanInclude) &list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (isInline) InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; <else &x1 = y1;
if (r.hasNavigation) &Selection c = r.navigation; &else Selection c = r.navigation;
XYBool isDomainAxis = <0 <; XYBool isDomainAxis = &0 <;
if (strcmp(r.getAnnotations(), "str") == 0) <c = strcmp(r.getAnnotations(), "str"); <else <c = r.getAnnotations();
XYBool isDomainAxis = <0 ; XYBool isDomainAxis = &0 <;
if (!nonCanInclude) <int list = 0; for (i = 0; i <r.numChildren; i++) <if (nonCanInclude) <list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (isInline) InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) <int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; <else <x1 = y1;
nsIView* currentView = null; nsCOMPtrnsISupports> isupports = null; if (mView) &nsCOMPtrnsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) <return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (r) <Collection c = r.getAnnotations(); else if (r) &fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (r.getChildren() == null) &nsAutoString c;
<for (i = 0; i <r.getAnodes; i++) r = r.getAnodes[i]; if (r) &r.addAnodes(r.annotations, r.next) - 1;
if (r) &nsRect range = r.getRangeCount(); for (; range > 0; range --) &nsRect range; range--; range = 0; &range = 0;
if (r) &Collection c = r.getAnnotations();
&for (i = 0; i <r.getAnodes; i++) &r = r.getAnodes[i]; if (r) r.addAnodes(r.annotations, r.next) - 1;
for (i = 0; i &r.getAnodes; i++) r = r.getAnodes[i]; if (r) &r.addAnodes(r.annotations, r.next) - 1;
XYBool isDomainAxis = 0 <; XYBool isDomainAxis = 0 &;
nsIView* currentView = null; nsCOMPtr<nsISupports> isupports = null; if (mView) nsCOMPtr<nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) &return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (r) &Collection c = r.getAnnotations(); <else <if (r) fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if ((r!= r) && (r.getAnnotations()!= 0)) &Collection c = r.getAnnotations(); <else &nsAutoString data[r.get()]; if (data[r.get()]) if (! data[r.get()]) return;
if (r) <Collection c = r.getAnnotations(); <else &if (r) &fprintf(stderr, "%s: %sn", this, r.get(), r.get());
<for (i = 0; i rangeCount; i++) if (IsInArray(&rangeList[i])) &/* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (!nonCanInclude) <int list = 0; for (i = 0; i &r.numChildren; i++) if (nonCanInclude) list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (isInline) &InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) <int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; <else &x1 = y1;
XYBool isDomainAxis = &0 ; XYBool isDomainAxis = <0 <;
nsIView* currentView = null; nsCOMPtr<nsISupports> isupports = null; if (mView) &nsCOMPtrnsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) &return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (r) &nsRect range = r.getRangeCount(); for (; range > 0; range --) nsRect range; range--; range = 0; range = 0;
for (i = 0; i <rangeCount; i++) &if (IsInArray(&rangeList[i])) /* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (isInline) <InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; &else &x1 = y1;
if (strcmp(r.getAnnotations(), "str") == 0) c = strcmp(r.getAnnotations(), "str"); <else <c = r.getAnnotations();
nsIView* currentView = null; nsCOMPtr<nsISupports> isupports = null; if (mView) nsCOMPtr<nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) <return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
&for (i = 0; i &r.getAnodes; i++) r = r.getAnodes[i]; if (r) r.addAnodes(r.annotations, r.next) - 1;
if (isInline) InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) &int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; <else x1 = y1;
if ((r!= r) && (r.getAnnotations()!= 0)) &Collection c = r.getAnnotations(); &else nsAutoString data[r.get()]; if (data[r.get()]) &if (! data[r.get()]) return;
nsIView* currentView = null; nsCOMPtr&nsISupports> isupports = null; if (mView) &nsCOMPtr<nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (r) <Collection c = r.getAnnotations(); else &if (r) <fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (null == this.annotations) if (! (r.get())) &return NS_ERROR_NULL_POINTER; &else <return NS_OK;
if (isInline) InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) <int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; else <x1 = y1;
if (strcmp(r.getAnnotations(), "str") == 0) &c = strcmp(r.getAnnotations(), "str"); else &c = r.getAnnotations();
if (isInline) <InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) &int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; <else x1 = y1;
if (!nonCanInclude) <int list = 0; for (i = 0; i r.numChildren; i++) if (nonCanInclude) list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
&for (i = 0; i rangeCount; i++) if (IsInArray(&rangeList[i])) &/* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (r.getIndex() <0)
if (r) Collection c = r.getAnnotations(); &else if (r) &fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if ((r!= r) && (r.getAnnotations()!= 0)) <Collection c = r.getAnnotations(); else &nsAutoString data[r.get()]; if (data[r.get()]) <if (! data[r.get()]) return;
if ((r!= r) && (r.getAnnotations()!= 0)) <Collection c = r.getAnnotations(); <else <nsAutoString data[r.get()]; if (data[r.get()]) &if (! data[r.get()]) return;
if (isInline) InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; &else &x1 = y1;
nsIView* currentView = null; nsCOMPtr&nsISupports> isupports = null; if (mView) <nsCOMPtrnsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) <return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if ((r!= r) && (r.getAnnotations()!= 0)) <Collection c = r.getAnnotations(); else nsAutoString data[r.get()]; if (data[r.get()]) <if (! data[r.get()]) return;
if (r) &Collection c = r.getAnnotations(); else <if (r) <fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if ((r!= r) && (r.getAnnotations()!= 0)) &Collection c = r.getAnnotations(); else <nsAutoString data[r.get()]; if (data[r.get()]) &if (! data[r.get()]) return;
nsresult rv; nsCOMPtr<nsISupports> container = do_QueryInterface(r); if (NS_SUCCEEDED(rv)) rv = container.GetFirst();
XYBool isDomainAxis = &0 ; XYBool isDomainAxis = &0 &;
if (!nonCanInclude) int list = 0; for (i = 0; i r.numChildren; i++) if (nonCanInclude) <list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
XYBool isDomainAxis = <0 &; XYBool isDomainAxis = &0 ;
&for (i = 0; i rangeCount; i++) &if (IsInArray(&rangeList[i])) /* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (r) Collection c = r.getAnnotations(); &else &if (r) &fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (! r.getAnnotations()) &Collection c = r.getAnnotations();
&for (i = 0; i &rangeCount; i++) <if (IsInArray(&rangeList[i])) </* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
Collection<XYZ> c = r.getAnnotations();
XYBool isDomainAxis = 0 <; XYBool isDomainAxis = 0 ;
nsIView* currentView = null; nsCOMPtrnsISupports> isupports = null; if (mView) nsCOMPtr&nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) &return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (r) <Collection c = r.getAnnotations(); <else &if (r) <fprintf(stderr, "%s: %sn", this, r.get(), r.get());
nsIView* currentView = null; nsCOMPtr<nsISupports> isupports = null; if (mView) <nsCOMPtr&nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) &return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
for (i = 0; i rangeCount; i++) &if (IsInArray(&rangeList[i])) </* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (!nonCanInclude) int list = 0; for (i = 0; i &r.numChildren; i++) &if (nonCanInclude) &list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (Range) &c = r.getAnnotations(); &else &c = r.getAnnotations();
if (null == this.annotations) &if (! (r.get())) &return NS_ERROR_NULL_POINTER; &else <return NS_OK;
for (i = 0; i rangeCount; i++) if (IsInArray(&rangeList[i])) /* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if ((r!= r) && (r.getAnnotations()!= 0)) <Collection c = r.getAnnotations(); else &nsAutoString data[r.get()]; if (data[r.get()]) &if (! data[r.get()]) return;
if (Range) <Collection c = r.getAnnotations(); else <SetRanges(&c);
if ((r!= r) && (r.getAnnotations()!= 0)) &Collection c = r.getAnnotations(); &else nsAutoString data[r.get()]; if (data[r.get()]) if (! data[r.get()]) return;
&for (i = 0; i <r.getAnodes; i++) r = r.getAnodes[i]; if (r) &r.addAnodes(r.annotations, r.next) - 1;
if (strcmp(r.getAnnotations(), "str") == 0) c = strcmp(r.getAnnotations(), "str"); else &c = r.getAnnotations();
<for (i = 0; i &r.getAnodes; i++) &r = r.getAnodes[i]; if (r) <r.addAnodes(r.annotations, r.next) - 1;
if (strcmp(r.getAnnotations(), "str") == 0) &c = strcmp(r.getAnnotations(), "str"); &else <c = r.getAnnotations();
if (null == this.annotations) if (! (r.get())) &return NS_ERROR_NULL_POINTER; else <return NS_OK;
if (isInline) &InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; &else x1 = y1;
if ((r!= r) && (r.getAnnotations()!= 0)) Collection c = r.getAnnotations(); &else nsAutoString data[r.get()]; if (data[r.get()]) &if (! data[r.get()]) return;
if ((r!= r) && (r.getAnnotations()!= 0)) &Collection c = r.getAnnotations(); &else &nsAutoString data[r.get()]; if (data[r.get()]) &if (! data[r.get()]) return;
if (r) &Collection c = r.getAnnotations(); else &if (r) <fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (null == this.annotations) <if (! (r.get())) return NS_ERROR_NULL_POINTER; &else &return NS_OK;
XYBool isDomainAxis = &0 <; XYBool isDomainAxis = <0 &;
if (null == this.annotations) <if (! (r.get())) return NS_ERROR_NULL_POINTER; <else <return NS_OK;
if (!nonCanInclude) &int list = 0; for (i = 0; i <r.numChildren; i++) <if (nonCanInclude) <list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
nsIView* currentView = null; nsCOMPtr&nsISupports> isupports = null; if (mView) &nsCOMPtr&nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) &return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (isInline) <InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) &int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; else x1 = y1;
if ((r!= r) && (r.getAnnotations()!= 0)) Collection c = r.getAnnotations(); <else <nsAutoString data[r.get()]; if (data[r.get()]) &if (! data[r.get()]) return;
if (isContainer) &char* c; r = r.getAnnotations();
if (!nonCanInclude) <int list = 0; for (i = 0; i r.numChildren; i++) <if (nonCanInclude) <list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (isInline) InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; &else <x1 = y1;
if (r) &r = r.getAnnotations();
if (!nonCanInclude) int list = 0; for (i = 0; i &r.numChildren; i++) &if (nonCanInclude) <list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (Range) <Collection c = r.getAnnotations(); <else &SetRanges(&c);
if (r.hasNavigation) Selection c = r.navigation; <else <Selection c = r.navigation;
if ((r!= r) && (r.getAnnotations()!= 0)) <Collection c = r.getAnnotations(); else <nsAutoString data[r.get()]; if (data[r.get()]) &if (! data[r.get()]) return;
nsresult rv; nsCOMPtrnsISupports> container = do_QueryInterface(r); if (NS_SUCCEEDED(rv)) rv = container.GetFirst();
if (r) <nsRect range = r.getRangeCount(); for (; range > 0; range --) <nsRect range; range--; range = 0; <range = 0;
if (isInline) InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) &int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; else &x1 = y1;
if (r.getAnnotations() 0) <r = r.getAnnotations();
nsIView* currentView = null; nsCOMPtr<nsISupports> isupports = null; if (mView) nsCOMPtrnsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) &return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (strcmp(r.getAnnotations(), "str") == 0) &c = strcmp(r.getAnnotations(), "str"); <else c = r.getAnnotations();
&for (i = 0; i <r.getAnodes; i++) &r = r.getAnodes[i]; if (r) <r.addAnodes(r.annotations, r.next) - 1;
for (i = 0; i <rangeCount; i++) <if (IsInArray(&rangeList[i])) </* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (null == this.annotations) &if (! (r.get())) &return NS_ERROR_NULL_POINTER; else &return NS_OK;
if (r) &Collection c = r.getAnnotations(); &else <if (r) <fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (Range) <c = r.getAnnotations(); <else <c = r.getAnnotations();
if (r.getCount() >= 0) &if (! r.isRemoved()) &return;
if (Range) &Collection c = r.getAnnotations(); <else <SetRanges(&c);
if (!nonCanInclude) &int list = 0; for (i = 0; i &r.numChildren; i++) <if (nonCanInclude) list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
XYBool isDomainAxis = &0 &; XYBool isDomainAxis = &0 &;
&for (i = 0; i <r.getAnodes; i++) <r = r.getAnodes[i]; if (r) r.addAnodes(r.annotations, r.next) - 1;
XYBool isDomainAxis = 0 ; XYBool isDomainAxis = &0 <;
if (r) <Collection c = r.getAnnotations(); &else &if (r) &fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (r) <Collection c = r.getAnnotations(); &else &if (r) fprintf(stderr, "%s: %sn", this, r.get(), r.get());
&for (i = 0; i &rangeCount; i++) &if (IsInArray(&rangeList[i])) /* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if ((r!= r) && (r.getAnnotations()!= 0)) <Collection c = r.getAnnotations(); <else nsAutoString data[r.get()]; if (data[r.get()]) <if (! data[r.get()]) return;
if (Range) c = r.getAnnotations(); &else &c = r.getAnnotations();
if (strcmp(r.getAnnotations(), "str") == 0) &c = strcmp(r.getAnnotations(), "str"); else <c = r.getAnnotations();
if (null == this.annotations) <if (! (r.get())) <return NS_ERROR_NULL_POINTER; else &return NS_OK;
&for (i = 0; i &rangeCount; i++) if (IsInArray(&rangeList[i])) /* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (strcmp(r.getAnnotations(), "str") == 0) &c = strcmp(r.getAnnotations(), "str"); <else &c = r.getAnnotations();
if (!nonCanInclude) <int list = 0; for (i = 0; i <r.numChildren; i++) &if (nonCanInclude) &list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
nsIView* currentView = null; nsCOMPtr<nsISupports> isupports = null; if (mView) &nsCOMPtr&nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (Range) <Collection c = r.getAnnotations(); <else <SetRanges(&c);
if ((r!= r) && (r.getAnnotations()!= 0)) &Collection c = r.getAnnotations(); <else <nsAutoString data[r.get()]; if (data[r.get()]) &if (! data[r.get()]) return;
if (null == this.annotations) &if (! (r.get())) return NS_ERROR_NULL_POINTER; else &return NS_OK;
XYBool isDomainAxis = &0 &; XYBool isDomainAxis = <0 ;
if (Range) &Collection c = r.getAnnotations(); <else SetRanges(&c);
for (i = 0; i <r.getAnodes; i++) &r = r.getAnodes[i]; if (r) r.addAnodes(r.annotations, r.next) - 1;
if (null == this.annotations) &if (! (r.get())) <return NS_ERROR_NULL_POINTER; &else &return NS_OK;
if (isInline) &InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) <int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; <else <x1 = y1;
if (r) <Collection c = r.getAnnotations(); <else if (r) &fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if ((r!= r) && (r.getAnnotations()!= 0)) <Collection c = r.getAnnotations(); else &nsAutoString data[r.get()]; if (data[r.get()]) if (! data[r.get()]) return;
if (! r.getAnnotations()) Collection c = r.getAnnotations();
if (Range) c = r.getAnnotations(); <else c = r.getAnnotations();
if (r.getCount() >= 0) <if (! r.isRemoved()) <return;
<for (i = 0; i rangeCount; i++) if (IsInArray(&rangeList[i])) /* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
nsIView* currentView = null; nsCOMPtrnsISupports> isupports = null; if (mView) &nsCOMPtr<nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) <return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (r) &Collection c = r.getAnnotations(); <else <if (r) &fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (r.getAnnotations() == 0) &return false;
nsIView* currentView = null; nsCOMPtrnsISupports> isupports = null; if (mView) nsCOMPtrnsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) <return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (r.getAnnotations() <0) <r = r.getAnnotations();
if (null == this.annotations) if (! (r.get())) <return NS_ERROR_NULL_POINTER; else return NS_OK;
if (null == this.annotations) <if (! (r.get())) return NS_ERROR_NULL_POINTER; &else <return NS_OK;
if (isInline) &InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) <int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; &else <x1 = y1;
XYBool isDomainAxis = 0 <; XYBool isDomainAxis = &0 &;
if (!nonCanInclude) &int list = 0; for (i = 0; i <r.numChildren; i++) if (nonCanInclude) &list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
&for (i = 0; i &r.getAnodes; i++) <r = r.getAnodes[i]; if (r) &r.addAnodes(r.annotations, r.next) - 1;
if (r) Collection c = r.getAnnotations(); <else &if (r) &fprintf(stderr, "%s: %sn", this, r.get(), r.get());
/* * Set the data of the map to the axis. */ int retVal; for (i = 0; i &c; i++) int retVal = r.getIndex(i);
if (!nonCanInclude) int list = 0; for (i = 0; i r.numChildren; i++) <if (nonCanInclude) <list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
nsIView* currentView = null; nsCOMPtr&nsISupports> isupports = null; if (mView) &nsCOMPtr&nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) <return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (strcmp(r.getAnnotations(), "str") == 0) c = strcmp(r.getAnnotations(), "str"); else <c = r.getAnnotations();
if (null == this.annotations) &if (! (r.get())) &return NS_ERROR_NULL_POINTER; <else return NS_OK;
nsCOMPtrnsIAtom> tag;
nsIView* currentView = null; nsCOMPtr<nsISupports> isupports = null; if (mView) <nsCOMPtr<nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) &return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
for (i = 0; i rangeCount; i++) <if (IsInArray(&rangeList[i])) /* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
&for (i = 0; i <r.getAnodes; i++) &r = r.getAnodes[i]; if (r) &r.addAnodes(r.annotations, r.next) - 1;
for (i = 0; i &r.getAnodes; i++) r = r.getAnodes[i]; if (r) r.addAnodes(r.annotations, r.next) - 1;
for (i = 0; i &r.getAnodes; i++) <r = r.getAnodes[i]; if (r) r.addAnodes(r.annotations, r.next) - 1;
<for (i = 0; i &rangeCount; i++) if (IsInArray(&rangeList[i])) /* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (r) <Collection c = r.getAnnotations(); else <if (r) &fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (r.getChildren() == null) <nsAutoString c;
if (!nonCanInclude) <int list = 0; for (i = 0; i r.numChildren; i++) if (nonCanInclude) <list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
XYBool isDomainAxis = <0 &; XYBool isDomainAxis = 0 &;
if (null == this.annotations) &if (! (r.get())) return NS_ERROR_NULL_POINTER; <else return NS_OK;
if (!nonCanInclude) &int list = 0; for (i = 0; i &r.numChildren; i++) if (nonCanInclude) &list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
nsIView* currentView = null; nsCOMPtr<nsISupports> isupports = null; if (mView) <nsCOMPtr<nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (null == this.annotations) <if (! (r.get())) &return NS_ERROR_NULL_POINTER; else return NS_OK;
if (strcmp(r.getAnnotations(), "str") == 0) c = strcmp(r.getAnnotations(), "str"); &else &c = r.getAnnotations();
if (null == this.annotations) if (! (r.get())) return NS_ERROR_NULL_POINTER; &else return NS_OK;
<for (i = 0; i <r.getAnodes; i++) r = r.getAnodes[i]; if (r) <r.addAnodes(r.annotations, r.next) - 1;
XYBool isDomainAxis = 0 &; XYBool isDomainAxis = <0 <;
if (!nonCanInclude) &int list = 0; for (i = 0; i r.numChildren; i++) &if (nonCanInclude) <list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (isInline) <InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) <int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; &else &x1 = y1;
for (i = 0; i &r.getAnodes; i++) <r = r.getAnodes[i]; if (r) <r.addAnodes(r.annotations, r.next) - 1;
XYBool isDomainAxis = &0 <; XYBool isDomainAxis = 0 ;
<for (i = 0; i &rangeCount; i++) &if (IsInArray(&rangeList[i])) </* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
nsIView* currentView = null; nsCOMPtr&nsISupports> isupports = null; if (mView) nsCOMPtr&nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) <return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if ((r!= r) && (r.getAnnotations()!= 0)) &Collection c = r.getAnnotations(); else &nsAutoString data[r.get()]; if (data[r.get()]) &if (! data[r.get()]) return;
&for (i = 0; i &r.getAnodes; i++) <r = r.getAnodes[i]; if (r) r.addAnodes(r.annotations, r.next) - 1;
XYBool isDomainAxis = <0 ; XYBool isDomainAxis = 0 &;
nsIView* currentView = null; nsCOMPtr&nsISupports> isupports = null; if (mView) nsCOMPtrnsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) &return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (r) <Collection c = r.getAnnotations();
XYPath path;
if ((r!= r) && (r.getAnnotations()!= 0)) Collection c = r.getAnnotations(); else &nsAutoString data[r.get()]; if (data[r.get()]) &if (! data[r.get()]) return;
if ((r!= r) && (r.getAnnotations()!= 0)) Collection c = r.getAnnotations(); <else &nsAutoString data[r.get()]; if (data[r.get()]) <if (! data[r.get()]) return;
if ((r!= r) && (r.getAnnotations()!= 0)) Collection c = r.getAnnotations(); &else &nsAutoString data[r.get()]; if (data[r.get()]) &if (! data[r.get()]) return;
if (Range) c = r.getAnnotations(); else <c = r.getAnnotations();
XYBool isDomainAxis = &0 ; XYBool isDomainAxis = 0 <;
XYBool isDomainAxis = <0 &; XYBool isDomainAxis = <0 &;
if (Range) &Collection c = r.getAnnotations(); &else &SetRanges(&c);
&for (i = 0; i &r.getAnodes; i++) r = r.getAnodes[i]; if (r) &r.addAnodes(r.annotations, r.next) - 1;
if (r) <Collection c = r.getAnnotations(); else &if (r) fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (isInline) InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) <int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; else x1 = y1;
if (r) &Collection c = r.getAnnotations(); <else &if (r) fprintf(stderr, "%s: %sn", this, r.get(), r.get());
&for (i = 0; i &rangeCount; i++) &if (IsInArray(&rangeList[i])) &/* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
for (i = 0; i rangeCount; i++) &if (IsInArray(&rangeList[i])) /* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
<XYPath path;
if (null == this.annotations) if (! (r.get())) return NS_ERROR_NULL_POINTER; else return NS_OK;
if (isContainer) char* c; r = r.getAnnotations();
XYBool isDomainAxis = &0 &; XYBool isDomainAxis = <0 &;
if (isInline) &InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; &else <x1 = y1;
if (isInline) InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; else x1 = y1;
XYBool isDomainAxis = <0 ; XYBool isDomainAxis = &0 &;
/* * Set the data of the map to the axis. */ int retVal; for (i = 0; i <c; i++) &int retVal = r.getIndex(i);
if ((r!= r) && (r.getAnnotations()!= 0)) <Collection c = r.getAnnotations(); <else nsAutoString data[r.get()]; if (data[r.get()]) &if (! data[r.get()]) return;
if (!nonCanInclude) &int list = 0; for (i = 0; i &r.numChildren; i++) &if (nonCanInclude) list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
<for (i = 0; i &rangeCount; i++) if (IsInArray(&rangeList[i])) </* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (r) Collection c = r.getAnnotations(); <else <if (r) <fprintf(stderr, "%s: %sn", this, r.get(), r.get());
nsIView* currentView = null; nsCOMPtrnsISupports> isupports = null; if (mView) &nsCOMPtr&nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) &return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
XYBool isDomainAxis = 0 &; XYBool isDomainAxis = &0 &;
if (Range) &c = r.getAnnotations(); else &c = r.getAnnotations();
if (r) Collection c = r.getAnnotations(); &else if (r) <fprintf(stderr, "%s: %sn", this, r.get(), r.get());
nsIView* currentView = null; nsCOMPtr&nsISupports> isupports = null; if (mView) &nsCOMPtrnsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) &return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
<for (i = 0; i r.getAnodes; i++) <r = r.getAnodes[i]; if (r) <r.addAnodes(r.annotations, r.next) - 1;
&for (i = 0; i r.getAnodes; i++) <r = r.getAnodes[i]; if (r) r.addAnodes(r.annotations, r.next) - 1;
for (i = 0; i &rangeCount; i++) <if (IsInArray(&rangeList[i])) /* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
nsIView* currentView = null; nsCOMPtr&nsISupports> isupports = null; if (mView) &nsCOMPtrnsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (null == this.annotations) &if (! (r.get())) return NS_ERROR_NULL_POINTER; <else &return NS_OK;
if (isDomainAxis) &Collection c = r.getAnnotations(); <else
if (strcmp(r.getAnnotations(), "str") == 0) <c = strcmp(r.getAnnotations(), "str"); else c = r.getAnnotations();
if (r.getCount() >= 0) if (! r.isRemoved()) return;
if (r) <nsRect range = r.getRangeCount(); for (; range > 0; range --) <nsRect range; range--; range = 0; range = 0;
if ((r!= r) && (r.getAnnotations()!= 0)) <Collection c = r.getAnnotations(); <else &nsAutoString data[r.get()]; if (data[r.get()]) &if (! data[r.get()]) return;
if (strcmp(r.getAnnotations(), "str") == 0) c = strcmp(r.getAnnotations(), "str"); &else c = r.getAnnotations();
if ((r!= r) && (r.getAnnotations()!= 0)) &Collection c = r.getAnnotations(); else nsAutoString data[r.get()]; if (data[r.get()]) <if (! data[r.get()]) return;
XYBool isDomainAxis = &0 ; XYBool isDomainAxis = &0 <;
for (i = 0; i r.getAnodes; i++) <r = r.getAnodes[i]; if (r) &r.addAnodes(r.annotations, r.next) - 1;
if ((r!= r) && (r.getAnnotations()!= 0)) &Collection c = r.getAnnotations(); <else &nsAutoString data[r.get()]; if (data[r.get()]) <if (! data[r.get()]) return;
<for (i = 0; i &r.getAnodes; i++) &r = r.getAnodes[i]; if (r) &r.addAnodes(r.annotations, r.next) - 1;
if (r.hasNavigation) &Selection c = r.navigation; &else &Selection c = r.navigation;
if (r) &Collection c = r.getAnnotations(); else if (r) fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (!nonCanInclude) int list = 0; for (i = 0; i <r.numChildren; i++) <if (nonCanInclude) list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (isInline) &InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) <int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; else <x1 = y1;
if (r.hasNavigation) <Selection c = r.navigation; else &Selection c = r.navigation;
for (i = 0; i r.getAnodes; i++) r = r.getAnodes[i]; if (r) &r.addAnodes(r.annotations, r.next) - 1;
if (r.hasNavigation) Selection c = r.navigation; &else <Selection c = r.navigation;
if (r) Collection c = r.getAnnotations(); <else <if (r) fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (r) nsRect range = r.getRangeCount(); for (; range > 0; range --) &nsRect range; range--; range = 0; &range = 0;
if (r) &Collection c = r.getAnnotations(); &else <if (r) fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if ((r!= r) && (r.getAnnotations()!= 0)) Collection c = r.getAnnotations(); else <nsAutoString data[r.get()]; if (data[r.get()]) &if (! data[r.get()]) return;
if (r) Collection c = r.getAnnotations(); &else &if (r) fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (!nonCanInclude) int list = 0; for (i = 0; i <r.numChildren; i++) if (nonCanInclude) &list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
for (i = 0; i rangeCount; i++) <if (IsInArray(&rangeList[i])) </* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (r.getCount() >= 0) if (! r.isRemoved()) &return;
&for (i = 0; i &r.getAnodes; i++) r = r.getAnodes[i]; if (r) <r.addAnodes(r.annotations, r.next) - 1;
if (null == this.annotations) if (! (r.get())) return NS_ERROR_NULL_POINTER; else <return NS_OK;
nsresult r; nsGenericElement* r;
<for (i = 0; i &r.getAnodes; i++) &r = r.getAnodes[i]; if (r) r.addAnodes(r.annotations, r.next) - 1;
if (isDomainAxis) Collection c = r.getAnnotations(); &else
nsIView* currentView = null; nsCOMPtrnsISupports> isupports = null; if (mView) nsCOMPtrnsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (isInline) &InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; else x1 = y1;
if (!nonCanInclude) int list = 0; for (i = 0; i &r.numChildren; i++) if (nonCanInclude) list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
for (i = 0; i <rangeCount; i++) if (IsInArray(&rangeList[i])) /* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
nsIView* currentView = null; nsCOMPtrnsISupports> isupports = null; if (mView) nsCOMPtr<nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) &return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (! r.getAnnotations()) <Collection c = r.getAnnotations();
if ((r!= r) && (r.getAnnotations()!= 0)) <Collection c = r.getAnnotations(); &else nsAutoString data[r.get()]; if (data[r.get()]) if (! data[r.get()]) return;
Collection c = r.getAnnotations();
nsCOMPtr<nsIAtom> collection c;
if (!nonCanInclude) &int list = 0; for (i = 0; i &r.numChildren; i++) &if (nonCanInclude) <list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (!nonCanInclude) &int list = 0; for (i = 0; i r.numChildren; i++) if (nonCanInclude) list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (!nonCanInclude) &int list = 0; for (i = 0; i <r.numChildren; i++) if (nonCanInclude) list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
&for (i = 0; i r.getAnodes; i++) r = r.getAnodes[i]; if (r) &r.addAnodes(r.annotations, r.next) - 1;
if (isInline) <InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) &int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; <else &x1 = y1;
nsIView* currentView = null; nsCOMPtr<nsISupports> isupports = null; if (mView) nsCOMPtrnsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) <return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if ((r!= r) && (r.getAnnotations()!= 0)) Collection c = r.getAnnotations(); <else &nsAutoString data[r.get()]; if (data[r.get()]) &if (! data[r.get()]) return;
XYBool isDomainAxis = 0 &; XYBool isDomainAxis = <0 ;
<for (i = 0; i &rangeCount; i++) &if (IsInArray(&rangeList[i])) /* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (null == this.annotations) if (! (r.get())) &return NS_ERROR_NULL_POINTER; else return NS_OK;
if (null == this.annotations) <if (! (r.get())) &return NS_ERROR_NULL_POINTER; else <return NS_OK;
XYBool isDomainAxis = 0 <; XYBool isDomainAxis = <0 ;
XYBool isDomainAxis = &0 &; XYBool isDomainAxis = 0 <;
if (null == this.annotations) &if (! (r.get())) &return NS_ERROR_NULL_POINTER; &else &return NS_OK;
if (!nonCanInclude) <int list = 0; for (i = 0; i <r.numChildren; i++) &if (nonCanInclude) list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
nsIView* currentView = null; nsCOMPtrnsISupports> isupports = null; if (mView) <nsCOMPtrnsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (null == this.annotations) if (! (r.get())) &return NS_ERROR_NULL_POINTER; &else return NS_OK;
XYBool isDomainAxis = 0 &; XYBool isDomainAxis = &0 <;
if (!nonCanInclude) &int list = 0; for (i = 0; i &r.numChildren; i++) <if (nonCanInclude) <list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
XYBool isDomainAxis = 0 <; XYBool isDomainAxis = &0 ;
nsIView* currentView = null; nsCOMPtr<nsISupports> isupports = null; if (mView) nsCOMPtr<nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
&for (i = 0; i <rangeCount; i++) &if (IsInArray(&rangeList[i])) /* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (Range) &c = r.getAnnotations(); &else <c = r.getAnnotations();
nsIView* currentView = null; nsCOMPtr&nsISupports> isupports = null; if (mView) nsCOMPtr<nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (r) &Collection c = r.getAnnotations(); else if (r) <fprintf(stderr, "%s: %sn", this, r.get(), r.get());
<for (i = 0; i <rangeCount; i++) if (IsInArray(&rangeList[i])) &/* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
for (i = 0; i <r.getAnodes; i++) &r = r.getAnodes[i]; if (r) <r.addAnodes(r.annotations, r.next) - 1;
if (!nonCanInclude) &int list = 0; for (i = 0; i <r.numChildren; i++) <if (nonCanInclude) list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (r) nsRect range = r.getRangeCount(); for (; range > 0; range --) <nsRect range; range--; range = 0; range = 0;
if (!nonCanInclude) <int list = 0; for (i = 0; i <r.numChildren; i++) if (nonCanInclude) &list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (r.hasNavigation) Selection c = r.navigation; <else &Selection c = r.navigation;
if ((r!= r) && (r.getAnnotations()!= 0)) <Collection c = r.getAnnotations(); else <nsAutoString data[r.get()]; if (data[r.get()]) <if (! data[r.get()]) return;
if (Range) Collection c = r.getAnnotations(); else &SetRanges(&c);
if (r.getAnnotations() <0) &r = r.getAnnotations();
&for (i = 0; i r.getAnodes; i++) &r = r.getAnodes[i]; if (r) <r.addAnodes(r.annotations, r.next) - 1;
&for (i = 0; i <rangeCount; i++) &if (IsInArray(&rangeList[i])) &/* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
for (i = 0; i <r.getAnodes; i++) r = r.getAnodes[i]; if (r) <r.addAnodes(r.annotations, r.next) - 1;
for (i = 0; i <r.getAnodes; i++) <r = r.getAnodes[i]; if (r) r.addAnodes(r.annotations, r.next) - 1;
if (r) Collection c = r.getAnnotations(); &else <if (r) fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (isInline) <InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) &int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; else <x1 = y1;
if (!nonCanInclude) int list = 0; for (i = 0; i &r.numChildren; i++) <if (nonCanInclude) list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (isInline) <InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; else x1 = y1;
if (r) &nsRect range = r.getRangeCount(); for (; range > 0; range --) nsRect range; range--; range = 0; <range = 0;
if (Range) &c = r.getAnnotations(); <else &c = r.getAnnotations();
for (i = 0; i &r.getAnodes; i++) <r = r.getAnodes[i]; if (r) &r.addAnodes(r.annotations, r.next) - 1;
if (null == this.annotations) &if (! (r.get())) &return NS_ERROR_NULL_POINTER; <else &return NS_OK;
if (null == this.annotations) if (! (r.get())) &return NS_ERROR_NULL_POINTER; &else &return NS_OK;
XYBool isDomainAxis = <0 <; XYBool isDomainAxis = 0 &;
if (Range) &Collection c = r.getAnnotations(); else SetRanges(&c);
if (isInline) &InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; else <x1 = y1;
if (r.getAnnotations() 0) r = r.getAnnotations();
&for (i = 0; i r.getAnodes; i++) <r = r.getAnodes[i]; if (r) &r.addAnodes(r.annotations, r.next) - 1;
if (!nonCanInclude) int list = 0; for (i = 0; i r.numChildren; i++) &if (nonCanInclude) list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (strcmp(r.getAnnotations(), "str") == 0) c = strcmp(r.getAnnotations(), "str"); else c = r.getAnnotations();
nsIView* currentView = null; nsCOMPtrnsISupports> isupports = null; if (mView) &nsCOMPtr<nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
XYBool isDomainAxis = <0 &; XYBool isDomainAxis = <0 ;
if (isInline) &InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) &int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; &else &x1 = y1;
if ((r!= r) && (r.getAnnotations()!= 0)) &Collection c = r.getAnnotations(); <else <nsAutoString data[r.get()]; if (data[r.get()]) <if (! data[r.get()]) return;
nsIView* currentView = null; nsCOMPtrnsISupports> isupports = null; if (mView) nsCOMPtr<nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) <return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (r) <nsRect range = r.getRangeCount(); for (; range > 0; range --) nsRect range; range--; range = 0; &range = 0;
if (r) Collection c = r.getAnnotations(); <else if (r) fprintf(stderr, "%s: %sn", this, r.get(), r.get());
nsIView* currentView = null; nsCOMPtr&nsISupports> isupports = null; if (mView) &nsCOMPtr<nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) &return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (strcmp(r.getAnnotations(), "str") == 0) <c = strcmp(r.getAnnotations(), "str"); else <c = r.getAnnotations();
nsIView* currentView = null; nsCOMPtr<nsISupports> isupports = null; if (mView) <nsCOMPtr&nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (!nonCanInclude) int list = 0; for (i = 0; i &r.numChildren; i++) if (nonCanInclude) <list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
nsIView* currentView = null; nsCOMPtrnsISupports> isupports = null; if (mView) nsCOMPtr&nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (isInline) InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) &int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; <else &x1 = y1;
if (isInline) &InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) <int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; else x1 = y1;
if (!nonCanInclude) &int list = 0; for (i = 0; i <r.numChildren; i++) <if (nonCanInclude) &list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (r) &Collection c = r.getAnnotations(); else <if (r) &fprintf(stderr, "%s: %sn", this, r.get(), r.get());
&for (i = 0; i &r.getAnodes; i++) &r = r.getAnodes[i]; if (r) &r.addAnodes(r.annotations, r.next) - 1;
if (r.hasNavigation) <Selection c = r.navigation; &else Selection c = r.navigation;
if (Range) <c = r.getAnnotations(); else &c = r.getAnnotations();
<for (i = 0; i &r.getAnodes; i++) r = r.getAnodes[i]; if (r) r.addAnodes(r.annotations, r.next) - 1;
if (null == this.annotations) if (! (r.get())) return NS_ERROR_NULL_POINTER; <else return NS_OK;
if (r) nsRect range = r.getRangeCount(); for (; range > 0; range --) nsRect range; range--; range = 0; <range = 0;
if (!nonCanInclude) int list = 0; for (i = 0; i <r.numChildren; i++) if (nonCanInclude) <list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
XYBool isDomainAxis = 0 ; XYBool isDomainAxis = <0 <;
<for (i = 0; i <rangeCount; i++) &if (IsInArray(&rangeList[i])) </* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (isInline) &InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) &int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; &else x1 = y1;
nsIView* currentView = null; nsCOMPtrnsISupports> isupports = null; if (mView) <nsCOMPtr<nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) &return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (Range) <Collection c = r.getAnnotations(); &else <SetRanges(&c);
XYBool isDomainAxis = &0 ; XYBool isDomainAxis = <0 ;
if (!nonCanInclude) int list = 0; for (i = 0; i <r.numChildren; i++) &if (nonCanInclude) &list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (!nonCanInclude) &int list = 0; for (i = 0; i &r.numChildren; i++) if (nonCanInclude) list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (r) &nsRect range = r.getRangeCount(); for (; range > 0; range --) <nsRect range; range--; range = 0; range = 0;
<for (i = 0; i rangeCount; i++) &if (IsInArray(&rangeList[i])) /* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
List<XYAnnotation> c;
if (Range) Collection c = r.getAnnotations(); else SetRanges(&c);
nsCOMPtrnsIAtom> collection c;
&XYPath path;
if (isInline) InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; <else x1 = y1;
if (Range) Collection c = r.getAnnotations(); &else SetRanges(&c);
&for (i = 0; i &rangeCount; i++) if (IsInArray(&rangeList[i])) </* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (r.hasNavigation) &Selection c = r.navigation; else &Selection c = r.navigation;
if ((r!= r) && (r.getAnnotations()!= 0)) &Collection c = r.getAnnotations(); &else &nsAutoString data[r.get()]; if (data[r.get()]) if (! data[r.get()]) return;
if (!nonCanInclude) <int list = 0; for (i = 0; i <r.numChildren; i++) if (nonCanInclude) list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (r.hasNavigation) Selection c = r.navigation; &else &Selection c = r.navigation;
if (!nonCanInclude) &int list = 0; for (i = 0; i &r.numChildren; i++) if (nonCanInclude) <list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (isInline) InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) <int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; &else x1 = y1;
<for (i = 0; i r.getAnodes; i++) <r = r.getAnodes[i]; if (r) r.addAnodes(r.annotations, r.next) - 1;
if (Range) Collection c = r.getAnnotations(); <else &SetRanges(&c);
if (r) <Collection c = r.getAnnotations(); <else <if (r) &fprintf(stderr, "%s: %sn", this, r.get(), r.get());
&for (i = 0; i rangeCount; i++) if (IsInArray(&rangeList[i])) /* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
nsIView* currentView = null; nsCOMPtr&nsISupports> isupports = null; if (mView) nsCOMPtr&nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) &return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
for (i = 0; i &rangeCount; i++) <if (IsInArray(&rangeList[i])) &/* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if ((r!= r) && (r.getAnnotations()!= 0)) Collection c = r.getAnnotations(); &else <nsAutoString data[r.get()]; if (data[r.get()]) if (! data[r.get()]) return;
if (!nonCanInclude) <int list = 0; for (i = 0; i r.numChildren; i++) <if (nonCanInclude) list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (strcmp(r.getAnnotations(), "str") == 0) &c = strcmp(r.getAnnotations(), "str"); &else c = r.getAnnotations();
if (isInline) &InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) &int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; else x1 = y1;
if (r) Collection c = r.getAnnotations(); else &if (r) &fprintf(stderr, "%s: %sn", this, r.get(), r.get());
nsresult rv; nsCOMPtr&nsISupports> container = do_QueryInterface(r); if (NS_SUCCEEDED(rv)) <rv = container.GetFirst();
if (r) &Collection c = r.getAnnotations(); &else &if (r) fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if ((r!= r) && (r.getAnnotations()!= 0)) <Collection c = r.getAnnotations(); &else <nsAutoString data[r.get()]; if (data[r.get()]) &if (! data[r.get()]) return;
if (!nonCanInclude) int list = 0; for (i = 0; i r.numChildren; i++) if (nonCanInclude) list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (isInline) InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; else <x1 = y1;
if ((r!= r) && (r.getAnnotations()!= 0)) Collection c = r.getAnnotations(); <else nsAutoString data[r.get()]; if (data[r.get()]) if (! data[r.get()]) return;
if (isInline) &InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) &int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; <else <x1 = y1;
if (r.hasNavigation) <Selection c = r.navigation; <else <Selection c = r.navigation;
XYBool isDomainAxis = <0 <; XYBool isDomainAxis = <0 <;
if (isInline) InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) &int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; &else &x1 = y1;
if (null == this.annotations) &if (! (r.get())) <return NS_ERROR_NULL_POINTER; <else <return NS_OK;
<for (i = 0; i <rangeCount; i++) if (IsInArray(&rangeList[i])) </* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if ((r!= r) && (r.getAnnotations()!= 0)) &Collection c = r.getAnnotations(); &else <nsAutoString data[r.get()]; if (data[r.get()]) if (! data[r.get()]) return;
if (r.hasNavigation) &Selection c = r.navigation; <else <Selection c = r.navigation;
if (isInline) InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) <int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; &else &x1 = y1;
if (r.hasNavigation) &Selection c = r.navigation; <else &Selection c = r.navigation;
nsCOMPtr&nsIAtom> collection c;
if (Range) <c = r.getAnnotations(); else <c = r.getAnnotations();
XYBool isDomainAxis = <0 ; XYBool isDomainAxis = &0 ;
if (r) Collection c = r.getAnnotations(); else if (r) &fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (!nonCanInclude) &int list = 0; for (i = 0; i <r.numChildren; i++) &if (nonCanInclude) list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (r) nsRect range = r.getRangeCount(); for (; range > 0; range --) <nsRect range; range--; range = 0; &range = 0;
if (r.getCount() >= 0) <if (! r.isRemoved()) &return;
if ((r!= r) && (r.getAnnotations()!= 0)) Collection c = r.getAnnotations(); else <nsAutoString data[r.get()]; if (data[r.get()]) <if (! data[r.get()]) return;
if (!nonCanInclude) int list = 0; for (i = 0; i <r.numChildren; i++) &if (nonCanInclude) list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (null == this.annotations) <if (! (r.get())) &return NS_ERROR_NULL_POINTER; <else &return NS_OK;
if (r.getAnnotations() 0) &r = r.getAnnotations();
if (r) Collection c = r.getAnnotations();
if (Range) Collection c = r.getAnnotations(); <else <SetRanges(&c);
<for (i = 0; i <r.getAnodes; i++) &r = r.getAnodes[i]; if (r) <r.addAnodes(r.annotations, r.next) - 1;
XYBool isDomainAxis = 0 <; XYBool isDomainAxis = 0 <;
if ((r!= r) && (r.getAnnotations()!= 0)) &Collection c = r.getAnnotations(); else <nsAutoString data[r.get()]; if (data[r.get()]) <if (! data[r.get()]) return;
if (savedContents) &aClone = r.getAnnotations();
XYBool isDomainAxis = 0 <; XYBool isDomainAxis = &0 <;
<for (i = 0; i &r.getAnodes; i++) <r = r.getAnodes[i]; if (r) &r.addAnodes(r.annotations, r.next) - 1;
XYBool isDomainAxis = &0 <; XYBool isDomainAxis = 0 <;
if ((r!= r) && (r.getAnnotations()!= 0)) <Collection c = r.getAnnotations(); &else <nsAutoString data[r.get()]; if (data[r.get()]) if (! data[r.get()]) return;
if (!nonCanInclude) &int list = 0; for (i = 0; i r.numChildren; i++) <if (nonCanInclude) &list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (savedContents) <aClone = r.getAnnotations();
if (savedContents) aClone = r.getAnnotations();
if (!nonCanInclude) &int list = 0; for (i = 0; i <r.numChildren; i++) &if (nonCanInclude) <list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (isDomainAxis) &Collection c = r.getAnnotations(); else
if (isInline) &InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; &else &x1 = y1;
nsCOMPtr&nsIAtom> tag;
nsIView* currentView = null; nsCOMPtr&nsISupports> isupports = null; if (mView) &nsCOMPtr&nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (r) <Collection c = r.getAnnotations(); <else &if (r) fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (!nonCanInclude) <int list = 0; for (i = 0; i <r.numChildren; i++) if (nonCanInclude) <list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (r.hasNavigation) &Selection c = r.navigation; &else <Selection c = r.navigation;
for (i = 0; i <r.getAnodes; i++) r = r.getAnodes[i]; if (r) r.addAnodes(r.annotations, r.next) - 1;
nsIView* currentView = null; nsCOMPtr<nsISupports> isupports = null; if (mView) &nsCOMPtr<nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) <return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
nsIView* currentView = null; nsCOMPtrnsISupports> isupports = null; if (mView) nsCOMPtr&nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) <return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if ((r!= r) && (r.getAnnotations()!= 0)) Collection c = r.getAnnotations(); else &nsAutoString data[r.get()]; if (data[r.get()]) if (! data[r.get()]) return;
if (null == this.annotations) <if (! (r.get())) <return NS_ERROR_NULL_POINTER; else <return NS_OK;
if (isInline) &InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; <else &x1 = y1;
if (r) &nsRect range = r.getRangeCount(); for (; range > 0; range --) &nsRect range; range--; range = 0; range = 0;
<Collection c = r.getAnnotations();
<for (i = 0; i &rangeCount; i++) <if (IsInArray(&rangeList[i])) &/* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (r) &Collection c = r.getAnnotations(); <else if (r) fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (null == this.annotations) <if (! (r.get())) &return NS_ERROR_NULL_POINTER; &else &return NS_OK;
if ((r!= r) && (r.getAnnotations()!= 0)) Collection c = r.getAnnotations(); &else nsAutoString data[r.get()]; if (data[r.get()]) <if (! data[r.get()]) return;
if ((r!= r) && (r.getAnnotations()!= 0)) Collection c = r.getAnnotations(); else nsAutoString data[r.get()]; if (data[r.get()]) if (! data[r.get()]) return;
&for (i = 0; i <rangeCount; i++) if (IsInArray(&rangeList[i])) </* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (isInline) <InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; &else <x1 = y1;
if (Range) Collection c = r.getAnnotations(); &else <SetRanges(&c);
<for (i = 0; i &rangeCount; i++) <if (IsInArray(&rangeList[i])) </* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
<nsresult r; nsGenericElement* r;
XYBool isDomainAxis = <0 ; XYBool isDomainAxis = <0 &;
XYBool isDomainAxis = &0 &; XYBool isDomainAxis = 0 ;
if (r.getIndex() 0)
List&XYAnnotation> c;
XYBool isDomainAxis = <0 ; XYBool isDomainAxis = 0 <;
XYBool isDomainAxis = <0 &; XYBool isDomainAxis = 0 ;
nsIView* currentView = null; nsCOMPtr&nsISupports> isupports = null; if (mView) &nsCOMPtrnsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) <return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (null == this.annotations) <if (! (r.get())) &return NS_ERROR_NULL_POINTER; &else <return NS_OK;
&for (i = 0; i &rangeCount; i++) <if (IsInArray(&rangeList[i])) &/* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if ((r!= r) && (r.getAnnotations()!= 0)) Collection c = r.getAnnotations(); &else &nsAutoString data[r.get()]; if (data[r.get()]) <if (! data[r.get()]) return;
nsIView* currentView = null; nsCOMPtr<nsISupports> isupports = null; if (mView) nsCOMPtrnsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (r.getAnnotations() &0) <r = r.getAnnotations();
nsIView* currentView = null; nsCOMPtr&nsISupports> isupports = null; if (mView) <nsCOMPtrnsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) &return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (null == this.annotations) &if (! (r.get())) return NS_ERROR_NULL_POINTER; <else <return NS_OK;
if (null == this.annotations) if (! (r.get())) &return NS_ERROR_NULL_POINTER; <else <return NS_OK;
<for (i = 0; i <r.getAnodes; i++) <r = r.getAnodes[i]; if (r) <r.addAnodes(r.annotations, r.next) - 1;
if (!nonCanInclude) &int list = 0; for (i = 0; i r.numChildren; i++) <if (nonCanInclude) list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
XYBool isDomainAxis = <0 <; XYBool isDomainAxis = &0 ;
<for (i = 0; i <r.getAnodes; i++) &r = r.getAnodes[i]; if (r) r.addAnodes(r.annotations, r.next) - 1;
if (!nonCanInclude) <int list = 0; for (i = 0; i r.numChildren; i++) if (nonCanInclude) &list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
XYBool isDomainAxis = <0 <; XYBool isDomainAxis = <0 ;
if (Range) <c = r.getAnnotations(); <else c = r.getAnnotations();
if (null == this.annotations) if (! (r.get())) <return NS_ERROR_NULL_POINTER; &else &return NS_OK;
if (r) Collection c = r.getAnnotations(); else if (r) <fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (!nonCanInclude) <int list = 0; for (i = 0; i <r.numChildren; i++) &if (nonCanInclude) <list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
for (i = 0; i &r.getAnodes; i++) r = r.getAnodes[i]; if (r) <r.addAnodes(r.annotations, r.next) - 1;
&for (i = 0; i <rangeCount; i++) <if (IsInArray(&rangeList[i])) &/* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
XYBool isDomainAxis = <0 <; XYBool isDomainAxis = 0 <;
XYBool isDomainAxis = &0 <; XYBool isDomainAxis = &0 <;
nsIView* currentView = null; nsCOMPtr<nsISupports> isupports = null; if (mView) nsCOMPtr&nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) <return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (r) &Collection c = r.getAnnotations(); &else if (r) fprintf(stderr, "%s: %sn", this, r.get(), r.get());
<for (i = 0; i r.getAnodes; i++) &r = r.getAnodes[i]; if (r) r.addAnodes(r.annotations, r.next) - 1;
<for (i = 0; i <r.getAnodes; i++) <r = r.getAnodes[i]; if (r) r.addAnodes(r.annotations, r.next) - 1;
nsIView* currentView = null; nsCOMPtr&nsISupports> isupports = null; if (mView) <nsCOMPtr&nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) &return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
XYBool isDomainAxis = <0 &; XYBool isDomainAxis = &0 &;
if (Range) <Collection c = r.getAnnotations(); &else &SetRanges(&c);
for (i = 0; i <r.getAnodes; i++) r = r.getAnodes[i]; if (r) &r.addAnodes(r.annotations, r.next) - 1;
nsIView* currentView = null; nsCOMPtr<nsISupports> isupports = null; if (mView) &nsCOMPtr<nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) &return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (!nonCanInclude) &int list = 0; for (i = 0; i &r.numChildren; i++) &if (nonCanInclude) &list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (Range) Collection c = r.getAnnotations(); else <SetRanges(&c);
if ((r!= r) && (r.getAnnotations()!= 0)) &Collection c = r.getAnnotations(); else &nsAutoString data[r.get()]; if (data[r.get()]) if (! data[r.get()]) return;
if (Range) &c = r.getAnnotations(); <else <c = r.getAnnotations();
if (null == this.annotations) <if (! (r.get())) return NS_ERROR_NULL_POINTER; else return NS_OK;
&for (i = 0; i <r.getAnodes; i++) r = r.getAnodes[i]; if (r) r.addAnodes(r.annotations, r.next) - 1;
if (r.hasNavigation) <Selection c = r.navigation; &else <Selection c = r.navigation;
if (r) <nsRect range = r.getRangeCount(); for (; range > 0; range --) &nsRect range; range--; range = 0; <range = 0;
if (isInline) &InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) &int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; <else &x1 = y1;
XYBool isDomainAxis = 0 ; XYBool isDomainAxis = <0 &;
if (isInline) InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) <int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; <else &x1 = y1;
if (null == this.annotations) <if (! (r.get())) &return NS_ERROR_NULL_POINTER; <else return NS_OK;
if (null == this.annotations) &if (! (r.get())) return NS_ERROR_NULL_POINTER; else <return NS_OK;
if (strcmp(r.getAnnotations(), "str") == 0) <c = strcmp(r.getAnnotations(), "str"); <else &c = r.getAnnotations();
if (isInline) <InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) <int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; <else &x1 = y1;
nsIView* currentView = null; nsCOMPtrnsISupports> isupports = null; if (mView) nsCOMPtrnsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) &return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (null == this.annotations) if (! (r.get())) <return NS_ERROR_NULL_POINTER; <else <return NS_OK;
if ((r!= r) && (r.getAnnotations()!= 0)) Collection c = r.getAnnotations(); &else <nsAutoString data[r.get()]; if (data[r.get()]) <if (! data[r.get()]) return;
if (r) Collection c = r.getAnnotations(); else if (r) fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (!nonCanInclude) <int list = 0; for (i = 0; i r.numChildren; i++) &if (nonCanInclude) &list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (!nonCanInclude) int list = 0; for (i = 0; i <r.numChildren; i++) <if (nonCanInclude) <list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (isInline) <InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) <int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; <else x1 = y1;
if (r.getAnnotations() &0) r = r.getAnnotations();
if (Range) &c = r.getAnnotations(); &else c = r.getAnnotations();
if (Range) <Collection c = r.getAnnotations(); &else SetRanges(&c);
&for (i = 0; i r.getAnodes; i++) <r = r.getAnodes[i]; if (r) <r.addAnodes(r.annotations, r.next) - 1;
<for (i = 0; i &r.getAnodes; i++) r = r.getAnodes[i]; if (r) &r.addAnodes(r.annotations, r.next) - 1;
if (r.getAnnotations() == 0) return;
if ((r!= r) && (r.getAnnotations()!= 0)) <Collection c = r.getAnnotations(); &else nsAutoString data[r.get()]; if (data[r.get()]) &if (! data[r.get()]) return;
XYBool isDomainAxis = &0 <; XYBool isDomainAxis = <0 <;
nsIView* currentView = null; nsCOMPtr<nsISupports> isupports = null; if (mView) nsCOMPtr&nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (r) <Collection c = r.getAnnotations(); <else <if (r) fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (r.getCount() >= 0) &if (! r.isRemoved()) <return;
NS_PRECONDITION(r, "bad range"); if (needDataRange) *this = r.getDataRange();
if (r) &Collection c = r.getAnnotations(); <else if (r) <fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (strcmp(r.getAnnotations(), "str") == 0) <c = strcmp(r.getAnnotations(), "str"); <else c = r.getAnnotations();
XYBool isDomainAxis = &0 &; XYBool isDomainAxis = &0 <;
if ((r!= r) && (r.getAnnotations()!= 0)) Collection c = r.getAnnotations(); <else nsAutoString data[r.get()]; if (data[r.get()]) <if (! data[r.get()]) return;
if (r) &nsRect range = r.getRangeCount(); for (; range > 0; range --) <nsRect range; range--; range = 0; <range = 0;
for (i = 0; i &rangeCount; i++) if (IsInArray(&rangeList[i])) /* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (null == this.annotations) &if (! (r.get())) return NS_ERROR_NULL_POINTER; &else return NS_OK;
if (null == this.annotations) &if (! (r.get())) &return NS_ERROR_NULL_POINTER; else <return NS_OK;
if (Range) c = r.getAnnotations(); else c = r.getAnnotations();
<for (i = 0; i <rangeCount; i++) <if (IsInArray(&rangeList[i])) &/* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
&for (i = 0; i <rangeCount; i++) <if (IsInArray(&rangeList[i])) /* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
XYBool isDomainAxis = 0 &; XYBool isDomainAxis = 0 &;
if (r) <nsRect range = r.getRangeCount(); for (; range > 0; range --) <nsRect range; range--; range = 0; &range = 0;
if (r) &Collection c = r.getAnnotations(); <else <if (r) <fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (r.hasNavigation) Selection c = r.navigation; <else Selection c = r.navigation;
if (isInline) &InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) <int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; &else &x1 = y1;
nsIView* currentView = null; nsCOMPtr<nsISupports> isupports = null; if (mView) <nsCOMPtr<nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) <return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
nsIView* currentView = null; nsCOMPtr<nsISupports> isupports = null; if (mView) <nsCOMPtrnsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) <return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
if (r) <Collection c = r.getAnnotations(); else <if (r) <fprintf(stderr, "%s: %sn", this, r.get(), r.get());
XYBool isDomainAxis = 0 &; XYBool isDomainAxis = &0 ;
if (strcmp(r.getAnnotations(), "str") == 0) c = strcmp(r.getAnnotations(), "str"); <else &c = r.getAnnotations();
if ((r!= r) && (r.getAnnotations()!= 0)) <Collection c = r.getAnnotations(); &else nsAutoString data[r.get()]; if (data[r.get()]) <if (! data[r.get()]) return;
if (strcmp(r.getAnnotations(), "str") == 0) &c = strcmp(r.getAnnotations(), "str"); &else &c = r.getAnnotations();
XYBool isDomainAxis = &0 <; XYBool isDomainAxis = <0 ;
for (i = 0; i &rangeCount; i++) if (IsInArray(&rangeList[i])) &/* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
nsIView* currentView = null; nsCOMPtrnsISupports> isupports = null; if (mView) &nsCOMPtrnsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
for (i = 0; i <r.getAnodes; i++) <r = r.getAnodes[i]; if (r) &r.addAnodes(r.annotations, r.next) - 1;
if ((r!= r) && (r.getAnnotations()!= 0)) <Collection c = r.getAnnotations(); <else &nsAutoString data[r.get()]; if (data[r.get()]) <if (! data[r.get()]) return;
if (r) &nsRect range = r.getRangeCount(); for (; range > 0; range --) &nsRect range; range--; range = 0; <range = 0;
if (strcmp(r.getAnnotations(), "str") == 0) <c = strcmp(r.getAnnotations(), "str"); else &c = r.getAnnotations();
if (!nonCanInclude) <int list = 0; for (i = 0; i r.numChildren; i++) <if (nonCanInclude) &list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (null == this.annotations) &if (! (r.get())) return NS_ERROR_NULL_POINTER; &else &return NS_OK;
<for (i = 0; i <rangeCount; i++) <if (IsInArray(&rangeList[i])) </* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
XYBool isDomainAxis = &0 <; XYBool isDomainAxis = &0 ;
&for (i = 0; i &rangeCount; i++) <if (IsInArray(&rangeList[i])) /* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
XYBool isDomainAxis = <0 ; XYBool isDomainAxis = <0 <;
nsCOMPtr<nsIAtom> tag;
if ((r!= r) && (r.getAnnotations()!= 0)) Collection c = r.getAnnotations(); &else &nsAutoString data[r.get()]; if (data[r.get()]) if (! data[r.get()]) return;
if (null == this.annotations) if (! (r.get())) <return NS_ERROR_NULL_POINTER; <else &return NS_OK;
if ((r!= r) && (r.getAnnotations()!= 0)) &Collection c = r.getAnnotations(); else &nsAutoString data[r.get()]; if (data[r.get()]) <if (! data[r.get()]) return;
<Collection c = r.getAnnotations();
nsIView* currentView = null; nsCOMPtrnsISupports> isupports = null; if (mView) <nsCOMPtr<nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) <return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
XYBool isDomainAxis = 0 ; XYBool isDomainAxis = 0 ;
nsIView* currentView = null; nsCOMPtr&nsISupports> isupports = null; if (mView) <nsCOMPtr<nsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
&for (i = 0; i <rangeCount; i++) &if (IsInArray(&rangeList[i])) </* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (isDomainAxis) &Collection c = r.getAnnotations(); &else
<for (i = 0; i rangeCount; i++) <if (IsInArray(&rangeList[i])) &/* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (isInline) InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) &int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; &else <x1 = y1;
&Collection c = r.getAnnotations();
if (null == this.annotations) <if (! (r.get())) &return NS_ERROR_NULL_POINTER; <else <return NS_OK;
if (null == this.annotations) if (! (r.get())) return NS_ERROR_NULL_POINTER; else &return NS_OK;
<for (i = 0; i r.getAnodes; i++) r = r.getAnodes[i]; if (r) <r.addAnodes(r.annotations, r.next) - 1;
if (r) nsRect range = r.getRangeCount(); for (; range > 0; range --) nsRect range; range--; range = 0; range = 0;
XYBool isDomainAxis = &0 ; XYBool isDomainAxis = 0 &;
for (i = 0; i r.getAnodes; i++) <r = r.getAnodes[i]; if (r) <r.addAnodes(r.annotations, r.next) - 1;
XYBool isDomainAxis = &0 ; XYBool isDomainAxis = <0 &;
if (null == this.annotations) if (! (r.get())) <return NS_ERROR_NULL_POINTER; &else return NS_OK;
<for (i = 0; i <r.getAnodes; i++) <r = r.getAnodes[i]; if (r) &r.addAnodes(r.annotations, r.next) - 1;
&Collection c = r.getAnnotations();
if (isInline) InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; else &x1 = y1;
if (r) nsRect range = r.getRangeCount(); for (; range > 0; range --) &nsRect range; range--; range = 0; range = 0;
if ((r!= r) && (r.getAnnotations()!= 0)) <Collection c = r.getAnnotations(); &else &nsAutoString data[r.get()]; if (data[r.get()]) <if (! data[r.get()]) return;
if (isInline) InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) <int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; <else x1 = y1;
if (isInline) InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) &int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; else x1 = y1;
if (r.hasNavigation) &Selection c = r.navigation; else <Selection c = r.navigation;
if (!nonCanInclude) <int list = 0; for (i = 0; i &r.numChildren; i++) <if (nonCanInclude) list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (r) Collection c = r.getAnnotations(); else <if (r) &fprintf(stderr, "%s: %sn", this, r.get(), r.get());
for (i = 0; i <rangeCount; i++) if (IsInArray(&rangeList[i])) &/* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if (r.hasNavigation) Selection c = r.navigation; &else Selection c = r.navigation;
<for (i = 0; i <rangeCount; i++) <if (IsInArray(&rangeList[i])) /* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
nsresult rv; nsCOMPtr<nsISupports> container = do_QueryInterface(r); if (NS_SUCCEEDED(rv)) <rv = container.GetFirst();
/* * Set the data of the map to the axis. */ int retVal; for (i = 0; i c; i++) int retVal = r.getIndex(i);
<for (i = 0; i &r.getAnodes; i++) r = r.getAnodes[i]; if (r) <r.addAnodes(r.annotations, r.next) - 1;
<for (i = 0; i &rangeCount; i++) &if (IsInArray(&rangeList[i])) &/* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
XYBool isDomainAxis = &0 ; XYBool isDomainAxis = &0 ;
&for (i = 0; i <r.getAnodes; i++) <r = r.getAnodes[i]; if (r) <r.addAnodes(r.annotations, r.next) - 1;
for (i = 0; i &r.getAnodes; i++) &r = r.getAnodes[i]; if (r) r.addAnodes(r.annotations, r.next) - 1;
if (Range) &Collection c = r.getAnnotations(); else <SetRanges(&c);
if (!nonCanInclude) &int list = 0; for (i = 0; i <r.numChildren; i++) if (nonCanInclude) <list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (r.getChildren() == null) nsAutoString c;
if (r.getCount() >= 0) &if (! r.isRemoved()) return;
&nsresult r; nsGenericElement* r;
for (i = 0; i &rangeCount; i++) &if (IsInArray(&rangeList[i])) &/* not done yet */ if (rangeList[i].remaining == 0) /* Not complete */
if ((r!= r) && (r.getAnnotations()!= 0)) &Collection c = r.getAnnotations(); &else &nsAutoString data[r.get()]; if (data[r.get()]) <if (! data[r.get()]) return;
if (isInline) &InlineInsertionPoint x1, y1; int y1, y1; if (x1, y2) <int x1 = x1, y1; x2 = y1, y2; x3 = y1; x4 = y1; <else x1 = y1;
if (strcmp(r.getAnnotations(), "str") == 0) &c = strcmp(r.getAnnotations(), "str"); else c = r.getAnnotations();
if (r) Collection c = r.getAnnotations(); &else if (r) fprintf(stderr, "%s: %sn", this, r.get(), r.get());
if (!nonCanInclude) <int list = 0; for (i = 0; i <r.numChildren; i++) <if (nonCanInclude) &list = r.elementAt(i); if (list) nsCOMPtrnsIAtom> tag; r.attributes[i] = null;
if (Range) &Collection c = r.getAnnotations(); &else <SetRanges(&c);
if (null == this.annotations) if (! (r.get())) &return NS_ERROR_NULL_POINTER; <else &return NS_OK;
nsIView* currentView = null; nsCOMPtrnsISupports> isupports = null; if (mView) <nsCOMPtrnsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) <return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
XYBool isDomainAxis = 0 ; XYBool isDomainAxis = <0 ;
nsIView* currentView = null; nsCOMPtr<nsISupports> isupports = null; if (mView) <nsCOMPtrnsISupports> contexts; r.mView.GetContext(getter_AddRefs(contexts)); if (NS_FAILED(r.mView)) &return r.mView; nsIView* parent; r.mView.GetRootView(getter_AddRefs(parent)); r.mContent.SetView(getter_AddRefs(parent));
