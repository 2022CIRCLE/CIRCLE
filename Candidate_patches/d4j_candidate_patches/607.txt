recordDepScope(nameNode, ns);

recordDepScope(recordNode);
recordDepScope(recordNode, &ns);
recordDepScope(parent, ns);
recordDepScope(ns);
recordDepScope(recordNode, ns, parent);
recordDepScope(t, ns);
recordDepScope(ns, recordNode);
recordDepScope(recordNode, parent, ns);
RecordDepScope(recordNode, ns);
recordRecordDepScope(recordNode, ns);
recordDepScope(recordNode, ns, flags);
recordDepScope(&recordNode, ns);
recordDepScope(recordNode, ns, 0);
recordDepScope(ns, ns);
recordDepScope();
recordDepScope(recordNode, parent);
recordDepScope(node, ns);
recordDepScope(recordNode, nameNode);
recordDepScope(parent, recordNode, ns);
recordDepScope(recordNode, ns);
recordDepScope(recordNode.get(), ns);
recordDepScope(recordNode, ns, t);
recordDepScope(recordNode, n);
recordDepScope(child, ns);
recordDepScope(recordNode, ns, 1);
recordRecordScope(recordNode, ns);
recordDepScope(parentNode, ns);
recordDepScope(ns, recordNode, ns);
recordDepScope(recordNode, ns, null);
recordDepScope(dev, ns);
recordDepScope(recordNode, ns.get());
recordDepScope(recordNode, t, ns);
recordDepScope(recordNode, *ns);
recordDepScope(recordNode, node);
recordDepScope(n, ns);
recordDepScope(recordNode, ns, this);
recordDepScope(recordNode, ns, p);
recordDepScope(ns, ret);
recordDepScope(aRecordNode, ns);
recordDepScope(recordNode, ns, true);
recordDepScope(recordNode, name);
recordRecord(recordNode, ns);
recordDepScope (recordNode, ns);
recordDepScope(recordNode, (void *)ns);
recordDepScope(ns, nameNode);
result = recordDepScope(recordNode, ns);
recordDepScope(nameNode);
recordDepScope(recordNode, ns, -1);
recordDepScope(recordNode, ns, context);
(void) recordDepScope(recordNode, ns);
recordDepScope(recordNode, ns, false);
recordDepScope(ns, &recordNode);
recordDepScope(recordNode, null);
recordDepScope(recordNode, 0);
recordDepScope(childNode, ns);
recordDepScope(RecordNode, ns);
recordDepScope(recordNode, 0, ns);
depScope(recordNode, ns);
recordDepScope(recordNode, (void **)ns);
recordDepScope(treeNode, ns);
recordDepScope(recordNode, rhs);
recordDepScope(aNode, ns);
recordDepScope(recordNode, flags);
recordDepScope(*recordNode, ns);
recordDepScope(ns, res);
recordDepScope(recordNode, &n);
recordDepScope(firstChild, ns);
return recordDepScope(recordNode, ns);
recordDepScope(recordNode, ns, name);
recordNode(recordNode, ns);
recordDepScope(recordNode, "", ns);
recordDepScope(depNode, ns);
recordDepScope(id, ns);
recordDepScope(ns,recordNode);
recordDepScope(n);
recordDepScope(recordNode, s);
recordDepScope(recordNode, t);
recordDepScope(recordNode, ns, count);
recordDepScope(recordNode, ns + 1);
recordDepScope(recordNode, parentNode);
recordDepScope(recordNode, &nameNode);
recordDepScope(recordNode, ns, type);
recordDepScope(cnt, ns);
recordAssign(recordNode, ns);
recordDepScope(n, recordNode);
recordDepScope(recordNode, n, ns);
registerDepScope(recordNode, ns);
recordNameInformation(recordNode, ns);
self.recordDepScope(recordNode, ns);
recordDepScope(recordNode, (int)ns);
recordDepScope(context, ns);
recordDepScope(entry, ns);
recordDepScope(s, ns);
recordErrorScope(recordNode, ns);
recordDepScope(recordNode, "");
recordDepScope(this, recordNode, ns);
reportDepScope(recordNode, ns);
depDepScope(recordNode, ns);
recordDepScope(recordNode, nodeInfo);
recordDepScope(doc, ns);
recordDepScope(t, recordNode, ns);
recordDepScope(ns, t, ns);
recordDepScope(recordNode, ns, null);
recordDepScope(recordNode, result);
recordDepScope(&nameNode, ns);
recordDepScope(recordNode, this, ns);
recordDepScope(ns, nameNode, ns);
recordDepScope(recordNode, m);
recordDepScope(ns, t);
recordDepScope(recordNode, ns, scope);
recordDepScope(recordNode, name, ns);
recordDepScope(recordNode, n, parent);
recordDepScope(p, ns);
recordDepScope(recordNode, p);
recordDepScope(&recordNode);
recordDepScope(recordNode, ns, v);
recordDepCall2(recordNode, ns);
recordDepScope(recordNode, node, ns);
recordDepScope(recordNode, ns, status);
recordDepScope(recordNode, ns, result);
recordDepScope(recordNode, nr);
recordDepScope(recordName, ns);
recordDepScope(recordNode, ns)
recordDepScope(recordNode, ns, n);
recordDepScope(recordNode, n.get());
recordDepScope(this, ns);
recordDepScope(device, ns);
recordDepScope(recordNode, ns, self);
recordDepScope(ns, rhs);
recordDepScope(recordNode, ns, m);
recordDepScope(recordNode, null, ns);
recordDepScope(recordNode, v);
recordDepRecord(recordNode, ns);
recordDepScope(recordNode, ns, s);
recordDepScope(i, ns);
recordDepScope(recordNode, context);
recordDepScope(recordNode, aNode);
recordDepScope(recordNode, nodeType);
recordError(recordNode, ns);
fileDepScope(recordNode, ns);
recordDepScope(recordNode, true);
RecordRecordDepScope(recordNode, ns);
break;
recordDepScope(dep, ns);
recordAssignWithCall2(recordNode, ns);
recordDepScope(ns, parent);
recordDepScope(data, ns);
RecordDepScope();
recordDepScope(recordNode, newNode);
REcordDepScope(recordNode, ns);
RecordDepScopeRecord(recordNode, ns);
recordDepScope(recordNode, ns, len);
recordDepScope(recordNode)
recordDepScope(recordNode, lhs);
recordDepScope(recordNode, ns, data);
recordDepScope(ns.recordNode, ns);
recordDepScope(recordNode, '0');
recordDepScope(recordNode, flags, ns);
recordDepScope(file, ns);
recordDropScope(recordNode, ns);
recordDepScope(recordNode, __func__);
recordDepScope(inNode, ns);
recordDepScope(recordNode, ns.get());
recordDepScope(rhs, ns);
recordDepScope(recordNode, null);
recordDepScope(recordNode, ns, true);
recordDepScope(name, ns);
recordDepScope(recordNode,, ns);
recordEntryScope(recordNode, ns);
recordDepScope(n, recordNode, ns);
recordDepScope(recordNode, 1);
recordDepScope(recordDepNode, ns);
recordDepScope(recordNode, r);
recordDepScope(None, ns);
super.recordDepScope(recordNode, ns);
recordDepScope(lhs, ns);
setDepScope(recordNode, ns);
recordDepScope(conn, ns);
recordEntry(recordNode, ns);
recordDepScope(newNode, ns);
recordDepScope(recordNode, &rhs);
recordDepScope(recordNode, (void**)ns);
recordDepScope(recordNode,ns);
recordDepScope(recordNode, &node);
recordDepScope(eNode, ns);
depScopeRecord(recordNode, ns);
recordNode(recordNode);
recordDepScope(recordNode, ns, node);
recordDepScope(recordNode, ns, 2);
recordDepScope(ns, p);
recordDepScope(recordNode, ns, global);
recordDepScope(recordNode, ns, i);
recordDepScope(recordNode, newName);
recordNode(ns);
recordDepScope(recordNode, ns, "");
recordDepScope(recordNode, ns, offset);
recordDepScope(recordNode, ns, childList);
recordDepScope(recordNode, ns, nodeIsList);
recordDepScope(recordNode, ns, msg);
recordDepScope(recordNode, ns, &parent);
recordDepScope(recordNode, ns, rhs);
recordDepScope(recordNode, ns, ns);
recordDepScope(recordNode, ns, &mScope);
recordDepScope(recordNode, (struct name *)ns);
recordDepScope(recordNode, ns, aChildList);
recordDepScope(recordNode, ns, &rhs);
recordDepScope(recordNode, ns, *aResult);
recordDepScope(recordNode, ns, getter_AddRefs(recognized_records));
recordDepScope(recordNode, ns, &reg);
recordDepScope(recordNode, ns, aErrorCode);
recordDepScope(recordNode, ns, true);
recordDepScope(recordNode, ns, ns.get());
recordDepScope(recordNode, ns, ns_stats);
recordDepScope(recordNode, ns, aDep);
recordDepScope(ns, ret, parent);
recordDepScope(recordNode, ns, nameNode.getParent());
recordDepScope(recordNode, ns, mRoot);
recordDepScope(recordNode, ns, (PRUint32)mNodeNames);
recordDepScope(recordNode, ns, &rel);
recordDepScope(recordNode, ns, isActive);
recordDepScope(recordNode, ns, *aEmptyElements);
recordDepScope(recordNode, ns, ns.nodeCount);
recordDepScope(recordNode, ns, &t);
recordDepScope(recordNode, ns, nodeContext);
recordDepScope(recordNode, ns, aScope);
recordDepScope(recordNode, ns, &name);
recordDepScope(recordNode, ns, &ret);
recordDepScope(recordNode, ns, ns.nodeInfo);
recordDepScope(recordNode, ns, nsCstrlen(parent));
recordDepScope(recordNode, ns, node.nodeType);
recordDepScope(recordNode, ns, aRecord);
recordDepScope(recordNode, ns, &res);
recordDepScope(recordNode, ns, (Integer)0);
recordDepScope(recordNode, ns, nameNode, ns);
recordDepScope(recordNode, ns, (void **)&ns);
recordDepScope(recordNode, ns, isMem);
recordDepScope(recordNode, ns, &nameNode);
recordDepScope(ns,recordNode, ns);
recordDepScope(recordNode, ns, isFor);
recordDepScope(recordNode, ns, ns.ioCallback);
recordDepScope(recordNode, ns, getter_AddRefs(ns));
recordDepScope(recordNode, ns, nameNode);
recordDepScope(recordNode, ns, false);
recordDepScope(recordNode, ns, &recordDepScope);
recordDepScope(recordNode, ns, &bFlags);
recordDepScope(recordNode, ns, id);
recordDepScope(recordNode, ns, mProperties);
recordDepScope(recordNode, ns, aResult);
recordDepScope(recordNode, ns, ns.next)
recordDepScope(recordNode, ns, isReporter);
recordDepScope(recordNode, ns, (void**)&ns);
recordDepScope(recordNode, ns, isForwards);
recordDepScope(recordNode, ns, i, i);
recordDepScope(recordNode, ns, i, ip);
recordDepScope(recordNode, ns, ns.GetPropertyInfo());
recordDepScope(recordNode, ns, ns.nodeType);
recordDepScope(recordNode, ns, &do_record);
recordDepScope(recordNode, ns, ns.rhs);
recordDepScope(recordNode, ns, ns.assign);
recordDepScope(recordNode, (void **) ns);
recordDepScope(recordNode, (ns *)ns);
recordDepScope(recordNode, ns, nsScope);
recordDepScope(recordNode, ns, nsScope, nodeScope);
recordDepScope(recordNode, ns, &result);
recordDepScope(recordNode, ns, &s);
recordDepScope(recordNode, ns, &false);
recordDepScope(recordNode, ns, &ns);
recordDepScope(recordNode, ns, ns.parent);
recordDepScope(recordNode, ns, t, nameNode);
recordDepScope(recordNode, ns, getter_AddRefs(getter_AddRefs(ns)));
recordDepScope(recordNode, ns, (Unsigned char *)ns);
recordDepScope(recordNode, '&0');
recordDepScope(recordNode, '0');
recordDepScope(recordNode, ns);
recordDepScope(recordNode, '<0');
