golden:
return iZone.convertLocalToUTC(localInstant, false);
inference:
return iZone.convertLocalToUTC(localInstant);
return (iZone.convertLocalToUTC(localInstant, false));
return localInstant;
return convertLocalToUTC(localInstant, false);
return iZone.convertLocalToUTC(localInstant, false);
return iZone.convertLocalToUTC(localInstant, 0);
return 0;
return iZone.convertLocalToUTC(localInstant, true);
return iZone.convertUTCToLocal(localInstant, false);
return localInstant - offset;
return iZone.convertUnicodeToUTC(localInstant, false);
return iZone.convertLocalToUTC(localInstant, value);
return iZone.convertUTC(localInstant);
return iZone.convertIntToUTC(localInstant, false);
return iZone.getLocalToUTC(localInstant, false);
return iZone.convertLocalToUTC(localInstant, false);
return iZone.convertLocalToUTC(localInstant + 1, false);
return iZone.convertUTCToLocal(localInstant, value);
return iZone.convertLocalToUTC(localInstant + offset, false);
return iZone.convertUTC(localInstant, false);
return localInstant - localInstant;
return iZone.convertLocalToUTC(localInstant - 1, false);
return iZone.convertUTC(localInstant, 0);
return iZone.convertLocalToUTC(localInstant+1, false);
return iZone.convertUTCToLocal(localInstant);

return iZone.convertLocalToUTC(localInstant, false);
return iZone.localToUTC(localInstant, false);
return iZone.convertLocalToUTC(localInstant, null);
return iZone.convertLiteralToUTC(localInstant, false);
return iZone.convertLocalToUTC(localInstant, -1);
return iZone.convertUTC(localInstant, true);
return iZone.convertLocalToUTC(localInstant, 1);
return iZone.convertULocalToUTC(localInstant, false);
return iZone.convertLocalToUnicode(localInstant, false);
return (iZone).convertLocalToUTC(localInstant, false);
return iZone.convertNativeToUTC(localInstant, false);
return iZone.convertLocalToUTC(localInstant, false);
return iZone.convertStringToUTC(localInstant, false);
return nsCRT::convertLocalToUTC(localInstant, false);
return iZone.convertUTC(localInstant, true);
return iZone.convertLocalToUTF16(localInstant, false);
return iZone.convertLocalToUTC(localInstant, true);
return iZone.convertZoneToUTC(localInstant, false);
return iZone.convert(localInstant, false);
return -1;
return iZone.convertLocalToUTF8(localInstant, false);
return result;
return!iZone.convertLocalToUTC(localInstant, false);
return iZone.convertLocalToString(localInstant, false);
return iZone.convertLocalToUTC(localInstant-1, false);
return iZone.convertLocalToUTC(localInstant + 1);
return iZone.convertLocalToUTC(localInstant - 1);
return localInstant - 1;
return convertUTC(localInstant, false);
return convLocalToUTC(localInstant, false);
return LocalToUTC(localInstant, false);
return localInstant  0;
return iZone.convertToUTC(localInstant);
return iZone.convertUTCToLocalToUTC(localInstant);
return iZone.convertLocalToUTC(localInstant, 0, 0);
return IZone.convertLocalToUTC(localInstant, false);
return (iZone.convertLocalToUTC(localInstant, false));
return(iZone.convertLocalToUTC(localInstant, false));
return iZone.LocalToUTC(localInstant, false);
return iZone.convertUTCToLocal(localInstant, true);
return iZone.convertLocalToUTC(localInstant, true);
return iZone.convertLocalToUTC(localInstant, offset);
return iZone.convertTextToUTC(localInstant, false);
return iZone.convertUTCToUTC(localInstant);
return &iZone.convertLocalToUTC(localInstant, false);
return true;
return iZone.convertURIToUTC(localInstant, false);
return jZone.convertLocalToUTC(localInstant, false);
return iZone.convertXLocalToUTC(localInstant, false);
return null;
return iZone.convertLocalToUTC (localInstant, false);
return -iZone.convertLocalToUTC(localInstant, false);
return iZone.resolveLocalToUTC(localInstant, false);
return convertUTCToUTC(localInstant, false);
return iZone.convertLocalToInt(localInstant, false);
return iZone.constLocalToUTC(localInstant, false);
return iZone.convertLocalToUTC(localInstant, true);
return iZone.ConvertLocalToUTC(localInstant);
return ConvertLocalToUTC(localInstant, false);
return iZone.convertLocalToUTC(localInstant);
return iZone.convertUTC(localInstant, value);
return iZone.convertLocalToUTC(localInstant) - 1;
return convertToUTC(localInstant, false);
return _iZone.convertLocalToUTC(localInstant, false);
return iZone.convertToUTC(localInstant, 0);
return iZone.convertXMLToUTC(localInstant, false);
return iZone.convertUTCFunc(localInstant, false);
return iZone.unconvertLocalToUTC(localInstant, false);
return iZone.convertFromUTC(localInstant, false);
return iZone.convertEncodingToUTC(localInstant, false);
return iZone.convertLocalToUTC(&localInstant, false);
return iZone.convertLStringToUTC(localInstant, false);
return iZone.convertToUTC(localInstant, false);
return iZone.convertNativeLocalToUTC(localInstant, false);
iZone.convertLocalToUTC(localInstant, false);
return localInstant - value;
return iZone.convertUTC(localInstant, false);
return iZone.toUTC(localInstant, false);
return iZone.convertLocalToUTC(iField, false);
return iZone.convertToUTC(localInstant, true);
return iZone.convertUTC(localInstant, false);
return iZone.convertUTCStringToUTC(localInstant, false);
return iZone.convertLS(localInstant, false);
return iZone.findLocalToUTC(localInstant, false);
return iZone.convertUTCD(localInstant, false);
return convertLocalToUTC(localInstant, true);
return iZone.convertTypeToUTC(localInstant, false);
return localInstant!= 0;
return ConvertUTCToUTC(localInstant, false);
return iZone.addLocalToUTC(localInstant, false);
return iZone.convertUtcToUTC(localInstant, false);
return 1;
return localInstant + offset;
return iZone.strdup(localInstant);
return iZone.convertUtc(localInstant, false);
return iZone.convertShortToUTC(localInstant, false);
return localeToUTC(localInstant, false);
return iZone.convertLocalToUTC(localInstant[0], false);
return iZone.convertUTCFullToUTC(localInstant, false);
return iZone.convertLocalToUTC(instant, false);
return iZone.convertLocalToUTC(llocalInstant, false);
return iZone.convertUTCFuncToUTC(localInstant, false);
return localInstant == 0;
return iZone.convertLSIntToUTC(localInstant, false);
return iZone.decodeLocalToUTC(localInstant, false);
return iZone.convertLocalToUTC(localInstant + 0, false);
return iZone.convertConvertLocalToUTC(localInstant, false);
return iZone.convertToUTC(localInstant, true);
return iZone.convertLocalToUTC(localInstant+1);
return iZone.convertIZoneToUTC(localInstant, false);
return iZone.convertFlatStringToUTC(localInstant, false);
return localInstant >= 0;
return iZone.convertUnsignedIntToUTC(localInstant, false);
return iZone.convertUTCFlatToUTC(localInstant, false);
return iZone.convertLocalToUTC(int, false);
return iZone.convertUTCToLocal(localInstant, 0);
return iZone.convertUTC(localInstant, false, 0);
return iZone.convertInt(localInstant, false);
return iZone.convertLocalToUTC(localInstant - offset);
return iZone.convertILocalToUTC(localInstant, false);
return iZone.convertUnsigned32ToUTC(localInstant, false);
return iZone.convertLocalToUTC(localInstant++, false);
return iZone.convertUTCToUTC(localInstant, false);
result = iZone.convertLocalToUTC(localInstant, false);
return izone.convertLocalToUTC(localInstant);
return iZone.convertGlobalToUTC(localInstant, false);
return localInstant!= null;
return iZone.convertUTCToUTC(localInstant, 0);
return localInstant, false;
return iZone.convertUTCFileToUTC(localInstant, false);
return iZone.convertUTCToStringToUTC(localInstant, false);
return iZone.convertBoolToUTC(localInstant, false);
return iZone.convertCStringToUTC(localInstant, false);
return iZone.convertToUTC(localInstant, false);
return convertLocalToUTC(localInstant);
return localInstant + 1;
return rv;
return iZone.convertLocalToUTC(iField.get(), false);
return iZone.convertUTCPoolToUTC(localInstant, false);
return iZone.convertLocalToLocal(localInstant, false);
return iZone.convertLocalToUTC(localInstant, 0);
return offset;
return iZone.convertLocalToUTC(localInstant, &error);
return value;
return iZone.convert(localInstant);
return iZone.add(localInstant, value);
return iZone.convertUTCToUTC(localInstant, true);
return localInstant.get();
return iZone.convertLocalToUTC(localInstant, true, false);
return iZone.copyToUTC(localInstant, false);
return iZone.convertLocalToUTC(iZone.get(), false);
return (localInstant - offset);
return iZone.convertLocalToUTC(localInstant, &value);
return iZone.convertLocalToUTC(localInstant) - offset;
return iZone.convertLocalToUTC(localInstant, false, offset);
return '0';
return (localInstant);
return iZone.convertLocalToUTC(localInstant, false, 1);
localInstant = iZone.convertLocalToUTC(localInstant);
return false;
return locale;
return iZone.convertLocalToUTC(localInstant, false, value);
return this;
return iZone.convertLocalToUTC(localInstant, false, true);
return iZone;
return ret;
return len;
goto out;
break;
if (iZone.convertLocalToUTC(localInstant, false))  return iZone.convertLocalToUTC(localInstant, false);  else  return iZone.convertLocalToUTC(localInstant, false);
return iZone.convertUTCToLocalToUTC(localInstant, false);
return iZone.convertLocalToUTC(localInstant, (int)false);
if (localInstant == '0') return iZone.convertLocalToUTC(localInstant, false); else return iZone.convertLocalToUTC(localInstant, false);
return localInstant - iZone.convertLocalToUTC(localInstant, false);
return iZone.convertUTC(localInstant, nsCRT::strlen(localInstant));
iZone.convertLocalToUTC(localInstant, false); return iZone.add(localInstant);
return iZone.convertUTCFunctionToUTC(localInstant, false);
return iZone.convertLocalToUTC(localInstant, true);
rv = iZone.convertLocalToUTC(localInstant, false); if (NS_FAILED(rv)) return (rv); return (rv);
return iZone.convertUseIntToUTC(localInstant, false);
return iZone.convertLocalToUTC(localInstant, iZone.UTC_Local, false);
return iZone.convertToUTC(localInstant, iZone.T_UTC(localInstant));
return iZone.convertLocalToUTC(localInstant, false);
return iZone.convertLocalToUTC(localInstant, ((char *)-1);
return iZone.convertLocalToUTC(localInstant, false, 0);
return iZone.convertUserAsciiToUTC(localInstant, false);
iZone.convertLocalToUTC(localInstant, false); return iZone.computeLocalToUTC(localInstant);
return iZone.convertUTC(localInstant, iZone.tLocal);
return iZone.convertLocalToUTC(localInstant, getTime());
return iZone.convertLocalToUTC(localInstant, false, false);
if (localInstant)  return iZone.convertLocalToUTC(localInstant, false);  else  return iZone.convertLocalToUTC(localInstant, false);
return iZone.convertUnsigned32(localInstant, false);
return iZone.convertLocalToUTC(localInstant, (int)0);
return iZone.convertLocalToUTC(localInstant, (unsigned long)false);
return iZone.convertLocalToUTC(localInstant, (unsigned char *) false);
return iZone.convertUTC(localInstant, false, false);
return iZone.convertLocalToUTC(localInstant, iField.add(localInstant), false);
return iZone.convertLocalToUTC(localInstant, 0, false);
return iZone.convertLocalToUTC(localInstant, false, &buf);
return localInstant = iZone.convertLocalToUTC(localInstant, false);
iZone.convertLocalToUTC(localInstant, false); return iZone.getLength() - offset;
if (iZone.convertLocalToUTC(localInstant, false)) return 0; else return 1;
if (iZone.convertLocalToUTC(localInstant, false)) return 0; return 1;
rv = iZone.convertLocalToUTC(localInstant, false); if (rv == 0)  return rv;  return rv;
return iZone.convertLocalToUTC(localInstant, iZone.get());
return localInstant - iZone.convertLocalToUTC(localInstant);
return iZone.convertLocalToUTC(localInstant, 0, true);
return iZone.convertLocalToUTC(localInstant, iField.add(localInstant));
ret = iZone.convertLocalToUTC(localInstant, false); return (ret);
/* FIELD_LOCAL */ return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0)  return (iZone.convertLocalToUTC(localInstant, false));  else  iZone.convertLocalToUTC(localInstant, false);  return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
return iZone.convertUseDataToUTC(localInstant, false);
return iZone.convertUTC(localInstant, (u_long)false);
return iZone.convertLocalToUTC(localInstant, (long)false);
res = iZone.convertLocalToUTC(localInstant, false); if (res!= 0)  res = res;  return res;
ret = iZone.convertLocalToUTC(localInstant, false); if (ret)  *aCase = ret;  return ret;
iZone.convertLocalToUTC(localInstant, false); return 0;
return iZone.convertLocalToUTC(localInstant, true, false);
return iZone.convertUtf8ToUTF(localInstant, false);
return iZone.convertLocalToUTC(localInstant, false, true);
iZone.convertLocalToUTC(localInstant, false); return iZone.convertUTCToLocal(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false)) return (localInstant); else return (iZone.convertLocalToUTC(localInstant, false));
iZone.convertLocalToUTC(localInstant, false); return iZone.isValid()? 0 : 1;
return iZone.convertLocalToUTC(localInstant, getter_Copies(localInstant));
return localInstant - (iZone.convertLocalToUTC(localInstant), false);
if (localInstant == null)  return 0;  return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false)  0) return (long) iZone.convertLocalToUTC(localInstant, false); return (long)iZone.convertLocalToUTC(localInstant, false);  return 0;
return iZone.convertLocalToUTC(localInstant, (int) false);
return iZone.convertUTC(localInstant, (int)false);
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0)  char *buf; while (*buf)  if (*buf) *buf = buffer;    return 0;
iz = iZone.convertLocalToUTC(localInstant, false); if (iz == null) return -1; /* * If XXX would never do it, then revert * it to the zero value of the result. */ return iz;
return iZone.convertLocalToUTC(localInstant, getLocalBytecode(localInstant));
return iZone.convertUrlToUTC(localInstant, false);
/* * Make sure the input argument * has been mapped to a literal value. */ if (iField.add(localInstant, value))  int offset = getOffsetToAdd(instant); if (iField.add(localInstant + offset, value))  iField.add(localInstant + offset, value);  return iZone.convertLocalToUTC(localInstant, false);
return iZone.convertLocalToUTC(localInstant, (void *)&iZone.iLocalToUTC);
return iZone.convertUTCFunctionToUser(localInstant, false);
return iZone.convertUTC(localInstant, false, iZone.strlen(localInstant));
return iZone.convertLocalToUTC(localInstant, (long) false);
if (localInstant)  return localInstant - offset;  else  return iZone.convertLocalToUTC(localInstant, false);
return iZone.convertUTCToUTC(localInstant, false);
if (iZone)  iZone = iZone.convertLocalToUTC(localInstant, false); return iZone;  else  return iZone.convertLocalToUTC(localInstant, false);
return iZone.convertLocalToUTC(localInstant, iZone.dbName, false);
return iZone.convertLocalToUTC(localInstant, ((int)value));
iZone.convertLocalToUTC(localInstant, false); return (iZone.convertLocalToUTC(localInstant, false));
/* * Make sure the input argument * has been mapped to a literal value. */ if (iField.add(localInstant, value)) &int offset = getOffsetToAdd(instant); if (iField.add(localInstant + offset, value)) iField.add(localInstant + offset, value); return iZone.convertLocalToUTC(localInstant, false);
/* * Make sure the input argument * has been mapped to a literal value. */ if (iField.add(localInstant, value)) <int offset = getOffsetToAdd(instant); if (iField.add(localInstant + offset, value)) <iField.add(localInstant + offset, value); &return iZone.convertLocalToUTC(localInstant, false);
if (localInstant == null) &return 0; return iZone.convertLocalToUTC(localInstant, false);
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) <char *buf; while (*buf) &if (*buf) *buf = buffer; return 0;
if (iZone) iZone = iZone.convertLocalToUTC(localInstant, false); return iZone; else return iZone.convertLocalToUTC(localInstant, false);
res = iZone.convertLocalToUTC(localInstant, false); if (res!= 0) <res = res; <return res;
if (iZone) iZone = iZone.convertLocalToUTC(localInstant, false); return iZone; else <return iZone.convertLocalToUTC(localInstant, false);
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) char *buf; while (*buf) &if (*buf) *buf = buffer; &<return 0;
/* * Make sure the input argument * has been mapped to a literal value. */ if (iField.add(localInstant, value)) &int offset = getOffsetToAdd(instant); if (iField.add(localInstant + offset, value)) <iField.add(localInstant + offset, value); &return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false)) return iZone.convertLocalToUTC(localInstant, false); &else <return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) &return (iZone.convertLocalToUTC(localInstant, false)); &else <iZone.convertLocalToUTC(localInstant, false); &return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false) == 0) &return (iZone.convertLocalToUTC(localInstant, false)); &else <iZone.convertLocalToUTC(localInstant, false); <return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false)) &return iZone.convertLocalToUTC(localInstant, false); else return iZone.convertLocalToUTC(localInstant, false);
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) char *buf; while (*buf) if (*buf) *buf = buffer; <&return 0;
if (iZone.convertLocalToUTC(localInstant, false) == 0) return (iZone.convertLocalToUTC(localInstant, false)); &else <iZone.convertLocalToUTC(localInstant, false); &return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) &char *buf; while (*buf) <if (*buf) *buf = buffer; &return 0;
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) &char *buf; while (*buf) if (*buf) *buf = buffer; &return 0;
if (iZone.convertLocalToUTC(localInstant, false)) return iZone.convertLocalToUTC(localInstant, false); &else &return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) return (iZone.convertLocalToUTC(localInstant, false)); else iZone.convertLocalToUTC(localInstant, false); &return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) <char *buf; while (*buf) <if (*buf) *buf = buffer; &&return 0;
if (iZone) iZone = iZone.convertLocalToUTC(localInstant, false); return iZone; &else return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false)) return iZone.convertLocalToUTC(localInstant, false); else <return iZone.convertLocalToUTC(localInstant, false);
if (localInstant) <return localInstant - offset; <else &return iZone.convertLocalToUTC(localInstant, false);
if (localInstant == null) &return 0; &return iZone.convertLocalToUTC(localInstant, false);
if (localInstant == null) <return 0; &return iZone.convertLocalToUTC(localInstant, false);
if (localInstant) &return localInstant - offset; else return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) <return (iZone.convertLocalToUTC(localInstant, false)); &else <iZone.convertLocalToUTC(localInstant, false); &return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false)) <return iZone.convertLocalToUTC(localInstant, false); <else &return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) <return (iZone.convertLocalToUTC(localInstant, false)); <else &iZone.convertLocalToUTC(localInstant, false); return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
/* * Make sure the input argument * has been mapped to a literal value. */ if (iField.add(localInstant, value)) &int offset = getOffsetToAdd(instant); if (iField.add(localInstant + offset, value)) <iField.add(localInstant + offset, value); <return iZone.convertLocalToUTC(localInstant, false);
if (localInstant == '0') return iZone.convertLocalToUTC(localInstant, false); else return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) <return (iZone.convertLocalToUTC(localInstant, false)); <else <iZone.convertLocalToUTC(localInstant, false); <return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone) iZone = iZone.convertLocalToUTC(localInstant, false); return iZone; <else <return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) &return (iZone.convertLocalToUTC(localInstant, false)); <else iZone.convertLocalToUTC(localInstant, false); &return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
ret = iZone.convertLocalToUTC(localInstant, false); if (ret) *aCase = ret; <return ret;
if (iZone) <iZone = iZone.convertLocalToUTC(localInstant, false); return iZone; &else <return iZone.convertLocalToUTC(localInstant, false);
&return iZone.convertLocalToUTC(localInstant, false);
if (iZone) iZone = iZone.convertLocalToUTC(localInstant, false); return iZone; <else &return iZone.convertLocalToUTC(localInstant, false);
res = iZone.convertLocalToUTC(localInstant, false); if (res!= 0) &res = res; return res;
if (localInstant == null) <return 0; <return iZone.convertLocalToUTC(localInstant, false);
if (iZone) &iZone = iZone.convertLocalToUTC(localInstant, false); return iZone; &else return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) return (iZone.convertLocalToUTC(localInstant, false)); <else iZone.convertLocalToUTC(localInstant, false); &return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false) == 0) return (iZone.convertLocalToUTC(localInstant, false)); &else &iZone.convertLocalToUTC(localInstant, false); &return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false) <0) return (long) iZone.convertLocalToUTC(localInstant, false); return (long)iZone.convertLocalToUTC(localInstant, false); return 0;
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) char *buf; while (*buf) &if (*buf) *buf = buffer; &return 0;
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) char *buf; while (*buf) <if (*buf) *buf = buffer; <&return 0;
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) <char *buf; while (*buf) if (*buf) *buf = buffer; <<return 0;
if (iZone.convertLocalToUTC(localInstant, false) == 0) return (iZone.convertLocalToUTC(localInstant, false)); <else iZone.convertLocalToUTC(localInstant, false); return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false)) &return iZone.convertLocalToUTC(localInstant, false); &else &return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) <return (iZone.convertLocalToUTC(localInstant, false)); else <iZone.convertLocalToUTC(localInstant, false); return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false) &0) return (long) iZone.convertLocalToUTC(localInstant, false); return (long)iZone.convertLocalToUTC(localInstant, false); return 0;
if (iZone) &iZone = iZone.convertLocalToUTC(localInstant, false); return iZone; &else <return iZone.convertLocalToUTC(localInstant, false);
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) <char *buf; while (*buf) if (*buf) *buf = buffer; &return 0;
if (iZone.convertLocalToUTC(localInstant, false) == 0) return (iZone.convertLocalToUTC(localInstant, false)); <else <iZone.convertLocalToUTC(localInstant, false); return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) &char *buf; while (*buf) &if (*buf) *buf = buffer; <<return 0;
ret = iZone.convertLocalToUTC(localInstant, false); if (ret) <*aCase = ret; return ret;
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) char *buf; while (*buf) &if (*buf) *buf = buffer; <return 0;
if (iZone.convertLocalToUTC(localInstant, false)) &return iZone.convertLocalToUTC(localInstant, false); &else return iZone.convertLocalToUTC(localInstant, false);
if (localInstant) <return iZone.convertLocalToUTC(localInstant, false); &else &return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) &0) return (long) iZone.convertLocalToUTC(localInstant, false); return (long)iZone.convertLocalToUTC(localInstant, false); <return 0;
return '<0';
<if (iZone.convertLocalToUTC(localInstant, false) 0) return (long) iZone.convertLocalToUTC(localInstant, false); return (long)iZone.convertLocalToUTC(localInstant, false); &return 0;
if (iZone.convertLocalToUTC(localInstant, false) == 0) return (iZone.convertLocalToUTC(localInstant, false)); else <iZone.convertLocalToUTC(localInstant, false); <return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
/* * Make sure the input argument * has been mapped to a literal value. */ if (iField.add(localInstant, value)) <int offset = getOffsetToAdd(instant); if (iField.add(localInstant + offset, value)) iField.add(localInstant + offset, value); <return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false)) &return iZone.convertLocalToUTC(localInstant, false); else <return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) return (iZone.convertLocalToUTC(localInstant, false)); else iZone.convertLocalToUTC(localInstant, false); <return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
return iZone.convertLocalToUTC(localInstant, false);
rv = iZone.convertLocalToUTC(localInstant, false); if (rv == 0) &return rv; return rv;
if (iZone.convertLocalToUTC(localInstant, false) == 0) <return (iZone.convertLocalToUTC(localInstant, false)); &else <iZone.convertLocalToUTC(localInstant, false); <return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
return '&0';
if (iZone.convertLocalToUTC(localInstant, false) == 0) &return (iZone.convertLocalToUTC(localInstant, false)); else &iZone.convertLocalToUTC(localInstant, false); <return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (localInstant) &return iZone.convertLocalToUTC(localInstant, false); &else &return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) return (iZone.convertLocalToUTC(localInstant, false)); else &iZone.convertLocalToUTC(localInstant, false); return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (localInstant) &return localInstant - offset; &else return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) <return (iZone.convertLocalToUTC(localInstant, false)); <else <iZone.convertLocalToUTC(localInstant, false); return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false) 0) return (long) iZone.convertLocalToUTC(localInstant, false); return (long)iZone.convertLocalToUTC(localInstant, false); &return 0;
/* * Make sure the input argument * has been mapped to a literal value. */ if (iField.add(localInstant, value)) <int offset = getOffsetToAdd(instant); if (iField.add(localInstant + offset, value)) iField.add(localInstant + offset, value); &return iZone.convertLocalToUTC(localInstant, false);
<return iZone.convertLocalToUTC(localInstant, false);
<if (iZone.convertLocalToUTC(localInstant, false) <0) return (long) iZone.convertLocalToUTC(localInstant, false); return (long)iZone.convertLocalToUTC(localInstant, false); return 0;
if (iZone.convertLocalToUTC(localInstant, false)) <return iZone.convertLocalToUTC(localInstant, false); &else <return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false)) &return iZone.convertLocalToUTC(localInstant, false); <else &return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false)) return iZone.convertLocalToUTC(localInstant, false); <else return iZone.convertLocalToUTC(localInstant, false);
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) <char *buf; while (*buf) if (*buf) *buf = buffer; &&return 0;
if (iZone.convertLocalToUTC(localInstant, false) == 0) <return (iZone.convertLocalToUTC(localInstant, false)); &else iZone.convertLocalToUTC(localInstant, false); &return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false)) &return iZone.convertLocalToUTC(localInstant, false); else &return iZone.convertLocalToUTC(localInstant, false);
if (iZone) &iZone = iZone.convertLocalToUTC(localInstant, false); return iZone; else return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) return (iZone.convertLocalToUTC(localInstant, false)); &else iZone.convertLocalToUTC(localInstant, false); <return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false)) return iZone.convertLocalToUTC(localInstant, false); &else return iZone.convertLocalToUTC(localInstant, false);
/* * Make sure the input argument * has been mapped to a literal value. */ if (iField.add(localInstant, value)) &int offset = getOffsetToAdd(instant); if (iField.add(localInstant + offset, value)) &iField.add(localInstant + offset, value); <return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) &return (iZone.convertLocalToUTC(localInstant, false)); <else &iZone.convertLocalToUTC(localInstant, false); &return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false)) &return iZone.convertLocalToUTC(localInstant, false); &else <return iZone.convertLocalToUTC(localInstant, false);
if (localInstant) return iZone.convertLocalToUTC(localInstant, false); &else <return iZone.convertLocalToUTC(localInstant, false);
if (localInstant) return localInstant - offset; else &return iZone.convertLocalToUTC(localInstant, false);
ret = iZone.convertLocalToUTC(localInstant, false); if (ret) &*aCase = ret; &return ret;
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) &char *buf; while (*buf) <if (*buf) *buf = buffer; &<return 0;
if (localInstant) <return iZone.convertLocalToUTC(localInstant, false); else return iZone.convertLocalToUTC(localInstant, false);
if (localInstant) &return iZone.convertLocalToUTC(localInstant, false); <else return iZone.convertLocalToUTC(localInstant, false);
if (iZone) &iZone = iZone.convertLocalToUTC(localInstant, false); return iZone; <else &return iZone.convertLocalToUTC(localInstant, false);
res = iZone.convertLocalToUTC(localInstant, false); if (res!= 0) res = res; &return res;
if (localInstant) &return localInstant - offset; &else <return iZone.convertLocalToUTC(localInstant, false);
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) &char *buf; while (*buf) <if (*buf) *buf = buffer; <<return 0;
if (localInstant) return localInstant - offset; else <return iZone.convertLocalToUTC(localInstant, false);
if (localInstant) return localInstant - offset; <else &return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) return (iZone.convertLocalToUTC(localInstant, false)); else <iZone.convertLocalToUTC(localInstant, false); return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (localInstant) &return localInstant - offset; <else return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) <return (iZone.convertLocalToUTC(localInstant, false)); <else iZone.convertLocalToUTC(localInstant, false); &return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false)) return iZone.convertLocalToUTC(localInstant, false); else &return iZone.convertLocalToUTC(localInstant, false);
if (iZone) <iZone = iZone.convertLocalToUTC(localInstant, false); return iZone; else &return iZone.convertLocalToUTC(localInstant, false);
return localInstant &0;
rv = iZone.convertLocalToUTC(localInstant, false); if (rv == 0) return rv; return rv;
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) <char *buf; while (*buf) <if (*buf) *buf = buffer; <return 0;
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) char *buf; while (*buf) &if (*buf) *buf = buffer; return 0;
/* * Make sure the input argument * has been mapped to a literal value. */ if (iField.add(localInstant, value)) int offset = getOffsetToAdd(instant); if (iField.add(localInstant + offset, value)) &iField.add(localInstant + offset, value); <return iZone.convertLocalToUTC(localInstant, false);
if (localInstant == null) <return 0; return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) return (iZone.convertLocalToUTC(localInstant, false)); else &iZone.convertLocalToUTC(localInstant, false); <return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) char *buf; while (*buf) <if (*buf) *buf = buffer; <return 0;
if (localInstant) <return localInstant - offset; else <return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false)) return iZone.convertLocalToUTC(localInstant, false); <else <return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) &return (iZone.convertLocalToUTC(localInstant, false)); else <iZone.convertLocalToUTC(localInstant, false); return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
rv = iZone.convertLocalToUTC(localInstant, false); if (rv == 0) <return rv; return rv;
if (localInstant) <return localInstant - offset; &else <return iZone.convertLocalToUTC(localInstant, false);
if (localInstant) &return localInstant - offset; <else <return iZone.convertLocalToUTC(localInstant, false);
/* * Make sure the input argument * has been mapped to a literal value. */ if (iField.add(localInstant, value)) <int offset = getOffsetToAdd(instant); if (iField.add(localInstant + offset, value)) &iField.add(localInstant + offset, value); &return iZone.convertLocalToUTC(localInstant, false);
if (iZone) iZone = iZone.convertLocalToUTC(localInstant, false); return iZone; &else <return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) &return (iZone.convertLocalToUTC(localInstant, false)); else &iZone.convertLocalToUTC(localInstant, false); return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) char *buf; while (*buf) if (*buf) *buf = buffer; <<return 0;
if (iZone.convertLocalToUTC(localInstant, false) == 0) return (iZone.convertLocalToUTC(localInstant, false)); <else &iZone.convertLocalToUTC(localInstant, false); <return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) &char *buf; while (*buf) <if (*buf) *buf = buffer; &&return 0;
&if (iZone.convertLocalToUTC(localInstant, false) 0) return (long) iZone.convertLocalToUTC(localInstant, false); return (long)iZone.convertLocalToUTC(localInstant, false); &return 0;
/* * Make sure the input argument * has been mapped to a literal value. */ if (iField.add(localInstant, value)) &int offset = getOffsetToAdd(instant); if (iField.add(localInstant + offset, value)) &iField.add(localInstant + offset, value); &return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) 0) return (long) iZone.convertLocalToUTC(localInstant, false); return (long)iZone.convertLocalToUTC(localInstant, false); return 0;
ret = iZone.convertLocalToUTC(localInstant, false); if (ret) *aCase = ret; return ret;
if (iZone) &iZone = iZone.convertLocalToUTC(localInstant, false); return iZone; else &return iZone.convertLocalToUTC(localInstant, false);
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) char *buf; while (*buf) <if (*buf) *buf = buffer; &<return 0;
if (localInstant) return localInstant - offset; &else &return iZone.convertLocalToUTC(localInstant, false);
&if (iZone.convertLocalToUTC(localInstant, false) &0) return (long) iZone.convertLocalToUTC(localInstant, false); return (long)iZone.convertLocalToUTC(localInstant, false); <return 0;
if (localInstant) &return iZone.convertLocalToUTC(localInstant, false); else return iZone.convertLocalToUTC(localInstant, false);
/* * Make sure the input argument * has been mapped to a literal value. */ if (iField.add(localInstant, value)) int offset = getOffsetToAdd(instant); if (iField.add(localInstant + offset, value)) <iField.add(localInstant + offset, value); &return iZone.convertLocalToUTC(localInstant, false);
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) &char *buf; while (*buf) &if (*buf) *buf = buffer; &<return 0;
if (iZone.convertLocalToUTC(localInstant, false)) <return iZone.convertLocalToUTC(localInstant, false); <else <return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false)) &return iZone.convertLocalToUTC(localInstant, false); <else <return iZone.convertLocalToUTC(localInstant, false);
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) <char *buf; while (*buf) &if (*buf) *buf = buffer; &return 0;
if (iZone.convertLocalToUTC(localInstant, false) == 0) &return (iZone.convertLocalToUTC(localInstant, false)); <else <iZone.convertLocalToUTC(localInstant, false); <return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone) <iZone = iZone.convertLocalToUTC(localInstant, false); return iZone; &else &return iZone.convertLocalToUTC(localInstant, false);
&if (iZone.convertLocalToUTC(localInstant, false) <0) return (long) iZone.convertLocalToUTC(localInstant, false); return (long)iZone.convertLocalToUTC(localInstant, false); return 0;
rv = iZone.convertLocalToUTC(localInstant, false); if (rv == 0) return rv; &return rv;
if (iZone.convertLocalToUTC(localInstant, false)) <return iZone.convertLocalToUTC(localInstant, false); &else return iZone.convertLocalToUTC(localInstant, false);
if (localInstant == null) return 0; <return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) return (iZone.convertLocalToUTC(localInstant, false)); else &iZone.convertLocalToUTC(localInstant, false); &return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (localInstant) <return localInstant - offset; &else return iZone.convertLocalToUTC(localInstant, false);
if (localInstant) <return iZone.convertLocalToUTC(localInstant, false); &else return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false)) return iZone.convertLocalToUTC(localInstant, false); <else &return iZone.convertLocalToUTC(localInstant, false);
rv = iZone.convertLocalToUTC(localInstant, false); if (rv == 0) <return rv; &return rv;
if (iZone.convertLocalToUTC(localInstant, false) == 0) <return (iZone.convertLocalToUTC(localInstant, false)); <else &iZone.convertLocalToUTC(localInstant, false); <return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false) == 0) return (iZone.convertLocalToUTC(localInstant, false)); <else &iZone.convertLocalToUTC(localInstant, false); return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false) == 0) &return (iZone.convertLocalToUTC(localInstant, false)); <else iZone.convertLocalToUTC(localInstant, false); <return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
<if (iZone.convertLocalToUTC(localInstant, false) 0) return (long) iZone.convertLocalToUTC(localInstant, false); return (long)iZone.convertLocalToUTC(localInstant, false); <return 0;
if (localInstant) <return localInstant - offset; &else &return iZone.convertLocalToUTC(localInstant, false);
if (localInstant) return iZone.convertLocalToUTC(localInstant, false); &else &return iZone.convertLocalToUTC(localInstant, false);
if (localInstant) <return iZone.convertLocalToUTC(localInstant, false); <else &return iZone.convertLocalToUTC(localInstant, false);
/* * Make sure the input argument * has been mapped to a literal value. */ if (iField.add(localInstant, value)) <int offset = getOffsetToAdd(instant); if (iField.add(localInstant + offset, value)) <iField.add(localInstant + offset, value); <return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) &0) return (long) iZone.convertLocalToUTC(localInstant, false); return (long)iZone.convertLocalToUTC(localInstant, false); &return 0;
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) char *buf; while (*buf) <if (*buf) *buf = buffer; <<return 0;
if (localInstant) &return localInstant - offset; <else &return iZone.convertLocalToUTC(localInstant, false);
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) &char *buf; while (*buf) &if (*buf) *buf = buffer; &&return 0;
if (iZone.convertLocalToUTC(localInstant, false) == 0) <return (iZone.convertLocalToUTC(localInstant, false)); else <iZone.convertLocalToUTC(localInstant, false); &return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
/* * Make sure the input argument * has been mapped to a literal value. */ if (iField.add(localInstant, value)) int offset = getOffsetToAdd(instant); if (iField.add(localInstant + offset, value)) <iField.add(localInstant + offset, value); <return iZone.convertLocalToUTC(localInstant, false);
ret = iZone.convertLocalToUTC(localInstant, false); if (ret) <*aCase = ret; &return ret;
if (iZone.convertLocalToUTC(localInstant, false) == 0) <return (iZone.convertLocalToUTC(localInstant, false)); <else &iZone.convertLocalToUTC(localInstant, false); &return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (localInstant) &return iZone.convertLocalToUTC(localInstant, false); else &return iZone.convertLocalToUTC(localInstant, false);
if (localInstant) return localInstant - offset; &else return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) <return (iZone.convertLocalToUTC(localInstant, false)); else iZone.convertLocalToUTC(localInstant, false); return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) char *buf; while (*buf) if (*buf) *buf = buffer; <return 0;
rv = iZone.convertLocalToUTC(localInstant, false); if (rv == 0) <return rv; <return rv;
/* * Make sure the input argument * has been mapped to a literal value. */ if (iField.add(localInstant, value)) <int offset = getOffsetToAdd(instant); if (iField.add(localInstant + offset, value)) <iField.add(localInstant + offset, value); return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) &return (iZone.convertLocalToUTC(localInstant, false)); else iZone.convertLocalToUTC(localInstant, false); <return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) char *buf; while (*buf) <if (*buf) *buf = buffer; &&return 0;
if (iZone) <iZone = iZone.convertLocalToUTC(localInstant, false); return iZone; else <return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) return (iZone.convertLocalToUTC(localInstant, false)); else <iZone.convertLocalToUTC(localInstant, false); &return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false) == 0) <return (iZone.convertLocalToUTC(localInstant, false)); <else iZone.convertLocalToUTC(localInstant, false); return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false) == 0) &return (iZone.convertLocalToUTC(localInstant, false)); else <iZone.convertLocalToUTC(localInstant, false); <return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (localInstant) <return localInstant - offset; <else return iZone.convertLocalToUTC(localInstant, false);
if (iZone) <iZone = iZone.convertLocalToUTC(localInstant, false); return iZone; <else <return iZone.convertLocalToUTC(localInstant, false);
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) char *buf; while (*buf) if (*buf) *buf = buffer; &<return 0;
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) <char *buf; while (*buf) &if (*buf) *buf = buffer; &&return 0;
if (localInstant == '&0') return iZone.convertLocalToUTC(localInstant, false); else return iZone.convertLocalToUTC(localInstant, false);
if (localInstant) return iZone.convertLocalToUTC(localInstant, false); else &return iZone.convertLocalToUTC(localInstant, false);
if (localInstant) <return iZone.convertLocalToUTC(localInstant, false); <else return iZone.convertLocalToUTC(localInstant, false);
&if (iZone.convertLocalToUTC(localInstant, false) <0) return (long) iZone.convertLocalToUTC(localInstant, false); return (long)iZone.convertLocalToUTC(localInstant, false); <return 0;
<if (iZone.convertLocalToUTC(localInstant, false) 0) return (long) iZone.convertLocalToUTC(localInstant, false); return (long)iZone.convertLocalToUTC(localInstant, false); return 0;
if (iZone) &iZone = iZone.convertLocalToUTC(localInstant, false); return iZone; <else <return iZone.convertLocalToUTC(localInstant, false);
res = iZone.convertLocalToUTC(localInstant, false); if (res!= 0) <res = res; return res;
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) char *buf; while (*buf) <if (*buf) *buf = buffer; return 0;
/* * Make sure the input argument * has been mapped to a literal value. */ if (iField.add(localInstant, value)) int offset = getOffsetToAdd(instant); if (iField.add(localInstant + offset, value)) iField.add(localInstant + offset, value); <return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) return (iZone.convertLocalToUTC(localInstant, false)); &else iZone.convertLocalToUTC(localInstant, false); &return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false) == 0) &return (iZone.convertLocalToUTC(localInstant, false)); <else &iZone.convertLocalToUTC(localInstant, false); return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
return localInstant 0;
if (localInstant) <return localInstant - offset; else return iZone.convertLocalToUTC(localInstant, false);
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) &char *buf; while (*buf) <if (*buf) *buf = buffer; <&return 0;
res = iZone.convertLocalToUTC(localInstant, false); if (res!= 0) &res = res; <return res;
if (iZone.convertLocalToUTC(localInstant, false) == 0) &return (iZone.convertLocalToUTC(localInstant, false)); else &iZone.convertLocalToUTC(localInstant, false); &return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) <char *buf; while (*buf) <if (*buf) *buf = buffer; &<return 0;
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) <char *buf; while (*buf) <if (*buf) *buf = buffer; <&return 0;
/* * Make sure the input argument * has been mapped to a literal value. */ if (iField.add(localInstant, value)) <int offset = getOffsetToAdd(instant); if (iField.add(localInstant + offset, value)) &iField.add(localInstant + offset, value); <return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) <return (iZone.convertLocalToUTC(localInstant, false)); &else iZone.convertLocalToUTC(localInstant, false); return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false) == 0) return (iZone.convertLocalToUTC(localInstant, false)); &else &iZone.convertLocalToUTC(localInstant, false); return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone) &iZone = iZone.convertLocalToUTC(localInstant, false); return iZone; else <return iZone.convertLocalToUTC(localInstant, false);
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) <char *buf; while (*buf) &if (*buf) *buf = buffer; <<return 0;
if (iZone.convertLocalToUTC(localInstant, false) == 0) &return (iZone.convertLocalToUTC(localInstant, false)); else <iZone.convertLocalToUTC(localInstant, false); &return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false) <0) return (long) iZone.convertLocalToUTC(localInstant, false); return (long)iZone.convertLocalToUTC(localInstant, false); <return 0;
if (localInstant) <return iZone.convertLocalToUTC(localInstant, false); &else <return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) &return (iZone.convertLocalToUTC(localInstant, false)); &else &iZone.convertLocalToUTC(localInstant, false); &return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) char *buf; while (*buf) &if (*buf) *buf = buffer; &&return 0;
if (iZone.convertLocalToUTC(localInstant, false)) <return iZone.convertLocalToUTC(localInstant, false); else <return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) <return (iZone.convertLocalToUTC(localInstant, false)); else &iZone.convertLocalToUTC(localInstant, false); return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (localInstant) &return iZone.convertLocalToUTC(localInstant, false); else <return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) <return (iZone.convertLocalToUTC(localInstant, false)); else <iZone.convertLocalToUTC(localInstant, false); <return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
rv = iZone.convertLocalToUTC(localInstant, false); if (rv == 0) return rv; <return rv;
if (iZone.convertLocalToUTC(localInstant, false)) <return iZone.convertLocalToUTC(localInstant, false); else &return iZone.convertLocalToUTC(localInstant, false);
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) &char *buf; while (*buf) <if (*buf) *buf = buffer; <return 0;
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) <char *buf; while (*buf) <if (*buf) *buf = buffer; &return 0;
if (iZone.convertLocalToUTC(localInstant, false) == 0) <return (iZone.convertLocalToUTC(localInstant, false)); else iZone.convertLocalToUTC(localInstant, false); &return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (localInstant) <return localInstant - offset; else &return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) <return (iZone.convertLocalToUTC(localInstant, false)); &else &iZone.convertLocalToUTC(localInstant, false); return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
/* * Make sure the input argument * has been mapped to a literal value. */ if (iField.add(localInstant, value)) &int offset = getOffsetToAdd(instant); if (iField.add(localInstant + offset, value)) iField.add(localInstant + offset, value); &return iZone.convertLocalToUTC(localInstant, false);
if (localInstant) &return iZone.convertLocalToUTC(localInstant, false); <else &return iZone.convertLocalToUTC(localInstant, false);
if (localInstant) &return iZone.convertLocalToUTC(localInstant, false); &else return iZone.convertLocalToUTC(localInstant, false);
if (localInstant) return iZone.convertLocalToUTC(localInstant, false); &else return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) &return (iZone.convertLocalToUTC(localInstant, false)); else iZone.convertLocalToUTC(localInstant, false); &return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false)) <return iZone.convertLocalToUTC(localInstant, false); else return iZone.convertLocalToUTC(localInstant, false);
if (iZone) &iZone = iZone.convertLocalToUTC(localInstant, false); return iZone; &else &return iZone.convertLocalToUTC(localInstant, false);
rv = iZone.convertLocalToUTC(localInstant, false); if (rv == 0) &return rv; <return rv;
ret = iZone.convertLocalToUTC(localInstant, false); if (ret) <*aCase = ret; <return ret;
if (iZone.convertLocalToUTC(localInstant, false) == 0) &return (iZone.convertLocalToUTC(localInstant, false)); &else iZone.convertLocalToUTC(localInstant, false); return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false) == 0) &return (iZone.convertLocalToUTC(localInstant, false)); &else iZone.convertLocalToUTC(localInstant, false); &return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
rv = iZone.convertLocalToUTC(localInstant, false); if (rv == 0) &return rv; &return rv;
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) &char *buf; while (*buf) &if (*buf) *buf = buffer; return 0;
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) &char *buf; while (*buf) if (*buf) *buf = buffer; &<return 0;
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) <char *buf; while (*buf) <if (*buf) *buf = buffer; <<return 0;
return localInstant <0;
/* * Make sure the input argument * has been mapped to a literal value. */ if (iField.add(localInstant, value)) int offset = getOffsetToAdd(instant); if (iField.add(localInstant + offset, value)) &iField.add(localInstant + offset, value); &return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) return (iZone.convertLocalToUTC(localInstant, false)); &else iZone.convertLocalToUTC(localInstant, false); return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
<if (iZone.convertLocalToUTC(localInstant, false) <0) return (long) iZone.convertLocalToUTC(localInstant, false); return (long)iZone.convertLocalToUTC(localInstant, false); <return 0;
if (iZone.convertLocalToUTC(localInstant, false) == 0) <return (iZone.convertLocalToUTC(localInstant, false)); &else &iZone.convertLocalToUTC(localInstant, false); <return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone) iZone = iZone.convertLocalToUTC(localInstant, false); return iZone; else &return iZone.convertLocalToUTC(localInstant, false);
return '0';
if (iZone.convertLocalToUTC(localInstant, false)) <return iZone.convertLocalToUTC(localInstant, false); <else return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) &return (iZone.convertLocalToUTC(localInstant, false)); &else &iZone.convertLocalToUTC(localInstant, false); <return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) char *buf; while (*buf) &if (*buf) *buf = buffer; <<return 0;
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) char *buf; while (*buf) if (*buf) *buf = buffer; return 0;
<if (iZone.convertLocalToUTC(localInstant, false) &0) return (long) iZone.convertLocalToUTC(localInstant, false); return (long)iZone.convertLocalToUTC(localInstant, false); &return 0;
&if (iZone.convertLocalToUTC(localInstant, false) &0) return (long) iZone.convertLocalToUTC(localInstant, false); return (long)iZone.convertLocalToUTC(localInstant, false); &return 0;
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) &char *buf; while (*buf) if (*buf) *buf = buffer; <return 0;
if (localInstant) return iZone.convertLocalToUTC(localInstant, false); <else <return iZone.convertLocalToUTC(localInstant, false);
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) char *buf; while (*buf) if (*buf) *buf = buffer; &return 0;
if (localInstant) <return iZone.convertLocalToUTC(localInstant, false); <else <return iZone.convertLocalToUTC(localInstant, false);
ret = iZone.convertLocalToUTC(localInstant, false); if (ret) &*aCase = ret; <return ret;
if (localInstant) return iZone.convertLocalToUTC(localInstant, false); else return iZone.convertLocalToUTC(localInstant, false);
if (localInstant) return iZone.convertLocalToUTC(localInstant, false); <else &return iZone.convertLocalToUTC(localInstant, false);
<if (iZone.convertLocalToUTC(localInstant, false) &0) return (long) iZone.convertLocalToUTC(localInstant, false); return (long)iZone.convertLocalToUTC(localInstant, false); <return 0;
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) &char *buf; while (*buf) if (*buf) *buf = buffer; return 0;
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) <char *buf; while (*buf) if (*buf) *buf = buffer; <&return 0;
if (iZone.convertLocalToUTC(localInstant, false) == 0) &return (iZone.convertLocalToUTC(localInstant, false)); &else &iZone.convertLocalToUTC(localInstant, false); return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false) == 0) return (iZone.convertLocalToUTC(localInstant, false)); &else <iZone.convertLocalToUTC(localInstant, false); return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false) == 0) return (iZone.convertLocalToUTC(localInstant, false)); &else <iZone.convertLocalToUTC(localInstant, false); <return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (localInstant) &return iZone.convertLocalToUTC(localInstant, false); <else <return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) <return (iZone.convertLocalToUTC(localInstant, false)); <else iZone.convertLocalToUTC(localInstant, false); <return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false)) return iZone.convertLocalToUTC(localInstant, false); else return iZone.convertLocalToUTC(localInstant, false);
if (iZone) <iZone = iZone.convertLocalToUTC(localInstant, false); return iZone; <else &return iZone.convertLocalToUTC(localInstant, false);
if (iZone) <iZone = iZone.convertLocalToUTC(localInstant, false); return iZone; &else return iZone.convertLocalToUTC(localInstant, false);
/* * Make sure the input argument * has been mapped to a literal value. */ if (iField.add(localInstant, value)) &int offset = getOffsetToAdd(instant); if (iField.add(localInstant + offset, value)) &iField.add(localInstant + offset, value); return iZone.convertLocalToUTC(localInstant, false);
<if (iZone.convertLocalToUTC(localInstant, false) <0) return (long) iZone.convertLocalToUTC(localInstant, false); return (long)iZone.convertLocalToUTC(localInstant, false); &return 0;
/* * Make sure the input argument * has been mapped to a literal value. */ if (iField.add(localInstant, value)) <int offset = getOffsetToAdd(instant); if (iField.add(localInstant + offset, value)) &iField.add(localInstant + offset, value); return iZone.convertLocalToUTC(localInstant, false);
if (localInstant) <return iZone.convertLocalToUTC(localInstant, false); else <return iZone.convertLocalToUTC(localInstant, false);
if (iZone) &iZone = iZone.convertLocalToUTC(localInstant, false); return iZone; <else return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) <return (iZone.convertLocalToUTC(localInstant, false)); &else &iZone.convertLocalToUTC(localInstant, false); &return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
<if (iZone.convertLocalToUTC(localInstant, false) &0) return (long) iZone.convertLocalToUTC(localInstant, false); return (long)iZone.convertLocalToUTC(localInstant, false); return 0;
if (iZone.convertLocalToUTC(localInstant, false) == 0) &return (iZone.convertLocalToUTC(localInstant, false)); <else iZone.convertLocalToUTC(localInstant, false); return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
/* * Make sure the input argument * has been mapped to a literal value. */ if (iField.add(localInstant, value)) &int offset = getOffsetToAdd(instant); if (iField.add(localInstant + offset, value)) <iField.add(localInstant + offset, value); return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) &return (iZone.convertLocalToUTC(localInstant, false)); <else <iZone.convertLocalToUTC(localInstant, false); &return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (localInstant) <return localInstant - offset; <else <return iZone.convertLocalToUTC(localInstant, false);
/* * Make sure the input argument * has been mapped to a literal value. */ if (iField.add(localInstant, value)) int offset = getOffsetToAdd(instant); if (iField.add(localInstant + offset, value)) iField.add(localInstant + offset, value); return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) &return (iZone.convertLocalToUTC(localInstant, false)); <else &iZone.convertLocalToUTC(localInstant, false); <return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false) == 0) <return (iZone.convertLocalToUTC(localInstant, false)); &else iZone.convertLocalToUTC(localInstant, false); <return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false) == 0) return (iZone.convertLocalToUTC(localInstant, false)); <else &iZone.convertLocalToUTC(localInstant, false); &return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (localInstant == null) return 0; &return iZone.convertLocalToUTC(localInstant, false);
ret = iZone.convertLocalToUTC(localInstant, false); if (ret) *aCase = ret; &return ret;
if (localInstant) &return localInstant - offset; else &return iZone.convertLocalToUTC(localInstant, false);
&if (iZone.convertLocalToUTC(localInstant, false) 0) return (long) iZone.convertLocalToUTC(localInstant, false); return (long)iZone.convertLocalToUTC(localInstant, false); return 0;
if (iZone.convertLocalToUTC(localInstant, false)) &return iZone.convertLocalToUTC(localInstant, false); <else return iZone.convertLocalToUTC(localInstant, false);
if (iZone) iZone = iZone.convertLocalToUTC(localInstant, false); return iZone; &else &return iZone.convertLocalToUTC(localInstant, false);
if (localInstant) &return localInstant - offset; else <return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) &return (iZone.convertLocalToUTC(localInstant, false)); <else <iZone.convertLocalToUTC(localInstant, false); return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (localInstant) return localInstant - offset; &else <return iZone.convertLocalToUTC(localInstant, false);
if (localInstant == null) &return 0; <return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) <return (iZone.convertLocalToUTC(localInstant, false)); else &iZone.convertLocalToUTC(localInstant, false); &return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (localInstant) &return iZone.convertLocalToUTC(localInstant, false); &else <return iZone.convertLocalToUTC(localInstant, false);
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) <char *buf; while (*buf) &if (*buf) *buf = buffer; <return 0;
&if (iZone.convertLocalToUTC(localInstant, false) &0) return (long) iZone.convertLocalToUTC(localInstant, false); return (long)iZone.convertLocalToUTC(localInstant, false); return 0;
if (iZone.convertLocalToUTC(localInstant, false) == 0) return (iZone.convertLocalToUTC(localInstant, false)); <else <iZone.convertLocalToUTC(localInstant, false); &return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false) == 0) <return (iZone.convertLocalToUTC(localInstant, false)); &else <iZone.convertLocalToUTC(localInstant, false); return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
/* * Make sure the input argument * has been mapped to a literal value. */ if (iField.add(localInstant, value)) &int offset = getOffsetToAdd(instant); if (iField.add(localInstant + offset, value)) iField.add(localInstant + offset, value); <return iZone.convertLocalToUTC(localInstant, false);
/* * Make sure the input argument * has been mapped to a literal value. */ if (iField.add(localInstant, value)) int offset = getOffsetToAdd(instant); if (iField.add(localInstant + offset, value)) <iField.add(localInstant + offset, value); return iZone.convertLocalToUTC(localInstant, false);
if (localInstant == '<0') return iZone.convertLocalToUTC(localInstant, false); else return iZone.convertLocalToUTC(localInstant, false);
if (localInstant) return iZone.convertLocalToUTC(localInstant, false); else <return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) <0) return (long) iZone.convertLocalToUTC(localInstant, false); return (long)iZone.convertLocalToUTC(localInstant, false); &return 0;
res = iZone.convertLocalToUTC(localInstant, false); if (res!= 0) res = res; <return res;
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) <char *buf; while (*buf) &if (*buf) *buf = buffer; <&return 0;
if (iZone.convertLocalToUTC(localInstant, false) == 0) return (iZone.convertLocalToUTC(localInstant, false)); &else &iZone.convertLocalToUTC(localInstant, false); <return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (localInstant) <return iZone.convertLocalToUTC(localInstant, false); else &return iZone.convertLocalToUTC(localInstant, false);
if (localInstant) return localInstant - offset; <else <return iZone.convertLocalToUTC(localInstant, false);
/* * Make sure the input argument * has been mapped to a literal value. */ if (iField.add(localInstant, value)) <int offset = getOffsetToAdd(instant); if (iField.add(localInstant + offset, value)) iField.add(localInstant + offset, value); return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) return (iZone.convertLocalToUTC(localInstant, false)); <else <iZone.convertLocalToUTC(localInstant, false); <return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) &char *buf; while (*buf) if (*buf) *buf = buffer; &&return 0;
if (iZone.convertLocalToUTC(localInstant, false) == 0) &return (iZone.convertLocalToUTC(localInstant, false)); else iZone.convertLocalToUTC(localInstant, false); return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (localInstant) return localInstant - offset; <else return iZone.convertLocalToUTC(localInstant, false);
if (localInstant) return localInstant - offset; else return iZone.convertLocalToUTC(localInstant, false);
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) &char *buf; while (*buf) &if (*buf) *buf = buffer; &return 0;
if (localInstant) &return localInstant - offset; &else &return iZone.convertLocalToUTC(localInstant, false);
if (iZone) iZone = iZone.convertLocalToUTC(localInstant, false); return iZone; <else return iZone.convertLocalToUTC(localInstant, false);
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) <char *buf; while (*buf) if (*buf) *buf = buffer; &<return 0;
if (iZone.convertLocalToUTC(localInstant, false) == 0) &return (iZone.convertLocalToUTC(localInstant, false)); &else iZone.convertLocalToUTC(localInstant, false); <return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false) == 0) <return (iZone.convertLocalToUTC(localInstant, false)); else iZone.convertLocalToUTC(localInstant, false); <return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false) 0) return (long) iZone.convertLocalToUTC(localInstant, false); return (long)iZone.convertLocalToUTC(localInstant, false); <return 0;
if (iZone.convertLocalToUTC(localInstant, false) == 0) return (iZone.convertLocalToUTC(localInstant, false)); else iZone.convertLocalToUTC(localInstant, false); return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false)) <return iZone.convertLocalToUTC(localInstant, false); &else &return iZone.convertLocalToUTC(localInstant, false);
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) <char *buf; while (*buf) if (*buf) *buf = buffer; return 0;
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) &char *buf; while (*buf) <if (*buf) *buf = buffer; return 0;
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) char *buf; while (*buf) <if (*buf) *buf = buffer; &return 0;
ret = iZone.convertLocalToUTC(localInstant, false); if (ret) &*aCase = ret; return ret;
res = iZone.convertLocalToUTC(localInstant, false); if (res!= 0) res = res; return res;
&if (iZone.convertLocalToUTC(localInstant, false) <0) return (long) iZone.convertLocalToUTC(localInstant, false); return (long)iZone.convertLocalToUTC(localInstant, false); &return 0;
if (localInstant) return iZone.convertLocalToUTC(localInstant, false); <else return iZone.convertLocalToUTC(localInstant, false);
/* * Make sure the input argument * has been mapped to a literal value. */ if (iField.add(localInstant, value)) int offset = getOffsetToAdd(instant); if (iField.add(localInstant + offset, value)) &iField.add(localInstant + offset, value); return iZone.convertLocalToUTC(localInstant, false);
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) &char *buf; while (*buf) if (*buf) *buf = buffer; <<return 0;
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) &char *buf; while (*buf) &if (*buf) *buf = buffer; <&return 0;
res = iZone.convertLocalToUTC(localInstant, false); if (res!= 0) <res = res; &return res;
if (iZone) <iZone = iZone.convertLocalToUTC(localInstant, false); return iZone; <else return iZone.convertLocalToUTC(localInstant, false);
/* * Make sure the input argument * has been mapped to a literal value. */ if (iField.add(localInstant, value)) int offset = getOffsetToAdd(instant); if (iField.add(localInstant + offset, value)) iField.add(localInstant + offset, value); &return iZone.convertLocalToUTC(localInstant, false);
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) char *buf; while (*buf) if (*buf) *buf = buffer; &&return 0;
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) &char *buf; while (*buf) if (*buf) *buf = buffer; <&return 0;
if (localInstant == null) return 0; return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) return (iZone.convertLocalToUTC(localInstant, false)); <else iZone.convertLocalToUTC(localInstant, false); <return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) char *buf; while (*buf) &if (*buf) *buf = buffer; <&return 0;
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) <char *buf; while (*buf) <if (*buf) *buf = buffer; return 0;
&if (iZone.convertLocalToUTC(localInstant, false) 0) return (long) iZone.convertLocalToUTC(localInstant, false); return (long)iZone.convertLocalToUTC(localInstant, false); <return 0;
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) &char *buf; while (*buf) &if (*buf) *buf = buffer; <return 0;
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) <char *buf; while (*buf) if (*buf) *buf = buffer; <return 0;
if (iZone) <iZone = iZone.convertLocalToUTC(localInstant, false); return iZone; else return iZone.convertLocalToUTC(localInstant, false);
if (iZone.convertLocalToUTC(localInstant, false) == 0) <return (iZone.convertLocalToUTC(localInstant, false)); else &iZone.convertLocalToUTC(localInstant, false); <return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
res = iZone.convertLocalToUTC(localInstant, false); if (res!= 0) &res = res; &return res;
if (iZone.convertLocalToUTC(localInstant, false) == 0) <return (iZone.convertLocalToUTC(localInstant, false)); <else <iZone.convertLocalToUTC(localInstant, false); &return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if (iZone.convertLocalToUTC(localInstant, false) == 0) &return (iZone.convertLocalToUTC(localInstant, false)); &else <iZone.convertLocalToUTC(localInstant, false); return (localInstant - (iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant), iZone.convertLocalToUTC(localInstant, false));
if ((localInstant = iZone.convertLocalToUTC(localInstant, false)) == 0) <char *buf; while (*buf) &if (*buf) *buf = buffer; &<return 0;
