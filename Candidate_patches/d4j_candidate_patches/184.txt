golden:
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
inference:
long i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i;
className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(CLASS_SEPARATOR_CHAR);
i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);

static int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR+1);
size_t i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
unsigned long i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_NAME);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR-1);
int i = className.lastIndexOf(className);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_STRING);
className = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i=className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
char i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int className = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(SEPARATOR_CHAR);
int i = className.lastIndexOf(&PACKAGE_SEPARATOR_CHAR);
int classIndex = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(null);
int i = className.indexOf(PACKAGE_SEPARATOR_CHAR);
char* i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = ClassName.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(className.get());
int i = className.lastIndexOf(_PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(char);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHARS);
int i; className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(CHAR);
short i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR);
int j = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf('0');
int i = className.lastIndexOf(PACKAGE_CHAR);
int i = className.Length();
int i = className.lastIndexOf(className.char);
int i = PACKAGE_SEPARATOR_CHAR;
int index = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_ANY);
int i = 0;
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CCHAR);
int i = className.lastIndexOf(PACKAGE_STRING_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CODE);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_STR);
int i = className.lastIndexOf( PACKAGE_SEPARATOR_CHAR );
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR++);
long i;
int i = className.lastIndexOf(CLASS_CHAR);
int i = className.lastIndexOf( PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(&className);
int i = lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(Package_SEPARATOR_CHAR);
size_t i;
className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
char *i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
char* className = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i, i;
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHARX);
int i = className.last();
int i = className.lastIndexOf (PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR0);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_ID);
int i = className.lastIndexOf("");
int i = className.lastIndexOf(PACKAGE_SEPARATOR_WCHAR);
int i = className.get();
int i = className.lastIndexOf(PACKAGE_SEPARATOR_ATTR);
int i = className.lastIndexOf(&packageName);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_IID);
int i = className.lastIndexOf(ClassName_SEPARATOR_CHAR);
char *className = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_URI);
int i = className.lastIndexOf(*className);
int i = className;
int i = className.lastIndexOf(packageName);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_NULL);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR2);
int i = className.lastIndexOf(PACKAGE_CHAR_CHAR);
int i = className.lastIndexOf(pACKAGE_SEPARATOR_CHAR);
long classIndex = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(i);
int i = className.lastIndexOf(PRIVATE_SEPARATOR_CHAR);
long int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_COLOR);
int i = className_lastIndexOf(PACKAGE_SEPARATOR_CHAR);
char i;
int i = className.lastIndexOf(PACKAGE_SEPARATOR_DATA);
int_i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CID);
int n = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CSTR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_ARGS);
int i = className.lastIndexOf(None);
void* i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(PL_SEPARATOR_CHAR);
int i = className.IndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR/2);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR());
unsigned i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = classIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(false);
int result = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = packageName.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(PACKAGE_PACKAGE_CHAR);
int i = className.lastIndexOf(PACKAGE_SECURITY_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR-2);
char className = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className == null;
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CLASS);
int len = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
long className = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
PACKAGE_SEPARATOR_CHAR(className);
int i = className.lastIndexOf(':');
void *i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(className.Length());
int i = className[i];
int i = className.lastIndexOf(PACKAGE_SEPARATOR_LONG);
int i = className.lastIndexOf(CHAR_SEPARATOR_CHAR);
int i = className.lastIndexOf(PACKAGE_COMPARISON_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR1);
int i = *className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(name);
int i = className.lastIndexOf(PACKAGE_SEARCH_CHAR);
int i = className.lastIndexOf(PACKAGE_REFERENCE_CHAR);
int i = className.first();
int i = className.lastIndexOf(PACKAGE_SUCCESS);
int i2 = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = name.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(NS_SEPARATOR_CHAR);
int i = className.lastInt(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_LEN);
bool i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
size_t className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
length i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i, j;
int i = className.lastIndexOf(packageSEPARATOR_CHAR);
int i = className.lastIndexOf(PKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(PACKAGE_START_CHAR);
int i = className.lastIndexOf(PACKAGE_LENGTH_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR__CHAR);
int i = className.lastIndexOf(pkgName);
int i = className.len();
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHARL);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR*);
int i = className.lastIndexOf(PACKAGE_NAME);
u_int i;
int i = className.lastIndexOf("%s", className);
int i = className.lastIndexOf('.');
int i = className.lastIndexOf( className.get());
int i = className.lastIndexOf(' ');
PRInt32 i;
int i = className.lastIndexOf(type);
int i = className.lastIndexOf(PACKAGE_CLASS_CHAR);
int i = className.lastIndexOf();
int i = className.lastIndexOf(PACKAGE_LENGTH);
u_int32_t i;
int i = className.lastIndexOf(CLASS_STRING_CHAR);
unsigned int i;
PACKAGE_SEPARATOR_CHAR i;
int i = className.lastIndexOf(PACKAGE_COLOR);
int i = className.lastIndexOf("/");
int i = className.lastIndexOf(PACKAGE_DATA_CHAR);
int i = className.lastIndexOf(PACKAGE_URI_CHAR);
int i = className.lastIndexOf("package");
className = className;
int i = getClassName(className);
int i = className.lastIndexOf(CHAR_SEPARATOR);
int i = className.count();
int i, r;
int i = className.lastIndexOf(POINTER_CHAR);
int i = className.lastIndexOf(prefix);
int i = className.lastIndexOf(ClassName);
int i = className[0];
unsigned long i;
int i = className.Count();
int className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
className.lastIndexOf(PACKAGE_SEPARATOR_CHAR)
int i = className.lastIndexOf(PACKAGE_LEN);
int i = className.lastInt();
int i = className.lastIndexOf(CLASS_SEPARATOR);
int i = className.lastIndexOf(PACKAGE_NO_CHAR);
int i = i;
PACKAGE_SEPARATOR_CHAR;
int i=0;
u_long i;
int i = className!= null;
int i = className.lastIndexOf(PACKAGE_LINE_CHAR);
int i, c;
int i = className.length();
int i, i2;
int i; int i;
int i = indexOf(className);
int i = className.size();
int classIndex;
nsCRT::free(className);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR) - 1;
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR_STR);
char *className; int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR_INT);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR_NAME);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_SIZE);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR | PACKAGE_STRING_DESC);
PRInt32 i; className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
u_int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf((PRInt32)PACKAGE_SEPARATOR_CHAR);
PRInt32 i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR_DONE);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR + '.');
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR_INT2);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR_ADDRESS);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR, className);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR, className.get());
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR, 0);
int i = className.lastIndexOf(CLASS_PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR_LENGTH);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR.len);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR + 1);
struct id_str *id = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR_INDEX);
char *result = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); if (result == -1)  return StringUtils.EMPTY;
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR_REFLOW);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR.cstr());
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR.cstr_oneuse());
if (className)  int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);  else  if (className)  int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);  else  i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR_LEN);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR_2);
int i = className.lastIndexOf(&pk; CHAR_INVALID);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR_ARRAY);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR | PACKAGE_SEPARATOR_SIZE);
struct className *className = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR, i);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR | PACKAGE_NO_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR_SID);
int i = className.lastIndexOf(className.char());
int i = className.lastIndexOf(className.char_offset());
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR | PACKAGE_SEPARATOR_FIRST);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CARD_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR_BY_LINENAME);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_SEPARATOR_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR, &i);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CARD);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR_ATTR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR.get());
int i = className.lastIndexOf((char *)PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR, null);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_PACKAGE_CHAR);
struct tmpPackageName *tmpPackageName; if (className.Equals(PACKAGE_SEPARATOR_CHAR))  return StringUtils.EMPTY;  tmpPackageName = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
struct echar *s = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR.tqe_Sibling);
int i = className.lastIndexOf("_") + className.lastIndexOf("-") + className.lastIndexOf("");
/* * The className is unsigned in the array, which is an unsigned char * or a string containing the encoding. */ int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR+SECURITY_CHAR_ADDRESS);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR+SIZE);
int i = className.lastIndexOf((PACKAGE_SEPARATOR_CHAR_1));
struct packageString> className(className); int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR+MULTIPLEXER);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR | PACKAGE_SEPARATOR_NO_CHAR);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR_ANY);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR_1);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR_A);
int i = className.lastIndexOf(PACKAGE_SEPARATOR_PATTERN_CHAR);
if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); &else <if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
char *result = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); if (result == -1) &return StringUtils.EMPTY;
if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); &else &if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); &else if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); <else if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); <else if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else &if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else <if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); <else &if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); <else &if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); &else if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); <else <if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else <if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
struct tmpPackageName *tmpPackageName; if (className.Equals(PACKAGE_SEPARATOR_CHAR)) <return StringUtils.EMPTY; <tmpPackageName = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); &else <if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else <if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else &if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf('<0');
if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); &else <if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); <else &if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); &else &if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
struct packageString> className(className); int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); <else &if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf('&0');
struct tmpPackageName *tmpPackageName; if (className.Equals(PACKAGE_SEPARATOR_CHAR)) return StringUtils.EMPTY; &tmpPackageName = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); &else &if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); <else <if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else &if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else &if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); <else <if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); &else <if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); &else if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
struct package&String> className(className); int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); <else <if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
struct package<String> className(className); int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else &if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); <else &if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); &else if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else <if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); <else <if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
struct tmpPackageName *tmpPackageName; if (className.Equals(PACKAGE_SEPARATOR_CHAR)) return StringUtils.EMPTY; <tmpPackageName = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); <else if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); &else <if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); &else &if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
int i = className.lastIndexOf('0');
if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); <else &if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); &else if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else <if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); <else <if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); <else &if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
char *result = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); if (result == -1) return StringUtils.EMPTY;
if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else &if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); <else if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); <else &if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); &else &if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); &else if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); <else if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); &else <if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); &else <if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); <else if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
struct tmpPackageName *tmpPackageName; if (className.Equals(PACKAGE_SEPARATOR_CHAR)) &return StringUtils.EMPTY; tmpPackageName = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); &else <if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); &else <if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); &else &if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else <if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); <else <if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
struct tmpPackageName *tmpPackageName; if (className.Equals(PACKAGE_SEPARATOR_CHAR)) &return StringUtils.EMPTY; <tmpPackageName = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
struct tmpPackageName *tmpPackageName; if (className.Equals(PACKAGE_SEPARATOR_CHAR)) &return StringUtils.EMPTY; &tmpPackageName = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); &else &if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); &else &if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else <if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); <else if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); <else <if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); <else if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else <if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else <if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
struct tmpPackageName *tmpPackageName; if (className.Equals(PACKAGE_SEPARATOR_CHAR)) <return StringUtils.EMPTY; &tmpPackageName = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); <else <if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); <else &if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); &else if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else &if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); &else if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
struct tmpPackageName *tmpPackageName; if (className.Equals(PACKAGE_SEPARATOR_CHAR)) return StringUtils.EMPTY; tmpPackageName = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
char *result = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); if (result == -1) <return StringUtils.EMPTY;
struct tmpPackageName *tmpPackageName; if (className.Equals(PACKAGE_SEPARATOR_CHAR)) <return StringUtils.EMPTY; tmpPackageName = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); <else if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); &else if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else &if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); &else &if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
if (className) <int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else &if (className) &int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR); else i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
