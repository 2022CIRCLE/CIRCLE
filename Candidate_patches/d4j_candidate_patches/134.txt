golden:
int rhType = right.getType();
inference:

int rhType = right.getType();
int rhType = right.getType().get();
long rhType = right.getType();
int rhType = n.getType();
JSType rhType = right.getType();
int rhType = Right.getType();
u_int rhType = right.getType();
static int rhType = right.getType();
int rhType = type;
int type = right.getType();
int rhType;
u_long rhType = right.getType();
int rhType=right.getType();
int rhType = (int)right.getType();
int rhType = right.getType() - 1;
int result = right.getType();
int rhType = 0;
int rhType = right;
int rhType = right.getType(right);
int rhType = (int) right.getType();
int rhType = right.type;
int rhType = right.GetType();
char* rhType = right.getType();
int rhType = right.getType() == 0;
int rightType = right.getType();
size_t rhType = right.getType();
int rhType = right.getType();
int rhType = right.getType() + 1;
rhType = right.getType();
int rhType = rhType;
int rhType = right.type();
int rhType = right.getString();
int rhType = wrong.getType();
int rhType = right.getType ();
int rhType = right.getValue();
Integer rhType = right.getType();
uint rhType = right.getType();
int rhType = right.getType(n);
JSType *rhType = right.getType();
int rhType = &right.getType();
short rhType = right.getType();
int rhType = right.getName();
int rhType = right.getType()  0;
int rhType = *right.getType();
int rhType = (void *) right.getType();
JSType* rhType = right.getType();
int type;
int rhType = rhType.get();
int rhType = n;
JSType type = right.getType();
const int rhType = right.getType();
int rhType = (char *) right.getType();
boolean rhType = right.getType();
int rhType = left.getType();
int rhType = (void *)right.getType();
char rhType = right.getType();
int rhType = n.getType();
int rhType = right.getNodeType();
char *rhType = right.getType();
int i, rhType = right.getType();
int rhType = getType(right);
int rhType = right.isType();
int lhType = right.getType();
bool rhType = right.getType();
JSType int rhType = right.getType();
Int rhType = right.getType();
int rhType = right.getUndefinedType();
int rhType = right.getType(right.get());
int rhType = (char *)right.getType();
int rhType = true;
int rhType = token.getType();
int rhType = right.getType;
JSTypeType rhType = right.getType();
int rhType = (long) right.getType();
int jtype = right.getType();
int retval = right.getType();
int rhType = (char*) right.getType();
int rhType = u.getType();
int rhType = right.getType(true);
int rhType = jtype;
int rhType = (undefined) right.getType();
int rhType = rights.getType();
int rhType = NodeUtil.getType();
int rhType = right.getString().get();
int rhType = nodeUtil.getType();
int rhType = nu.getType();
int rhType = n.type();
int rhType = right.getType().lh();
int rhType = (long)right.getType();
int rhType = (undefined)right.getType();
int rhType = right.getType(true);
int rhType = right.getType() ;
int len = right.getType();
int rhType = right.getCategory();
int rhType = right.getType(&right);
int rhType = rh.getType();
int aType = right.getType();
int rhType = curType;
int rhType = '0';
int rhType = (char*)right.getType();
int rhType = type(right);
int rhType = name.getType();
PRInt32 rhType = right.getType();
int rhType = right.getType(null);
int rhType = path.getType();
int rhType = right.getType()  1;
int rhType = true;
int rhType = right.getType(false);
jtype rhType = right.getType();
int rhType = right.getNativeType();
int rhType = Right.GetType();
int rhType = right.getType()
int rhType = m.getType();
int rhType = right.getType().trim();
int rhType = None;
int rhType = right.getType() > 0;
int rhType = node.getType();
int rhType = result.getType();
int rhType = right[right.getType()];
int rhType = right.getType() >= 0;
int rhType = right.getType()  2;
int rhType = (void*)right.getType();
unsigned int rhType = right.getType();
int rhType = n.getType().get();
int rhType = r.getType();
int rhType = right.Type();
int i;
int rhType = false;
int rhType = (void*) right.getType();
int rhType = (void **) right.getType();
int rhType = right.getType(left);
int rhType = jtype(right);
int rhType = right.type;
JSInt rhType = right.getType();
int rhType = right.getLength();
int rhType = right.getType()[0];
u_char rhType = right.getType();
int rhType = N.getType();
int nType = right.getType();
int rhType = right.get().get();
int ret = right.getType();
int hType = right.getType();
undefinedRight = right.getType();
int rhType = other.getType();
int rhType = right.getType(0);
int rhType = right.getParentType();
int rhType = TokenUtil.getType();
int rhType = lh.getType();
int rhType = getType();
int rhType = 1;
int rhType = right.getIntType();
intrhType = right.getType();
u.int rhType = right.getType();
JSObject rhType = right.getType();
int rhType = right.getDependentType();
int rhType = right.lhType;
int rhType = right.type();
int *rhType = right.getType();
int rhType = lhType;
JSType rhType;
int rhType = context.getType();
int rhType = right.mType;
int rightType;
int right.getType();
struct rhType *rhType = right.getType();
int rhType = JSType.get();
int rhType= right.getType();
int rhType = right.get();
int rhType = (void**) right.getType();
double rhType = right.getType();
int rhType = (void **)right.getType();
int rhType = (void**)right.getType();
int leftType = right.getType();
int rhType = strdup(right.getType());
int rhType = right.eType();
char * rhType = right.getType();
void* rhType = right.getType();
int rhType = right.getCharacterType();
int rhType = -1;
int rh = right.getType();
int rhType = right.getType(this);
int rhType = right.getObject();
int rhType = (Undefined)right.getType();
int rhType = nu;
int rhType = false;
boolean result;
int rhType=n.getType();
int rhType = right.getRealType();
int rhType = rv;
int rhType = n.type;
int mType = right.getType();
int rhType = right.getContentType();
int rhType = right.getType() == null;
int rhType = right.getType() >> 2;
int rhType = right.getType() &&!right.getString().equals("undefined") && right.getString().equals("undefined")) || (Token.VOID == right.getType() && NodeUtil.isLiteralValue(right.getFirstChild(), false)));
int rhType = right.getType() == Token.LT;
int rhType = right.getType() && right.getString().Equals("undefined");
int rhType = right.getType() && right.getString().Equals("nsSize") && right.getString().Equals("usesize");
int rhType = right.getType()? rhType : right.getType();
int rhType = right.getType() == Token.NT_DEFAULT_VALUE;
int rhType = right.getType() == Token.GT;
int rhType = right.getType() == Token.RX_Type;
int rhType = right.getType() == Token.TTY::1;
int rhType = ((NodeUtil)right.getType()).get();
int rhType = right.getType(); int nsFlatString;
int rhType = (JSRDFType*)right.getType();
int rhType = right.getType() == Token.G? 0 : 0;
int rhType = (caddr_t)right.getType();
int rhType = right.getType() == Token.TTY || rhType = right.getType() == Token.TTY || rhType = right.getType() == Token.TTY || rhType = right.getType() == Token.TTY || rhType = right.getType() == Token.TTY || rhType = right.getType() == Token.TTY || rhType = right.getType() == Token.TTY || rhType = right.getType() == Token.TTY || rhType = right.getType() == Token.TTY || rhType = right.getType() == Token.TTY || rhType = right.getType() == Token.TTY || rhType == Token.TTY || rhType == Token.TTY || rhType == Token.TTY ||
int rhType = (JSType)right.getType();
int rhType = right.getType() == '0';
int rhType = right.getType() == '0'? '0' : 0;
int rhType = right.getType() == Token.XUL;
boolean rhType = right.getType(); int rhType = right.getType();
u_int32_t rhType = right.getType();
int rhType = right.getType(); boolean notToken;
int rhType = right.getType(); int i;
int rhType = right.getType() && rhType = right.getType();
int rhType = jsType;
int rhType = right.getType()? right.getType() : None;
int rhType = right.getType() &&!right.getType();
int rhType = right.getType()? "undefined" : "undefined";
int rhType = right.getType() == Token.NO_TYPE;
u_int16_t rhType = right.getType();
int rhType = right.getType()!= Token.GT;
int rhType = right.getType() && right.getString().equals("");
int rhType = right.getType(); char* cStr;
int rhType = right.getType() && 0xffffffffff;
int rhType = right.getType(); boolean rightLength = right.getLength();
int rhType = right.getType()!= Token.GT && right.getType()!= Token.LT;
int rhType = right.getType(); int rhType = right.getString();
int rhType = right.getType()? right.getType() : 0;
int rhType = right.getType() && right.getString().Equals("undefined"));
int rhType = right.getType()!= 0;
int rhType = ((Token.NAME == right.getType() && right.getString().equals("undefined")) || (Token.VOID == right.getType() && NodeUtil.isLiteralValue(right.getFirstChild(), false)));
int rhType = right.getType() && right.getString().equals("undefined"));
int rhType = jsa_type(right);
int rhType = right.getType(); boolean result;
int rhType = right.getType()? n.getType() : "null";
int rhType = right.getType(); u_long rhType = right.getType();
int rhType = (right.getType() == Token.GT)? rhType : right.getType();
int rhType = right.getType()!= Token.LT;
int rhType = right.getType() && right.getString().equals("undefined") &&!right.getString());
int rhType = right.getType(); int n;
int rhType = right.getType() == Token.T_STRING_NONE;
int rhType = rhType & right.getType();
int rhType = right.getType()!= Token.GT && right.getString().equals("undefined")) || (Token.VOID == right.getType() && right.getString().equals("undefined")));
int rhType = rhType!= Token.RL;
int rhType = JS_Type(right);
int rhType = right.getType() == Token.false;
int rhType = right.getType()? "" : "";
int rhType = right.getType() && right.getString().equals("undefined") && right.getString().equals("defined") && right.getString().equals("undefined")) && right.getString().equals("undefined"));
int rhType = right.getType() && right.getString()!= "undefined" && right.getString().equals("undefined")) && right.getString().equals("undefined") && NodeUtil.isLiteralValue(right.getFirstChild(), false));
int rhType = JS_Type_1(right);
int rhType = right.getType() == Token.GT? Token.LF : Token.HT;
int rhType = right.getType(); int leftFlags = right.getType();
int rhType = right.getType() && (RV_IS_FREE_IS_FIRST) && (RV_IS_REFLOW));
int rhType = '&0';
int rhType = right.getType() <2;
int rhType = right.getType() == '0';
int rhType = right.getType() == '<0'? '0' : 0;
int rhType = '0';
int rhType = right.getType() &1;
int rhType = right.getType() 2;
int rhType = right.getType() <0;
int rhType = right.getType() <1;
int rhType = right.getType() == '&0'? '0' : 0;
int rhType = right.getType() == '&0';
int rhType = '<0';
int rhType = right.getType() 1;
int rhType = right.getType() == '<0';
int rhType = right.getType() == '0'? '0' : 0;
int rhType = right.getType();
int rhType = right.getType() &2;
int rhType = right.getType() 0;
int rhType = right.getType() &0;
