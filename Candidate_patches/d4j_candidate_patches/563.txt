
addToSetIfLocal(n.getFirstChild(), kill);
addToSetIfLocal(lhs, kill, conditional);
addToSetIfLocal(lhs, kill, gen);
addToSetIfLocal(lhs, kill);
addToSetIfLocal(n, kill);
addToSetIfLocal(lhs, kill, null);
lhs.addToSetIfLocal(lhs, kill);
AddToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs);
lhs = addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, &kill);
lhs = lhs.getLastChild();
addToSetIfLocal(lhs, kill, 0);
addToSet(lhs, kill);
addToSetIfLocal(lhs, kill, n);
lhs.addToSetIfLocal(lhs, kill);
addToSetIfLocal(&lhs, kill);
/* addToSetIfLocal(lhs, kill); */
addToSetIfLocal(lhs, Kill);
addToSetIfLocal(n, lhs, kill);
addToLocal(lhs, kill);
addToSetIfLocal(lhs, gen);
addToSetIfLocal(lhs, kill, 1);
addToSetIfLocal(c, kill);
addToSetIfLocal(lhs, kill, count);
(void) addToSetIfLocal(lhs, kill);
result = addToSetIfLocal(lhs, kill);
addToSetIfNative(lhs, kill);
/* addToSetIfLocal(lhs, kill);*/
addToSetIfLocal(Lhs, kill);
/* AddToSetIfLocal(lhs, kill); */
addToSetIfLocal(rhs, kill);
lhs = n.getFirstChild();
AddToLocal(lhs, kill);
addToSetIfLocal(lhs, kill, false);
addToSetIfLocal(lhs, kill, true);
lhs.addToLocal(lhs, kill);
addToSetIfLocal(ihs, kill);
deprecated_addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, kill, -1);
addToSetIfLocal(*lhs, kill);
addToSetIfLocal( lhs, kill );
addToSetIfLocal(lhs, 0);
addToSetIfLocal((unsigned long)lhs, kill);
addToSetIfLocal(n.firstChild, kill);
addToSetIfLocal(lhs, n);
do_addToSetIfLocal(lhs, kill);
addToSetAndLocal(lhs, kill);
addToSetIfLocal(lhs, kill, kill);
appendToSetIfLocal(lhs, kill);
removeToSetIfLocal(lhs, kill);
deprecatedAddToSetIfLocal(lhs, kill);
addToSetIfLocal(p, kill);
else addToSetIfLocal(lhs, kill);
lhs += kill;
addToSetIfLocal(lhs, kill, null);
n.addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, n, kill);
addToSetIfLocal(n.lhs, kill);
addToSetIfLocal(lhs, gen, kill);
delToSetIfLocal(lhs, kill);
else  addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, kill.get());
addToSetIfLocal(s, kill);
addToSetIfLocal (lhs, kill);
addToSetIfLocal(lhs, kill, buf);
rhs = lhs.getLastChild();
addToSetIfLocal(lhs, kill, context);
setToSetIfLocal(lhs, kill);
addToSetifLocal(n.getFirstChild(), kill);
addToSetIfLocal(lhs, kill, 2);
addToSetIfLocal((int)lhs, kill);
addToSetIfLocal(lhs, kill, status);
addToSetIfLocal(lhs, kill, &n);
this.addToSetIfLocal(lhs, kill);
lhs.add(kill);
ret = addToSetIfLocal(lhs, kill);
lhs.addToSetIfLocal(kill);
updateToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, kill, state);
addToSetIfLocal(x, kill);
lhs = kill;
int addToSetIfLocal(lhs, kill);
addToSetIfLocal(shs, kill);
splx(s);
addToSet IfLocal(lhs, kill);
addToSetIfLocal(lhs, kill, len);
addToSetIfLocal(lhs, kill, p);
addToSetIfLocal(lhs, kill, c);
rhs.addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, kill, GEN);
addToSetIfLocal(c.getFirstChild(), kill);
addToSetIfLocal(lhs, kill, true);
return addToSetIfLocal(lhs, kill);
addToSetIfLocal(LHS, kill);
addToSetIfLocal(n.hs, kill);
c.addToSetIfLocal(lhs, kill);
addToSetIfLocal(k, kill);
addToSetIfLocal(lhs, killer);
addToSetIfLocal(lhs, kill, rhs);
addToSetIfLang(lhs, kill);
addToSetIfLocal(lhs, kill, flags);
addToSetIfNativeLocal(lhs, kill);
addToSetIfLocal(lhs, kill, type);
addToSetIfLocal((void *)lhs, kill);
continue;
self.addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, kill, level);
addToListIfLocal(lhs, kill);
(void)addToSetIfLocal(lhs, kill);
addToSetIfLocal(i, kill);
addToSetIfLocal(hs, kill);
lhs.append(kill);
/* AddToSetIfLocal(lhs, kill);*/
addToSetIfLocal(lhs, kill - 1);
rhs.addToSetIfLocal(lhs, kill);
do  addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, kill, &c);
addToSetifLocal(lhs, kill, conditional);
NS_ADDREF(lhs);
addToSetIfLocal(lhs, kill, v);
super.addToSetIfLocal(lhs, kill);
addToSetIfLocal(n.firstChild(), kill);
addToSetIfLocal(lhs, kill, path);
newLocal = addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, kill, parent);
return;
lhs.addToLocal(lhs, kill);
addToSetIfLocal(n.GetFirstChild(), kill);
gen = addToSetIfLocal(lhs, kill);
addToSetIflocal(lhs, kill);
addToSetIfLocal(lhs, len);
addToSetIfLocal(lhs, kill, false);
do addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, fatal);
addToSetIfLocal(chs, kill);
addToSetIfLocal(lhs, (int)kill);
addToSetIfLocal(lhs, kill, 0, 0);
addToChild(lhs, kill);
!addToSetIfLocal(lhs, kill);
addToSetIfVar(lhs, kill);
XXX addToSetIfLocal(lhs, kill);
addToSetIfNonLocal(lhs, kill);
addToSetIfNode(lhs, kill);
addToSetIfLocal(lhs, kill, prev);
addToSetIfLocal(ifp, kill);
do_AddToSetIfLocal(lhs, kill);
addToSetIfLocal(n.getFirstChild(), Kill);
addToSetifLocal(lhs, kill, gen);
/*AddToSetIfLocal(lhs, kill); */
*/ addToSetIfLocal(lhs, kill);
addToSetIfDir(lhs, kill);
lhs.addToSetIfLocal(kill);
addToSet(lhs);
addToSetIfLocal((long)lhs, kill);
addToSetIfLocal(v, kill);
addToSetIfInLocal(lhs, kill);
lhs = lhs;
lhs.addToLocal(kill);
addToSetIfLocal(lhs, kill, max);
addToSetIfNone(lhs, kill);
addToSetIfLocal(lhs, kill, 4);
addToSetIfLocal(lhs, (int) kill);
lhs = lhs.getFirstChild();
addToSetIfLocal(buf, kill);
addToSetIfLocal(lhs, kill, value);
len = addToSetIfLocal(lhs, kill);
addToSetIfLocal(in, kill);
addToSetIfLocal(lhs, lhs, kill);
addToSetIfLocal(lhs, kill, mode);
addToSetIfLocal(rhs, lhs, kill);
addToSetifLocal(n, kill);
addToSetIf(lhs, kill);
addToSetIfLocal(lhs, kill, target);
toSetIfLocal(lhs, kill);
bzero(lhs, kill);
addToSetIfLocal(ch, kill);
addToSetIfLocal(lhs, kill, frame);
addToSetIfLocal(lhs, kill, name);
addToSetIfLocal(u, kill);
addToSetIfLocal(lhs, kill, &gen);
addToSetIfLocal(lhs, kill, nl);
ch = addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, kill, tmp);
addToSetIfLocal(lhs, kill, i);
tmp = addToSetIfLocal(lhs, kill);
/*AddToSetIfLocal(lhs, kill);*/
addToSetIfLocal(lhs, rhs);
err = addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, kill, maxLength);
i = addToSetIfLocal(lhs, kill);
break;
lhs.addToSetIfLocal(lhs);
addToSetIfLocal(lhs, kill, kClosed);
if ((lhs!= n) && (lhs!= n))  addToSetIfLocal(lhs, kill);
if (!addedToSetIfLocal(lhs, kill))  return;
addToSetIfLocal(lhs, fcnt);
lhs.addToSetIfLocal(n.getFirstChild(), kill);
addToSetIfLocal(lhs, kill, &lhs);
addToSetIfLocal(lhs, kill, n.getLastChild());
if (!kill)  addToSetIfLocal(lhs, kill);
if (strcmp(lhs, kill) == 0) addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, kill, nodeUtil);
if (n.isDependent()) addToSetIfLocal(lhs, kill);
if (lhs) addToSetIfLocal(lhs, kill);
lhs = lhs.getLastChild(); if (NodeUtil.isVar(lhs))  addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs))  lhs = lhs.getLastChild(); if (!n.hasChildren())  if (c.hasChildren())  computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional)  computeGenKill(n.getLastChild(), gen, kill, conditional);   else  addToSetIfLocal(lhs, kill);
lhs.append(kill);
addToSetIfLocal(lhs, kill, &addToSetifLocal);
if (LocalCreateGenKill(lhs, kill))  char *url = lhs.getURL(); addToSetIfLocal(url, kill);
if (strlen(lhs) == 0)  addToSetIfLocal(lhs, kill);  else  lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs))  addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs))  addToSetIfLocal(lhs, kill);  else  if (NodeUtil.isInVar(lhs))  if (!NodeUtil.isInVar(lhs))  n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs))  addToSetIfLocal(lhs, kill);
/* AddToSetIfLocal(lhs, kill); */ if (!async)  async = do_QueryInterface(lhs); addToSetIfLocal(async, kill);
if (!done)  lhs = lhs.getLastChild();  else  addToSetIfLocal(lhs, kill);
if (n.getChildCount()  lhs.length)  /* * * Add to SetIfLocal(lhs, kill); */
/* * if (n.getLastChild())  if (n.getLastChild())  addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs))  lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs))  if (c.hasChildren())  computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional)  computeGenKill(c.getFirstChild(), gen, kill, conditional);  else  addToSetIfLocal(lhs, kill);
if (!lhs)  addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, kill, kobj);
/* XXX fixup */ addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, kill, sizeof(lhs));
if (!addToSetIfLocal(lhs, kill))  /* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next))  if (!addToSetIfLocal(lhs, kill))  /* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill);   else  /* AddToSetIfLocal(lhs, kill);
lhs.mLastChild = kill;
addToSetIfLocal(lhs, kill, (void *)kill);
addToSetIfLocal(lhs, kill, &lhs.next);
addToSetIfLocal(lhs, lhs.getLastChild());
if (!lhs.isVar(lhs)) addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, kill, node);
addToSetIfLocal(lhs, kill, prevLocal);
if ((n.getChildCount()  2) &&!(n.getNext()!= '0'))  addToSetIfLocal(lhs, kill);
if (addToSetIfLocal(lhs, kill))  /* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill);  else  addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs))  for (Node c = n.getFirstChild(); c!= null; c = c.getNext())  if (c.hasChildren())  computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional)  addToSetIfLocal(lhs, kill);
lhs.append(kill); addToSetIfLocal(lhs, kill);
if (lhs!= n) addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, lhs.getLastChild());
if ((lhs == null) || (lhs.flags & PIDGET))  lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs))  for (Node c = n.getFirstChild(); c!= null; c = c.getNext())  if (c.hasChildren())  computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional)  computeGenKill(n.getLastChild(), gen, kill, conditional); return;    else  addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!addToSetIfLocal(lhs, kill))  af.kUnlock(); addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, kill, lhs.src.toUpperCase());
if (lhs && kill)  addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, kill, getter_AddRefs(n));
addToSetIfLocal(lhs, kill, &n.nodeUtil);
if (!olk) addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0))  if (NodeUtil.isVar(n))  if (c.hasChildren())  computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional)  computeGenKill(n.getLastChild(), gen, kill, conditional);  else  addToSetIfLocal(lhs, kill);   else  addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs))  for (Node c = n.getFirstChild(); c!= null; c = c.getNext())  if (c.hasChildren())  computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional)  computeGenKill(c.getFirstChild(), gen, kill, conditional);   return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional);  if (n.hasChildren())  computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional)  addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, kill, c.lhs.getLastChild());
if (lhs)  addToSetIfLocal(lhs, kill);  else  addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, kill, n.getChildCount());
if (!addToSetIfLocal(lhs, kill))  addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) addToSetIfLocal(lhs, kill);
if (n.getLastChild()  lhs.getLastChild())  addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, kill, (Unsigned char *) lhs);
addToSetIfLocal(lhs, kill, addToSetIfSlots(n), lhs);
addToSetIfLocal(lhs, n.getLastChild());
addToSetIfLocal(lhs, kill, kDummy);
addToSetIfLocal(lhs, bhs);
if ((n.isVar() && n.getLastChild()) == null)  if (!conditional) addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, kill, &context);
if (n.getLastChild() == lhs.getLastChild())  addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, c, kill);
if (n.getLastChild()) addToSetIfLocal(lhs, kill);
lhs.removeStatus.addToSetIfLocal(lhs, kill);
if (!(int)lhs)  addToSetIfLocal(lhs, kill);
lhs.remove(lhs);
if (!addToSetIfLocal(lhs, kill))  delete lhs; return;
/* * AddToSetIfLocal(lhs, kill); */
addToSetIfLocal(lhs, kill, &n.flags);
addToSetIfLocal(lhs, kill, addToSetIfLocal(lhs, kill));
addToSetIfLocal(lhs, kill, &lhs.getParent());
addToSetIfLocal(lhs, kill, &lhs.ioType);
lhs = n.getFirstChild(); if (lhs!= null)  addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, kill, &stats);
addToSetIfLocal(lhs, kill, n.getFirstChild());
addToSetIfLocal(lhs, kill, &dlist);
if (n.hasChildren())  if (n.hasChildren())  computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional)  addToSetIfLocal(lhs, kill);  else  addToSetIfLocal(lhs, kill);
if (IsInitialized(lhs))  addToSetIfLocal(lhs, kill);  else  addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, rhs, kill);
addToSetIfLocal(lhs, kill, &lhs.syntax);
if (strcmp(lhs, "local") == 0) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (synchronous) addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, kill, addToSetIfLocal(lhs));
if ((lhs &&!IsVar(lhs)))  addToSetIfLocal(lhs, kill);
if (lhs!= null) addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, lhs.lastChild, kill);
addToSetIfLocal(lhs, kill, sizeof(lhs), gen);
addToSetIfLocal(lhs, kill, &gH.hs);
addToSetIfLocal(lhs, kill, lhs.getFirstChild());
if (advance(kNameSpaceID_None, n) == 0)  addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, xendPos, kill);
if (!advanced) addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs))  addToSetIfLocal(lhs, kill);  else  addToSetIfLocal(lhs, kill);
lhs.setLocal(lhs, kill);
addToSetIfLocal(lhs, kill, lhs.getLastChild());
if (dv) addToSetIfLocal(lhs, kill);
lhs = lhs.getLastChild(); addToSetIfLocal(lhs, kill);
if (!AddToSetIfLocal(lhs, kill))  addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, kill, n.next);
lhs = lhs.getLastChild(); if (!lhs)  addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, kill, &rhs);
addToSetIfLocal(lhs, kill, n.getCaseInsensitiveSize());

if (!nodeUtil.isVar(lhs)) <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) /* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) if (!addToSetIfLocal(lhs, kill)) &/* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); &else /* AddToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); if (lhs!= null) <addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) &if (NodeUtil.isVar(n)) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) if (NodeUtil.isVar(n)) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
&if (addToSetIfLocal(lhs, kill)) </* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); &else &addToSetIfLocal(lhs, kill);
&if (addToSetIfLocal(lhs, kill)) </* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); <else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) addToSetIfLocal(lhs, kill); <else &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <addToSetIfLocal(lhs, kill);
if (IsInitialized(lhs)) addToSetIfLocal(lhs, kill); <else addToSetIfLocal(lhs, kill);
if ((n.isVar() && n.getLastChild()) == null) &if (!conditional) addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) lhs = lhs.getLastChild(); if (!n.hasChildren()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); else <if (NodeUtil.isInVar(lhs)) if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!addedToSetIfLocal(lhs, kill)) <return;
if (!addToSetIfLocal(lhs, kill)) </* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) if (!addToSetIfLocal(lhs, kill)) &/* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); &else /* AddToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); &else <addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
&if (n.hasChildren()) if (n.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill);
if (!AddToSetIfLocal(lhs, kill)) <addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) lhs = lhs.getLastChild(); if (!n.hasChildren()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) <if (NodeUtil.isVar(n)) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) lhs = lhs.getLastChild(); if (!n.hasChildren()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) <lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!addToSetIfLocal(lhs, kill)) </* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) <if (!addToSetIfLocal(lhs, kill)) &/* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); &else /* AddToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); &else &if (NodeUtil.isInVar(lhs)) if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (n.getLastChild() &lhs.getLastChild()) addToSetIfLocal(lhs, kill);
&if (addToSetIfLocal(lhs, kill)) /* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); &else <addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (n.hasChildren()) &if (n.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
&lhs.addToSetIfLocal(lhs, kill);
&if (IsInitialized(lhs)) &addToSetIfLocal(lhs, kill); else &addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) &addToSetIfLocal(lhs, kill); &else lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) <lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (lhs && kill) &addToSetIfLocal(lhs, kill);
if ((n.getChildCount() &2) &&!(n.getNext()!= '0')) <addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) addToSetIfLocal(lhs, kill); else <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <addToSetIfLocal(lhs, kill);
if ((n.getChildCount() &2) &&!(n.getNext()!= '&0')) addToSetIfLocal(lhs, kill);
&if (n.hasChildren()) <if (n.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) <addToSetIfLocal(lhs, kill); &else lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!n.isVar(lhs)) &lhs = lhs.getLastChild(); if (!n.hasChildren()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (advance(kNameSpaceID_null, n) == 0) addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) /* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) <if (!addToSetIfLocal(lhs, kill)) /* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); <else /* AddToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) &lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
<if (addToSetIfLocal(lhs, kill)) </* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); &else <addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) /* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) <if (!addToSetIfLocal(lhs, kill)) /* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); &else /* AddToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); &else if (NodeUtil.isInVar(lhs)) if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) &/* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) <if (!addToSetIfLocal(lhs, kill)) &/* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); <else /* AddToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) <lhs = lhs.getLastChild(); if (!n.hasChildren()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) if (NodeUtil.isVar(n)) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) &lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (strlen(lhs) == 0) <addToSetIfLocal(lhs, kill); &else <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) addToSetIfLocal(lhs, kill);
if (lhs) <addToSetIfLocal(lhs, kill); else &addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); <else addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) <if (NodeUtil.isVar(n)) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) <lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if ((n.getChildCount() <2) &&!(n.getNext()!= '0')) addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) <lhs = lhs.getLastChild(); if (!n.hasChildren()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) <lhs = lhs.getLastChild(); if (!n.hasChildren()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) /* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) if (!addToSetIfLocal(lhs, kill)) /* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); else /* AddToSetIfLocal(lhs, kill);
<if (addToSetIfLocal(lhs, kill)) </* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); <else addToSetIfLocal(lhs, kill);
<if (IsInitialized(lhs)) &addToSetIfLocal(lhs, kill); &else <addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) &lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (n.getLastChild() &lhs.getLastChild()) &addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill);
if (lhs) &addToSetIfLocal(lhs, kill); <else <addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) &addToSetIfLocal(lhs, kill); &else &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) &/* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) if (!addToSetIfLocal(lhs, kill)) /* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); else /* AddToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); <else <if (NodeUtil.isInVar(lhs)) &if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) &lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!done) <lhs = lhs.getLastChild(); else <addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
<if (n.hasChildren()) if (n.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
&if (IsInitialized(lhs)) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
&if (addToSetIfLocal(lhs, kill)) &/* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) &addToSetIfLocal(lhs, kill); &else <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &addToSetIfLocal(lhs, kill);
<if (IsInitialized(lhs)) &addToSetIfLocal(lhs, kill); &else &addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); &else addToSetIfLocal(lhs, kill);
if (!done) lhs = lhs.getLastChild(); &else <addToSetIfLocal(lhs, kill);
if (IsInitialized(lhs)) addToSetIfLocal(lhs, kill); &else <addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill);
if (!done) &lhs = lhs.getLastChild(); <else &addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) if (NodeUtil.isVar(n)) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) &lhs = lhs.getLastChild(); if (!n.hasChildren()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!done) lhs = lhs.getLastChild(); else &addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); <else &if (NodeUtil.isInVar(lhs)) <if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) &lhs = lhs.getLastChild(); if (!n.hasChildren()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (n.hasChildren()) &if (n.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
&if (addToSetIfLocal(lhs, kill)) </* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); <else <addToSetIfLocal(lhs, kill);
else <addToSetIfLocal(lhs, kill);
if (lhs) addToSetIfLocal(lhs, kill); &else &addToSetIfLocal(lhs, kill);
if (!(int)lhs) &addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) <if (NodeUtil.isVar(n)) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (LocalCreateGenKill(lhs, kill)) &char *url = lhs.getURL(); addToSetIfLocal(url, kill);
&if (n.hasChildren()) if (n.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); <else <if (NodeUtil.isInVar(lhs)) <if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) <lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); <else &if (NodeUtil.isInVar(lhs)) if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); <else if (NodeUtil.isInVar(lhs)) <if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
<if (addToSetIfLocal(lhs, kill)) &/* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) <lhs = lhs.getLastChild(); if (!n.hasChildren()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) <lhs = lhs.getLastChild(); if (!n.hasChildren()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
<if (IsInitialized(lhs)) <addToSetIfLocal(lhs, kill); else <addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) <if (NodeUtil.isVar(n)) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) &/* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) &if (!addToSetIfLocal(lhs, kill)) </* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); else /* AddToSetIfLocal(lhs, kill);
if ((n.getChildCount() 2) &&!(n.getNext()!= '<0')) addToSetIfLocal(lhs, kill);
&if (n.hasChildren()) <if (n.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
&/* AddToSetIfLocal(lhs, kill); */ if (!async) async = do_QueryInterface(lhs); addToSetIfLocal(async, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); <else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) <lhs = lhs.getLastChild(); if (!n.hasChildren()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) /* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) &if (!addToSetIfLocal(lhs, kill)) /* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); &else /* AddToSetIfLocal(lhs, kill);
<if (addToSetIfLocal(lhs, kill)) &/* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); &else &addToSetIfLocal(lhs, kill);
if (lhs) <addToSetIfLocal(lhs, kill); <else addToSetIfLocal(lhs, kill);
if (!kill) <addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
&if (IsInitialized(lhs)) &addToSetIfLocal(lhs, kill); &else <addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) &if (NodeUtil.isVar(n)) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
<if (addToSetIfLocal(lhs, kill)) &/* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); &else addToSetIfLocal(lhs, kill);
if (n.getLastChild() &lhs.getLastChild()) <addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) lhs = lhs.getLastChild(); if (!n.hasChildren()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!done) <lhs = lhs.getLastChild(); &else <addToSetIfLocal(lhs, kill);
if ((n.getChildCount() 2) &&!(n.getNext()!= '0')) addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) &/* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) <if (!addToSetIfLocal(lhs, kill)) &/* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); else /* AddToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) </* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) if (!addToSetIfLocal(lhs, kill)) </* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); &else /* AddToSetIfLocal(lhs, kill);
<if (addToSetIfLocal(lhs, kill)) </* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); &else addToSetIfLocal(lhs, kill);
if (addToSetIfLocal(lhs, kill)) &/* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); <else addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) </* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) if (!addToSetIfLocal(lhs, kill)) &/* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); <else /* AddToSetIfLocal(lhs, kill);
&if (n.hasChildren()) &if (n.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) &/* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) if (!addToSetIfLocal(lhs, kill)) &/* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); else /* AddToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) if (NodeUtil.isVar(n)) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (lhs && kill) <addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) &addToSetIfLocal(lhs, kill); else lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) <lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!n.isVar(lhs)) lhs = lhs.getLastChild(); if (!n.hasChildren()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
<if (n.hasChildren()) &if (n.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) &lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!n.isVar(lhs)) &lhs = lhs.getLastChild(); if (!n.hasChildren()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) &/* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) &if (!addToSetIfLocal(lhs, kill)) /* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); <else /* AddToSetIfLocal(lhs, kill);
do addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) &if (NodeUtil.isVar(n)) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
&if (IsInitialized(lhs)) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
<if (addToSetIfLocal(lhs, kill)) /* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); &else <addToSetIfLocal(lhs, kill);
if (!done) <lhs = lhs.getLastChild(); &else addToSetIfLocal(lhs, kill);
&if (n.hasChildren()) &if (n.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) <if (NodeUtil.isVar(n)) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) if (NodeUtil.isVar(n)) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) &if (NodeUtil.isVar(n)) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); <else &if (NodeUtil.isInVar(lhs)) <if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); &else if (NodeUtil.isInVar(lhs)) &if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) lhs = lhs.getLastChild(); if (!n.hasChildren()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); &else &addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); else if (NodeUtil.isInVar(lhs)) &if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
&if (n.hasChildren()) if (n.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (addToSetIfLocal(lhs, kill)) </* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); else <addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) if (NodeUtil.isVar(n)) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
/* AddToSetIfLocal(lhs, kill); */ if (!async) async = do_QueryInterface(lhs); addToSetIfLocal(async, kill);
if (!addToSetIfLocal(lhs, kill)) &/* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) &if (!addToSetIfLocal(lhs, kill)) /* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); else /* AddToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) <if (NodeUtil.isVar(n)) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (lhs) &addToSetIfLocal(lhs, kill); <else addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) addToSetIfLocal(lhs, kill); &else &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); else <if (NodeUtil.isInVar(lhs)) &if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
<if (addToSetIfLocal(lhs, kill)) </* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); &else &addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if ((lhs &&!IsVar(lhs))) <addToSetIfLocal(lhs, kill);
if ((n.getChildCount() <2) &&!(n.getNext()!= '<0')) &addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) &lhs = lhs.getLastChild(); if (!n.hasChildren()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
<if (addToSetIfLocal(lhs, kill)) </* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); else <addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); &else &addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
lhs = lhs.getLastChild(); if (!lhs) &addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) &if (NodeUtil.isVar(n)) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (n.hasChildren()) if (n.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) lhs = lhs.getLastChild(); if (!n.hasChildren()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
&if (addToSetIfLocal(lhs, kill)) &/* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); <else &addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (lhs) addToSetIfLocal(lhs, kill); &else addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) addToSetIfLocal(lhs, kill); else &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) addToSetIfLocal(lhs, kill);
if (addToSetIfLocal(lhs, kill)) /* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); <else addToSetIfLocal(lhs, kill);
<if (addToSetIfLocal(lhs, kill)) </* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); <else &addToSetIfLocal(lhs, kill);
&if (addToSetIfLocal(lhs, kill)) /* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); <else &addToSetIfLocal(lhs, kill);
if (n.getChildCount() <lhs.length) &/* * * Add to SetIfLocal(lhs, kill); */
if (!NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); <else <if (NodeUtil.isInVar(lhs)) if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) &/* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) if (!addToSetIfLocal(lhs, kill)) /* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); <else /* AddToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) <addToSetIfLocal(lhs, kill); else <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) addToSetIfLocal(lhs, kill);
if (IsInitialized(lhs)) &addToSetIfLocal(lhs, kill); else &addToSetIfLocal(lhs, kill);
&if (addToSetIfLocal(lhs, kill)) </* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); else <addToSetIfLocal(lhs, kill);
&if (IsInitialized(lhs)) <addToSetIfLocal(lhs, kill); <else &addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!done) &lhs = lhs.getLastChild(); else &addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) &/* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) if (!addToSetIfLocal(lhs, kill)) </* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); else /* AddToSetIfLocal(lhs, kill);
if ((n.getChildCount() &2) &&!(n.getNext()!= '0')) addToSetIfLocal(lhs, kill);
if (lhs) &addToSetIfLocal(lhs, kill); &else addToSetIfLocal(lhs, kill);
if (lhs) &addToSetIfLocal(lhs, kill); &else &addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) &lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!n.isVar(lhs)) &lhs = lhs.getLastChild(); if (!n.hasChildren()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) <addToSetIfLocal(lhs, kill); <else <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) if (NodeUtil.isVar(n)) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!done) <lhs = lhs.getLastChild(); <else &addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) lhs = lhs.getLastChild(); if (!n.hasChildren()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) <if (NodeUtil.isVar(n)) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) lhs = lhs.getLastChild(); if (!n.hasChildren()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) <addToSetIfLocal(lhs, kill); <else &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) <if (NodeUtil.isVar(n)) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) &if (NodeUtil.isVar(n)) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) <lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) if (NodeUtil.isVar(n)) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) <lhs = lhs.getLastChild(); if (!n.hasChildren()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (LocalCreateGenKill(lhs, kill)) char *url = lhs.getURL(); addToSetIfLocal(url, kill);
if (addToSetIfLocal(lhs, kill)) /* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); <else <addToSetIfLocal(lhs, kill);
if ((n.getChildCount() &2) &&!(n.getNext()!= '&0')) &addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) </* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) &if (!addToSetIfLocal(lhs, kill)) /* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); else /* AddToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) <lhs = lhs.getLastChild(); if (!n.hasChildren()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (addToSetIfLocal(lhs, kill)) /* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); &else &addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill);
<if (addToSetIfLocal(lhs, kill)) /* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); <else <addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (n.hasChildren()) if (n.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); <else &addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); &else &if (NodeUtil.isInVar(lhs)) if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) <lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!addToSetIfLocal(lhs, kill)) &af.kUnlock(); addToSetIfLocal(lhs, kill);
&if (IsInitialized(lhs)) <addToSetIfLocal(lhs, kill); &else <addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) lhs = lhs.getLastChild(); if (!n.hasChildren()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (n.getChildCount() <lhs.length) /* * * Add to SetIfLocal(lhs, kill); */
if (strlen(lhs) == 0) &addToSetIfLocal(lhs, kill); &else <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) &lhs = lhs.getLastChild(); if (!n.hasChildren()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (lhs) <addToSetIfLocal(lhs, kill); &else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) <lhs = lhs.getLastChild(); if (!n.hasChildren()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
<if (IsInitialized(lhs)) addToSetIfLocal(lhs, kill); &else &addToSetIfLocal(lhs, kill);
&if (IsInitialized(lhs)) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
<if (IsInitialized(lhs)) addToSetIfLocal(lhs, kill); else &addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); <else <addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) </* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) if (!addToSetIfLocal(lhs, kill)) &/* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); else /* AddToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) if (NodeUtil.isVar(n)) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) /* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) <if (!addToSetIfLocal(lhs, kill)) &/* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); &else /* AddToSetIfLocal(lhs, kill);
<if (IsInitialized(lhs)) <addToSetIfLocal(lhs, kill); &else &addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) <if (NodeUtil.isVar(n)) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!AddToSetIfLocal(lhs, kill)) &addToSetIfLocal(lhs, kill);
if (lhs) addToSetIfLocal(lhs, kill); <else &addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (n.getLastChild() <lhs.getLastChild()) addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) <addToSetIfLocal(lhs, kill); <else &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &addToSetIfLocal(lhs, kill);
<if (n.hasChildren()) <if (n.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
&if (n.hasChildren()) if (n.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!(int)lhs) addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (n.getLastChild() lhs.getLastChild()) &addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); else &addToSetIfLocal(lhs, kill);
if (n.getChildCount() &lhs.length) &/* * * Add to SetIfLocal(lhs, kill); */
/* * if (n.getLastChild()) if (n.getLastChild()) addToSetIfLocal(lhs, kill);
<if (addToSetIfLocal(lhs, kill)) &/* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); <else &addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) addToSetIfLocal(lhs, kill); else &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) &if (NodeUtil.isVar(n)) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); else <addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) <lhs = lhs.getLastChild(); if (!n.hasChildren()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
<if (addToSetIfLocal(lhs, kill)) &/* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); <else <addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); &else if (NodeUtil.isInVar(lhs)) <if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if ((n.getChildCount() &2) &&!(n.getNext()!= '0')) &addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); <else &if (NodeUtil.isInVar(lhs)) <if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
<if (IsInitialized(lhs)) <addToSetIfLocal(lhs, kill); &else <addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
<if (addToSetIfLocal(lhs, kill)) &/* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); <else addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) delete lhs; return;
if (n.hasChildren()) <if (n.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
&if (addToSetIfLocal(lhs, kill)) /* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); &else &addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) <addToSetIfLocal(lhs, kill); <else lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) addToSetIfLocal(lhs, kill);
if (IsInitialized(lhs)) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); <else &if (NodeUtil.isInVar(lhs)) &if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); &else <if (NodeUtil.isInVar(lhs)) &if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
&if (n.hasChildren()) <if (n.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
&if (n.hasChildren()) &if (n.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (n.getLastChild() == lhs.getLastChild()) addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) lhs = lhs.getLastChild(); if (!n.hasChildren()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (IsInitialized(lhs)) &addToSetIfLocal(lhs, kill); <else &addToSetIfLocal(lhs, kill);
<addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) &addToSetIfLocal(lhs, kill); <else lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) /* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) &if (!addToSetIfLocal(lhs, kill)) &/* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); <else /* AddToSetIfLocal(lhs, kill);
<if (addToSetIfLocal(lhs, kill)) /* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
lhs = lhs.getLastChild(); if (!lhs) <addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) if (NodeUtil.isVar(n)) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) if (NodeUtil.isVar(n)) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); <else if (NodeUtil.isInVar(lhs)) <if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
&else <addToSetIfLocal(lhs, kill);
<else <addToSetIfLocal(lhs, kill);
if (IsInitialized(lhs)) addToSetIfLocal(lhs, kill); &else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) <lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!addToSetIfLocal(lhs, kill)) </* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) &if (!addToSetIfLocal(lhs, kill)) </* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); <else /* AddToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) <lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!nodeUtil.isVar(lhs)) &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) /* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) if (!addToSetIfLocal(lhs, kill)) &/* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); <else /* AddToSetIfLocal(lhs, kill);
if ((n.getChildCount() &2) &&!(n.getNext()!= '<0')) <addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) &addToSetIfLocal(lhs, kill); &else &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <addToSetIfLocal(lhs, kill);
if (n.hasChildren()) <if (n.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) if (NodeUtil.isVar(n)) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); <else if (NodeUtil.isInVar(lhs)) if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) <lhs = lhs.getLastChild(); if (!n.hasChildren()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) <lhs = lhs.getLastChild(); if (!n.hasChildren()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (lhs) addToSetIfLocal(lhs, kill); &else <addToSetIfLocal(lhs, kill);
&if (IsInitialized(lhs)) &addToSetIfLocal(lhs, kill); else <addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) <lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if ((n.getChildCount() &2) &&!(n.getNext()!= '&0')) <addToSetIfLocal(lhs, kill);
if ((lhs!= n) && (lhs!= n)) &addToSetIfLocal(lhs, kill);
if (lhs) addToSetIfLocal(lhs, kill); else &addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) &lhs = lhs.getLastChild(); if (!n.hasChildren()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) &lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!n.isVar(lhs)) &lhs = lhs.getLastChild(); if (!n.hasChildren()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) <lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) if (NodeUtil.isVar(n)) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
<if (addToSetIfLocal(lhs, kill)) &/* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); else &addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) addToSetIfLocal(lhs, kill); <else lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); <else if (NodeUtil.isInVar(lhs)) <if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) &/* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) if (!addToSetIfLocal(lhs, kill)) &/* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); &else /* AddToSetIfLocal(lhs, kill);
<if (n.hasChildren()) &if (n.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
<if (n.hasChildren()) <if (n.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) </* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) <if (!addToSetIfLocal(lhs, kill)) </* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); else /* AddToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (n.hasChildren()) if (n.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) lhs = lhs.getLastChild(); if (!n.hasChildren()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); <else if (NodeUtil.isInVar(lhs)) if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
&if (IsInitialized(lhs)) <addToSetIfLocal(lhs, kill); else &addToSetIfLocal(lhs, kill);
<if (n.hasChildren()) <if (n.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); else <if (NodeUtil.isInVar(lhs)) <if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (addToSetIfLocal(lhs, kill)) /* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); &else <addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) &lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!done) &lhs = lhs.getLastChild(); else addToSetIfLocal(lhs, kill);
<if (addToSetIfLocal(lhs, kill)) </* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if ((n.getChildCount() <2) &&!(n.getNext()!= '0')) &addToSetIfLocal(lhs, kill);
if (IsInitialized(lhs)) <addToSetIfLocal(lhs, kill); <else addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); &else if (NodeUtil.isInVar(lhs)) &if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) &addToSetIfLocal(lhs, kill); &else <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) <lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if ((lhs == null) || (lhs.flags & PIDGET)) &lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); else if (NodeUtil.isInVar(lhs)) if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (!done) &lhs = lhs.getLastChild(); else <addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) addToSetIfLocal(lhs, kill); <else &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) lhs = lhs.getLastChild(); if (!n.hasChildren()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) &if (NodeUtil.isVar(n)) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) <if (NodeUtil.isVar(n)) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) if (NodeUtil.isVar(n)) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (IsInitialized(lhs)) <addToSetIfLocal(lhs, kill); else <addToSetIfLocal(lhs, kill);
if (!addedToSetIfLocal(lhs, kill)) return;
if (NodeUtil.isVar(lhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) <lhs = lhs.getLastChild(); if (!n.hasChildren()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill);
if (!lhs) addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); else <if (NodeUtil.isInVar(lhs)) <if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
&if (addToSetIfLocal(lhs, kill)) &/* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); &else &addToSetIfLocal(lhs, kill);
<if (IsInitialized(lhs)) <addToSetIfLocal(lhs, kill); &else addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) &/* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) <if (!addToSetIfLocal(lhs, kill)) /* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); else /* AddToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) addToSetIfLocal(lhs, kill); <else lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (lhs) <addToSetIfLocal(lhs, kill); <else &addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) </* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) if (!addToSetIfLocal(lhs, kill)) /* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); else /* AddToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) <if (NodeUtil.isVar(n)) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
else &addToSetIfLocal(lhs, kill);
&if (n.hasChildren()) &if (n.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) addToSetIfLocal(lhs, kill); else &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) addToSetIfLocal(lhs, kill); else lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) /* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) if (!addToSetIfLocal(lhs, kill)) /* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); <else /* AddToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
<if (n.hasChildren()) if (n.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) lhs = lhs.getLastChild(); if (!n.hasChildren()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) &/* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) <if (!addToSetIfLocal(lhs, kill)) </* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); <else /* AddToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) if (NodeUtil.isVar(n)) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill);
<if (IsInitialized(lhs)) addToSetIfLocal(lhs, kill); &else addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (lhs) &addToSetIfLocal(lhs, kill); else &addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); else &if (NodeUtil.isInVar(lhs)) if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) &lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((lhs &&!IsVar(lhs))) &addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) &if (NodeUtil.isVar(n)) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) <lhs = lhs.getLastChild(); if (!n.hasChildren()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
else addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) <if (NodeUtil.isVar(n)) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) &if (NodeUtil.isVar(n)) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); &else if (NodeUtil.isInVar(lhs)) if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if ((n.getChildCount() 2) &&!(n.getNext()!= '0')) <addToSetIfLocal(lhs, kill);
/* AddToSetIfLocal(lhs, kill); */ if (!async) <async = do_QueryInterface(lhs); addToSetIfLocal(async, kill);
if (!addToSetIfLocal(lhs, kill)) &/* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) &if (!addToSetIfLocal(lhs, kill)) &/* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); <else /* AddToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) &lhs = lhs.getLastChild(); if (!n.hasChildren()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((n.getChildCount() <2) &&!(n.getNext()!= '<0')) addToSetIfLocal(lhs, kill);
if (lhs) addToSetIfLocal(lhs, kill); <else <addToSetIfLocal(lhs, kill);
if (n.getChildCount() &lhs.length) </* * * Add to SetIfLocal(lhs, kill); */
if (addToSetIfLocal(lhs, kill)) /* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); <else &addToSetIfLocal(lhs, kill);
<if (n.hasChildren()) &if (n.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (addToSetIfLocal(lhs, kill)) &/* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); &else <addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) </* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) <if (!addToSetIfLocal(lhs, kill)) </* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); <else /* AddToSetIfLocal(lhs, kill);
<if (n.hasChildren()) &if (n.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
/* * if (n.getLastChild()) if (n.getLastChild()) &addToSetIfLocal(lhs, kill);
<if (IsInitialized(lhs)) &addToSetIfLocal(lhs, kill); <else <addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) &/* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) <if (!addToSetIfLocal(lhs, kill)) </* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); &else /* AddToSetIfLocal(lhs, kill);
&if (n.hasChildren()) if (n.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (n.hasChildren()) &if (n.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
do &addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) <if (NodeUtil.isVar(n)) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) &addToSetIfLocal(lhs, kill); else <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); else &if (NodeUtil.isInVar(lhs)) &if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) <lhs = lhs.getLastChild(); if (!n.hasChildren()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (addToSetIfLocal(lhs, kill)) /* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); else &addToSetIfLocal(lhs, kill);
&if (IsInitialized(lhs)) addToSetIfLocal(lhs, kill); else <addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) /* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) &if (!addToSetIfLocal(lhs, kill)) </* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); &else /* AddToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
<if (n.hasChildren()) <if (n.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
<if (n.hasChildren()) if (n.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
<if (n.hasChildren()) <if (n.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill);
if (IsInitialized(lhs)) <addToSetIfLocal(lhs, kill); else &addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) <lhs = lhs.getLastChild(); if (!n.hasChildren()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) &/* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) if (!addToSetIfLocal(lhs, kill)) /* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); &else /* AddToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); else &if (NodeUtil.isInVar(lhs)) <if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
<if (IsInitialized(lhs)) <addToSetIfLocal(lhs, kill); <else addToSetIfLocal(lhs, kill);
if (addToSetIfLocal(lhs, kill)) </* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); <else <addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) /* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) if (!addToSetIfLocal(lhs, kill)) </* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); else /* AddToSetIfLocal(lhs, kill);
if ((n.getChildCount() &2) &&!(n.getNext()!= '<0')) addToSetIfLocal(lhs, kill);
<if (IsInitialized(lhs)) &addToSetIfLocal(lhs, kill); else &addToSetIfLocal(lhs, kill);
&if (IsInitialized(lhs)) addToSetIfLocal(lhs, kill); &else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) lhs = lhs.getLastChild(); if (!n.hasChildren()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill);
&if (addToSetIfLocal(lhs, kill)) /* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); else <addToSetIfLocal(lhs, kill);
if ((n.getChildCount() 2) &&!(n.getNext()!= '0')) &addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if ((lhs == null) || (lhs.flags & PIDGET)) &lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); else &addToSetIfLocal(lhs, kill);
if (!done) &lhs = lhs.getLastChild(); &else &addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) &addToSetIfLocal(lhs, kill);
<if (IsInitialized(lhs)) <addToSetIfLocal(lhs, kill); <else <addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); else &if (NodeUtil.isInVar(lhs)) <if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
&if (n.hasChildren()) &if (n.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
&addToSetIfLocal(lhs, kill);
<if (IsInitialized(lhs)) &addToSetIfLocal(lhs, kill); <else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) &lhs = lhs.getLastChild(); if (!n.hasChildren()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) </* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) <if (!addToSetIfLocal(lhs, kill)) &/* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); <else /* AddToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) /* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) &if (!addToSetIfLocal(lhs, kill)) </* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); <else /* AddToSetIfLocal(lhs, kill);
if (!addedToSetIfLocal(lhs, kill)) &return;
if (!NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); <else <if (NodeUtil.isInVar(lhs)) <if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
/* * if (n.getLastChild()) <if (n.getLastChild()) <addToSetIfLocal(lhs, kill);
&if (n.hasChildren()) if (n.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) addToSetIfLocal(lhs, kill); &else <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill);
&if (n.hasChildren()) if (n.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) <lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
&if (IsInitialized(lhs)) <addToSetIfLocal(lhs, kill); <else <addToSetIfLocal(lhs, kill);
&if (addToSetIfLocal(lhs, kill)) &/* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); else &addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) /* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) &if (!addToSetIfLocal(lhs, kill)) </* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); else /* AddToSetIfLocal(lhs, kill);
<if (n.hasChildren()) <if (n.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
<if (addToSetIfLocal(lhs, kill)) /* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); &else addToSetIfLocal(lhs, kill);
<if (addToSetIfLocal(lhs, kill)) &/* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); &else <addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) &lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!done) <lhs = lhs.getLastChild(); else addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((lhs!= n) && (lhs!= n)) addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill);
&if (IsInitialized(lhs)) <addToSetIfLocal(lhs, kill); &else &addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill);
</* AddToSetIfLocal(lhs, kill); */ if (!async) <async = do_QueryInterface(lhs); addToSetIfLocal(async, kill);
else <addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); <else <addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); &else &if (NodeUtil.isInVar(lhs)) <if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); &else if (NodeUtil.isInVar(lhs)) &if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) &/* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) <if (!addToSetIfLocal(lhs, kill)) </* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); else /* AddToSetIfLocal(lhs, kill);
lhs.addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); &else <if (NodeUtil.isInVar(lhs)) &if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) </* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) if (!addToSetIfLocal(lhs, kill)) /* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); &else /* AddToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
lhs.addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (NodeUtil.isVar(lhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill);
if (IsInitialized(lhs)) <addToSetIfLocal(lhs, kill); <else <addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) &if (NodeUtil.isVar(n)) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
<if (IsInitialized(lhs)) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) <delete lhs; return;
if ((n.getChildCount() 2) &&!(n.getNext()!= '<0')) <addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) &if (NodeUtil.isVar(n)) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) &if (NodeUtil.isVar(n)) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) lhs = lhs.getLastChild(); if (!n.hasChildren()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
&if (addToSetIfLocal(lhs, kill)) &/* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); <else <addToSetIfLocal(lhs, kill);
<if (addToSetIfLocal(lhs, kill)) </* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); <else <addToSetIfLocal(lhs, kill);
if (n.hasChildren()) <if (n.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
<if (n.hasChildren()) if (n.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) &delete lhs; return;
&if (IsInitialized(lhs)) <addToSetIfLocal(lhs, kill); else <addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); <else &if (NodeUtil.isInVar(lhs)) if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) &lhs = lhs.getLastChild(); if (!n.hasChildren()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (n.hasChildren()) <if (n.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) <lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if ((lhs == null) || (lhs.flags & PIDGET)) lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (strlen(lhs) == 0) addToSetIfLocal(lhs, kill); <else lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <addToSetIfLocal(lhs, kill);
if (!done) lhs = lhs.getLastChild(); else addToSetIfLocal(lhs, kill);
<if (n.hasChildren()) &if (n.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) if (NodeUtil.isVar(n)) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) <lhs = lhs.getLastChild(); if (!n.hasChildren()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) &lhs = lhs.getLastChild(); if (!n.hasChildren()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); &else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) <lhs = lhs.getLastChild(); if (!n.hasChildren()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!done) <lhs = lhs.getLastChild(); else &addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill);
<else addToSetIfLocal(lhs, kill);
if (n.getLastChild() lhs.getLastChild()) addToSetIfLocal(lhs, kill);
/* * if (n.getLastChild()) <if (n.getLastChild()) &addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); &else if (NodeUtil.isInVar(lhs)) <if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
&if (n.hasChildren()) &if (n.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) <addToSetIfLocal(lhs, kill); <else lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
&if (addToSetIfLocal(lhs, kill)) &/* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); &else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) &lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!n.isVar(lhs)) &lhs = lhs.getLastChild(); if (!n.hasChildren()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) lhs = lhs.getLastChild(); if (!n.hasChildren()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) &lhs = lhs.getLastChild(); if (!n.hasChildren()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) </* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) &if (!addToSetIfLocal(lhs, kill)) /* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); <else /* AddToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); else <if (NodeUtil.isInVar(lhs)) &if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
lhs = lhs.getLastChild(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) <addToSetIfLocal(lhs, kill); else lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) &lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!addToSetIfLocal(lhs, kill)) </* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) <if (!addToSetIfLocal(lhs, kill)) /* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); <else /* AddToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) &if (NodeUtil.isVar(n)) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); &else &addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) &lhs = lhs.getLastChild(); if (!n.hasChildren()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) <addToSetIfLocal(lhs, kill); else &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
&if (addToSetIfLocal(lhs, kill)) /* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); &else addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); else &if (NodeUtil.isInVar(lhs)) if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); <else &if (NodeUtil.isInVar(lhs)) &if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (!kill) &addToSetIfLocal(lhs, kill);
if (IsInitialized(lhs)) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) &addToSetIfLocal(lhs, kill); else lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <addToSetIfLocal(lhs, kill);
&if (n.hasChildren()) <if (n.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
/* AddToSetIfLocal(lhs, kill); */ if (!async) &async = do_QueryInterface(lhs); addToSetIfLocal(async, kill);
if (strlen(lhs) == 0) addToSetIfLocal(lhs, kill); &else lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (advance(kNameSpaceID_null, n) == 0) <addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
<lhs.addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) addToSetIfLocal(lhs, kill); <else <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <addToSetIfLocal(lhs, kill);
if (n.getLastChild() == lhs.getLastChild()) <addToSetIfLocal(lhs, kill);
if (addToSetIfLocal(lhs, kill)) &/* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); <else &addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) lhs = lhs.getLastChild(); if (!n.hasChildren()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); else &if (NodeUtil.isInVar(lhs)) &if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) &addToSetIfLocal(lhs, kill); <else <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) lhs = lhs.getLastChild(); if (!n.hasChildren()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) &addToSetIfLocal(lhs, kill); <else &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) addToSetIfLocal(lhs, kill);
if (addToSetIfLocal(lhs, kill)) </* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); <else addToSetIfLocal(lhs, kill);
&/* AddToSetIfLocal(lhs, kill); */ if (!async) &async = do_QueryInterface(lhs); addToSetIfLocal(async, kill);
if (!n.isVar(lhs)) <lhs = lhs.getLastChild(); if (!n.hasChildren()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!done) &lhs = lhs.getLastChild(); &else <addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) <lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (addToSetIfLocal(lhs, kill)) &/* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); else <addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) &lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); &else <if (NodeUtil.isInVar(lhs)) <if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) /* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) &if (!addToSetIfLocal(lhs, kill)) &/* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); else /* AddToSetIfLocal(lhs, kill);
if (addToSetIfLocal(lhs, kill)) /* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) addToSetIfLocal(lhs, kill); else <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) addToSetIfLocal(lhs, kill);
<if (IsInitialized(lhs)) addToSetIfLocal(lhs, kill); else <addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) <lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
&if (IsInitialized(lhs)) &addToSetIfLocal(lhs, kill); <else addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) <lhs = lhs.getLastChild(); if (!n.hasChildren()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); &else <if (NodeUtil.isInVar(lhs)) &if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (IsInitialized(lhs)) addToSetIfLocal(lhs, kill); else <addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) <addToSetIfLocal(lhs, kill);
<if (IsInitialized(lhs)) &addToSetIfLocal(lhs, kill); else <addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) <if (NodeUtil.isVar(n)) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
&if (n.hasChildren()) <if (n.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); <else if (NodeUtil.isInVar(lhs)) if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
&if (n.hasChildren()) &if (n.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) &lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (NodeUtil.isVar(lhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); else <if (NodeUtil.isInVar(lhs)) <if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); &else &if (NodeUtil.isInVar(lhs)) <if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (LocalCreateGenKill(lhs, kill)) <char *url = lhs.getURL(); addToSetIfLocal(url, kill);
if (!NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); <else &if (NodeUtil.isInVar(lhs)) &if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (lhs) &addToSetIfLocal(lhs, kill); &else <addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) <if (NodeUtil.isVar(n)) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) <if (NodeUtil.isVar(n)) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) addToSetIfLocal(lhs, kill); &else &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (NodeUtil.isVar(lhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
&if (addToSetIfLocal(lhs, kill)) /* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); <else <addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) &lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (lhs && kill) addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) /* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) if (!addToSetIfLocal(lhs, kill)) /* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); &else /* AddToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) if (NodeUtil.isVar(n)) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!done) &lhs = lhs.getLastChild(); &else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
<if (addToSetIfLocal(lhs, kill)) /* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); else &addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) <addToSetIfLocal(lhs, kill); else &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) /* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) <if (!addToSetIfLocal(lhs, kill)) &/* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); <else /* AddToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) &addToSetIfLocal(lhs, kill); <else <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <addToSetIfLocal(lhs, kill);
&else addToSetIfLocal(lhs, kill);
<if (IsInitialized(lhs)) addToSetIfLocal(lhs, kill); <else &addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
<if (n.hasChildren()) &if (n.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (strlen(lhs) == 0) <addToSetIfLocal(lhs, kill); else &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <addToSetIfLocal(lhs, kill);
if (lhs) <addToSetIfLocal(lhs, kill); &else &addToSetIfLocal(lhs, kill);
if ((n.getChildCount() <2) &&!(n.getNext()!= '0')) <addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) &if (NodeUtil.isVar(n)) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) &lhs = lhs.getLastChild(); if (!n.hasChildren()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill);
if (IsInitialized(lhs)) <addToSetIfLocal(lhs, kill); <else &addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill);
if (addToSetIfLocal(lhs, kill)) &/* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); &else addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) &/* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) &if (!addToSetIfLocal(lhs, kill)) &/* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); &else /* AddToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill);
if (addToSetIfLocal(lhs, kill)) </* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); &else &addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) &lhs = lhs.getLastChild(); if (!n.hasChildren()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); &else &if (NodeUtil.isInVar(lhs)) <if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) &/* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) &if (!addToSetIfLocal(lhs, kill)) </* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); <else /* AddToSetIfLocal(lhs, kill);
if (n.getLastChild() lhs.getLastChild()) <addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); else if (NodeUtil.isInVar(lhs)) &if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if ((n.isVar() && n.getLastChild()) == null) <if (!conditional) addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); <else &addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (lhs) addToSetIfLocal(lhs, kill); else <addToSetIfLocal(lhs, kill);
if (!done) &lhs = lhs.getLastChild(); <else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) <lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
&if (n.hasChildren()) &if (n.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) <if (NodeUtil.isVar(n)) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); <else <if (NodeUtil.isInVar(lhs)) <if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
&if (addToSetIfLocal(lhs, kill)) /* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); <else addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) </* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) if (!addToSetIfLocal(lhs, kill)) /* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); <else /* AddToSetIfLocal(lhs, kill);
if (n.getLastChild() == lhs.getLastChild()) &addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) if (NodeUtil.isVar(n)) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) &addToSetIfLocal(lhs, kill); else &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) addToSetIfLocal(lhs, kill);
<if (addToSetIfLocal(lhs, kill)) /* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); <else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) &lhs = lhs.getLastChild(); if (!n.hasChildren()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) lhs = lhs.getLastChild(); if (!n.hasChildren()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) if (NodeUtil.isVar(n)) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) &lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); <else &addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) addToSetIfLocal(lhs, kill); else lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) <addToSetIfLocal(lhs, kill); else lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); &else <if (NodeUtil.isInVar(lhs)) if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (NodeUtil.isVar(lhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (NodeUtil.isVar(lhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) <addToSetIfLocal(lhs, kill); else lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <addToSetIfLocal(lhs, kill);
&if (addToSetIfLocal(lhs, kill)) /* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); else &addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) <if (NodeUtil.isVar(n)) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (IsInitialized(lhs)) <addToSetIfLocal(lhs, kill); &else <addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) <addToSetIfLocal(lhs, kill); &else &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); &else <if (NodeUtil.isInVar(lhs)) <if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) <if (NodeUtil.isVar(n)) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (n.getChildCount() lhs.length) /* * * Add to SetIfLocal(lhs, kill); */
if (strlen(lhs) == 0) <addToSetIfLocal(lhs, kill); &else lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) <if (NodeUtil.isVar(n)) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) <addToSetIfLocal(lhs, kill); <else &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!done) <lhs = lhs.getLastChild(); <else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) </* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) &if (!addToSetIfLocal(lhs, kill)) </* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); &else /* AddToSetIfLocal(lhs, kill);
if (IsInitialized(lhs)) &addToSetIfLocal(lhs, kill); &else &addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); &else <if (NodeUtil.isInVar(lhs)) <if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill);
<if (IsInitialized(lhs)) addToSetIfLocal(lhs, kill); &else <addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) &addToSetIfLocal(lhs, kill); &else lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) addToSetIfLocal(lhs, kill);
<if (n.hasChildren()) if (n.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) lhs = lhs.getLastChild(); if (!n.hasChildren()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!done) lhs = lhs.getLastChild(); <else <addToSetIfLocal(lhs, kill);
&if (n.hasChildren()) <if (n.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); &else <addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) &lhs = lhs.getLastChild(); if (!n.hasChildren()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
<if (n.hasChildren()) &if (n.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) &lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) <if (NodeUtil.isVar(n)) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
<if (n.hasChildren()) if (n.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) &addToSetIfLocal(lhs, kill); else <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) af.kUnlock(); addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) addToSetIfLocal(lhs, kill); <else &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &addToSetIfLocal(lhs, kill);
<if (IsInitialized(lhs)) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) &lhs = lhs.getLastChild(); if (!n.hasChildren()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((n.getChildCount() 2) &&!(n.getNext()!= '&0')) <addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); else if (NodeUtil.isInVar(lhs)) <if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) &addToSetIfLocal(lhs, kill); else lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) /* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) if (!addToSetIfLocal(lhs, kill)) </* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); <else /* AddToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!done) lhs = lhs.getLastChild(); else <addToSetIfLocal(lhs, kill);
if ((lhs!= n) && (lhs!= n)) <addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
&if (n.hasChildren()) <if (n.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) &lhs = lhs.getLastChild(); if (!n.hasChildren()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) <if (NodeUtil.isVar(n)) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) <addToSetIfLocal(lhs, kill); &else <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &addToSetIfLocal(lhs, kill);
if (lhs) <addToSetIfLocal(lhs, kill); else <addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) <addToSetIfLocal(lhs, kill); &else <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) <lhs = lhs.getLastChild(); if (!n.hasChildren()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
<if (n.hasChildren()) if (n.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (IsInitialized(lhs)) <addToSetIfLocal(lhs, kill); &else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) &lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!addToSetIfLocal(lhs, kill)) &/* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) &if (!addToSetIfLocal(lhs, kill)) </* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); &else /* AddToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) &/* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) if (!addToSetIfLocal(lhs, kill)) &/* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); <else /* AddToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); <else if (NodeUtil.isInVar(lhs)) &if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (n.hasChildren()) if (n.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) </* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) if (!addToSetIfLocal(lhs, kill)) </* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); else /* AddToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) &lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
&if (IsInitialized(lhs)) <addToSetIfLocal(lhs, kill); &else addToSetIfLocal(lhs, kill);
/* * if (n.getLastChild()) <if (n.getLastChild()) addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); else <addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) &if (NodeUtil.isVar(n)) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); &else <if (NodeUtil.isInVar(lhs)) if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
&if (addToSetIfLocal(lhs, kill)) </* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); <else &addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); &else if (NodeUtil.isInVar(lhs)) <if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (NodeUtil.isVar(lhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) <addToSetIfLocal(lhs, kill); &else &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) </* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) <if (!addToSetIfLocal(lhs, kill)) </* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); &else /* AddToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill);
if (n.hasChildren()) &if (n.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); &else &if (NodeUtil.isInVar(lhs)) if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (lhs) addToSetIfLocal(lhs, kill); <else addToSetIfLocal(lhs, kill);
&if (addToSetIfLocal(lhs, kill)) &/* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); &else <addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) /* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) <if (!addToSetIfLocal(lhs, kill)) /* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); else /* AddToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) <addToSetIfLocal(lhs, kill); else <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) <lhs = lhs.getLastChild(); if (!n.hasChildren()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
&if (IsInitialized(lhs)) addToSetIfLocal(lhs, kill); else &addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) addToSetIfLocal(lhs, kill); else <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &addToSetIfLocal(lhs, kill);
&if (n.hasChildren()) <if (n.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) </* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) &if (!addToSetIfLocal(lhs, kill)) </* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); else /* AddToSetIfLocal(lhs, kill);
if (n.getChildCount() lhs.length) &/* * * Add to SetIfLocal(lhs, kill); */
if (NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); <else addToSetIfLocal(lhs, kill);
/* * if (n.getLastChild()) &if (n.getLastChild()) &addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); if (lhs!= null) addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) if (NodeUtil.isVar(n)) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) &/* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) &if (!addToSetIfLocal(lhs, kill)) &/* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); else /* AddToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) addToSetIfLocal(lhs, kill); &else lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &addToSetIfLocal(lhs, kill);
if (n.hasChildren()) &if (n.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if ((n.getChildCount() <2) &&!(n.getNext()!= '&0')) <addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) </* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) &if (!addToSetIfLocal(lhs, kill)) /* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); &else /* AddToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) lhs = lhs.getLastChild(); if (!n.hasChildren()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) /* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) &if (!addToSetIfLocal(lhs, kill)) /* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); <else /* AddToSetIfLocal(lhs, kill);
if (IsInitialized(lhs)) &addToSetIfLocal(lhs, kill); &else addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) <addToSetIfLocal(lhs, kill); <else <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); <else <if (NodeUtil.isInVar(lhs)) if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
<if (IsInitialized(lhs)) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) <lhs = lhs.getLastChild(); if (!n.hasChildren()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
&if (addToSetIfLocal(lhs, kill)) &/* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); <else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); &else <addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) &/* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) <if (!addToSetIfLocal(lhs, kill)) /* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); &else /* AddToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); &else addToSetIfLocal(lhs, kill);
if (addToSetIfLocal(lhs, kill)) </* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); else &addToSetIfLocal(lhs, kill);
addToSetIfLocal(lhs, kill);
if (IsInitialized(lhs)) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (addToSetIfLocal(lhs, kill)) </* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) &lhs = lhs.getLastChild(); if (!n.hasChildren()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (n.hasChildren()) if (n.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
&/* AddToSetIfLocal(lhs, kill); */ if (!async) <async = do_QueryInterface(lhs); addToSetIfLocal(async, kill);
if (!NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); else if (NodeUtil.isInVar(lhs)) <if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) <lhs = lhs.getLastChild(); if (!n.hasChildren()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
&if (IsInitialized(lhs)) &addToSetIfLocal(lhs, kill); <else &addToSetIfLocal(lhs, kill);
AddToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) &addToSetIfLocal(lhs, kill); <else <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) addToSetIfLocal(lhs, kill);
if (n.getChildCount() &lhs.length) /* * * Add to SetIfLocal(lhs, kill); */
if (!lhs) &addToSetIfLocal(lhs, kill);
&if (IsInitialized(lhs)) addToSetIfLocal(lhs, kill); <else &addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) /* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) <if (!addToSetIfLocal(lhs, kill)) </* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); <else /* AddToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) if (NodeUtil.isVar(n)) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) <if (NodeUtil.isVar(n)) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
<if (n.hasChildren()) <if (n.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) <if (NodeUtil.isVar(n)) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) if (NodeUtil.isVar(n)) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); <else <if (NodeUtil.isInVar(lhs)) &if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) <if (NodeUtil.isVar(n)) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
<else &addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) lhs = lhs.getLastChild(); if (!n.hasChildren()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
else &addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (addToSetIfLocal(lhs, kill)) &/* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); else &if (NodeUtil.isInVar(lhs)) <if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
&if (addToSetIfLocal(lhs, kill)) &/* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); else <addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) /* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) <if (!addToSetIfLocal(lhs, kill)) </* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); &else /* AddToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (IsInitialized(lhs)) addToSetIfLocal(lhs, kill); <else <addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) &if (NodeUtil.isVar(n)) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) &lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
<if (addToSetIfLocal(lhs, kill)) /* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); &else &addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) &if (NodeUtil.isVar(n)) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (lhs) &addToSetIfLocal(lhs, kill); else <addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) addToSetIfLocal(lhs, kill); else lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) /* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) <if (!addToSetIfLocal(lhs, kill)) &/* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); else /* AddToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) &lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!done) lhs = lhs.getLastChild(); &else &addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) &lhs = lhs.getLastChild(); if (!n.hasChildren()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) </* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) &if (!addToSetIfLocal(lhs, kill)) &/* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); else /* AddToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); else if (NodeUtil.isInVar(lhs)) &if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (lhs) <addToSetIfLocal(lhs, kill); &else <addToSetIfLocal(lhs, kill);
if (n.hasChildren()) <if (n.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill);
else addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!nodeUtil.isVar(lhs)) &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
&if (IsInitialized(lhs)) &addToSetIfLocal(lhs, kill); &else &addToSetIfLocal(lhs, kill);
if (advance(kNameSpaceID_null, n) == 0) &addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); <else if (NodeUtil.isInVar(lhs)) &if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) <lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (NodeUtil.isVar(lhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) &if (NodeUtil.isVar(n)) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (lhs) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) <addToSetIfLocal(lhs, kill); <else lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) &/* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) <if (!addToSetIfLocal(lhs, kill)) /* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); <else /* AddToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((n.getChildCount() <2) &&!(n.getNext()!= '<0')) <addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) addToSetIfLocal(lhs, kill); <else <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); else <if (NodeUtil.isInVar(lhs)) if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); <else &if (NodeUtil.isInVar(lhs)) if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (IsInitialized(lhs)) addToSetIfLocal(lhs, kill); &else &addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (n.hasChildren()) &if (n.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if ((n.getChildCount() <2) &&!(n.getNext()!= '&0')) &addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) <lhs = lhs.getLastChild(); if (!n.hasChildren()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) <lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (strlen(lhs) == 0) &addToSetIfLocal(lhs, kill); else &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &addToSetIfLocal(lhs, kill);
if (!done) &lhs = lhs.getLastChild(); <else <addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) <lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
<if (n.hasChildren()) &if (n.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) </* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) <if (!addToSetIfLocal(lhs, kill)) /* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); else /* AddToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) &/* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) if (!addToSetIfLocal(lhs, kill)) </* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); &else /* AddToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) &if (NodeUtil.isVar(n)) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (lhs) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) addToSetIfLocal(lhs, kill); &else &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) addToSetIfLocal(lhs, kill);
if (n.hasChildren()) <if (n.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) </* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) &if (!addToSetIfLocal(lhs, kill)) &/* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); &else /* AddToSetIfLocal(lhs, kill);
<if (addToSetIfLocal(lhs, kill)) /* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); <else &addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!nodeUtil.isVar(lhs)) lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
&else &addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) <lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (NodeUtil.isVar(lhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
&if (IsInitialized(lhs)) addToSetIfLocal(lhs, kill); &else &addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
&if (IsInitialized(lhs)) &addToSetIfLocal(lhs, kill); &else addToSetIfLocal(lhs, kill);
<if (IsInitialized(lhs)) <addToSetIfLocal(lhs, kill); else &addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); <else if (NodeUtil.isInVar(lhs)) &if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) &if (NodeUtil.isVar(n)) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) /* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) if (!addToSetIfLocal(lhs, kill)) &/* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); else /* AddToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); else if (NodeUtil.isInVar(lhs)) if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
<AddToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
<lhs.addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) &lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); else if (NodeUtil.isInVar(lhs)) <if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
/* * if (n.getLastChild()) &if (n.getLastChild()) addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) &/* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) &if (!addToSetIfLocal(lhs, kill)) /* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); &else /* AddToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) /* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) if (!addToSetIfLocal(lhs, kill)) </* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); &else /* AddToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); &else &if (NodeUtil.isInVar(lhs)) &if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); &else &if (NodeUtil.isInVar(lhs)) &if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if ((n.getChildCount() 2) &&!(n.getNext()!= '<0')) &addToSetIfLocal(lhs, kill);
&if (n.hasChildren()) <if (n.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (addToSetIfLocal(lhs, kill)) &/* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); <else <addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) <addToSetIfLocal(lhs, kill); else <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &addToSetIfLocal(lhs, kill);
if (addToSetIfLocal(lhs, kill)) </* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); &else addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) &if (NodeUtil.isVar(n)) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (addToSetIfLocal(lhs, kill)) </* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); &else <addToSetIfLocal(lhs, kill);
if (IsInitialized(lhs)) addToSetIfLocal(lhs, kill); <else &addToSetIfLocal(lhs, kill);
lhs = lhs.getLastChild(); if (NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill);
</* AddToSetIfLocal(lhs, kill); */ if (!async) &async = do_QueryInterface(lhs); addToSetIfLocal(async, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (!done) lhs = lhs.getLastChild(); &else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (!done) <lhs = lhs.getLastChild(); &else &addToSetIfLocal(lhs, kill);
if (!AddToSetIfLocal(lhs, kill)) addToSetIfLocal(lhs, kill);
&if (n.hasChildren()) if (n.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); else if (NodeUtil.isInVar(lhs)) if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (n.hasChildren()) <if (n.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) <lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!nodeUtil.isVar(lhs)) <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) if (NodeUtil.isVar(n)) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); <else <if (NodeUtil.isInVar(lhs)) &if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
<if (n.hasChildren()) <if (n.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) if (NodeUtil.isVar(n)) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) &/* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) <if (!addToSetIfLocal(lhs, kill)) &/* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); &else /* AddToSetIfLocal(lhs, kill);
&if (addToSetIfLocal(lhs, kill)) </* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); else &addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
&if (IsInitialized(lhs)) &addToSetIfLocal(lhs, kill); <else <addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) &addToSetIfLocal(lhs, kill); <else lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) &if (NodeUtil.isVar(n)) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); else &if (NodeUtil.isInVar(lhs)) if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) <lhs = lhs.getLastChild(); if (!n.hasChildren()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (IsInitialized(lhs)) addToSetIfLocal(lhs, kill); else &addToSetIfLocal(lhs, kill);
if ((lhs &&!IsVar(lhs))) addToSetIfLocal(lhs, kill);
if ((n.getChildCount() <2) &&!(n.getNext()!= '&0')) addToSetIfLocal(lhs, kill);
&lhs.addToSetIfLocal(lhs, kill);
if (n.hasChildren()) <if (n.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); &else <if (NodeUtil.isInVar(lhs)) if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
<if (addToSetIfLocal(lhs, kill)) /* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); else <addToSetIfLocal(lhs, kill);
if (addToSetIfLocal(lhs, kill)) /* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); &else addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) &addToSetIfLocal(lhs, kill); <else &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <addToSetIfLocal(lhs, kill);
<if (IsInitialized(lhs)) &addToSetIfLocal(lhs, kill); <else &addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) addToSetIfLocal(lhs, kill); <else <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!n.isVar(lhs)) &lhs = lhs.getLastChild(); if (!n.hasChildren()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
&if (IsInitialized(lhs)) <addToSetIfLocal(lhs, kill); <else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) lhs = lhs.getLastChild(); if (!n.hasChildren()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) &if (NodeUtil.isVar(n)) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) <addToSetIfLocal(lhs, kill); &else lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &addToSetIfLocal(lhs, kill);
<if (IsInitialized(lhs)) addToSetIfLocal(lhs, kill); <else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) <lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); else &if (NodeUtil.isInVar(lhs)) &if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
&if (addToSetIfLocal(lhs, kill)) </* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); &else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill);
if (n.hasChildren()) if (n.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) /* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) &if (!addToSetIfLocal(lhs, kill)) /* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); else /* AddToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) if (NodeUtil.isVar(n)) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (addToSetIfLocal(lhs, kill)) </* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); <else &addToSetIfLocal(lhs, kill);
&if (n.hasChildren()) &if (n.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (n.hasChildren()) if (n.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) /* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) &if (!addToSetIfLocal(lhs, kill)) &/* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); &else /* AddToSetIfLocal(lhs, kill);
if (!kill) addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); else <if (NodeUtil.isInVar(lhs)) &if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) &lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (IsInitialized(lhs)) &addToSetIfLocal(lhs, kill); <else addToSetIfLocal(lhs, kill);
lhs = lhs.getLastChild(); if (!lhs) addToSetIfLocal(lhs, kill);
<if (IsInitialized(lhs)) addToSetIfLocal(lhs, kill); <else <addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if (addToSetIfLocal(lhs, kill)) &/* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); else &addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) &addToSetIfLocal(lhs, kill); else <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) if (NodeUtil.isVar(n)) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); <else <addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) <af.kUnlock(); addToSetIfLocal(lhs, kill);
if (n.hasChildren()) if (n.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!(int)lhs) <addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) </* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) &if (!addToSetIfLocal(lhs, kill)) &/* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); <else /* AddToSetIfLocal(lhs, kill);
lhs = lhs.getLastChild(); if (NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) <lhs = lhs.getLastChild(); if (!n.hasChildren()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) &if (NodeUtil.isVar(n)) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
<if (addToSetIfLocal(lhs, kill)) </* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); else &addToSetIfLocal(lhs, kill);
if (addToSetIfLocal(lhs, kill)) &/* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); &else &addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); <else <if (NodeUtil.isInVar(lhs)) if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (IsInitialized(lhs)) &addToSetIfLocal(lhs, kill); else <addToSetIfLocal(lhs, kill);
/* * if (n.getLastChild()) &if (n.getLastChild()) <addToSetIfLocal(lhs, kill);
<if (IsInitialized(lhs)) &addToSetIfLocal(lhs, kill); &else addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) <if (NodeUtil.isVar(n)) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) &lhs = lhs.getLastChild(); if (!n.hasChildren()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (lhs) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) &if (NodeUtil.isVar(n)) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) /* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) <if (!addToSetIfLocal(lhs, kill)) </* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); else /* AddToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!done) lhs = lhs.getLastChild(); <else &addToSetIfLocal(lhs, kill);
<if (n.hasChildren()) if (n.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) <lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!addToSetIfLocal(lhs, kill)) </* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) if (!addToSetIfLocal(lhs, kill)) </* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); <else /* AddToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) <addToSetIfLocal(lhs, kill); <else <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &addToSetIfLocal(lhs, kill);
if (!lhs) <addToSetIfLocal(lhs, kill);
if (n.hasChildren()) <if (n.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
&if (IsInitialized(lhs)) addToSetIfLocal(lhs, kill); <else <addToSetIfLocal(lhs, kill);
if (n.hasChildren()) &if (n.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
&addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if ((n.getChildCount() &2) &&!(n.getNext()!= '<0')) &addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) </* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) <if (!addToSetIfLocal(lhs, kill)) &/* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); else /* AddToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) <if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
<if (IsInitialized(lhs)) <addToSetIfLocal(lhs, kill); <else &addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((n.isVar() && n.getLastChild()) == null) if (!conditional) addToSetIfLocal(lhs, kill);
if (n.getLastChild() <lhs.getLastChild()) <addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) lhs = lhs.getLastChild(); if (!n.hasChildren()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (addToSetIfLocal(lhs, kill)) /* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); else <addToSetIfLocal(lhs, kill);
</* AddToSetIfLocal(lhs, kill); */ if (!async) async = do_QueryInterface(lhs); addToSetIfLocal(async, kill);
if (strlen(lhs) == 0) addToSetIfLocal(lhs, kill); &else <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) addToSetIfLocal(lhs, kill); &else lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) addToSetIfLocal(lhs, kill); &else <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); else <if (NodeUtil.isInVar(lhs)) if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill);
&AddToSetIfLocal(lhs, kill);
if (IsInitialized(lhs)) &addToSetIfLocal(lhs, kill); <else <addToSetIfLocal(lhs, kill);
&if (addToSetIfLocal(lhs, kill)) /* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
&if (addToSetIfLocal(lhs, kill)) </* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
<if (addToSetIfLocal(lhs, kill)) &/* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); else <addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) <lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!addToSetIfLocal(lhs, kill)) </* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) <if (!addToSetIfLocal(lhs, kill)) /* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); &else /* AddToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) &addToSetIfLocal(lhs, kill); <else lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) <if (NodeUtil.isVar(n)) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); else <addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) &addToSetIfLocal(lhs, kill); else &addToSetIfLocal(lhs, kill);
if ((n.getChildCount() 2) &&!(n.getNext()!= '&0')) &addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if ((lhs == null) || (lhs.flags & PIDGET)) &lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (n.hasChildren()) &if (n.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
&if (addToSetIfLocal(lhs, kill)) </* no name of a null symbol in the kernel's kernel. */ addToSetIfLocal(lhs, kill); &else <addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) &addToSetIfLocal(lhs, kill); &else &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &addToSetIfLocal(lhs, kill);
<if (n.hasChildren()) &if (n.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (lhs) &addToSetIfLocal(lhs, kill); <else &addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) &addToSetIfLocal(lhs, kill); else &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) lhs = lhs.getLastChild(); if (!n.hasChildren()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (IsInitialized(lhs)) &addToSetIfLocal(lhs, kill); &else <addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) lhs = lhs.getLastChild(); if (!n.hasChildren()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) <lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (n.hasChildren()) &if (n.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) &addToSetIfLocal(lhs, kill); <else &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &addToSetIfLocal(lhs, kill);
if (lhs) <addToSetIfLocal(lhs, kill); <else <addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) &if (NodeUtil.isVar(n)) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
&if (n.hasChildren()) if (n.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (!n.isVar(lhs)) &lhs = lhs.getLastChild(); if (!n.hasChildren()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill); &else if (NodeUtil.isInVar(lhs)) if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (n.hasChildren()) if (n.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (n.getLastChild() <lhs.getLastChild()) &addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) &if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) <computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) &lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) &if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
if (!done) <lhs = lhs.getLastChild(); <else <addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); return; case Token.AND: case Token.OR: computeGenKill(n.getFirstChild(), gen, kill, conditional); if (n.hasChildren()) computeGenKill(n.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill);
<if (n.hasChildren()) if (n.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (n.getChildCount() <lhs.length) </* * * Add to SetIfLocal(lhs, kill); */
if (IsInitialized(lhs)) <addToSetIfLocal(lhs, kill); &else &addToSetIfLocal(lhs, kill);
lhs = n.getFirstChild(); if (lhs!= null) &addToSetIfLocal(lhs, kill);
do <addToSetIfLocal(lhs, kill);
/* * if (n.getLastChild()) if (n.getLastChild()) <addToSetIfLocal(lhs, kill);
if (NodeUtil.isVar(lhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) &addToSetIfLocal(lhs, kill); &else lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) <addToSetIfLocal(lhs, kill);
if ((n.getLastChild() == 0) || (n.getLastChild() == 0)) if (NodeUtil.isVar(n)) &if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(n.getLastChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if (strlen(lhs) == 0) <addToSetIfLocal(lhs, kill); &else &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(rhs)) &addToSetIfLocal(lhs, kill);
if ((n.getChildCount() 2) &&!(n.getNext()!= '&0')) addToSetIfLocal(lhs, kill);
&if (IsInitialized(lhs)) addToSetIfLocal(lhs, kill); &else <addToSetIfLocal(lhs, kill);
<addToSetIfLocal(lhs, kill);
if (!done) lhs = lhs.getLastChild(); <else addToSetIfLocal(lhs, kill);
&if (IsInitialized(lhs)) addToSetIfLocal(lhs, kill); <else addToSetIfLocal(lhs, kill);
if (n.getChildCount() lhs.length) </* * * Add to SetIfLocal(lhs, kill); */
if (!nodeUtil.isVar(lhs)) &lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) if (c.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!nodeUtil.isVar(lhs)) <lhs = n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) <if (c.hasChildren()) &computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) &computeGenKill(c.getFirstChild(), gen, kill, conditional); else addToSetIfLocal(lhs, kill);
if (!NodeUtil.isVar(lhs)) <addToSetIfLocal(lhs, kill); &else &if (NodeUtil.isInVar(lhs)) &if (!NodeUtil.isInVar(lhs)) n.getFirstChild(); Node rhs = lhs.getNext(); if (NodeUtil.isVar(lhs)) addToSetIfLocal(lhs, kill);
if (!addToSetIfLocal(lhs, kill)) &/* Node setif!= null */ if ((lhs = n.getFirstChild()) && (lhs.next)) if (!addToSetIfLocal(lhs, kill)) </* AddToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, kill); <else /* AddToSetIfLocal(lhs, kill);
<if (n.hasChildren()) <if (n.hasChildren()) <computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) addToSetIfLocal(lhs, kill); else addToSetIfLocal(lhs, kill);
if ((lhs == null) || (lhs.flags & PIDGET)) <lhs = n.getFirstChild(); Node rhs = n.getLastChild(); if (NodeUtil.isVar(rhs)) <for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) if (c.hasChildren()) computeGenKill(c.getFirstChild(), gen, kill, conditional); if (!conditional) computeGenKill(n.getLastChild(), gen, kill, conditional); return; else addToSetIfLocal(lhs, kill); addToSetIfLocal(lhs, gen); computeGenKill(rhs, gen, kill, conditional);
