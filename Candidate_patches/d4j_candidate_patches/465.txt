golden:
int start = getNumObjectiveFunctions();
inference:

int start;
long start = getNumObjectiveFunctions();
int start = getNumObjectiveFunctions();
int start = getNumObjectiveFunctions ();
int start = getNumObjectiveFunctions(null);
int start = 0;
int start = getNumRows();
int start = getNumFunctions();
int start = getNumObjectiveFunctions(col);
int start = getNumObjectiveRows();
size_t start = getNumObjectiveFunctions();
int start = getNumObjectiveFunctions;
static int start = getNumObjectiveFunctions();
u_long start = getNumObjectiveFunctions();
int start = getNumObjectiveFunctions(0);
unsigned int start = getNumObjectiveFunctions();
int start = GetNumObjectiveFunctions();
Integer start = getNumObjectiveFunctions();
int start = getFunctions();
int start=getNumObjectiveFunctions();
unsigned long start = getNumObjectiveFunctions();
int start = getNumObjectiveFunctions(&row);
int start = getNumNumObjectiveFunctions();
int start = getNumObjectiveFunctions(1);
int end = getNumObjectiveFunctions();
int i;
int row = getNumObjectiveFunctions();
int start = getNumObjectiveFunctions( );
int getNumObjectiveFunctions();
int start; int i;
int start = getNumObjectiveFunctions(row);
int start, row = getNumObjectiveFunctions();
int start = getNumRowFunctions();
long start;
int start = getNumObjectiveFunctions = 0;
void* start = getNumObjectiveFunctions();
int start = getRowNumObjectiveFunctions();
int start = getObjectiveFunctions();
int start = getNumRuleFunctions();
uint start = getNumObjectiveFunctions();
const int start = getNumObjectiveFunctions();
bool start = getNumObjectiveFunctions();
struct int start = getNumObjectiveFunctions();
int start = getNumObjectiveFunctions - 1;
int start, row;
int start, start = getNumObjectiveFunctions();
int start = getCount();
int start = getNumObjectiveFunctions (1);
int start = getNumObjectiveFunctions(&col);
int start = findNumObjectiveFunctions();
boolean start = getNumObjectiveFunctions();
int start = getNumObjectiveFunctions() + 1;
int start = getAllObjectiveFunctions();
int start = getNumObjectiveFunctions(i);
int i = getNumObjectiveFunctions();
int start = getGetNumObjectiveFunctions();
int start = null;
int start = getNumObjectives();
int start = getNumAttributes();
void start = getNumObjectiveFunctions();
int start = getNumObjectiveFunctions(&start);
int start = getNumClusterFunctions();
int start, col;
int *start = getNumObjectiveFunctions();
int start, end = getNumObjectiveFunctions();
int start = getNumArray();
int start = getNumResults();
int start = getNumVariableFunctions();
int start, i;
int start = getNum_objectiveFunctions();
int start = getLength();
size_t start;
int start = getLineNumObjectiveFunctions();
int start = getRowCount();
char* start = getNumObjectiveFunctions();
void *start = getNumObjectiveFunctions();
int start = getNumPointerFunctions();
int start = getNumEntryFunctions();
int start = getType();
int start = getTwips();
Integer start;
int start = do_GetNumObjectiveFunctions();
int start = getNumSlots();
int start = getBounds();
int start = getNumObjectiveFuncs();
int start = getMathUtils();
short start = getNumObjectiveFunctions();
int start = getNumElements();
int start = getNumObjectiveFunctions(&i);
int start,row = getNumObjectiveFunctions();
int start, end;
int start = getNumObjectiveFunctions(-1);
int start = getNumActiveObjectiveFunctions();
int start = getObjectiveFunctions(null);
int start = getNumBasicFunctions();
off_t start = getNumObjectiveFunctions();
int start = getNumRules();
int start = -1;
int start = getMaxObjectiveFunctions();
int start = getNumCurrentFunctions();
int start2 = getNumObjectiveFunctions();
int start; u_int32_t start;
int start = getNumObjectiveFunctions(this);
int start = getNumAtoms();
int start = getNumObjectiveRules();
int start = getNumObjectiveFunctions(2);
int start = getNumObjectiveFunctionCount();
int start = getNumObjectiveFunctions(;
int start = getNumOriginalFunctions();
int start = getNumObjectiveFunctions + 1;
int start = getNumValueFunctions();
int start = getNumEntries();
int start = getNumClasses();
int start = getOriginalFunctions();
int start = getNumPositions();
int start = getBasicFunctions();
unsigned long start;
int start = getNumObjectiveFunctions-1;
int start = getNumObjectiveFunctions() = 1;
int start = getNumTotalObjectiveFunctions();
int start=0;
int start = getTotalObjectiveFunctions();
int start = getNumObjectiveFunctions(rows);
int start = getOriginalObjectiveFunctions();
int start = getNumObjectivePositions();
unsigned int start;
int start = getNumFields();
int start = getNum_ObjectiveFunctions();
int start = getEntry(i, col);
int start = getNumNodeFunctions();
int i, start;
int started = getNumObjectiveFunctions();
int start = getPreferredFunctions();
int start = getNumGlobalObjectiveFunctions();
int start = getNumData();
u_int start;
getNumObjectiveFunctions();
int start, start;
int start = getNumSubtreeFunctions();
int start = getNumBounds();
int start = getNumObjectiveClusters();
int start = getNumVarObjectiveFunctions();
int start = getNumAbsoluteFunctions();
int start = getNumAllObjectiveFunctions();
int start = getFunctionCount();
int start = getNumObjectiveFields();
int start = getObjectiveFunctions ();
int start = getNumObjectiveCount();
int start = getNumSourceFunctions();
int start = getNumObjectiveFunctions( null);
int start = getNumRowCount();
int start = getNumObjectiveFunctions);
int start = getBasicRows();
int len = getNumObjectiveFunctions();
int start = getDirtyFunctions();
int start = getNumObjectiveArray();
int start = getNumOptions();
int start = getNumImplementations();
int start = getNumLocalFunctions();
int start = getNumObserverFunctions();
int start = getNumVoidFunctions();
int start = getNumObjectiveValues();
int start = getNumPixelFunctions();
int start = 0; int i;
int begin = getNumObjectiveFunctions();
int start = getNumStringFunctions();
int start = getNumObjFunctions();
int start = getNumInterfaceFunctions();
int start = getNumOwnerFunctions();
int start = getNumElementFunctions();
int start = getNumObjectiveFunctions++;
int start = getNumIndexObjectiveFunctions();
int start = getNumTableFunctions();
int start = getNumProperties();
int start = getNumParentFunctions();
int start = getNumObjectiveFunctions(3);
int start = getNumAutoObjectiveFunctions();
int start,row;
int start = getNumObservers();
int start, row, col;
int start = getNumObjectiveFunctions(count);
int start = getNumStartFunctions();
int start = getNumObjectiveFunctions(align);
int start = getNumObjectiveFunctions(c);
int start = getArray();
int start = getSize();
int start = getNumHistoryFunctions();
int start = getNumObjectiveFunctions(n);
int start = getNumSize();
int start = getNumObjectiveSize();
int start = getPoint();
int begin;
int start; size_t start;
int start = getNumObjectiveFunctions(l);
int start; int row;
int start = getNumObjectiveFunctions(0,0);
int start = getNumObjectiveFunctions(0, 0);
int start = getNumObjectiveFunctions(&getNumObjectiveFunctions());
int start = getNumObjectiveFunctions("integer", 0);
int start = getNumObjectiveFunctions(getter_AddRefs(start));
int start = getNumObjectiveFunctions(flags);
int start = getNumObjectiveFunctions() - 1;
int start = getNumObjectiveFunctions(&cols[i]);
int start = getNumObjectiveFunctions() - getIsEndOfFunctions();
int start = getNumObjectiveFunctions(getter_AddRefs(row));
int start = getNumOptr();
int start = getNumObjectiveFunctions(eps);
int start = getNumRowTypes();
int start = getNumObjectiveFunctions(getter_AddRefs(nsIRows));
int start = getNumObjectiveFunctions((int) 0);
int start = getNumCurrentLength();
int start = getNumObjectiveFunctions(); int oldStart = 0;
int start = getNumObjectiveFunctions() = 0;
int start = getNumObjectiveFunctions(epsilon);
int start = getNumObjectiveFunctions(sl);
int start = getNumObjectiveFunctions(getAvailableString());
int start = getNumObjectiveFunctions((int) getEnumFunctions(col));
int start = getNumObjectiveFunctions(); int fn;
int start = getNumObjectiveFunctions((int)0);
int start = getNumObjObjectiveFunctions();
int start = getNumObjectiveFunctions(); int i;
int start = getNumObjectiveFunctions(0, 0, 0, 0, 0);
int start = getNumObjectiveFunctions(getBounds());
int start = getNumObjectiveFunctions(null);
int start = getNumObjectiveFunctions(false);
int start = getNumObjectiveFunctions(); int count = 0;
int start = getNumObjectiveFunctions(sizeof(row));
int start = getNumObjectiveFunctions(getNumObjectiveFunctions());
int start = getNumObjectiveFunctions(sizeof(int));
int start = getNumObjectiveFunctions(getEntry(i, col), 0.0, epsilon);
int start = getNumObjectiveFunctions(nextElement);
int start = getNumObjectiveFunctions(); int index;
int start = getNumObjectiveFunctions( 0 );
int start = getNumObjectiveFunctions(); int row = row.getStart();
int start = getNumObjectiveFunctions(arow);
int start = getNumCurrentRows();
int start = getNumObjectiveFunctions(fun);
int start = getNumObjectiveFunctions() - getEndPos();
int start = getNumObjectiveFunctions() = getNumObjectiveFunctions();
int start = getNumClusters();
int start = getNumObjectiveFunctions(aPos, aDelay);
int start = getNumOwnerDocumentFunctions();
int start = getNumObjObjectives();
int start = getNumObjectiveFunctions(getCurrentRow());
int start = getNumObjectiveFunctions(null);
