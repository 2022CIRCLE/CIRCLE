golden:
return details.getCause().getMessage();
inference:
return details.getCause().getMessage().get();
return details.getCause();
return details.getCause().getMessage();
return info.getCause().getMessage();
return details.getCause().getMessage();
return details.getCause().GetMessage();
return details.getCause().mMessage;
return details.getMessage();
return details.getCause().message;
return details;
return details.getCause() == null;
return mMessage;
return details.getCause().message;
return details.GetCause().getMessage();
return (void) details.getCause().getMessage();
return details.getCause() == null;
return details.getCause( ).getMessage( );
return Details.getCause().getMessage();
return NS_OK;
return details.message;
return details.Cause.getMessage();
return information.getCause().getMessage();
return details.getCause().getMessage();
return details.GetCause().GetMessage();
return rv;
return details.getCause() == 0;
return details.getCause().getMessage(0);
return details.getMessage().get();
return details.getCause().getErrorMessage();
return data.getCause().getMessage();
return details.getCause().getUnicode();
return details.getCause().Message();
return details.getCause().ToString();
return details.Cause.getMessage();
return details.getCause().getMessage ();
return details.getCause().mMessage;
return details.getCause().getString();
return details && details.getCause().getMessage();
return details.getCause()!= null;
return details.getCause().getMessage() == 0;
return details.getCause().get();
return details.getCause();
return details.getCause().GetMessage();
return details.getCause().ToNewCString();
return details.get().getMessage();
return details.GetCause().getMessage();
return details.getCause().getMessage( );
return details.message;
return details.getCause().getMessage() == null;
return details.getCause().ToNewUnicode();
return details.getCause().getMessage().get();
return messages.getCause().getMessage();
return details.toString().getMessage();
return detail.getCause().getMessage();
return details.mMessage;
return details[0].getCause().getMessage();
return details.getCause().getErrorCode();
return details.toNewCString().getMessage();
return details.getUnicode().getMessage();
return details || details.getCause().getMessage();
return this;
return details.cause.getMessage();
return (int) details.getCause().getMessage();
return details.getCause().message;
return info.getCause().getMessage();
return null;
return details.getCause().getMessage().trim();
return details.getCause().getMessage(null);
return details.getCause().toNewCString();
return details.getCause().Message();
return details.getCause(&message);
return details.getCause()!= 0;
ret = details.getCause(); return ret;
return details.getCause().getMessage() + 1;
return details.getDebug().getMessage();
return details.getCause().toString();
result = details.getCause().getMessage(); return result;
return null;
return details.getCause().getMessage(&message);
#endif return details.getCause().getMessage();
return details.getCause().getMessage(&mMessage);
return details.cause.getMessage();
return details.getCause(true).getMessage();
return details.getCause().getMessage(this);
mMessage = details.getCause(); return mMessage;
return details.getCause() + 1;
return details.getCause().getDebug();
return details.getCause().Message;
return details.getErrorCode().getMessage();
return (void *) details.getCause().getMessage();
return mCause.getMessage();
return (string) details.getCause().getMessage();
return news.getCause().getMessage();
return details.getCause().getMessage(&info);
return details.getCause().getMsg();
return details.getCause( );
return details.getCause().message();
return details.getCause(0).getMessage();
return info.getCause();
return details.getCause().getMessage(aMessage);
return details.getCause().message;

return details.getCause().getValue();
*aMessage = details.getCause(); return *aMessage;
return details.getCause() == null;
return details.getCause().mMessage();
return true;
return details.getContext().getMessage();
return details.getException();
return (details.getCause()).getMessage();
return events.getCause().getMessage();
return details.getCause().GetMessage();
return details.getCause().getNotifications();
return details.getDisplay().getMessage();
return 0;
return details.getCause() > 0;
return details.getCause().Message().get();
return details.mCause.getMessage();
return details.getCause().mMessage;
return details.getCause().Empty();
return details.getCause()!=null;
return details.getCause().getMessage(), null;
return details.getCause()==null;
return details.cause.message;
return details.getCause().GetUnicode();
return details.getTarget().getMessage();
return details + details.getCause().getMessage();
return details.cstr_oneuse().getMessage();
return details.getCause(this).getMessage();
return details.getCause().getUniqueMessage();
return (*this) details.getCause().getMessage();
return details.getCause().getError();
return details.getCause().getBuffer();
return details.getException().getMessage();
return aCause.getMessage();
return details.getCauses().getMessage();
rv = details.getCause(); return rv;
return details.getCause(false).getMessage();
return details.getCause().getMessage();
return details!= null;
return details.getCause().acquireMessage();
return details.getCause().eMessage;
return details.toNewCString();
return details.Cause.GetMessage();
return details.getCause().getMessage(true);
return details.getCause().Message;
return message;
return details.getCause().sendMessage();
return details.getCause().getCode();
return details.Cause;
return detaliis.getCause().getMessage();
return details.getOriginalMessage();
return details.getCause() == NS_OK;
return details.getCause());
return status;
return details.getCause().getMessage().mMessage;
return details.getCause().Cause();
return false;
return details.getCause().getMessage() > 0;
return details.getCause().getMessage(false);
return details.getCause().getMessage().get();
return details.getType().getMessage();
return details.getErrorMessage();
return details.getCause(&info);
return details.getCause().getMessage(mMessage);
return null;
return details == null;
return details.getCause().getMessageWithConversion();
return details.getNewMessage();
return details.getCause()!= null;
return details[0].getMessage();
return mMessage.get();
return details.getCause().getMessage(aCause);
return details.getCause()
return details.getCause().getMessage().strip();
return details.getMessage();
return details.getMsg();
return messages.get();
return details.getCause().getMessage().mMessage;
return details.getCause().getCause();
return details.get();
return mCause;
return details.getCause().getMessage(&msg);
return details.eMessage;
return details.mMessage;
return details.clear();
return details.getCause().getMessageAsMessage();
return details.sendMessage;
return theMessage;
return details.getCause() && details.getMessage();
rv = details.getCause().getMessage();
return details.getCause().getMessage().send();
return nullCause;
return details.getCause().getMessage( NS_LITERAL_STRING("errorCause"));
return details.getCause().getMessage(&mDebug);
return details.getCause().getMessage(getter_AddRefs(message));
return details.getCause().getMessage();  return (0);
return details.getCause().getMessage().ToNewCString();
return details.getCause().getMessage(null);
return details.getCause() == null? details.getCause().getMessage() : 0;
return (details.getCause()).getMessage();
return ((notified)? details.getCause().getMessage() : details.getCause().getMessage());
return details.getCause().getMessage() && details.getCause().getHostname()  0;
return details.getCause().getMessage(&text);
return ((null!= details)? details.getCause().getMessage() : 0);
return details.getCause().getMessage();  else  return NS_OK;
return details.getCause().getMessage() && ((!bcmp(ptr, "unavailable")) || (ptr >= details.getCause().mMessage));
return (exceptionCause) details.getCause().getMessage();
return (string_at) details.getCause().getMessage();
return details.getCause().getMessage();  return null;
return details.getCause().getMessage(&mExceptionCause);
return details.getCause() == null? NS_OK : details.getCause().getMessage();
return details.getCause().getMessage()!= null;
return details.getCause().getMessage(NS_LITERAL_STRING("ExceptionCause"));
return details.getCause().getMessage()!= 0;
return (compact.getCause() == details.getCause())? details.getCause() : details.getMessage();
return details.getCause().getMessage(NS_LITERAL_STRING("cause"));
return details.getCause().getMessage(NS_CAST(const char*, details.getCause()));
return ((*aMessage).getMessage())? details.getCause().getMessage() : null;
return details.getCause().getMessage(&mOwner);
return details.getCause().getMessage(eHandler);
return (eService.eServerType == eService.EServerType)? details.getCause().getMessage() : details.getCause().getMessage();
return (cs.message == null? cs.message : msg);
return details.getCause().getMessage()? details.getCause() : details.getCause().getMessage();
return details.getCause().getMessage((unsigned char*) details.getBool());
return details.getCause() == null? null : details.getCause().getMessage();
return details.getCause().getMessage()? NS_ERROR_NULL : details.getCause().getMessage();
return details.getCause() == null? details.getCause().getMessage() : details.getCause();
return details.getCause().getMessage()? NS_OK : NS_ERROR_OUT_OF_MEMORY;
return details.getCause().getMessage(mDebug);
return (null!= details.getCause())? details.getCause().getMessage() : null;
return (*((int)info.get()) == 0)? details.getCause() : details.getCause().getMessage();
return (code? details.getCause().getMessage() : "");
return (compareToMsgs( details.getCause().getMessage(), null));
return details.getCause() == 0? details.getCause() : details.getMessage();
return details.getCause().getMessage("%s", details.get());
return details.getCause() == NS_ERROR_NULL? NS_ERROR_NULL : details.getCause().getMessage();
return ((char *)((char *)((char *))&message)));
return details.getCause().getMessage();  return details.getCause();
return details.getCause().getMessage(*getter_AddRefs(message));
return details.getCause().getMessage(&mEmpty);
return details.getCause().getMessage() &&!((mFrameType && mFrameType) == mFrameType)? mFrameType : mFrameType;
return (document) details.getCause().getMessage();
return details.getCause().getMessage()? NS_ERROR_ILLEGAL_VALUE : NS_ERROR_ILLEGAL_VALUE;
return details.getCause().getMessage( NS_LITERAL_STRING("mailto:%s", __func__));
<return details.getCause().getMessage();
return details.getCause().getMessage() && details.getCause().getHostname() &0;
return details.getCause().getMessage(); return (0);
return details.getCause().getMessage(); &else return NS_OK;
&return details.getCause().getMessage();
return details.getCause().getMessage(); <else &return NS_OK;
return details.getCause().getMessage() && details.getCause().getHostname() 0;
return details.getCause().getMessage(); <else return NS_OK;
return details.getCause().getMessage(); <else <return NS_OK;
return details.getCause().getMessage(); <return details.getCause();
return details.getCause().getMessage(); &return (0);
return details.getCause().getMessage(); return details.getCause();
return details.getCause().getMessage(); return null;
return details.getCause().getMessage() && details.getCause().getHostname() <0;
return details.getCause().getMessage(); else <return NS_OK;
return details.getCause().getMessage(); <return (0);
return details.getCause().getMessage(); else return NS_OK;
return details.getCause().getMessage(); <return null;
return details.getCause().getMessage(); &else <return NS_OK;
return details.getCause().getMessage(); &else &return NS_OK;
return details.getCause().getMessage(); &return details.getCause();
return details.getCause().getMessage(); &return null;
return details.getCause().getMessage();
return details.getCause().getMessage(); else &return NS_OK;
