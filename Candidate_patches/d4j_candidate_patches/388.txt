golden:
copy.data = new java.util.ArrayList();
inference:
copy = new java.util.ArrayList();
copy.data = new java.util.ArrayList(this);
copy.data = java.util.ArrayList();
copy.data = new java.util.Arrays();
copy.data = new java.util.ArrayList();
copy.data = new java.util.ArrayList();
copy.data = new java.ui.ArrayList();
copy.data = new java.u.ArrayList();
copy.data = new java.util.Array();
copy.data = new voidArrayList();
copy.data = new java.util;
copy.data = new java.util.ArenaList();
copy.data = new java.util.ArrayList(null);
copy.data = new TimeSeriesArray();
copy.data = this.data.clone();
copy.data = this.data.next;
copy.data = new (void) java.util.ArrayList();
copy.data = new ArrayList();
copy.data = new java.util.TreeList();
copy.data = new java.util.Map();
copy.data = new TimeSeriesDataItem();
copy.data = new java.util.ArrayList(this.data);
copy.data = (TimeSeries) super.clone();
copy.data = new java.util.ArrayList ();
copy.data = new TimeSeriesDataList();
copy.data = new java.util.ArrayList(void);
copy.data = new java.util.EnumerateArray();
copy.data = new java.util.TimeSeriesList();
copy.data = new java.util.EmptyArray();

copy.data = numpy.array();
copy.data = new java.util.IArrayList();
copy.data = this.data;
copy.data = new TimeSeriesDataArray();
copy.data = null;
copy.data = new java.util.ArrayList( );
copy.data = new java.util.ArrayList([]);
copy.data = new java.util.ArrayList(0);
copy.data = new java.util.ArrayIterator();
copy.data = new java.util.Array(null);
copy.data = new java.util.List();
copy.data = new java.util.Arena();
copy.data = new nsArrayList();
copy.data = new TimeSeriesList();
copy.data = new (java.util.ArrayList());
copy.data = new java.util.ArrayList(&this);
copy.data = new java.io.ArrayList();
copy.data = new java.util.Array(this);
copy.data = null;
copy.data = new java.util.ArrayListT>();
copy.data = new java.util.ArrayList(data);
copy.data = new java.util.ElementArray();
copy.data = super.clone();
copy.data = java.util.Arrays();
copy.data = ArrayList();
copy.data = numpy.ArrayList();
copy.data = new java.awt.ArrayList();
copy.data = new java.util.ArrayList(*this);
copy.data = new TimeSeriesData();
copy.data = new java.util.Array([]);
copy.data = new java.util.TwipsList();
copy.data = new java.util.Count();
copy.data = new java.util.ArrayList(1);
copy.data = new java.util::ArrayList();
copy.data = new TimeSeriesData;
copy.data = new java.util.ArrayList(clone);
copy.data = nu;
copy.data = new java.util.ArrayList(copy.data);
copy.data = new java.util.ComputedArrayList();
copy.data = new java.util.ClusterList();
copy.data = new java.util.Comparator();
copy.data = new java.util.TimeSeriesArray();
copy.data = this.data.list();
copy.data = new java.util.ArrayElement();
copy.data = new AtomList();
Copy.data = new java.util.ArrayList();
copy.data= new java.util.ArrayList();
copy.data = new java.data.ArrayList();
copy.data = this.data.get();
copy.data = this;
copy.data = new java.util.Allocator();
copy.data = new java.util.ArrayList(copy);
copy.data = new java.util.CArrayList();
copy.data = new java.util.HashTable();
copy.data = new java.lang.ArrayList();
copy.data = new java.util.GetArrayList();
copy.data = new java.util.ArrayList(aData);
copy.data = new java.util. ArrayList();
copy.data = java.util.ArrayList(null);
copy.data = new java.util.ArrayList(false);
copy.data=new java.util.ArrayList();
copy.data = new java_util.ArrayList();
copy.data = new TimeSeriesDataItem;
copy.data = new Vector();
copy.data = new java.util.ArrayMap();
copy.data = new java.util.ObjectArray();
copy.data = new java.util.Arrayelements();
copy.data = this.data.ArrayList();
copy.data = new java.util.StreamList();
copy.data = numptyArray();
copy.data = new JSArrayList();
copy.data = new java.util.ArrayList(0,0);
copy.data = java.util.ArrayList(this);
copy.data = new java.util.ArrayList(type);
copy.data = new java.util.ArrayList(-1);
copy.data = new java.util.ArrayData();
copy.data = new HashSet();
copy.data = new java.util_ArrayList();
copy.data = nump;
copy.data = new java.util.ArraySet();
copy.data = new int java.util.ArrayList();
copy.data = java.util.Array();
copy.data = new SequenceList();
copy.data = new java.util.StringArray();
copy.data = new java.util.ArrayList( 0 );
copy.data = new java.util.ArrayList( this );
copy.data = new java.util.Array(0, 0);
copy.data = new java.util.TableList();
copy.data = new java.util.Array[0];
copy.data = new java.util.Array(0,0);
copy.data = new java.util.ArrayList(&copy);
copy.data = new java.util.ArrayList(buf);
copy.data = super.ArrayList();
copy.data = 0;
copy.data = new (void)java.util.ArrayList();
copy.data = new java.util.DataList();
copy.data = (timeSeries) super.clone();
copy.data = new java.util.CopyList();
copy.data = new java.util.ArrayT>();
copy_data = new java.util.ArrayList();
copy.data = new java.util.List(this);
copy.data = new java.util.DataArray();
copy.data = new java.util.TimeSeriesDataList();
copy.data = new java.util.ComputedArray();
copy.data = new java.util.ArrayList;
copy.data = new java.util.ArrayListImpl();
copy.data = new voidArray();
copy.data = new java.util.Hashtable();
copy.data = new java.lib.ArrayList();
copy.data = new java.util.ArrayList(p);
copy.data = null_data;
copy.data = new java.util.Array(data);
copy.data = new java.util.Collection();
copy.data = new ObjectList();
copy.data = new java.util.Instance();
copy.data = new java.util.ArrayList(void));
copy.data = new nsCRT::ArrayList();
copy.data = new java.net.ArrayList();
copy.data = new java.util.DocList();
copy.data = new java.util.ArrayList(None);
copy.data = new java.util.Layout();
copy.data = new java.util.ArrayList();
copy.data = new java.util.ArrayList(&data);
copy.data = new java.util.StartArray();
copy.data = new List();
copy = new java.util;
copy.data = new TimeSeriesDataItem(this.data);
copy.data = new java.util.ArrayList(aArray);
copy.data = new java.util.ArrayList(tmp);
copy.data = new java.util.ArrayList(start, end);
copy.data = new UIDArrayList();
copy.data = new TreeList();
copy.data = new java.util.PRUint32(0);
copy.data = new java.util.SelectElement();
copy.data = new java.util.ArrayList(100);
copy.data = new _ArrayList();
copy.data = new ObjectArray();
copy.data = java.util.List();
copy.data = new ArrayList(this);
copy.data = new java.util.TimeSeriesData;
copy.data = iter.next;
copy.data = new java.util.ArrayList("");
copy.data = new Calendar();
copy.data = new java.util.PRUint32();
copy.data = new java.util.ArrayList(ptr);
copy.data = (TimeSeriesDataItem) this.data;
copy.data = new java.util.ArrayList(iter);
copy.data = new java.util.ArrayList( null);
copy.data = new java.util.EnumerateList();
copy.data = new nsList();
copy.data = new.ArrayList();
copy.data = new AtomTable();
copy.data = new java.util.ArrayList(this.data);
copy.data = numpy;
copy.data = new DataArray();
copy.data = new java.util.ArrayList(;);
copy.data = new java.util.ArrayList([] );
copy.data = null;
copy.data = super.copy();
copy.data = new CellList();
copy.data = copy.data;
copy.data = rv;
copy.data = new DataList();
copy.data = new java.util.ArrayList(null);
copy.data = new java.util.ArrayList(&this.data);
copy.data = new java.util.Array(1, 1, 1, 0, 0, 0);
copy.data = new java.util.ArrayList(nsLayoutAtoms::iterator());
copy.data = new java.util.ArrayList(aCopy.type);
copy.data = new java.util.ArrayList(mFrameSink);
copy.data = new java.util.ArrayList(); copy.data.mCaseAssignment = 0; copy.data.mLength = 0; copy.data.mPosition = 0; copy.data.mPosition = 0; copy.data.mComputedNumber = 0; copy.data.mCaseLength = 0; copy.data.mFrameSize = 0; copy.data.mRemoveElement = 0; copy.data.mFrameSize = 0; copy.data.mRemoveElement = 0; copy.data.mComputedNumber = 0; copy.data.mComputedNumber = 0; copy.data.mComputedNumber = 0; copy.data.mComputedNumber = 0; copy.data.mComputedNumber = 0; copy.data.mComputedNumber = 0; copy.data.mComputedN
copy.data = new java.util.ArrayList(); copy.data.hashPtr = 0;
copy.data = new java.util.ArrayList(); copy.data = new java.util.ArrayList(&this.data);
copy.data = new java.util.ArrayList(); copy.data = null;
copy.data = new java.util.ArrayList((u_int8_t) this.data);
copy.data = new java.util.ArrayList(nsITimeSeries::table);
copy.data = new java.util.List(aDataType);
copy.data = java.util.ArrayList(0,0);
copy.data = new java.util.ArrayList(nsIContent::TYPE_CLASSPATH);
copy.data = new java.util.ArrayList(aDest);
copy.data = new java.util.ArrayList(); copy.data.clear();
copy.data = new java.util.ArrayList(((caddr_t)this.data.size()));
copy.data = new java.util.ArrayList(0, 0, 0, 0, 0);
copy.data = new java.util.ArrayList((uint32) java.util.ArrayList());
copy.data = new java.util.ArrayList(); copy.data = new java.util.ArrayList(sizeof((int)sizeof((void**)));
copy.data = new java.util.ArrayList(((int)0);
copy.data = new java.util.ArrayList(0, 0, 0);
copy.data = NS_NewArrayList(null);
copy.data = new java.util.List(*this);
copy.data = new java.util.ArrayList(nsAutoString("").get());
copy.data = new java.util.ArrayList(sizeof((TimeSeries)));
copy.data = new java.util.ArrayList(new java.util.ArrayList());
copy.data = new java.util.ArrayList(new TimeSeriesData());
copy.data = new java.util.ArrayList(); copy.data = (nsISupports*)this.data.clone();
copy.data = new java.util.Array(0, 0, 0);
copy.data = new java.util.ArrayList(nsCRT::strdup("java.util.ArrayList"));
copy.data = java.util.ArrayList(&this);
copy.data = new java.util.ArrayList(getter_AddRefs(copy.data));
copy.data = new java.util.ArrayList(new java.util.CIRCLEYCLEAN);
copy.data = new java.util.ArrayList(nsAutoString());
copy.data = new java.util.Array(null);
copy.data = new java.util.ArrayList(nsLayoutAtoms::nsITimeSeries);
copy.data = new java.util.ArrayList(sizeof(TimeSeries));
copy.data = new java.util.ArrayList(); copy.data = java.util.ArrayList(ni);
copy.data = new java.util.ArrayList( this.data );
copy.data = new java.util.ArrayList(aFlatString);
copy.data = new java.util.ArrayList(); copy.data = (TimeSeries) super.clone();
copy.data = new java.util.ArrayList(new java.util.Enumerate());
copy.data = new java.util.ArrayList(nsITimer::table, this);
copy.data = new java.util.ArrayList(aCopy);
copy.data = new java.util.ArrayList(getter_AddRefs(data));
copy.data = new java.util.ArrayList(nsITimeSeries::eTimeSeries);
copy.data = new java.util.ArrayList(); copy.data = NS_STATIC_CAST(TimeSeries) this.data;
copy.data = new java.util.ArrayList(nsIArena::TYPE_TYPE);
copy.data = new java.util.ArrayList(*this.data);
copy.data = new java.util.Array(nsITimeSeries::dtorPtr, null);
copy.data = new java.util.ArrayList(nsITwips::Table);
copy.data = new java.util.ArrayList(nsCRT::strdup(data));
copy.data = new java.util.ArrayList(nsIRDFDataSource::DBG_TYPE);
copy.data = new java.util.ArrayList(); copy.data.size() = copy.data.size();
copy.data = new java.util.ArrayList(); copy.data = java.util.ArrayList(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
copy.data = new java.util.ArrayList((void **)&copy);
copy.data = java.util.ArrayList(); copy.data.tx_offset = copy.data.tx_offset; copy.data.tx_colgroup = copy.data.tx_colgroup; copy.data.tx_colgroup = copy.data.tx_colgroup; copy.data.tx_colgroup = copy.data.tx_colgroup; copy.data.tx_colgroup = copy.data.tx_colgroup; copy.data.tx_colgroup = copy.data.tx_colgroup; copy.data.tx_colgroup = copy.data.tx_colgroup; copy.data.tx_colgroup = copy.data.tx_colgroup; copy.data.tx_colgroup = copy.data.tx_colgroup; copy.data.tx_colgroup = copy.data.tx_colgroup; copy.data.tx_colgroup = copy.data.tx_colgroup; copy.data.tx_colgroup = copy.data.tx_col
copy.data = new java.util.ArrayList(); copy.data = 0;
copy.data = new java.util.ArrayList("", this);
copy.data = new java.util.ArrayList(); copy.data.size() = 0;
copy.data = new java.util.ArrayList(nsIRDFDataSource::EnumerateInstance());
copy.data = new java.util.List(aType);
copy.data = new java.util.ArrayList(e);
copy.data = new java.util.ArrayList(&saved);
copy.data = new java.util.Array(nsIRDFResource::TableAtoms::allocator, nsIRDFResource::listocator);
copy.data = new java.util.ArrayList(new TimeSeriesDataItems);
copy.data = new java.util.Array((void **)&nil);
copy.data = new java.util.ArrayList(); copy.data = new java.util.ArrayList(); copy.data.size() = 0;
copy.data = new java.util.ArrayList(nsIContent*, this);
copy.data = JSArray();
copy.data = new java.util.ArrayList(); copy.data.len = 0;
copy.data = new java.util.Array(&data);
copy.data = new java.util.Array(nsIArray::TableAt(sizeof(nsIArray::TableAt(sizeof(nsIArray::TableAt(sizeof(nsIArray::tableAt(sizeof(nsIArray::tableAt(sizeof(nsIArray::tableAt(sizeof(nsIArray::tableAt(sizeof(nsIArray))))));
copy.data = new java.util.Array(mData);
copy.data = new java.util.ArrayList(nsITimeSeries::DB_SIZE);
copy.data = new java.util.ArrayList(nsIToken::eType);
copy.data = new java.util.Array(new java.util.Array());
copy.data = new java.util.ArrayList(mData);
copy.data = new java.util.ArrayList(((timeSeries) super.clone()));
copy.data = new java.util.Array(new java.util.ArrayList());
copy.data = new java.util.Array(aArray);
copy.data = new java.util.ArrayList(remove);
copy.data = new java.util.List(getter_AddRefs(copy));
copy.data = java.util.ArrayList(); copy.data = new java.util.ArrayList(&copy.data);
copy.data = new java.util.List(false);
copy.data = new java.util.Array(0, 0, 0, 0, 0, 0);
copy.data = new java.util.ArrayList(((int) java.util.Array));
copy.data = new java.util.ArrayList(); copy.data.init(&copy.data);
copy.data = new java.util.ArrayList(); copy.data = this;
copy.data = new java.util.ArrayList(new java.util.Appendr());
copy.data = new java.util.ArrayList((void**)&mTimeSeries);
copy.data = new java.util.ArrayList(suffix);
copy.data = new java.util.ArrayList((u_long)0);
copy.data = new java.util.ArrayList(aCaseInsensitiveString);
copy.data = java.util.ArrayList(copy.data);
copy.data = new java.util.ArrayList(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
copy.data = new java.util.Array(0, 0, 0, 0);
copy.data = new java.util.ArrayList(elements);
copy.data = java.util.ArrayList(); copy.data.tv_first = 1; copy.data.tv_next = 2; copy.data.tv_next = 2; copy.data.tv_next = 3; copy.data.tv_next = 3; copy.data.tv_next = 4; copy.data.tv_next = 4; copy.data.tv_next = 4; copy.data.tv_next = 5; copy.data.tv_next = 6; copy.data.tv_next = 7; copy.data.tv_next = 4; copy.data.tv_next = 5; copy.data.tv_next = 6; copy.data.tv_next = 8; copy.data.tv_next = 8; copy.data.tv_next = 0; copy.data.tv_next = 5; copy.data.tv_next = 8; copy.data.tv_next = 8; copy
copy.data = new java.util.ArrayList(new charset);
copy.data = new java.util.ArrayList(); copy.data.size() = 1;
copy.data = new java.util.ArrayList(((void **)() java.util.Array());
copy.data = new java.util.ArrayList(aState);
copy.data = new java.util.ArrayList(nsISupports);
copy.data = new java.util.ArrayList(aCX);
copy.data = new java.util.Array(nsIArray::List());
copy.data = new java.util.ArrayList(); copy.data = ((CIRCLEXP_TYPE_CIRCLE)this);
copy.data = new java.util.ArrayList(); copy.data.get() = null; copy.data.get() = 0; copy.data.get() = 0;
copy.data = new java.util.ArrayList("timeseries");
copy.data = new java.util.Array(&copy.data);
copy.data = new java.util.ArrayList(); copy.data.hash = 0;
copy.data = new java.util.Array(nsITwips);
copy.data = new java.util.Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
copy.data = new java.util.Array();
copy.data = new java.util.ArrayListT>();
copy.data = new java.util.ArrayList<T>();
copy.data = new java.util.ArrayT>();
copy.data = new java.util.ArrayList();
copy.data = new java.util.Array&T>();
copy.data = java.util.ArrayList();
copy.data = new java.util.Array<T>();
copy.data = new java.util.ArrayList&T>();
