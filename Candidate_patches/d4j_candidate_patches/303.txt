
cal = (Calendar) cal.clone();
cal = (Calendar) calendar.clone();
calendar = (Calendar) calendar.clone();
calendar = (Calendar)calendar.clone();
calendar = (Calendar) calendar;
cal = (Calendar)cal.clone();
calendar = calendar.clone();
calendar = (Calendar) &calendar.clone();
c = (Calendar) calendar.clone();
calendar = (Calendar)&calendar.clone();
rv = (Calendar) calendar.clone();
calendar = (Calendar) &calendar;
calendar = (Calendar)calendar;
calendar = (Calendar) calendar.get();
date = (Calendar) calendar.clone();
format = (Calendar) calendar.clone();
calendar = (Calendar) cal.clone();
calendar = (Calendar) mTimeZone;
val = (Calendar) calendar.clone();
cal = (Calendar) cal.clone();
cnt = (Calendar) calendar.clone();
(void) (Calendar) calendar.clone();
calendar = (Calendar) aCalendar.clone();
aCalendar = (Calendar) aCalendar;
calendar = (Calendar) getter_Copies(calendar);
calendar = (Calendar)getter_Copies(calendar);
calendar = getter_AddRefs(calendar);
calendar = (Calendar) Calendar.clone();
result = (Calendar) calendar.clone();
cal = (Calendar)cal.clone();
this.calendar = (Calendar) calendar.clone();
iCalendar = (Calendar) calendar.clone();
calendar = (Calendar) (void *) calendar.clone();
calendar = getter_Copies(calendar);
calendar = calendar;
calendar = (calendar) calendar.clone();
calendar = (Calendar)getter_AddRefs(calendar);
calendar = (Calendar) cal.clone();
calendar = (Calendar)Calendar.clone();
calendar = (Calendar)&calendar;
cal = (Calendar) calendar;
calendar = (Calendar)aCalendar.clone();
calendar = (Calendar)date.clone();
year = (Calendar) calendar.clone();
(void) ((Calendar) calendar).clone();
cal = calendar.clone();
ret = (Calendar) calendar.clone();
calendar = (Calendar)calendar.get();
calendar = (Calendar) date.clone();
calendar = (Calendar) getter_AddRefs(calendar);
*calendar = (Calendar) calendar.clone();
(void) calendar.clone();
calendar = (Calendar)null;
calendar = (Calendar) calendar.clone();
calendar = (Calendar) mTimeZone.get();
aCalendar = (Calendar) calendar.clone();
__calendar = (Calendar) calendar.clone();
calendar = (Calendar) mTimeZoneForced;
&calendar = (Calendar) calendar.clone();
calendar = (Calendar) (void) calendar.clone();
timeZone = (Calendar) calendar.clone();
(void) ((Calendar) calendar.clone());
(void)(Calendar) calendar.clone();
cal = (Calendar) cal;
calendar = aCalendar.clone();
calendar = (Calendar) aCalendar;
cc = (Calendar) calendar.clone();
retval = (Calendar) calendar.clone();
newCalendar = (Calendar) calendar.clone();
new_calendar = (Calendar) calendar.clone();
calendar = (Calendar) mCalendar.clone();
calendar = (Calendar)gCalendar.clone();
cd = (Calendar) calendar.clone();
calendar = mTimeZone;
calendar = (Calendar)mTimeZone.get();
calendar = (Calendar)mTimeZone.clone();
calendar = (calendar) cal.clone();
calendar = (Calendar) this.calendar.clone();
calendar = (Calendar) &calendar.clone();
(void) (calendar);
calendar = ((Calendar) calendar).clone();
(void) (calendar).clone();
CALENDAR = (Calendar) calendar.clone();
calendar = (Calendar)mTimeZone;
mCalendar = (Calendar) calendar.clone();
calendar = (Calendar)calene.clone();
calendar = Calendar();
calendar = (Calendar) mTimeZone.clone();
calendar = (TimeZone) calendar.clone();
mTimeZone = (Calendar) calendar.clone();
calendar = Calendar.clone();
Calendar* calendar = (Calendar) calendar.clone();
calendar = nsCRT::strdup(calendar);
calendar = (CurrentTime) calendar.clone();
calendar = (Calendar) mCalendar;
calendar = (Integer) calendar.clone();
cal = (Calendar) cal.get();
(void) calendar = (Calendar) calendar.clone();
calendar = (calendar)calene.clone();
this = (Calendar) calendar.clone();
*aCalendar = (Calendar) calendar.clone();
(void) (calendar) calendar.clone();
calendar = (Calendar)(calendar.clone());
(void)calendar.clone();
calendar = getter_Copies((Calendar) calendar.clone());
_calendar = (Calendar) calendar.clone();
calendar = (PRUint32) calendar.clone();
Calendar *calendar = (Calendar) calendar.clone();
c = (Calendar) c.clone();
tmp = (Calendar) calendar.clone();
calendar = getter_Copies((Calendar) calendar);
calendar = &(calendar);
calendar = (Calendar)(Calendar) calendar.clone();
calendar = (Calendar) gCalendar.clone();
calendar = (calendar)calendar.clone();
calendar = (CachedCalendar) calendar.clone();
cal.calendar = (Calendar) calendar.clone();
calendar = Calendar.get();
mTimeZoneForced = (Calendar) mTimeZone;
(void)(calendar).clone();
(void)((Calendar) calendar).clone();
calendar = getDefaultCalendar();
(void)((Calendar) calendar.clone());
id = (Calendar) calendar.clone();
nsresult rv;
calendar = (Calendar)strdup(calendar);
calendar = (Calendar) ((Calendar) calendar).clone();
calendar = (Calendar) (void **) calendar.clone();
res = (Calendar) calendar.clone();
calendar = (Calendar)date.get();
cal = (Calendar) Calendar.clone();
nsCRT::free(calendar);
(void) calendar;
cal = (Calendar)cal;
calendar = (Calendar) date.get();
calendar = (Calendar)((Calendar) calendar).clone();
cal = (Calendar)Calendar.clone();
calendar = (Calendar) cal;
(void)(calendar);
return applyRules(calendar, buf);
calendar = (Calendar)(calendar).clone();
calendar = do_QueryInterface(calendar);
cal = (Calendar)cal.get();
calendar = (Calendar) buf.clone();
cal.calendar = (Calendar)cal.calene();
aTimeZone = (Calendar) calendar.clone();
calendar = (Calendar)((Calendar) calendar.clone());
start = (Calendar) calendar.clone();
calendar = calendar.get();
calendar = (Calendar) cal.get();
cal = (Calendar) cal.get();
c = calendar.clone();
cnt = (Calendar) cnt;
calendar = (calendar) calendar;
calendar = aCalendar;
cal = (Calendar)cal.get();
calendar = (Calendar)getter_Copies(calendar));
calendar = (Calendar) calene.clone();
calendar = getter_AddRefs((Calendar) calendar);
calendar = (Calendar) this.calene.clone();
cal.calendar = (Calendar) cal.calene();
calendar = getDefault();
aTimeZone = (Calendar) aTimeZone;
(void)calendar;
calendar = (Calendar) (void *)calene.clone();
iCalendar = (Calendar) iCalendar;
calendar = (Calendar) &calendar.get();
calendar = (Calendar)&(calendar.clone());
c.calendar = (Calendar) c.calene();
rv = (Calendar) rv;
calendar = (Calendar) cal.get();
calendar = (Calendar) getter_Copies(calendar));
cnt = (Calendar) cnt.clone();
mTimeZoneForced = (Calendar) calendar;
calendar = getter_Copies((Calendar) calendar).clone();
calendar = getter_Copies(calendar).clone();
calendar = (Calendar) gCalendar.clone();
calendar = null;
calendar = (Calendar) ((Calendar) calendar.clone());
calendar = getter_AddRefs(calendar).clone();
c.calendar = (Calendar) c.clone();
aCalendar = (Calendar)aCalendar;
if (calendar) calendar = (Calendar) calendar;
ctx = (Calendar) ctx.clone();
if (calendar) calendar = (Calendar)calendar;
aTimeZone = (Calendar) aTimeZone.get();
calendar = NS_STATIC_CAST(Calendar*, calendar);
if (mTimeZoneForced)  calendar = (Calendar) calendar.clone();  else  calendar = (Calendar) calendar.clone();
nsCAutoString calendar(nsCAutoString("timeZone", &calendar));
calendar = (Calendar)((char*) calendar).clone();
if (calendar)  calendar = (Calendar)calendar.clone();  else  calendar = (Calendar)calendar;
if (aCalendar)  calendar = (Calendar)aCalendar.clone();
if (!mTimeZoneForced)  calendar = (Calendar) calendar.clone();
/* XXX XXX */ calendar = (Calendar) calendar.clone();
if (!*/!null)  /* XXX don't use nsCRT::free(*/);  /* If the format is valid, then just return this file */ calendar = (Calendar) calendar.clone();
if (calendar)  if (mTimeZoneForced)  calendar = (Calendar)calendar.clone();  else  calendar = (Calendar)calendar;
calendar = (Calendar) (void) cal.clone();
nsCaseInsensitiveState* nsCaseInsensitiveState = (nsCaseInsensitiveState*) calendar.clone();
if (!mTimeZone)  calendar = (Calendar) mTimeZone;
/* * This is a fun way to use this to avoid * other times we get * the wrong timezone here, but it will always be. */ cal.calenate();
if (!mCalendar)  calendar = (Calendar) calendar.clone();
calendar = (Calendar)&((calendar.clone()!= -1)? ((calendar.clone()!= -1) : ((Calendar)&((calendar.clone()!= -1))?((Calendar)&((calendar.clone()!= -1))?((Calendar)&((calendar.clone()!= -1))?((Calendar)&((Calendar)&((calendar.clone()!= -1)?((Calendar)&((Calendar)&((Calendar)&(Calendar))?((Calendar)&(Calendar))?((Calendar)&(Calendar)?((Calendar)&((Calendar)?((Calendar)?((Calendar)?((Calendar)&(Calendar)?(Calendar)?((Cal
if ((calendar = (Calendar) calendar.clone()))  calendar = (Calendar)calendar;  else  calendar = (Calendar)calendar.clone();
aCalendar = (Calendar) aCalendar.clone();
if (!aCalendar) return mTimeZone;
calendar = (Calendar) (void **)&calendar.clone();
if (calendar) calendar = (Calendar)calendar.clone();
if (mTimeZone)  calendar = (Calendar) calendar.clone();  else  calendar = (Calendar) (void)((Calendar)date.get());
if (!(calendar.data.as_mTimeZone))  mTimeZone = null;  else  mTimeZone = 0;
if (!mTimeZone)  /* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone)  /* * Update the timezone. */ if (mTimeZone)  if (mTimeZone)  /* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone)  /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone;  else  mTimeZone = mTimeZone;    else  /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone;   else  /* * Create a new txt from the dummy timezone */ if (mTime
if (!calene)  return applyRules(calene, buf);
if (calendar)  calendar = (Calendar) calendar.clone();
calendar = (Calendar) &(calendar);
if (mTimeZoneForced)  cal = (Calendar) calendar.clone();
/* * Now just insert the format. */ calendar = (Calendar) calendar.clone();
if (calendar)  calendar = (Calendar)calendar.clone();
if (aTimeZone)  calendar = (Calendar) aTimeZone.clone();  else  calendar = (Calendar) aTimeZone.clone();
calendar = (Calendar)(void*)&calene;
cnt = calendar.clone();
if (!mFileSpec)  mFileSpec = null; return 0;  if (!mFileSpec)  return 0;
if (!mTimeZoneForced)  aCalendar = (Calendar) aCalendar.clone();
mTimeZone.mTimeZone = (Calendar) mTimeZone;
if (!aTimeZone)  aTimeZone = null;  if (!aTimeZone)  aTimeZone = null;  else  aTimeZone = 0;
if (calendar)  calendar = (Calendar) calendar.clone();  else  calendar = (Calendar) calendar.clone();
ctxt = (Ctxt) calendar.clone();
if (! (calendar))  return mCalendar;
if (mTimeZone)  calendar = (Calendar) calendar.clone();
if ((calendar) == null)  CAL_LOCK_ASSERT(); calendar = (Calendar)calendar.clone();
if (Calendar)  calendar = (Calendar) calendar.clone();
if (mTimeZone)  if (mTimeZone)  calendar = (Calendar) calendar.clone();  else  if (mTimeZone)  calendar = (Calendar) calendar.clone();   else  calendar = (Calendar) calendar.clone();
if (!mCurrentContext)  calendar = (Calendar) calendar.clone();
if (!mTimeZone)  calendar = (Calendar) calendar.clone();  else  calendar = (Calendar) mTimeZone;
if (calendar)  calendar = (Calendar)calendar.clone();  else  calendar = null;
if (!mTimeZone)  return NS_ERROR_FAILURE;  calendar = (Calendar) calendar.clone();
if ((calendar)!= null)  calendar = (Calendar) calendar.clone();
if (!mInner)  calendar = (Calendar) mInner.clone();
if (mTimeZoneForced)  calendar = (Calendar) calendar.clone();
if (!aCurrentTime)  aCurrentTime = (AsciiTime) aCurrentTime;  else  aCurrentTime = aCurrentTime;
if (mInstance)  mInstance.EraseInstance(&mInstance);  else  if (mInstance)  mInstance.EraseInstance(&mInstance);   else  mInstance = (nsISupports*)mInstance;  else  mInstance = (nsISupports*)mInstance;   if (mInstance)  mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
calendar = get_calendar(&calendar);
if (calendar)  if ((!mTimeZoneForced) && mTimeZone)  return applyRules(calendar, buf);   else  if (!mTimeZoneForced)  return NS_ERROR_NULL_POINTER;
if (!schedule)  return NS_OK;  cal.mTimeZone = null; cal.calene = null; cal.calene = null; cal.calene = null;  cal.calene = null;
nsDateTime now = (nsDateTime) ((calendar) getter_AddRefs(now)); if (now)  nsDateTime startTime = (nsDateTime *) now; nsDateTime now = now.today(); if (now)  now.today().mTimeZone = now.today().mTimeZone; now.today().mTimeZone = now.today().mTimeZone;
calendar = (Calendar)getter_AddRefs(calendar).clone();
if (aCalendar)  aCalendar = (Calendar)aCalendar;  else  aCalendar = (Calendar)aCalendar.clone();
aCurrentTimezone = (Calendar) aCurrentTimezone;
if (!aCalendar)  aCalendar = mTimeZone;  else  aCalendar = (Calendar)aCalendar;
calendar = (Calendar) (void **) calendar;
if (!mTimeZone)  mTimeZone = null;  else  mTimeZone = null;
if ((calendar = (Calendar) calendar.clone()))  mTimeZoneForced = 0;  else  mTimeZoneForced = 0;
cd.calendar = (Calendar) calendar.clone();
if (mTimeZoneForced)  calendar = (Calendar) mTimeZone.clone();  else  calendar = (Calendar) (void) mTimeZone.clone();
/* * Update the url for the document. */ calendar = (Calendar) ((Calendar) calendar).clone();
if (!mTimeZoneForced)  calendar = (Calendar) (void)((Calendar) calendar.clone());
if (aCalendar)  calendar = (Calendar)aCalendar.clone();  else  calendar = (Calendar)aCalendar;
mTimeZoneForced = (Calendar) calendar.clone();
calendar = (Calendar) ((PRUint32)calendar.clone());
if (!mTimeZoneForced)  /* * Create the new document in the calendar's current timezone */
if (calendar) calendar = (Calendar) calendar.clone(); else  if (mTarget)  calendar = (Calendar) calendar.clone();
tmp = (Calendar) tmp.clone();
if (mTimeZoneForced)  /* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal)  calendar = (Calendar)cal.clone();  else  cal.kCurrentTimeZone = mTimeZone;
calendar = (Calendar) &date.mTimeZone;
if (mTimeZoneForced)  calendar = (Calendar) calendar.clone();  else  calendar = null;
/* * We need to match a format that doesn't have any more data, because the scheduler is not always present * so we should only call this function here. */ calendar = (Calendar) calendar.clone();
if (!mTimeZone)  calendar = (Calendar) calendar.clone();  else  if (!mTimeZone)  calendar = (Calendar)null;  else  cal = (Calendar) cal;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal)  cal.ctime = 0;  else  cal.ctime = 0;  */ cal.flags = cal.flags;
nsAutoString date; calendar = (nsAutoString) ((NsAutoString) &date); if (!date)  date = ((NsAutoString) date.get());  else  date = ((NsAutoString)date.get());
if (mTimeZoneForced)  /* We can't take care of this */ calendar = (Calendar) mTimeZone;  else  calendar = (Calendar) mTimeZone;
calendar = (Calendar) c.get();
/* * No reason to do this here. */ calendar = (Calendar) calendar.clone();
if (!(calendar))  calendar = (Calendar)calene;  else  calendar = (Calendar)calene.clone();
calendar = (Calendar) (void *)calene;
aCalendar = (Calendar)aCalendar.clone();
if ((date!= (TimeZoneForced - &date))!= null)  if ((date!= (TimeZoneForced - &date))  date  &date; date = (time) date;  else  date = (Calendar) date; date = date.get();  date = date.get();     if (date > date)  date = date.get(); date = date.get();
if (calendar) calendar = (Calendar) calendar.clone();
if (calendar) <if ((!mTimeZoneForced) && mTimeZone) &return applyRules(calendar, buf); &<else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (!mTimeZone) calendar = (Calendar) calendar.clone(); <else if (!mTimeZone) <calendar = (Calendar)null; else cal = (Calendar) cal;
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); else <if (!mTimeZone) <calendar = (Calendar)null; else cal = (Calendar) cal;
if (calendar) <calendar = (Calendar)calendar.clone(); &else &calendar = (Calendar)calendar;
if (calendar) &calendar = (Calendar)calendar.clone();
if ((calendar = (Calendar) calendar.clone())) &calendar = (Calendar)calendar; &else &calendar = (Calendar)calendar.clone();
if (mTimeZone) &calendar = (Calendar) calendar.clone(); &else calendar = (Calendar) (void)((Calendar)date.get());
if (!aCalendar) aCalendar = mTimeZone; else &aCalendar = (Calendar)aCalendar;
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); <else if (!mTimeZone) calendar = (Calendar)null; else cal = (Calendar) cal;
nsAutoString date; calendar = (nsAutoString) ((NsAutoString) &date); if (!date) <date = ((NsAutoString) date.get()); else <date = ((NsAutoString)date.get());
if (!(calendar.data.as_mTimeZone)) mTimeZone = null; <else mTimeZone = 0;
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); &else if (!mTimeZone) calendar = (Calendar)null; else cal = (Calendar) cal;
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); <else if (!mTimeZone) &calendar = (Calendar)null; else cal = (Calendar) cal;
if (aCalendar) <calendar = (Calendar)aCalendar.clone(); <else calendar = (Calendar)aCalendar;
if (aCalendar) calendar = (Calendar)aCalendar.clone(); &else &calendar = (Calendar)aCalendar;
if (mTimeZoneForced) /* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) &calendar = (Calendar)cal.clone(); <else cal.kCurrentTimeZone = mTimeZone;
if (!mTimeZoneForced) <calendar = (Calendar) (void)((Calendar) calendar.clone());
if (!(calendar.data.as_mTimeZone)) &mTimeZone = null; <else mTimeZone = 0;
if (!mFileSpec) <mFileSpec = null; return 0; <if (!mFileSpec) return 0;
if (!mTimeZone) <return NS_ERROR_FAILURE; &calendar = (Calendar) calendar.clone();
if (aTimeZone) &calendar = (Calendar) aTimeZone.clone(); <else &calendar = (Calendar) aTimeZone.clone();
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) <cal.ctime = 0; else <cal.ctime = 0; */ cal.flags = cal.flags;
if (mTimeZoneForced) &/* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) &calendar = (Calendar)cal.clone(); &else cal.kCurrentTimeZone = mTimeZone;
if (mTimeZoneForced) <calendar = (Calendar) mTimeZone.clone(); else <calendar = (Calendar) (void) mTimeZone.clone();
if (!aTimeZone) aTimeZone = null; &if (!aTimeZone) aTimeZone = null; else aTimeZone = 0;
if (!mTimeZone) calendar = (Calendar) calendar.clone(); &else if (!mTimeZone) &calendar = (Calendar)null; else cal = (Calendar) cal;
if (mTimeZone) <if (mTimeZone) &calendar = (Calendar) calendar.clone(); &else if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (!aCurrentTime) aCurrentTime = (AsciiTime) aCurrentTime; &else &aCurrentTime = aCurrentTime;
if (!*/!null) /* XXX don't use nsCRT::free(*/); </* If the format is valid, then just return this file */ calendar = (Calendar) calendar.clone();
if (!schedule) <return NS_OK; <cal.mTimeZone = null; cal.calene = null; cal.calene = null; cal.calene = null; cal.calene = null;
if (mInstance) <mInstance.EraseInstance(&mInstance); &else <if (mInstance) &mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (mInstance) <mInstance.EraseInstance(&mInstance); else &if (mInstance) <mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (calendar) if (mTimeZoneForced) calendar = (Calendar)calendar.clone(); else &calendar = (Calendar)calendar;
if (calendar) if (mTimeZoneForced) calendar = (Calendar)calendar.clone(); <else calendar = (Calendar)calendar;
if ((date!= (TimeZoneForced - &date))!= null) <if ((date!= (TimeZoneForced - &date)) <date <&date; date = (time) date; &else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); <else <if (!mTimeZone) <calendar = (Calendar)null; else cal = (Calendar) cal;
if (!aCurrentTime) <aCurrentTime = (AsciiTime) aCurrentTime; &else <aCurrentTime = aCurrentTime;
if (mTimeZone) calendar = (Calendar) calendar.clone(); &else &calendar = (Calendar) (void)((Calendar)date.get());
nsAutoString date; calendar = (nsAutoString) ((NsAutoString) &date); if (!date) <date = ((NsAutoString) date.get()); <else <date = ((NsAutoString)date.get());
if ((date!= (TimeZoneForced - &date))!= null) if ((date!= (TimeZoneForced - &date)) &date <&date; date = (time) date; <else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (!schedule) &return NS_OK; &cal.mTimeZone = null; cal.calene = null; cal.calene = null; cal.calene = null; <cal.calene = null;
if (!aTimeZone) &aTimeZone = null; <if (!aTimeZone) aTimeZone = null; <else aTimeZone = 0;
if (!aTimeZone) aTimeZone = null; if (!aTimeZone) <aTimeZone = null; else aTimeZone = 0;
if (mInstance) <mInstance.EraseInstance(&mInstance); <else <if (mInstance) &mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (!mTimeZone) /* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) /* * Update the timezone. */ if (mTimeZone) <if (mTimeZone) /* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (calendar) <if ((!mTimeZoneForced) && mTimeZone) <return applyRules(calendar, buf); <else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if ((date!= (TimeZoneForced - &date))!= null) <if ((date!= (TimeZoneForced - &date)) <date &date; date = (time) date; else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (!aCalendar) aCalendar = mTimeZone; <else <aCalendar = (Calendar)aCalendar;
if (!aTimeZone) &aTimeZone = null; <if (!aTimeZone) <aTimeZone = null; &else aTimeZone = 0;
if (!aCurrentTime) <aCurrentTime = (AsciiTime) aCurrentTime; else &aCurrentTime = aCurrentTime;
if (mTimeZoneForced) &calendar = (Calendar) calendar.clone(); &else &calendar = null;
if (calendar) if ((!mTimeZoneForced) && mTimeZone) <return applyRules(calendar, buf); <&else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) &cal.ctime = 0; else &cal.ctime = 0; &*/ cal.flags = cal.flags;
if (aCalendar) &calendar = (Calendar)aCalendar.clone(); else <calendar = (Calendar)aCalendar;
if (calendar) &if ((!mTimeZoneForced) && mTimeZone) return applyRules(calendar, buf); else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (!mTimeZone) mTimeZone = null; <else <mTimeZone = null;
calendar = (Calendar)calendar.clone();
if (mTimeZone) calendar = (Calendar) calendar.clone();
if (aCalendar) calendar = (Calendar)aCalendar.clone(); &else calendar = (Calendar)aCalendar;
if (aCalendar) &aCalendar = (Calendar)aCalendar; else &aCalendar = (Calendar)aCalendar.clone();
if (!mFileSpec) &mFileSpec = null; return 0; if (!mFileSpec) return 0;
if (!aTimeZone) aTimeZone = null; if (!aTimeZone) <aTimeZone = null; &else aTimeZone = 0;
if (!mCalendar) calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) &calendar = (Calendar) calendar.clone(); &else calendar = (Calendar) calendar.clone();
if (aCalendar) &calendar = (Calendar)aCalendar.clone(); &else &calendar = (Calendar)aCalendar;
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); <else &if (!mTimeZone) calendar = (Calendar)null; else cal = (Calendar) cal;
if (mInstance) <mInstance.EraseInstance(&mInstance); &else if (mInstance) &mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (!mTimeZone) calendar = (Calendar) calendar.clone(); <else &if (!mTimeZone) calendar = (Calendar)null; else cal = (Calendar) cal;
if (!mTimeZone) &/* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) /* * Update the timezone. */ if (mTimeZone) if (mTimeZone) </* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if ((date!= (TimeZoneForced - &date))!= null) <if ((date!= (TimeZoneForced - &date)) &date &date; date = (time) date; <else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (mInstance) &mInstance.EraseInstance(&mInstance); <else &if (mInstance) <mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (!aCurrentTime) aCurrentTime = (AsciiTime) aCurrentTime; &else <aCurrentTime = aCurrentTime;
if (calendar) calendar = (Calendar) calendar.clone(); &else calendar = (Calendar) calendar.clone();
if (aCalendar) <aCalendar = (Calendar)aCalendar; else <aCalendar = (Calendar)aCalendar.clone();
if (calendar) <calendar = (Calendar)calendar.clone(); else calendar = (Calendar)calendar;
if ((date!= (TimeZoneForced - &date))!= null) <if ((date!= (TimeZoneForced - &date)) <date &&date; date = (time) date; &else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (mInstance) &mInstance.EraseInstance(&mInstance); &else <if (mInstance) <mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (!aTimeZone) <aTimeZone = null; <if (!aTimeZone) aTimeZone = null; &else aTimeZone = 0;
if (calendar) &if (mTimeZoneForced) &calendar = (Calendar)calendar.clone(); else calendar = (Calendar)calendar;
if (!aCurrentTime) <aCurrentTime = (AsciiTime) aCurrentTime; &else &aCurrentTime = aCurrentTime;
if (mTimeZone) <if (mTimeZone) <calendar = (Calendar) calendar.clone(); else if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (calendar) &if ((!mTimeZoneForced) && mTimeZone) <return applyRules(calendar, buf); &&else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (!mTimeZone) calendar = (Calendar) calendar.clone(); &else <calendar = (Calendar) mTimeZone;
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); &else <if (!mTimeZone) &calendar = (Calendar)null; else cal = (Calendar) cal;
if (calendar) calendar = (Calendar) calendar.clone(); else if (mTarget) calendar = (Calendar) calendar.clone();
if (mInstance) <mInstance.EraseInstance(&mInstance); &else if (mInstance) <mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (mTimeZone) <calendar = (Calendar) calendar.clone(); &else &calendar = (Calendar) (void)((Calendar)date.get());
if (mTimeZoneForced) calendar = (Calendar) calendar.clone(); &else <calendar = null;
if (!schedule) <return NS_OK; cal.mTimeZone = null; cal.calene = null; cal.calene = null; cal.calene = null; <cal.calene = null;
if (!(calendar)) &calendar = (Calendar)calene; <else calendar = (Calendar)calene.clone();
if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) (void)((Calendar)date.get());
if (!mTimeZone) mTimeZone = null; &else <mTimeZone = null;
if (!(calendar)) <calendar = (Calendar)calene; <else &calendar = (Calendar)calene.clone();
if (mTimeZone) <if (mTimeZone) &calendar = (Calendar) calendar.clone(); &else <if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) &calendar = (Calendar) calendar.clone(); <else <calendar = null;
if (!mTimeZone) calendar = (Calendar) calendar.clone(); else <if (!mTimeZone) &calendar = (Calendar)null; else cal = (Calendar) cal;
if ((date!= (TimeZoneForced - &date))!= null) <if ((date!= (TimeZoneForced - &date)) date &&date; date = (time) date; &else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (!schedule) return NS_OK; cal.mTimeZone = null; cal.calene = null; cal.calene = null; cal.calene = null; <cal.calene = null;
if (aTimeZone) calendar = (Calendar) aTimeZone.clone(); &else calendar = (Calendar) aTimeZone.clone();
if (calendar) &if ((!mTimeZoneForced) && mTimeZone) <return applyRules(calendar, buf); <&else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (mTimeZoneForced) /* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) &calendar = (Calendar)cal.clone(); &else <cal.kCurrentTimeZone = mTimeZone;
if (calendar) <if ((!mTimeZoneForced) && mTimeZone) <return applyRules(calendar, buf); <&else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (mTimeZoneForced) <cal = (Calendar) calendar.clone();
if (aCalendar) calendar = (Calendar)aCalendar.clone(); else <calendar = (Calendar)aCalendar;
if (aCalendar) &calendar = (Calendar)aCalendar.clone(); <else calendar = (Calendar)aCalendar;
if ((date!= (TimeZoneForced - &date))!= null) if ((date!= (TimeZoneForced - &date)) date &date; date = (time) date; &else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (mInstance) mInstance.EraseInstance(&mInstance); &else if (mInstance) mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (!*/!null) </* XXX don't use nsCRT::free(*/); &/* If the format is valid, then just return this file */ calendar = (Calendar) calendar.clone();
if (mTimeZone) <if (mTimeZone) <calendar = (Calendar) calendar.clone(); &else <if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if ((calendar = (Calendar) calendar.clone())) &calendar = (Calendar)calendar; else &calendar = (Calendar)calendar.clone();
if (!mTimeZone) mTimeZone = null; else &mTimeZone = null;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) &cal.ctime = 0; else cal.ctime = 0; &*/ cal.flags = cal.flags;
if (mTimeZoneForced) <calendar = (Calendar) calendar.clone(); else calendar = null;
if (aCalendar) <calendar = (Calendar)aCalendar.clone(); &else calendar = (Calendar)aCalendar;
if (mTimeZoneForced) /* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) calendar = (Calendar)cal.clone(); <else cal.kCurrentTimeZone = mTimeZone;
if (!mTimeZone) <return NS_ERROR_FAILURE; calendar = (Calendar) calendar.clone();
if (!aTimeZone) aTimeZone = null; if (!aTimeZone) aTimeZone = null; &else aTimeZone = 0;
if (!mTimeZone) /* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) &/* * Update the timezone. */ if (mTimeZone) if (mTimeZone) /* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (aTimeZone) <calendar = (Calendar) aTimeZone.clone(); else <calendar = (Calendar) aTimeZone.clone();
if (calendar) <if ((!mTimeZoneForced) && mTimeZone) return applyRules(calendar, buf); <else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (!aCalendar) aCalendar = mTimeZone; else <aCalendar = (Calendar)aCalendar;
if (calendar) &if (mTimeZoneForced) calendar = (Calendar)calendar.clone(); &else <calendar = (Calendar)calendar;
if (mTimeZone) <if (mTimeZone) &calendar = (Calendar) calendar.clone(); else <if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (mInstance) mInstance.EraseInstance(&mInstance); else &if (mInstance) mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (calendar) <calendar = (Calendar)calendar.clone(); <else <calendar = null;
if (!aTimeZone) <aTimeZone = null; if (!aTimeZone) aTimeZone = null; else aTimeZone = 0;
if (mTimeZoneForced) calendar = (Calendar) calendar.clone(); &else &calendar = (Calendar) calendar.clone();
if ((date!= (TimeZoneForced - &date))!= null) <if ((date!= (TimeZoneForced - &date)) date &date; date = (time) date; else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (calendar) calendar = (Calendar)calendar.clone(); &else <calendar = (Calendar)calendar;
if (mTimeZone) <if (mTimeZone) <calendar = (Calendar) calendar.clone(); <else &if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (!mTimeZone) /* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) </* * Update the timezone. */ if (mTimeZone) if (mTimeZone) /* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if ((calendar = (Calendar) calendar.clone())) &mTimeZoneForced = 0; &else <mTimeZoneForced = 0;
if (mTimeZoneForced) /* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) &calendar = (Calendar)cal.clone(); &else &cal.kCurrentTimeZone = mTimeZone;
if (!aTimeZone) <aTimeZone = null; if (!aTimeZone) aTimeZone = null; <else aTimeZone = 0;
if (!mTimeZone) &return NS_ERROR_FAILURE; &calendar = (Calendar) calendar.clone();
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); &else if (!mTimeZone) <calendar = (Calendar)null; else cal = (Calendar) cal;
if (!(calendar.data.as_mTimeZone)) mTimeZone = null; &else &mTimeZone = 0;
if (calendar) &calendar = (Calendar)calendar.clone(); &else &calendar = null;
if (!mInner) <calendar = (Calendar) mInner.clone();
if (!mTimeZone) return NS_ERROR_FAILURE; calendar = (Calendar) calendar.clone();
if (!mTimeZone) calendar = (Calendar) calendar.clone(); &else if (!mTimeZone) calendar = (Calendar)null; else cal = (Calendar) cal;
if (mTimeZoneForced) &/* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) <calendar = (Calendar)cal.clone(); <else &cal.kCurrentTimeZone = mTimeZone;
if (calendar) <if ((!mTimeZoneForced) && mTimeZone) <return applyRules(calendar, buf); &<else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (mTimeZoneForced) <calendar = (Calendar) calendar.clone(); <else calendar = null;
if (mTimeZone) <if (mTimeZone) calendar = (Calendar) calendar.clone(); <else if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (!mTimeZoneForced) <aCalendar = (Calendar) aCalendar.clone();
if (calendar) <if (mTimeZoneForced) calendar = (Calendar)calendar.clone(); &else <calendar = (Calendar)calendar;
if ((date!= (TimeZoneForced - &date))!= null) <if ((date!= (TimeZoneForced - &date)) date &&date; date = (time) date; <else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
nsAutoString date; calendar = (nsAutoString) ((NsAutoString) &date); if (!date) &date = ((NsAutoString) date.get()); <else <date = ((NsAutoString)date.get());
if (aCalendar) <aCalendar = (Calendar)aCalendar; else aCalendar = (Calendar)aCalendar.clone();
if (mTimeZoneForced) &calendar = (Calendar) mTimeZone.clone(); <else calendar = (Calendar) (void) mTimeZone.clone();
if (mInstance) <mInstance.EraseInstance(&mInstance); else <if (mInstance) mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (calendar) if (mTimeZoneForced) &calendar = (Calendar)calendar.clone(); &else &calendar = (Calendar)calendar;
if (mTimeZone) if (mTimeZone) <calendar = (Calendar) calendar.clone(); &else if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (!aTimeZone) &aTimeZone = null; if (!aTimeZone) <aTimeZone = null; &else aTimeZone = 0;
if (mTimeZoneForced) /* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) calendar = (Calendar)cal.clone(); <else &cal.kCurrentTimeZone = mTimeZone;
if (!mTimeZone) &/* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) &/* * Update the timezone. */ if (mTimeZone) &if (mTimeZone) /* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if ((date!= (TimeZoneForced - &date))!= null) if ((date!= (TimeZoneForced - &date)) <date <&date; date = (time) date; <else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (!mTimeZone) calendar = (Calendar) calendar.clone(); <else if (!mTimeZone) &calendar = (Calendar)null; else cal = (Calendar) cal;
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); <else if (!mTimeZone) <calendar = (Calendar)null; else cal = (Calendar) cal;
if (calendar) &if (mTimeZoneForced) &calendar = (Calendar)calendar.clone(); &else &calendar = (Calendar)calendar;
if ((calendar = (Calendar) calendar.clone())) mTimeZoneForced = 0; else &mTimeZoneForced = 0;
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); <else <if (!mTimeZone) calendar = (Calendar)null; else cal = (Calendar) cal;
if (mInstance) <mInstance.EraseInstance(&mInstance); else if (mInstance) <mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (!aTimeZone) <aTimeZone = null; &if (!aTimeZone) aTimeZone = null; else aTimeZone = 0;
if ((date!= (TimeZoneForced - &date))!= null) <if ((date!= (TimeZoneForced - &date)) date &date; date = (time) date; <else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (mTimeZoneForced) <calendar = (Calendar) mTimeZone.clone(); <else &calendar = (Calendar) (void) mTimeZone.clone();
if (!mTimeZone) mTimeZone = null; else <mTimeZone = null;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) cal.ctime = 0; &else cal.ctime = 0; */ cal.flags = cal.flags;
if (calendar) &calendar = (Calendar) calendar.clone(); else <calendar = (Calendar) calendar.clone();
if (!mTimeZone) calendar = (Calendar) calendar.clone(); &else <if (!mTimeZone) calendar = (Calendar)null; else cal = (Calendar) cal;
if (!schedule) &return NS_OK; <cal.mTimeZone = null; cal.calene = null; cal.calene = null; cal.calene = null; &cal.calene = null;
if (calendar) calendar = (Calendar)calendar.clone(); else &calendar = (Calendar)calendar;
if (Calendar) <calendar = (Calendar) calendar.clone();
if (mTimeZone) <if (mTimeZone) calendar = (Calendar) calendar.clone(); &else &if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (mInstance) mInstance.EraseInstance(&mInstance); else if (mInstance) mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (!mTimeZone) &mTimeZone = null; <else mTimeZone = null;
if (mTimeZoneForced) <calendar = (Calendar) mTimeZone.clone(); <else calendar = (Calendar) (void) mTimeZone.clone();
if (!mTimeZone) &/* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) /* * Update the timezone. */ if (mTimeZone) if (mTimeZone) /* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (!aTimeZone) <aTimeZone = null; if (!aTimeZone) <aTimeZone = null; &else aTimeZone = 0;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) <cal.ctime = 0; &else cal.ctime = 0; */ cal.flags = cal.flags;
if (mTimeZoneForced) calendar = (Calendar) mTimeZone.clone(); &else <calendar = (Calendar) (void) mTimeZone.clone();
if (calendar) if (mTimeZoneForced) <calendar = (Calendar)calendar.clone(); &else &calendar = (Calendar)calendar;
if (calendar) if (mTimeZoneForced) calendar = (Calendar)calendar.clone(); else <calendar = (Calendar)calendar;
if (!mTimeZone) &/* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) </* * Update the timezone. */ if (mTimeZone) if (mTimeZone) </* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (mTimeZoneForced) </* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) &calendar = (Calendar)cal.clone(); else cal.kCurrentTimeZone = mTimeZone;
if (mTimeZoneForced) </* We can't take care of this */ calendar = (Calendar) mTimeZone; &else &calendar = (Calendar) mTimeZone;
if (mTimeZone) <if (mTimeZone) calendar = (Calendar) calendar.clone(); <else &if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (mTimeZone) <if (mTimeZone) calendar = (Calendar) calendar.clone(); else if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) <cal.ctime = 0; <else cal.ctime = 0; <*/ cal.flags = cal.flags;
if (!(calendar)) <calendar = (Calendar)calene; else <calendar = (Calendar)calene.clone();
if (calendar) &if ((!mTimeZoneForced) && mTimeZone) return applyRules(calendar, buf); &&else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (!mTimeZone) /* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) </* * Update the timezone. */ if (mTimeZone) <if (mTimeZone) /* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (mTimeZone) <calendar = (Calendar) calendar.clone();
if (!(calendar)) calendar = (Calendar)calene; &else calendar = (Calendar)calene.clone();
if (mInstance) <mInstance.EraseInstance(&mInstance); <else &if (mInstance) mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (!schedule) &return NS_OK; cal.mTimeZone = null; cal.calene = null; cal.calene = null; cal.calene = null; &cal.calene = null;
if (!aTimeZone) &aTimeZone = null; if (!aTimeZone) <aTimeZone = null; else aTimeZone = 0;
if (mInstance) &mInstance.EraseInstance(&mInstance); else if (mInstance) mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (mTimeZoneForced) </* We can't take care of this */ calendar = (Calendar) mTimeZone; else &calendar = (Calendar) mTimeZone;
if (!aTimeZone) &aTimeZone = null; &if (!aTimeZone) <aTimeZone = null; else aTimeZone = 0;
if (!mTimeZone) &calendar = (Calendar) mTimeZone;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) cal.ctime = 0; <else cal.ctime = 0; &*/ cal.flags = cal.flags;
if (!mTimeZone) &/* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) &/* * Update the timezone. */ if (mTimeZone) &if (mTimeZone) </* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (mTimeZone) &if (mTimeZone) <calendar = (Calendar) calendar.clone(); &else if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) </* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) <calendar = (Calendar)cal.clone(); else <cal.kCurrentTimeZone = mTimeZone;
if ((date!= (TimeZoneForced - &date))!= null) &if ((date!= (TimeZoneForced - &date)) date <&date; date = (time) date; <else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (mTimeZoneForced) /* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) &calendar = (Calendar)cal.clone(); <else &cal.kCurrentTimeZone = mTimeZone;
if ((date!= (TimeZoneForced - &date))!= null) if ((date!= (TimeZoneForced - &date)) <date &&date; date = (time) date; &else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if ((calendar = (Calendar) calendar.clone())) calendar = (Calendar)calendar; &else calendar = (Calendar)calendar.clone();
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) cal.ctime = 0; <else <cal.ctime = 0; <*/ cal.flags = cal.flags;
if (mInstance) mInstance.EraseInstance(&mInstance); <else if (mInstance) &mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (!aCurrentTime) <aCurrentTime = (AsciiTime) aCurrentTime; else <aCurrentTime = aCurrentTime;
if (!aCalendar) <aCalendar = mTimeZone; &else aCalendar = (Calendar)aCalendar;
if (calendar) <calendar = (Calendar) calendar.clone();
if (mInstance) &mInstance.EraseInstance(&mInstance); else <if (mInstance) <mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (mTimeZoneForced) </* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) calendar = (Calendar)cal.clone(); else &cal.kCurrentTimeZone = mTimeZone;
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); else <if (!mTimeZone) &calendar = (Calendar)null; else cal = (Calendar) cal;
if (!mTimeZone) <mTimeZone = null; &else <mTimeZone = null;
if (!aTimeZone) <aTimeZone = null; &if (!aTimeZone) <aTimeZone = null; else aTimeZone = 0;
if (!mTimeZone) &/* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) </* * Update the timezone. */ if (mTimeZone) <if (mTimeZone) &/* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (calendar) <calendar = (Calendar) calendar.clone(); &else <calendar = (Calendar) calendar.clone();
if (mTimeZone) if (mTimeZone) <calendar = (Calendar) calendar.clone(); &else <if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (calendar) calendar = (Calendar) calendar.clone(); else if (mTarget) <calendar = (Calendar) calendar.clone();
if (!(calendar)) &calendar = (Calendar)calene; &else &calendar = (Calendar)calene.clone();
if (!aCalendar) <aCalendar = mTimeZone; else &aCalendar = (Calendar)aCalendar;
if (mTimeZone) <calendar = (Calendar) calendar.clone(); else <calendar = (Calendar) (void)((Calendar)date.get());
if (mInstance) <mInstance.EraseInstance(&mInstance); &else &if (mInstance) <mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (!(calendar.data.as_mTimeZone)) <mTimeZone = null; <else <mTimeZone = 0;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) cal.ctime = 0; else &cal.ctime = 0; &*/ cal.flags = cal.flags;
if (!aCurrentTime) &aCurrentTime = (AsciiTime) aCurrentTime; &else <aCurrentTime = aCurrentTime;
if (aCalendar) calendar = (Calendar)aCalendar.clone(); &else <calendar = (Calendar)aCalendar;
if (!schedule) return NS_OK; cal.mTimeZone = null; cal.calene = null; cal.calene = null; cal.calene = null; &cal.calene = null;
if (!mFileSpec) mFileSpec = null; return 0; if (!mFileSpec) &return 0;
if (calendar) &if (mTimeZoneForced) <calendar = (Calendar)calendar.clone(); &else &calendar = (Calendar)calendar;
if (calendar) <calendar = (Calendar)calendar.clone(); else calendar = null;
if (mInstance) mInstance.EraseInstance(&mInstance); <else if (mInstance) <mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (mTimeZone) if (mTimeZone) &calendar = (Calendar) calendar.clone(); &else if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (aCalendar) calendar = (Calendar)aCalendar.clone(); else &calendar = (Calendar)aCalendar;
if (calendar) calendar = (Calendar)calendar.clone(); &else &calendar = null;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) &cal.ctime = 0; else cal.ctime = 0; */ cal.flags = cal.flags;
if (calendar) &if (mTimeZoneForced) <calendar = (Calendar)calendar.clone(); else &calendar = (Calendar)calendar;
if (calendar) calendar = (Calendar)calendar.clone(); else calendar = null;
if (calendar) if ((!mTimeZoneForced) && mTimeZone) &return applyRules(calendar, buf); else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) <cal.ctime = 0; &else cal.ctime = 0; <*/ cal.flags = cal.flags;
if (calendar) if (mTimeZoneForced) <calendar = (Calendar)calendar.clone(); else &calendar = (Calendar)calendar;
if (!*/!null) &/* XXX don't use nsCRT::free(*/); /* If the format is valid, then just return this file */ calendar = (Calendar) calendar.clone();
if (!mTimeZone) /* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) </* * Update the timezone. */ if (mTimeZone) &if (mTimeZone) </* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); else &calendar = (Calendar) mTimeZone;
if (mInstance) <mInstance.EraseInstance(&mInstance); else if (mInstance) mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (calendar) <if ((!mTimeZoneForced) && mTimeZone) return applyRules(calendar, buf); &<else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (calendar) if ((!mTimeZoneForced) && mTimeZone) <return applyRules(calendar, buf); &<else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (aCalendar) &calendar = (Calendar)aCalendar.clone(); else calendar = (Calendar)aCalendar;
if ((date!= (TimeZoneForced - &date))!= null) &if ((date!= (TimeZoneForced - &date)) <date &&date; date = (time) date; &else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if ((date!= (TimeZoneForced - &date))!= null) <if ((date!= (TimeZoneForced - &date)) date <&date; date = (time) date; <else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if ((date!= (TimeZoneForced - &date))!= null) &if ((date!= (TimeZoneForced - &date)) date &date; date = (time) date; else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (!aTimeZone) <aTimeZone = null; if (!aTimeZone) &aTimeZone = null; &else aTimeZone = 0;
if (mTimeZone) if (mTimeZone) calendar = (Calendar) calendar.clone(); else &if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (mInstance) <mInstance.EraseInstance(&mInstance); &else &if (mInstance) &mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (calendar) &if ((!mTimeZoneForced) && mTimeZone) <return applyRules(calendar, buf); <<else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (mInstance) mInstance.EraseInstance(&mInstance); &else <if (mInstance) mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); else if (!mTimeZone) &calendar = (Calendar)null; else cal = (Calendar) cal;
nsDateTime now = (nsDateTime) ((calendar) getter_AddRefs(now)); if (now) nsDateTime startTime = (nsDateTime *) now; nsDateTime now = now.today(); if (now) &now.today().mTimeZone = now.today().mTimeZone; now.today().mTimeZone = now.today().mTimeZone;
if (mTimeZone) &if (mTimeZone) calendar = (Calendar) calendar.clone(); else &if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (!aCurrentTime) <aCurrentTime = (AsciiTime) aCurrentTime; else aCurrentTime = aCurrentTime;
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); &else <if (!mTimeZone) calendar = (Calendar)null; else cal = (Calendar) cal;
if (mTimeZone) calendar = (Calendar) calendar.clone(); <else calendar = (Calendar) (void)((Calendar)date.get());
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) <cal.ctime = 0; &else &cal.ctime = 0; */ cal.flags = cal.flags;
nsAutoString date; calendar = (nsAutoString) ((NsAutoString) &date); if (!date) date = ((NsAutoString) date.get()); <else &date = ((NsAutoString)date.get());
if (!(calendar.data.as_mTimeZone)) mTimeZone = null; <else <mTimeZone = 0;
if (aCalendar) &aCalendar = (Calendar)aCalendar; else <aCalendar = (Calendar)aCalendar.clone();
if (mTimeZone) &if (mTimeZone) &calendar = (Calendar) calendar.clone(); <else if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) &calendar = (Calendar) calendar.clone(); &else <calendar = null;
if (calendar) if (mTimeZoneForced) <calendar = (Calendar)calendar.clone(); &else <calendar = (Calendar)calendar;
if (calendar) calendar = (Calendar) calendar.clone(); <else <calendar = (Calendar) calendar.clone();
if (mTimeZone) if (mTimeZone) calendar = (Calendar) calendar.clone(); else <if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) &/* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) calendar = (Calendar)cal.clone(); <else <cal.kCurrentTimeZone = mTimeZone;
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); <else &if (!mTimeZone) &calendar = (Calendar)null; else cal = (Calendar) cal;
if (mInstance) <mInstance.EraseInstance(&mInstance); <else if (mInstance) mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (mTimeZone) &if (mTimeZone) &calendar = (Calendar) calendar.clone(); <else &if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (!schedule) &return NS_OK; &cal.mTimeZone = null; cal.calene = null; cal.calene = null; cal.calene = null; &cal.calene = null;
if (!mTimeZone) calendar = (Calendar) calendar.clone(); &else <if (!mTimeZone) &calendar = (Calendar)null; else cal = (Calendar) cal;
if (!mTimeZone) &/* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) </* * Update the timezone. */ if (mTimeZone) &if (mTimeZone) /* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); else &if (!mTimeZone) &calendar = (Calendar)null; else cal = (Calendar) cal;
if (calendar) &if (mTimeZoneForced) <calendar = (Calendar)calendar.clone(); <else calendar = (Calendar)calendar;
if ((date!= (TimeZoneForced - &date))!= null) <if ((date!= (TimeZoneForced - &date)) date &&date; date = (time) date; else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (mTimeZone) <if (mTimeZone) &calendar = (Calendar) calendar.clone(); else &if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
nsAutoString date; calendar = (nsAutoString) ((NsAutoString) &date); if (!date) &date = ((NsAutoString) date.get()); else date = ((NsAutoString)date.get());
if (calendar) <calendar = (Calendar)calendar.clone(); else &calendar = (Calendar)calendar;
if (mTimeZone) <calendar = (Calendar) calendar.clone(); else calendar = (Calendar) (void)((Calendar)date.get());
if (mTimeZoneForced) &calendar = (Calendar) calendar.clone(); <else <calendar = (Calendar) calendar.clone();
if (calendar) if ((!mTimeZoneForced) && mTimeZone) &return applyRules(calendar, buf); &&else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (!mTimeZone) </* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) /* * Update the timezone. */ if (mTimeZone) <if (mTimeZone) </* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (mTimeZoneForced) </* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) &calendar = (Calendar)cal.clone(); &else cal.kCurrentTimeZone = mTimeZone;
if (mTimeZoneForced) &calendar = (Calendar) calendar.clone(); &else calendar = null;
if (calendar) if ((!mTimeZoneForced) && mTimeZone) return applyRules(calendar, buf); <<else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
nsAutoString date; calendar = (nsAutoString) ((NsAutoString) &date); if (!date) date = ((NsAutoString) date.get()); <else <date = ((NsAutoString)date.get());
if (mTimeZoneForced) calendar = (Calendar) mTimeZone.clone(); else &calendar = (Calendar) (void) mTimeZone.clone();
if (aTimeZone) <calendar = (Calendar) aTimeZone.clone(); <else <calendar = (Calendar) aTimeZone.clone();
if (mTimeZoneForced) &calendar = (Calendar) mTimeZone.clone(); &else calendar = (Calendar) (void) mTimeZone.clone();
if (!mTimeZone) /* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) </* * Update the timezone. */ if (mTimeZone) <if (mTimeZone) &/* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (!aTimeZone) aTimeZone = null; if (!aTimeZone) &aTimeZone = null; else aTimeZone = 0;
if (!mFileSpec) <mFileSpec = null; return 0; if (!mFileSpec) return 0;
if (!mInner) calendar = (Calendar) mInner.clone();
if (mTimeZoneForced) </* We can't take care of this */ calendar = (Calendar) mTimeZone; &else calendar = (Calendar) mTimeZone;
if (calendar) &if (mTimeZoneForced) &calendar = (Calendar)calendar.clone(); <else <calendar = (Calendar)calendar;
nsAutoString date; calendar = (nsAutoString) ((NsAutoString) &date); if (!date) date = ((NsAutoString) date.get()); else date = ((NsAutoString)date.get());
if (!mTimeZone) calendar = (Calendar) calendar.clone(); else if (!mTimeZone) calendar = (Calendar)null; else cal = (Calendar) cal;
if (mTimeZoneForced) <calendar = (Calendar) mTimeZone.clone(); <else <calendar = (Calendar) (void) mTimeZone.clone();
if (aCalendar) aCalendar = (Calendar)aCalendar; <else &aCalendar = (Calendar)aCalendar.clone();
if (calendar) <calendar = (Calendar) calendar.clone(); &else calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) &/* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) <calendar = (Calendar)cal.clone(); &else <cal.kCurrentTimeZone = mTimeZone;
if (mInstance) mInstance.EraseInstance(&mInstance); else if (mInstance) <mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) cal.ctime = 0; <else cal.ctime = 0; <*/ cal.flags = cal.flags;
if (mTimeZoneForced) &calendar = (Calendar) calendar.clone(); else &calendar = null;
if (mTimeZoneForced) &/* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) calendar = (Calendar)cal.clone(); <else cal.kCurrentTimeZone = mTimeZone;
if (!schedule) <return NS_OK; cal.mTimeZone = null; cal.calene = null; cal.calene = null; cal.calene = null; &cal.calene = null;
if (!mTimeZone) /* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) </* * Update the timezone. */ if (mTimeZone) &if (mTimeZone) &/* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (aCalendar) <calendar = (Calendar)aCalendar.clone(); <else <calendar = (Calendar)aCalendar;
if ((date!= (TimeZoneForced - &date))!= null) if ((date!= (TimeZoneForced - &date)) date <&date; date = (time) date; else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (!mTimeZone) calendar = (Calendar) calendar.clone(); &else if (!mTimeZone) <calendar = (Calendar)null; else cal = (Calendar) cal;
if (mInstance) <mInstance.EraseInstance(&mInstance); &else <if (mInstance) mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (aCalendar) &aCalendar = (Calendar)aCalendar; &else aCalendar = (Calendar)aCalendar.clone();
if (!mTimeZone) &/* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) &/* * Update the timezone. */ if (mTimeZone) if (mTimeZone) </* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (calendar) &calendar = (Calendar)calendar.clone(); else calendar = null;
if (calendar) <if ((!mTimeZoneForced) && mTimeZone) return applyRules(calendar, buf); &else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (!mTimeZone) &mTimeZone = null; else <mTimeZone = null;
if (mTimeZone) <if (mTimeZone) <calendar = (Calendar) calendar.clone(); <else if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); <else <calendar = (Calendar) mTimeZone;
if (!mTimeZone) </* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) </* * Update the timezone. */ if (mTimeZone) if (mTimeZone) /* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) &cal.ctime = 0; <else cal.ctime = 0; &*/ cal.flags = cal.flags;
if (mInstance) mInstance.EraseInstance(&mInstance); <else <if (mInstance) mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (!mFileSpec) &mFileSpec = null; return 0; if (!mFileSpec) <return 0;
if (mTimeZoneForced) &calendar = (Calendar) calendar.clone(); else &calendar = (Calendar) calendar.clone();
if (calendar) &calendar = (Calendar)calendar.clone(); <else &calendar = null;
if (!mTimeZone) calendar = (Calendar) calendar.clone(); else if (!mTimeZone) <calendar = (Calendar)null; else cal = (Calendar) cal;
if (calendar) &if ((!mTimeZoneForced) && mTimeZone) &return applyRules(calendar, buf); <&else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (mTimeZoneForced) &/* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) &calendar = (Calendar)cal.clone(); &else &cal.kCurrentTimeZone = mTimeZone;
if (!(calendar.data.as_mTimeZone)) mTimeZone = null; &else <mTimeZone = 0;
if (mTimeZoneForced) calendar = (Calendar) calendar.clone(); <else &calendar = null;
if (mTimeZone) <calendar = (Calendar) calendar.clone(); <else &calendar = (Calendar) (void)((Calendar)date.get());
if (aCalendar) aCalendar = (Calendar)aCalendar; else &aCalendar = (Calendar)aCalendar.clone();
if (!mTimeZone) calendar = (Calendar) calendar.clone(); &else &if (!mTimeZone) &calendar = (Calendar)null; else cal = (Calendar) cal;
if (calendar) &if (mTimeZoneForced) &calendar = (Calendar)calendar.clone(); &else <calendar = (Calendar)calendar;
if (mTimeZoneForced) </* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) &calendar = (Calendar)cal.clone(); else <cal.kCurrentTimeZone = mTimeZone;
if (calendar) <calendar = (Calendar)calendar.clone(); <else calendar = null;
if (!mFileSpec) &mFileSpec = null; return 0; &if (!mFileSpec) &return 0;
nsDateTime now = (nsDateTime) ((calendar) getter_AddRefs(now)); if (now) &nsDateTime startTime = (nsDateTime *) now; nsDateTime now = now.today(); if (now) <now.today().mTimeZone = now.today().mTimeZone; now.today().mTimeZone = now.today().mTimeZone;
if (calendar) &if (mTimeZoneForced) calendar = (Calendar)calendar.clone(); &else calendar = (Calendar)calendar;
if ((calendar = (Calendar) calendar.clone())) calendar = (Calendar)calendar; else calendar = (Calendar)calendar.clone();
if (!mTimeZone) calendar = (Calendar) calendar.clone(); else if (!mTimeZone) &calendar = (Calendar)null; else cal = (Calendar) cal;
if (calendar) <if ((!mTimeZoneForced) && mTimeZone) return applyRules(calendar, buf); &&else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); else if (!mTimeZone) <calendar = (Calendar)null; else cal = (Calendar) cal;
if (mTimeZone) &if (mTimeZone) calendar = (Calendar) calendar.clone(); &else if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) </* We can't take care of this */ calendar = (Calendar) mTimeZone; &else <calendar = (Calendar) mTimeZone;
if (aCalendar) calendar = (Calendar)aCalendar.clone(); <else <calendar = (Calendar)aCalendar;
if (mTimeZone) &if (mTimeZone) calendar = (Calendar) calendar.clone(); <else if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if ((calendar = (Calendar) calendar.clone())) mTimeZoneForced = 0; else <mTimeZoneForced = 0;
if (calendar) calendar = (Calendar)calendar.clone(); else &calendar = null;
if (!aTimeZone) <aTimeZone = null; &if (!aTimeZone) <aTimeZone = null; <else aTimeZone = 0;
if (calendar) &calendar = (Calendar)calendar.clone(); else &calendar = null;
if (!aCurrentTime) &aCurrentTime = (AsciiTime) aCurrentTime; else aCurrentTime = aCurrentTime;
if (!mTimeZone) <mTimeZone = null; <else &mTimeZone = null;
if (calendar) &calendar = (Calendar) calendar.clone();
if (calendar) <calendar = (Calendar) calendar.clone(); <else <calendar = (Calendar) calendar.clone();
if (!(calendar.data.as_mTimeZone)) mTimeZone = null; &else mTimeZone = 0;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) &cal.ctime = 0; &else &cal.ctime = 0; */ cal.flags = cal.flags;
if (!aCurrentTime) <aCurrentTime = (AsciiTime) aCurrentTime; &else aCurrentTime = aCurrentTime;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) &cal.ctime = 0; <else cal.ctime = 0; <*/ cal.flags = cal.flags;
if (aCalendar) <calendar = (Calendar)aCalendar.clone(); <else &calendar = (Calendar)aCalendar;
if (!aCurrentTime) &aCurrentTime = (AsciiTime) aCurrentTime; &else aCurrentTime = aCurrentTime;
if (aTimeZone) &calendar = (Calendar) aTimeZone.clone(); <else <calendar = (Calendar) aTimeZone.clone();
if (!(calendar)) calendar = (Calendar)calene; <else calendar = (Calendar)calene.clone();
if (calendar) &if ((!mTimeZoneForced) && mTimeZone) return applyRules(calendar, buf); &<else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (mTimeZoneForced) <calendar = (Calendar) mTimeZone.clone(); &else calendar = (Calendar) (void) mTimeZone.clone();
if (calendar) &calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (!schedule) return NS_OK; &cal.mTimeZone = null; cal.calene = null; cal.calene = null; cal.calene = null; cal.calene = null;
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); &else calendar = (Calendar) mTimeZone;
if (mInstance) <mInstance.EraseInstance(&mInstance); <else if (mInstance) &mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (mTimeZoneForced) /* We can't take care of this */ calendar = (Calendar) mTimeZone; <else calendar = (Calendar) mTimeZone;
if (!(calendar)) &calendar = (Calendar)calene; <else <calendar = (Calendar)calene.clone();
if (mTimeZoneForced) calendar = (Calendar) calendar.clone(); else <calendar = (Calendar) calendar.clone();
if (!mTimeZone) /* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) &/* * Update the timezone. */ if (mTimeZone) if (mTimeZone) </* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (calendar) if (mTimeZoneForced) <calendar = (Calendar)calendar.clone(); <else <calendar = (Calendar)calendar;
if (mTimeZoneForced) calendar = (Calendar) calendar.clone(); else calendar = null;
if (aTimeZone) <calendar = (Calendar) aTimeZone.clone(); &else <calendar = (Calendar) aTimeZone.clone();
if ((calendar = (Calendar) calendar.clone())) calendar = (Calendar)calendar; <else <calendar = (Calendar)calendar.clone();
if (!(calendar.data.as_mTimeZone)) &mTimeZone = null; <else <mTimeZone = 0;
if (!aTimeZone) &aTimeZone = null; <if (!aTimeZone) aTimeZone = null; &else aTimeZone = 0;
if (aTimeZone) calendar = (Calendar) aTimeZone.clone(); &else <calendar = (Calendar) aTimeZone.clone();
if ((calendar = (Calendar) calendar.clone())) &calendar = (Calendar)calendar; else calendar = (Calendar)calendar.clone();
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); &else &if (!mTimeZone) &calendar = (Calendar)null; else cal = (Calendar) cal;
if (!aCalendar) &aCalendar = mTimeZone; else &aCalendar = (Calendar)aCalendar;
if (!aTimeZone) &aTimeZone = null; if (!aTimeZone) aTimeZone = null; &else aTimeZone = 0;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) &cal.ctime = 0; else <cal.ctime = 0; <*/ cal.flags = cal.flags;
if (calendar) &calendar = (Calendar) calendar.clone(); else &calendar = (Calendar) calendar.clone();
if ((date!= (TimeZoneForced - &date))!= null) <if ((date!= (TimeZoneForced - &date)) <date &&date; date = (time) date; <else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (mInstance) &mInstance.EraseInstance(&mInstance); <else <if (mInstance) <mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (aCalendar) <aCalendar = (Calendar)aCalendar; <else <aCalendar = (Calendar)aCalendar.clone();
if (mTimeZone) <if (mTimeZone) &calendar = (Calendar) calendar.clone(); <else <if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) <calendar = (Calendar) calendar.clone(); <else <calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) <calendar = (Calendar) calendar.clone(); else &calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) cal = (Calendar) calendar.clone();
if (calendar) &calendar = (Calendar)calendar.clone(); <else <calendar = (Calendar)calendar;
if (calendar) <if (mTimeZoneForced) calendar = (Calendar)calendar.clone(); <else <calendar = (Calendar)calendar;
if (!aCalendar) aCalendar = mTimeZone; &else aCalendar = (Calendar)aCalendar;
if (!aTimeZone) <aTimeZone = null; <if (!aTimeZone) <aTimeZone = null; else aTimeZone = 0;
if (!mTimeZone) calendar = (Calendar) calendar.clone(); <else calendar = (Calendar) mTimeZone;
if (!aCalendar) aCalendar = mTimeZone; &else &aCalendar = (Calendar)aCalendar;
if (mTimeZoneForced) <calendar = (Calendar) calendar.clone(); &else &calendar = null;
if (!mTimeZone) &/* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) /* * Update the timezone. */ if (mTimeZone) &if (mTimeZone) &/* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (calendar) if ((!mTimeZoneForced) && mTimeZone) &return applyRules(calendar, buf); <&else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (!mTimeZone) /* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) &/* * Update the timezone. */ if (mTimeZone) if (mTimeZone) &/* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (mTimeZoneForced) </* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) &calendar = (Calendar)cal.clone(); else &cal.kCurrentTimeZone = mTimeZone;
if ((date!= (TimeZoneForced - &date))!= null) &if ((date!= (TimeZoneForced - &date)) &date <&date; date = (time) date; &else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (calendar) <if (mTimeZoneForced) <calendar = (Calendar)calendar.clone(); <else <calendar = (Calendar)calendar;
if (mTimeZoneForced) calendar = (Calendar) mTimeZone.clone(); else <calendar = (Calendar) (void) mTimeZone.clone();
if (mTimeZone) if (mTimeZone) calendar = (Calendar) calendar.clone(); else if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (!aCurrentTime) &aCurrentTime = (AsciiTime) aCurrentTime; <else <aCurrentTime = aCurrentTime;
if (!schedule) &return NS_OK; &cal.mTimeZone = null; cal.calene = null; cal.calene = null; cal.calene = null; cal.calene = null;
nsDateTime now = (nsDateTime) ((calendar) getter_AddRefs(now)); if (now) &nsDateTime startTime = (nsDateTime *) now; nsDateTime now = now.today(); if (now) &now.today().mTimeZone = now.today().mTimeZone; now.today().mTimeZone = now.today().mTimeZone;
if (mTimeZone) if (mTimeZone) <calendar = (Calendar) calendar.clone(); else <if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (mTimeZone) &calendar = (Calendar) calendar.clone(); &else <calendar = (Calendar) (void)((Calendar)date.get());
nsAutoString date; calendar = (nsAutoString) ((NsAutoString) &date); if (!date) &date = ((NsAutoString) date.get()); else <date = ((NsAutoString)date.get());
&calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) &/* We can't take care of this */ calendar = (Calendar) mTimeZone; <else calendar = (Calendar) mTimeZone;
if (calendar) calendar = (Calendar)calendar.clone(); else <calendar = (Calendar)calendar;
if (!mTimeZone) &/* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) &/* * Update the timezone. */ if (mTimeZone) <if (mTimeZone) </* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (calendar) <if (mTimeZoneForced) calendar = (Calendar)calendar.clone(); &else calendar = (Calendar)calendar;
if (calendar) if (mTimeZoneForced) <calendar = (Calendar)calendar.clone(); &else calendar = (Calendar)calendar;
if (aTimeZone) <calendar = (Calendar) aTimeZone.clone(); &else &calendar = (Calendar) aTimeZone.clone();
if (mInstance) mInstance.EraseInstance(&mInstance); &else &if (mInstance) &mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if ((date!= (TimeZoneForced - &date))!= null) <if ((date!= (TimeZoneForced - &date)) &date <&date; date = (time) date; <else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (aCalendar) aCalendar = (Calendar)aCalendar; else <aCalendar = (Calendar)aCalendar.clone();
if (calendar) calendar = (Calendar) calendar.clone(); <else &calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) /* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) <calendar = (Calendar)cal.clone(); &else cal.kCurrentTimeZone = mTimeZone;
if (calendar) if ((!mTimeZoneForced) && mTimeZone) &return applyRules(calendar, buf); &<else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); &else <if (!mTimeZone) calendar = (Calendar)null; else cal = (Calendar) cal;
if (!mTimeZone) calendar = (Calendar) calendar.clone(); <else &if (!mTimeZone) <calendar = (Calendar)null; else cal = (Calendar) cal;
if (mTimeZone) <if (mTimeZone) <calendar = (Calendar) calendar.clone(); <else <if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (!mTimeZone) &mTimeZone = null; <else <mTimeZone = null;
if (!(calendar.data.as_mTimeZone)) &mTimeZone = null; &else &mTimeZone = 0;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) &cal.ctime = 0; else <cal.ctime = 0; */ cal.flags = cal.flags;
if (calendar) &if (mTimeZoneForced) &calendar = (Calendar)calendar.clone(); <else &calendar = (Calendar)calendar;
if (calendar) if (mTimeZoneForced) <calendar = (Calendar)calendar.clone(); <else calendar = (Calendar)calendar;
if (calendar) <if (mTimeZoneForced) &calendar = (Calendar)calendar.clone(); &else calendar = (Calendar)calendar;
nsDateTime now = (nsDateTime) ((calendar) getter_AddRefs(now)); if (now) <nsDateTime startTime = (nsDateTime *) now; nsDateTime now = now.today(); if (now) &now.today().mTimeZone = now.today().mTimeZone; now.today().mTimeZone = now.today().mTimeZone;
if (mInstance) <mInstance.EraseInstance(&mInstance); <else <if (mInstance) mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
nsAutoString date; calendar = (nsAutoString) ((NsAutoString) &date); if (!date) &date = ((NsAutoString) date.get()); <else date = ((NsAutoString)date.get());
if (!(calendar)) <calendar = (Calendar)calene; <else <calendar = (Calendar)calene.clone();
if (mTimeZoneForced) /* We can't take care of this */ calendar = (Calendar) mTimeZone; &else calendar = (Calendar) mTimeZone;
if (!mTimeZone) </* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) /* * Update the timezone. */ if (mTimeZone) <if (mTimeZone) /* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (!(calendar)) &calendar = (Calendar)calene; else &calendar = (Calendar)calene.clone();
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) <cal.ctime = 0; else &cal.ctime = 0; */ cal.flags = cal.flags;
if (mTimeZoneForced) calendar = (Calendar) calendar.clone(); <else <calendar = (Calendar) calendar.clone();
if (calendar) if ((!mTimeZoneForced) && mTimeZone) &return applyRules(calendar, buf); &else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (calendar) <if (mTimeZoneForced) <calendar = (Calendar)calendar.clone(); <else calendar = (Calendar)calendar;
if (mTimeZoneForced) </* We can't take care of this */ calendar = (Calendar) mTimeZone; <else calendar = (Calendar) mTimeZone;
if (mTimeZone) if (mTimeZone) <calendar = (Calendar) calendar.clone(); <else &if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (mTimeZone) calendar = (Calendar) calendar.clone(); &else <calendar = (Calendar) (void)((Calendar)date.get());
if (mTimeZone) &if (mTimeZone) &calendar = (Calendar) calendar.clone(); &else <if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (aCalendar) calendar = (Calendar)aCalendar.clone();
if (!mTimeZone) calendar = (Calendar) calendar.clone(); else &if (!mTimeZone) calendar = (Calendar)null; else cal = (Calendar) cal;
if (calendar) &if ((!mTimeZoneForced) && mTimeZone) &return applyRules(calendar, buf); &<else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (calendar) &if (mTimeZoneForced) calendar = (Calendar)calendar.clone(); <else <calendar = (Calendar)calendar;
if (!mFileSpec) &mFileSpec = null; return 0; <if (!mFileSpec) <return 0;
if (!aTimeZone) &aTimeZone = null; &if (!aTimeZone) &aTimeZone = null; <else aTimeZone = 0;
if (aTimeZone) &calendar = (Calendar) aTimeZone.clone(); <else calendar = (Calendar) aTimeZone.clone();
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); <else if (!mTimeZone) calendar = (Calendar)null; else cal = (Calendar) cal;
if (!aTimeZone) &aTimeZone = null; if (!aTimeZone) &aTimeZone = null; &else aTimeZone = 0;
if (!aCalendar) <aCalendar = mTimeZone; <else <aCalendar = (Calendar)aCalendar;
if (!mFileSpec) &mFileSpec = null; return 0; if (!mFileSpec) &return 0;
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); &else <if (!mTimeZone) <calendar = (Calendar)null; else cal = (Calendar) cal;
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); else calendar = (Calendar) mTimeZone;
if ((date!= (TimeZoneForced - &date))!= null) if ((date!= (TimeZoneForced - &date)) &date <&date; date = (time) date; else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (calendar) &calendar = (Calendar) calendar.clone(); <else &calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) calendar = (Calendar) calendar.clone();
if (!(calendar.data.as_mTimeZone)) &mTimeZone = null; else &mTimeZone = 0;
if (!mTimeZone) <mTimeZone = null; &else &mTimeZone = null;
if (mInstance) &mInstance.EraseInstance(&mInstance); else &if (mInstance) mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) cal.ctime = 0; else cal.ctime = 0; <*/ cal.flags = cal.flags;
if (mTimeZone) if (mTimeZone) calendar = (Calendar) calendar.clone(); &else if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (!mTimeZone) &/* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) &/* * Update the timezone. */ if (mTimeZone) if (mTimeZone) &/* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
nsAutoString date; calendar = (nsAutoString) ((NsAutoString) &date); if (!date) &date = ((NsAutoString) date.get()); &else &date = ((NsAutoString)date.get());
if ((date!= (TimeZoneForced - &date))!= null) if ((date!= (TimeZoneForced - &date)) <date &&date; date = (time) date; else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (!aTimeZone) <aTimeZone = null; if (!aTimeZone) &aTimeZone = null; <else aTimeZone = 0;
if (!aCalendar) &aCalendar = mTimeZone; <else aCalendar = (Calendar)aCalendar;
if (!aCurrentTime) aCurrentTime = (AsciiTime) aCurrentTime; else <aCurrentTime = aCurrentTime;
if (mTimeZoneForced) /* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) calendar = (Calendar)cal.clone(); &else <cal.kCurrentTimeZone = mTimeZone;
if (!mTimeZone) mTimeZone = null; <else mTimeZone = null;
if (aCalendar) &aCalendar = (Calendar)aCalendar; <else &aCalendar = (Calendar)aCalendar.clone();
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) cal.ctime = 0; &else &cal.ctime = 0; &*/ cal.flags = cal.flags;
if (!mTimeZone) calendar = (Calendar) calendar.clone(); else <if (!mTimeZone) <calendar = (Calendar)null; else cal = (Calendar) cal;
if (!aTimeZone) aTimeZone = null; if (!aTimeZone) aTimeZone = null; <else aTimeZone = 0;
if (calendar) calendar = (Calendar)calendar.clone(); else calendar = (Calendar)calendar;
if ((date!= (TimeZoneForced - &date))!= null) &if ((date!= (TimeZoneForced - &date)) <date <&date; date = (time) date; <else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (mTimeZone) <if (mTimeZone) calendar = (Calendar) calendar.clone(); <else <if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (aCalendar) aCalendar = (Calendar)aCalendar; else aCalendar = (Calendar)aCalendar.clone();
if (!calene) &return applyRules(calene, buf);
if ((date!= (TimeZoneForced - &date))!= null) if ((date!= (TimeZoneForced - &date)) date <&date; date = (time) date; &else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (calendar) <if (mTimeZoneForced) calendar = (Calendar)calendar.clone(); <else &calendar = (Calendar)calendar;
if ((calendar = (Calendar) calendar.clone())) calendar = (Calendar)calendar; &else &calendar = (Calendar)calendar.clone();
if ((date!= (TimeZoneForced - &date))!= null) if ((date!= (TimeZoneForced - &date)) date <&date; date = (time) date; <else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (calendar) &if ((!mTimeZoneForced) && mTimeZone) &return applyRules(calendar, buf); <else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (mTimeZoneForced) </* We can't take care of this */ calendar = (Calendar) mTimeZone; else <calendar = (Calendar) mTimeZone;
if (calendar) <if ((!mTimeZoneForced) && mTimeZone) <return applyRules(calendar, buf); <<else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) &cal.ctime = 0; &else &cal.ctime = 0; &*/ cal.flags = cal.flags;
if ((date!= (TimeZoneForced - &date))!= null) <if ((date!= (TimeZoneForced - &date)) date <&date; date = (time) date; &else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
nsAutoString date; calendar = (nsAutoString) ((NsAutoString) &date); if (!date) &date = ((NsAutoString) date.get()); &else date = ((NsAutoString)date.get());
if (!schedule) return NS_OK; &cal.mTimeZone = null; cal.calene = null; cal.calene = null; cal.calene = null; &cal.calene = null;
if (!mFileSpec) mFileSpec = null; return 0; <if (!mFileSpec) &return 0;
if (mTimeZoneForced) &calendar = (Calendar) mTimeZone.clone(); <else &calendar = (Calendar) (void) mTimeZone.clone();
if (!mTimeZone) <mTimeZone = null; &else mTimeZone = null;
if (mTimeZoneForced) &/* We can't take care of this */ calendar = (Calendar) mTimeZone; &else calendar = (Calendar) mTimeZone;
if ((date!= (TimeZoneForced - &date))!= null) <if ((date!= (TimeZoneForced - &date)) <date <&date; date = (time) date; <else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
nsDateTime now = (nsDateTime) ((calendar) getter_AddRefs(now)); if (now) <nsDateTime startTime = (nsDateTime *) now; nsDateTime now = now.today(); if (now) <now.today().mTimeZone = now.today().mTimeZone; now.today().mTimeZone = now.today().mTimeZone;
if ((calendar = (Calendar) calendar.clone())) mTimeZoneForced = 0; else mTimeZoneForced = 0;
if (mTimeZone) &if (mTimeZone) &calendar = (Calendar) calendar.clone(); &else &if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (calendar) &if ((!mTimeZoneForced) && mTimeZone) &return applyRules(calendar, buf); else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (!calene) <return applyRules(calene, buf);
if (calendar) <if (mTimeZoneForced) &calendar = (Calendar)calendar.clone(); <else calendar = (Calendar)calendar;
if (aCalendar) &calendar = (Calendar)aCalendar.clone(); &else calendar = (Calendar)aCalendar;
if (mTimeZoneForced) &/* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) &calendar = (Calendar)cal.clone(); <else <cal.kCurrentTimeZone = mTimeZone;
if (mTimeZoneForced) calendar = (Calendar) mTimeZone.clone(); <else <calendar = (Calendar) (void) mTimeZone.clone();
if (mTimeZoneForced) calendar = (Calendar) calendar.clone(); &else calendar = (Calendar) calendar.clone();
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) <cal.ctime = 0; <else &cal.ctime = 0; &*/ cal.flags = cal.flags;
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); <else &if (!mTimeZone) <calendar = (Calendar)null; else cal = (Calendar) cal;
if (calendar) calendar = (Calendar)calendar.clone(); <else &calendar = (Calendar)calendar;
if (mTimeZone) if (mTimeZone) <calendar = (Calendar) calendar.clone(); <else <if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) <calendar = (Calendar) calendar.clone(); else <calendar = null;
if (mInstance) <mInstance.EraseInstance(&mInstance); <else &if (mInstance) <mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (!schedule) <return NS_OK; &cal.mTimeZone = null; cal.calene = null; cal.calene = null; cal.calene = null; &cal.calene = null;
if (!aCalendar) aCalendar = mTimeZone; else aCalendar = (Calendar)aCalendar;
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); <else &calendar = (Calendar) mTimeZone;
if (!mTimeZone) &/* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) </* * Update the timezone. */ if (mTimeZone) if (mTimeZone) /* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (!mTimeZone) </* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) &/* * Update the timezone. */ if (mTimeZone) if (mTimeZone) /* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (!mTimeZone) </* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) </* * Update the timezone. */ if (mTimeZone) if (mTimeZone) </* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if ((calendar = (Calendar) calendar.clone())) <mTimeZoneForced = 0; <else <mTimeZoneForced = 0;
if ((date!= (TimeZoneForced - &date))!= null) &if ((date!= (TimeZoneForced - &date)) date <&date; date = (time) date; else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (aTimeZone) &calendar = (Calendar) aTimeZone.clone(); &else &calendar = (Calendar) aTimeZone.clone();
if ((date!= (TimeZoneForced - &date))!= null) if ((date!= (TimeZoneForced - &date)) &date &date; date = (time) date; <else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (calendar) &if ((!mTimeZoneForced) && mTimeZone) <return applyRules(calendar, buf); &else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); &else if (!mTimeZone) &calendar = (Calendar)null; else cal = (Calendar) cal;
if (!(calendar.data.as_mTimeZone)) &mTimeZone = null; else mTimeZone = 0;
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); <else <if (!mTimeZone) &calendar = (Calendar)null; else cal = (Calendar) cal;
if (calendar) &calendar = (Calendar)calendar.clone(); else <calendar = (Calendar)calendar;
if (mInstance) mInstance.EraseInstance(&mInstance); &else if (mInstance) <mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (!mTimeZone) calendar = (Calendar) calendar.clone(); else &calendar = (Calendar) mTimeZone;
nsAutoString date; calendar = (nsAutoString) ((NsAutoString) &date); if (!date) <date = ((NsAutoString) date.get()); <else date = ((NsAutoString)date.get());
if (calendar) calendar = (Calendar)calendar.clone(); <else calendar = null;
if (calendar) <calendar = (Calendar)calendar.clone(); <else <calendar = (Calendar)calendar;
if (mTimeZoneForced) &calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (!(calendar.data.as_mTimeZone)) &mTimeZone = null; &else <mTimeZone = 0;
if (!aTimeZone) aTimeZone = null; &if (!aTimeZone) &aTimeZone = null; <else aTimeZone = 0;
if (calendar) <calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (!mTimeZone) <mTimeZone = null; <else mTimeZone = null;
if (!mTimeZone) &/* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) </* * Update the timezone. */ if (mTimeZone) &if (mTimeZone) </* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if ((date!= (TimeZoneForced - &date))!= null) <if ((date!= (TimeZoneForced - &date)) &date &&date; date = (time) date; &else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (mTimeZoneForced) <calendar = (Calendar) calendar.clone();
if (!aTimeZone) <aTimeZone = null; &if (!aTimeZone) &aTimeZone = null; else aTimeZone = 0;
if (mInstance) <mInstance.EraseInstance(&mInstance); <else &if (mInstance) &mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (calendar) calendar = (Calendar)calendar.clone(); <else calendar = (Calendar)calendar;
if (calendar) <if ((!mTimeZoneForced) && mTimeZone) <return applyRules(calendar, buf); &else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (!aCalendar) <aCalendar = mTimeZone; else <aCalendar = (Calendar)aCalendar;
if (mTimeZoneForced) /* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) &calendar = (Calendar)cal.clone(); &else cal.kCurrentTimeZone = mTimeZone;
if (mTimeZoneForced) /* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) &calendar = (Calendar)cal.clone(); <else <cal.kCurrentTimeZone = mTimeZone;
if ((date!= (TimeZoneForced - &date))!= null) <if ((date!= (TimeZoneForced - &date)) <date &date; date = (time) date; &else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if ((calendar = (Calendar) calendar.clone())) mTimeZoneForced = 0; &else &mTimeZoneForced = 0;
if (!aTimeZone) &aTimeZone = null; if (!aTimeZone) &aTimeZone = null; else aTimeZone = 0;
if (calendar) &calendar = (Calendar) calendar.clone(); &else <calendar = (Calendar) calendar.clone();
if ((date!= (TimeZoneForced - &date))!= null) if ((date!= (TimeZoneForced - &date)) date &date; date = (time) date; else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (mTimeZoneForced) <calendar = (Calendar) calendar.clone(); <else <calendar = null;
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); else <if (!mTimeZone) &calendar = (Calendar)null; else cal = (Calendar) cal;
if (mTimeZoneForced) /* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) <calendar = (Calendar)cal.clone(); else cal.kCurrentTimeZone = mTimeZone;
if (mInstance) mInstance.EraseInstance(&mInstance); <else &if (mInstance) mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (calendar) <calendar = (Calendar)calendar.clone(); <else &calendar = null;
if ((date!= (TimeZoneForced - &date))!= null) <if ((date!= (TimeZoneForced - &date)) &date <&date; date = (time) date; &else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (mTimeZoneForced) /* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) calendar = (Calendar)cal.clone(); <else <cal.kCurrentTimeZone = mTimeZone;
if (!aCalendar) &aCalendar = mTimeZone; <else <aCalendar = (Calendar)aCalendar;
if (!schedule) return NS_OK; <cal.mTimeZone = null; cal.calene = null; cal.calene = null; cal.calene = null; &cal.calene = null;
if ((calendar = (Calendar) calendar.clone())) <calendar = (Calendar)calendar; <else <calendar = (Calendar)calendar.clone();
if (!mTimeZone) <mTimeZone = null; else mTimeZone = null;
if (!mTimeZoneForced) calendar = (Calendar) (void)((Calendar) calendar.clone());
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) cal.ctime = 0; &else <cal.ctime = 0; <*/ cal.flags = cal.flags;
if (calendar) &calendar = (Calendar)calendar.clone(); else <calendar = null;
if (!aCurrentTime) &aCurrentTime = (AsciiTime) aCurrentTime; &else &aCurrentTime = aCurrentTime;
if (!(calendar)) <calendar = (Calendar)calene; <else calendar = (Calendar)calene.clone();
if (!mTimeZone) </* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) </* * Update the timezone. */ if (mTimeZone) &if (mTimeZone) </* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (mTimeZone) <if (mTimeZone) <calendar = (Calendar) calendar.clone(); else &if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) <calendar = (Calendar) mTimeZone.clone(); else calendar = (Calendar) (void) mTimeZone.clone();
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); &else calendar = (Calendar) mTimeZone;
if (!mCurrentContext) <calendar = (Calendar) calendar.clone();
if ((date!= (TimeZoneForced - &date))!= null) <if ((date!= (TimeZoneForced - &date)) &date <&date; date = (time) date; else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); else <if (!mTimeZone) calendar = (Calendar)null; else cal = (Calendar) cal;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) cal.ctime = 0; &else &cal.ctime = 0; */ cal.flags = cal.flags;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) cal.ctime = 0; else cal.ctime = 0; */ cal.flags = cal.flags;
if ((calendar = (Calendar) calendar.clone())) calendar = (Calendar)calendar; &else <calendar = (Calendar)calendar.clone();
if (!aCalendar) &aCalendar = mTimeZone; <else &aCalendar = (Calendar)aCalendar;
if ((date!= (TimeZoneForced - &date))!= null) &if ((date!= (TimeZoneForced - &date)) date &&date; date = (time) date; &else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (calendar) if (mTimeZoneForced) calendar = (Calendar)calendar.clone(); <else &calendar = (Calendar)calendar;
if (calendar) <if (mTimeZoneForced) &calendar = (Calendar)calendar.clone(); else calendar = (Calendar)calendar;
if (!mCurrentContext) &calendar = (Calendar) calendar.clone();
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) <cal.ctime = 0; &else &cal.ctime = 0; <*/ cal.flags = cal.flags;
if (mTimeZoneForced) &calendar = (Calendar) calendar.clone(); else <calendar = null;
if (calendar) <if (mTimeZoneForced) calendar = (Calendar)calendar.clone(); else calendar = (Calendar)calendar;
if ((calendar = (Calendar) calendar.clone())) &calendar = (Calendar)calendar; &else calendar = (Calendar)calendar.clone();
if (mTimeZone) &calendar = (Calendar) calendar.clone(); <else calendar = (Calendar) (void)((Calendar)date.get());
if (calendar) <calendar = (Calendar)calendar.clone(); &else <calendar = (Calendar)calendar;
if (mTimeZoneForced) /* We can't take care of this */ calendar = (Calendar) mTimeZone; <else <calendar = (Calendar) mTimeZone;
if (!aCalendar) <aCalendar = mTimeZone; &else <aCalendar = (Calendar)aCalendar;
if (mTimeZoneForced) calendar = (Calendar) calendar.clone(); <else <calendar = null;
if (mTimeZone) <if (mTimeZone) <calendar = (Calendar) calendar.clone(); &else if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (aCalendar) &aCalendar = (Calendar)aCalendar; else aCalendar = (Calendar)aCalendar.clone();
if (!mTimeZone) &/* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) /* * Update the timezone. */ if (mTimeZone) if (mTimeZone) &/* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if ((calendar = (Calendar) calendar.clone())) <mTimeZoneForced = 0; &else mTimeZoneForced = 0;
if (mTimeZone) &if (mTimeZone) calendar = (Calendar) calendar.clone(); &else <if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (!mTimeZoneForced) &/* * Create the new document in the calendar's current timezone */
if (aCalendar) aCalendar = (Calendar)aCalendar; <else aCalendar = (Calendar)aCalendar.clone();
if (!mTimeZone) /* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) /* * Update the timezone. */ if (mTimeZone) if (mTimeZone) &/* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) cal.ctime = 0; else &cal.ctime = 0; */ cal.flags = cal.flags;
if (!aTimeZone) aTimeZone = null; <if (!aTimeZone) &aTimeZone = null; <else aTimeZone = 0;
if (!mTimeZone) </* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) &/* * Update the timezone. */ if (mTimeZone) <if (mTimeZone) /* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if ((calendar = (Calendar) calendar.clone())) &mTimeZoneForced = 0; else <mTimeZoneForced = 0;
if (mTimeZoneForced) &/* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) &calendar = (Calendar)cal.clone(); &else <cal.kCurrentTimeZone = mTimeZone;
if (!aCurrentTime) &aCurrentTime = (AsciiTime) aCurrentTime; else <aCurrentTime = aCurrentTime;
if (!mTimeZone) &/* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) &/* * Update the timezone. */ if (mTimeZone) &if (mTimeZone) &/* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if ((date!= (TimeZoneForced - &date))!= null) <if ((date!= (TimeZoneForced - &date)) date &date; date = (time) date; &else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (calendar) if ((!mTimeZoneForced) && mTimeZone) <return applyRules(calendar, buf); else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (aTimeZone) <calendar = (Calendar) aTimeZone.clone(); <else &calendar = (Calendar) aTimeZone.clone();
if ((calendar)!= null) <calendar = (Calendar) calendar.clone();
if ((calendar = (Calendar) calendar.clone())) calendar = (Calendar)calendar; else &calendar = (Calendar)calendar.clone();
if (mTimeZone) if (mTimeZone) calendar = (Calendar) calendar.clone(); <else if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) cal.ctime = 0; else <cal.ctime = 0; &*/ cal.flags = cal.flags;
if (aCalendar) &aCalendar = (Calendar)aCalendar; <else <aCalendar = (Calendar)aCalendar.clone();
if (!mTimeZone) </* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) /* * Update the timezone. */ if (mTimeZone) if (mTimeZone) /* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (!mTimeZoneForced) </* * Create the new document in the calendar's current timezone */
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); &else &if (!mTimeZone) calendar = (Calendar)null; else cal = (Calendar) cal;
if (mTimeZoneForced) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) </* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) <calendar = (Calendar)cal.clone(); else &cal.kCurrentTimeZone = mTimeZone;
if (calendar) &if (mTimeZoneForced) <calendar = (Calendar)calendar.clone(); else calendar = (Calendar)calendar;
if (!mTimeZone) &mTimeZone = null; else mTimeZone = null;
calendar = (Calendar) calendar.clone();
if (!(calendar)) calendar = (Calendar)calene; else calendar = (Calendar)calene.clone();
if (calendar) <if (mTimeZoneForced) <calendar = (Calendar)calendar.clone(); <else &calendar = (Calendar)calendar;
if (calendar) <if (mTimeZoneForced) &calendar = (Calendar)calendar.clone(); &else <calendar = (Calendar)calendar;
if ((date!= (TimeZoneForced - &date))!= null) &if ((date!= (TimeZoneForced - &date)) &date &&date; date = (time) date; <else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if ((calendar = (Calendar) calendar.clone())) <mTimeZoneForced = 0; <else mTimeZoneForced = 0;
if (mTimeZoneForced) &/* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) &calendar = (Calendar)cal.clone(); else cal.kCurrentTimeZone = mTimeZone;
if (mTimeZoneForced) &/* We can't take care of this */ calendar = (Calendar) mTimeZone; <else <calendar = (Calendar) mTimeZone;
if (calendar) <calendar = (Calendar)calendar.clone(); <else calendar = (Calendar)calendar;
if ((date!= (TimeZoneForced - &date))!= null) <if ((date!= (TimeZoneForced - &date)) &date &date; date = (time) date; else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (!mTimeZoneForced) &calendar = (Calendar) (void)((Calendar) calendar.clone());
if (calendar) &if (mTimeZoneForced) <calendar = (Calendar)calendar.clone(); <else <calendar = (Calendar)calendar;
if (mInstance) &mInstance.EraseInstance(&mInstance); <else if (mInstance) &mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (Calendar) &calendar = (Calendar) calendar.clone();
if (calendar) calendar = (Calendar)calendar.clone(); <else <calendar = (Calendar)calendar;
if (mTimeZone) <calendar = (Calendar) calendar.clone(); &else calendar = (Calendar) (void)((Calendar)date.get());
if (mTimeZoneForced) &calendar = (Calendar) mTimeZone.clone(); else <calendar = (Calendar) (void) mTimeZone.clone();
if (!mFileSpec) <mFileSpec = null; return 0; <if (!mFileSpec) &return 0;
if (mTimeZoneForced) /* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) <calendar = (Calendar)cal.clone(); <else &cal.kCurrentTimeZone = mTimeZone;
if (mTimeZoneForced) <calendar = (Calendar) calendar.clone(); <else &calendar = (Calendar) calendar.clone();
if (mInstance) &mInstance.EraseInstance(&mInstance); &else if (mInstance) mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (mTimeZoneForced) /* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) calendar = (Calendar)cal.clone(); else cal.kCurrentTimeZone = mTimeZone;
if (!mTimeZone) </* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) </* * Update the timezone. */ if (mTimeZone) if (mTimeZone) &/* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (!aCurrentTime) <aCurrentTime = (AsciiTime) aCurrentTime; <else &aCurrentTime = aCurrentTime;
if (calendar) <if ((!mTimeZoneForced) && mTimeZone) &return applyRules(calendar, buf); else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (aCalendar) <aCalendar = (Calendar)aCalendar; else &aCalendar = (Calendar)aCalendar.clone();
if (!aCalendar) aCalendar = mTimeZone; <else aCalendar = (Calendar)aCalendar;
if (mTimeZone) &if (mTimeZone) <calendar = (Calendar) calendar.clone(); <else <if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) &calendar = (Calendar) calendar.clone(); <else calendar = null;
if (!aTimeZone) aTimeZone = null; <if (!aTimeZone) aTimeZone = null; else aTimeZone = 0;
if (!schedule) <return NS_OK; &cal.mTimeZone = null; cal.calene = null; cal.calene = null; cal.calene = null; <cal.calene = null;
if ((date!= (TimeZoneForced - &date))!= null) &if ((date!= (TimeZoneForced - &date)) &date &date; date = (time) date; else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (mTimeZone) calendar = (Calendar) calendar.clone(); else <calendar = (Calendar) (void)((Calendar)date.get());
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) <cal.ctime = 0; &else &cal.ctime = 0; &*/ cal.flags = cal.flags;
if (!mTimeZone) return NS_ERROR_FAILURE; &calendar = (Calendar) calendar.clone();
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) <cal.ctime = 0; <else &cal.ctime = 0; <*/ cal.flags = cal.flags;
if (!(calendar)) calendar = (Calendar)calene; else &calendar = (Calendar)calene.clone();
if (mTimeZoneForced) &/* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) calendar = (Calendar)cal.clone(); &else &cal.kCurrentTimeZone = mTimeZone;
if (!aTimeZone) aTimeZone = null; &if (!aTimeZone) <aTimeZone = null; &else aTimeZone = 0;
if (mInstance) <mInstance.EraseInstance(&mInstance); else <if (mInstance) <mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (!(calendar.data.as_mTimeZone)) mTimeZone = null; else <mTimeZone = 0;
if (!(calendar.data.as_mTimeZone)) <mTimeZone = null; else mTimeZone = 0;
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); else calendar = (Calendar) mTimeZone;
if (!mTimeZone) mTimeZone = null; <else &mTimeZone = null;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) <cal.ctime = 0; else &cal.ctime = 0; &*/ cal.flags = cal.flags;
if (mTimeZone) &if (mTimeZone) <calendar = (Calendar) calendar.clone(); else <if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if ((date!= (TimeZoneForced - &date))!= null) &if ((date!= (TimeZoneForced - &date)) date <&date; date = (time) date; &else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (!mTimeZone) </* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) /* * Update the timezone. */ if (mTimeZone) &if (mTimeZone) &/* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (aCalendar) &aCalendar = (Calendar)aCalendar; &else <aCalendar = (Calendar)aCalendar.clone();
if (!mCalendar) <calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) calendar = (Calendar) calendar.clone(); else <calendar = null;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) cal.ctime = 0; &else <cal.ctime = 0; &*/ cal.flags = cal.flags;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) &cal.ctime = 0; &else cal.ctime = 0; &*/ cal.flags = cal.flags;
if (aCalendar) <calendar = (Calendar)aCalendar.clone(); else <calendar = (Calendar)aCalendar;
if (mInstance) <mInstance.EraseInstance(&mInstance); else if (mInstance) &mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (mInstance) mInstance.EraseInstance(&mInstance); &else <if (mInstance) &mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (!mTimeZone) calendar = (Calendar) calendar.clone(); &else &if (!mTimeZone) calendar = (Calendar)null; else cal = (Calendar) cal;
if (!mTimeZone) /* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) /* * Update the timezone. */ if (mTimeZone) <if (mTimeZone) &/* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) &cal.ctime = 0; <else &cal.ctime = 0; <*/ cal.flags = cal.flags;
if (!mTimeZone) &/* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) &/* * Update the timezone. */ if (mTimeZone) <if (mTimeZone) &/* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (!aTimeZone) <aTimeZone = null; <if (!aTimeZone) &aTimeZone = null; &else aTimeZone = 0;
if (mInstance) &mInstance.EraseInstance(&mInstance); &else &if (mInstance) &mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (!mFileSpec) &mFileSpec = null; return 0; <if (!mFileSpec) return 0;
if (mInstance) mInstance.EraseInstance(&mInstance); else &if (mInstance) &mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (!mTimeZone) &mTimeZone = null; else &mTimeZone = null;
if (!aTimeZone) &aTimeZone = null; <if (!aTimeZone) &aTimeZone = null; <else aTimeZone = 0;
if ((calendar = (Calendar) calendar.clone())) <mTimeZoneForced = 0; &else &mTimeZoneForced = 0;
if (!mTimeZone) </* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) &/* * Update the timezone. */ if (mTimeZone) <if (mTimeZone) &/* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) <cal.ctime = 0; &else cal.ctime = 0; &*/ cal.flags = cal.flags;
if ((date!= (TimeZoneForced - &date))!= null) if ((date!= (TimeZoneForced - &date)) date &&date; date = (time) date; &else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (mTimeZoneForced) &calendar = (Calendar) mTimeZone.clone(); &else &calendar = (Calendar) (void) mTimeZone.clone();
if (calendar) &if (mTimeZoneForced) &calendar = (Calendar)calendar.clone(); &else calendar = (Calendar)calendar;
if (mTimeZoneForced) /* We can't take care of this */ calendar = (Calendar) mTimeZone; else &calendar = (Calendar) mTimeZone;
if (aCalendar) <calendar = (Calendar)aCalendar.clone();
if (!(calendar.data.as_mTimeZone)) <mTimeZone = null; <else mTimeZone = 0;
if (!(calendar)) calendar = (Calendar)calene; &else &calendar = (Calendar)calene.clone();
if (!mFileSpec) <mFileSpec = null; return 0; if (!mFileSpec) <return 0;
if (mTimeZoneForced) </* We can't take care of this */ calendar = (Calendar) mTimeZone; <else <calendar = (Calendar) mTimeZone;
if (!(calendar)) <calendar = (Calendar)calene; else calendar = (Calendar)calene.clone();
if ((calendar = (Calendar) calendar.clone())) &mTimeZoneForced = 0; <else mTimeZoneForced = 0;
if (!aTimeZone) aTimeZone = null; <if (!aTimeZone) &aTimeZone = null; else aTimeZone = 0;
nsAutoString date; calendar = (nsAutoString) ((NsAutoString) &date); if (!date) <date = ((NsAutoString) date.get()); else &date = ((NsAutoString)date.get());
if (mTimeZone) <calendar = (Calendar) calendar.clone(); else &calendar = (Calendar) (void)((Calendar)date.get());
if (!aTimeZone) aTimeZone = null; &if (!aTimeZone) aTimeZone = null; &else aTimeZone = 0;
if (mTimeZoneForced) /* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) calendar = (Calendar)cal.clone(); else <cal.kCurrentTimeZone = mTimeZone;
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); &else &calendar = (Calendar) mTimeZone;
if (mTimeZone) &if (mTimeZone) <calendar = (Calendar) calendar.clone(); &else &if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (!aTimeZone) <aTimeZone = null; <if (!aTimeZone) <aTimeZone = null; &else aTimeZone = 0;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) <cal.ctime = 0; &else <cal.ctime = 0; <*/ cal.flags = cal.flags;
if (mInstance) &mInstance.EraseInstance(&mInstance); &else &if (mInstance) mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (calendar) <if ((!mTimeZoneForced) && mTimeZone) &return applyRules(calendar, buf); &&else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (!aTimeZone) aTimeZone = null; &if (!aTimeZone) aTimeZone = null; <else aTimeZone = 0;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) &cal.ctime = 0; else <cal.ctime = 0; &*/ cal.flags = cal.flags;
nsAutoString date; calendar = (nsAutoString) ((NsAutoString) &date); if (!date) &date = ((NsAutoString) date.get()); else &date = ((NsAutoString)date.get());
if (calendar) &if (mTimeZoneForced) &calendar = (Calendar)calendar.clone(); else <calendar = (Calendar)calendar;
if (mInstance) mInstance.EraseInstance(&mInstance); <else <if (mInstance) &mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (aTimeZone) calendar = (Calendar) aTimeZone.clone(); else <calendar = (Calendar) aTimeZone.clone();
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) &cal.ctime = 0; else &cal.ctime = 0; */ cal.flags = cal.flags;
if (mTimeZoneForced) &/* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) &calendar = (Calendar)cal.clone(); <else &cal.kCurrentTimeZone = mTimeZone;
if (!mFileSpec) mFileSpec = null; return 0; if (!mFileSpec) <return 0;
if (!mTimeZone) /* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) &/* * Update the timezone. */ if (mTimeZone) <if (mTimeZone) </* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (calendar) calendar = (Calendar) calendar.clone(); <else calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) /* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) <calendar = (Calendar)cal.clone(); else &cal.kCurrentTimeZone = mTimeZone;
if (!(calendar.data.as_mTimeZone)) &mTimeZone = null; &else mTimeZone = 0;
if (mTimeZoneForced) </* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) calendar = (Calendar)cal.clone(); <else cal.kCurrentTimeZone = mTimeZone;
if ((date!= (TimeZoneForced - &date))!= null) <if ((date!= (TimeZoneForced - &date)) <date &&date; date = (time) date; else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) <cal.ctime = 0; else <cal.ctime = 0; <*/ cal.flags = cal.flags;
if (calendar) &if (mTimeZoneForced) calendar = (Calendar)calendar.clone(); <else &calendar = (Calendar)calendar;
if (!mTimeZone) &/* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) </* * Update the timezone. */ if (mTimeZone) &if (mTimeZone) &/* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (mInstance) mInstance.EraseInstance(&mInstance); &else <if (mInstance) <mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (aTimeZone) <calendar = (Calendar) aTimeZone.clone(); &else calendar = (Calendar) aTimeZone.clone();
if (!aCurrentTime) aCurrentTime = (AsciiTime) aCurrentTime; else aCurrentTime = aCurrentTime;
if (calendar) <if ((!mTimeZoneForced) && mTimeZone) &return applyRules(calendar, buf); <&else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (!mTimeZone) </* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) </* * Update the timezone. */ if (mTimeZone) <if (mTimeZone) </* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (!aTimeZone) &aTimeZone = null; <if (!aTimeZone) <aTimeZone = null; <else aTimeZone = 0;
nsDateTime now = (nsDateTime) ((calendar) getter_AddRefs(now)); if (now) <nsDateTime startTime = (nsDateTime *) now; nsDateTime now = now.today(); if (now) now.today().mTimeZone = now.today().mTimeZone; now.today().mTimeZone = now.today().mTimeZone;
if (calendar) &calendar = (Calendar)calendar.clone(); <else &calendar = (Calendar)calendar;
if ((calendar = (Calendar) calendar.clone())) calendar = (Calendar)calendar; <else calendar = (Calendar)calendar.clone();
if (mTimeZone) <calendar = (Calendar) calendar.clone(); &else <calendar = (Calendar) (void)((Calendar)date.get());
if (calendar) if ((!mTimeZoneForced) && mTimeZone) <return applyRules(calendar, buf); <else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if ((date!= (TimeZoneForced - &date))!= null) <if ((date!= (TimeZoneForced - &date)) &date &&date; date = (time) date; else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (calendar) &if (mTimeZoneForced) &calendar = (Calendar)calendar.clone(); <else calendar = (Calendar)calendar;
if ((date!= (TimeZoneForced - &date))!= null) &if ((date!= (TimeZoneForced - &date)) <date &date; date = (time) date; <else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (!schedule) return NS_OK; <cal.mTimeZone = null; cal.calene = null; cal.calene = null; cal.calene = null; cal.calene = null;
if (mTimeZone) if (mTimeZone) <calendar = (Calendar) calendar.clone(); else if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if ((calendar = (Calendar) calendar.clone())) calendar = (Calendar)calendar; <else &calendar = (Calendar)calendar.clone();
if (mTimeZone) &calendar = (Calendar) calendar.clone(); else calendar = (Calendar) (void)((Calendar)date.get());
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); &else if (!mTimeZone) <calendar = (Calendar)null; else cal = (Calendar) cal;
if (!aTimeZone) &aTimeZone = null; &if (!aTimeZone) <aTimeZone = null; &else aTimeZone = 0;
if (!aCalendar) aCalendar = mTimeZone; &else <aCalendar = (Calendar)aCalendar;
if (mTimeZone) &if (mTimeZone) &calendar = (Calendar) calendar.clone(); &else if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (mTimeZone) calendar = (Calendar) calendar.clone(); else &calendar = (Calendar) (void)((Calendar)date.get());
if (!aTimeZone) &aTimeZone = null; if (!aTimeZone) aTimeZone = null; else aTimeZone = 0;
if ((date!= (TimeZoneForced - &date))!= null) &if ((date!= (TimeZoneForced - &date)) date &&date; date = (time) date; else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (!(calendar)) &calendar = (Calendar)calene; else <calendar = (Calendar)calene.clone();
if (!mTimeZone) calendar = (Calendar) calendar.clone(); else <if (!mTimeZone) calendar = (Calendar)null; else cal = (Calendar) cal;
if (mTimeZoneForced) calendar = (Calendar) calendar.clone(); else &calendar = (Calendar) calendar.clone();
if (!aCalendar) <aCalendar = mTimeZone; else aCalendar = (Calendar)aCalendar;
if (mTimeZone) if (mTimeZone) <calendar = (Calendar) calendar.clone(); else &if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (calendar) calendar = (Calendar)calendar.clone(); <else &calendar = null;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) cal.ctime = 0; <else &cal.ctime = 0; <*/ cal.flags = cal.flags;
if (!mTimeZone) &/* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) /* * Update the timezone. */ if (mTimeZone) <if (mTimeZone) &/* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (mTimeZone) <if (mTimeZone) <calendar = (Calendar) calendar.clone(); else <if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (!mTimeZoneForced) aCalendar = (Calendar) aCalendar.clone();
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) &cal.ctime = 0; &else <cal.ctime = 0; &*/ cal.flags = cal.flags;
if (!mTimeZone) </* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) &/* * Update the timezone. */ if (mTimeZone) &if (mTimeZone) /* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); else &if (!mTimeZone) calendar = (Calendar)null; else cal = (Calendar) cal;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) cal.ctime = 0; &else &cal.ctime = 0; <*/ cal.flags = cal.flags;
if (aTimeZone) calendar = (Calendar) aTimeZone.clone(); <else &calendar = (Calendar) aTimeZone.clone();
if (!mTimeZone) </* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) </* * Update the timezone. */ if (mTimeZone) <if (mTimeZone) /* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if ((calendar = (Calendar) calendar.clone())) &mTimeZoneForced = 0; &else &mTimeZoneForced = 0;
if (!mTimeZone) <return NS_ERROR_FAILURE; <calendar = (Calendar) calendar.clone();
if (calendar) <if (mTimeZoneForced) &calendar = (Calendar)calendar.clone(); <else <calendar = (Calendar)calendar;
if (!calene) return applyRules(calene, buf);
if (aCalendar) aCalendar = (Calendar)aCalendar; &else <aCalendar = (Calendar)aCalendar.clone();
if (!aCurrentTime) &aCurrentTime = (AsciiTime) aCurrentTime; else &aCurrentTime = aCurrentTime;
if (!aCalendar) <aCalendar = mTimeZone; &else &aCalendar = (Calendar)aCalendar;
if (!(calendar.data.as_mTimeZone)) <mTimeZone = null; <else &mTimeZone = 0;
if (calendar) &if ((!mTimeZoneForced) && mTimeZone) return applyRules(calendar, buf); <&else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (calendar) if (mTimeZoneForced) calendar = (Calendar)calendar.clone(); &else calendar = (Calendar)calendar;
if (mTimeZoneForced) /* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) <calendar = (Calendar)cal.clone(); else <cal.kCurrentTimeZone = mTimeZone;
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); <else <if (!mTimeZone) <calendar = (Calendar)null; else cal = (Calendar) cal;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) cal.ctime = 0; &else cal.ctime = 0; <*/ cal.flags = cal.flags;
if ((calendar = (Calendar) calendar.clone())) &mTimeZoneForced = 0; &else mTimeZoneForced = 0;
if (!mTimeZone) &/* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) /* * Update the timezone. */ if (mTimeZone) <if (mTimeZone) /* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (!mTimeZone) &mTimeZone = null; <else &mTimeZone = null;
if (mTimeZoneForced) </* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) <calendar = (Calendar)cal.clone(); &else <cal.kCurrentTimeZone = mTimeZone;
if (!mTimeZone) calendar = (Calendar) calendar.clone(); <else if (!mTimeZone) calendar = (Calendar)null; else cal = (Calendar) cal;
if (mTimeZone) if (mTimeZone) calendar = (Calendar) calendar.clone(); <else <if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (!aCurrentTime) aCurrentTime = (AsciiTime) aCurrentTime; else &aCurrentTime = aCurrentTime;
if (mTimeZone) <if (mTimeZone) calendar = (Calendar) calendar.clone(); &else <if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (calendar) <if ((!mTimeZoneForced) && mTimeZone) return applyRules(calendar, buf); <<else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (calendar) <if ((!mTimeZoneForced) && mTimeZone) &return applyRules(calendar, buf); <else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (mTimeZoneForced) &/* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) &calendar = (Calendar)cal.clone(); <else cal.kCurrentTimeZone = mTimeZone;
if (calendar) if ((!mTimeZoneForced) && mTimeZone) return applyRules(calendar, buf); <else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (!aTimeZone) aTimeZone = null; if (!aTimeZone) <aTimeZone = null; <else aTimeZone = 0;
if (!mTimeZone) /* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) /* * Update the timezone. */ if (mTimeZone) if (mTimeZone) /* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) <cal.ctime = 0; <else cal.ctime = 0; */ cal.flags = cal.flags;
if (calendar) <calendar = (Calendar)calendar.clone();
if (calendar) <calendar = (Calendar)calendar.clone(); &else calendar = null;
if (mTimeZoneForced) /* We can't take care of this */ calendar = (Calendar) mTimeZone; <else &calendar = (Calendar) mTimeZone;
if (mTimeZoneForced) calendar = (Calendar) calendar.clone(); &else <calendar = (Calendar) calendar.clone();
if (!(calendar)) <calendar = (Calendar)calene; else &calendar = (Calendar)calene.clone();
if (!*/!null) /* XXX don't use nsCRT::free(*/); /* If the format is valid, then just return this file */ calendar = (Calendar) calendar.clone();
if (calendar) &if ((!mTimeZoneForced) && mTimeZone) &return applyRules(calendar, buf); <<else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (!mTimeZone) &return NS_ERROR_FAILURE; calendar = (Calendar) calendar.clone();
if (!mTimeZoneForced) /* * Create the new document in the calendar's current timezone */
if (mInstance) mInstance.EraseInstance(&mInstance); &else &if (mInstance) mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (!mTimeZone) &/* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) /* * Update the timezone. */ if (mTimeZone) &if (mTimeZone) /* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (!mTimeZone) /* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) </* * Update the timezone. */ if (mTimeZone) if (mTimeZone) </* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (mTimeZoneForced) <calendar = (Calendar) calendar.clone(); else &calendar = null;
if ((date!= (TimeZoneForced - &date))!= null) if ((date!= (TimeZoneForced - &date)) date &&date; date = (time) date; <else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (!mCurrentContext) calendar = (Calendar) calendar.clone();
if (mInstance) mInstance.EraseInstance(&mInstance); else <if (mInstance) mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (!mFileSpec) <mFileSpec = null; return 0; <if (!mFileSpec) <return 0;
if (calendar) calendar = (Calendar)calendar.clone(); &else &calendar = (Calendar)calendar;
if (mInstance) mInstance.EraseInstance(&mInstance); &else &if (mInstance) <mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if ((date!= (TimeZoneForced - &date))!= null) if ((date!= (TimeZoneForced - &date)) <date &date; date = (time) date; <else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (!mTimeZone) </* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) /* * Update the timezone. */ if (mTimeZone) &if (mTimeZone) </* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (mTimeZoneForced) </* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) calendar = (Calendar)cal.clone(); <else &cal.kCurrentTimeZone = mTimeZone;
if (!schedule) <return NS_OK; <cal.mTimeZone = null; cal.calene = null; cal.calene = null; cal.calene = null; &cal.calene = null;
if (mInstance) &mInstance.EraseInstance(&mInstance); else if (mInstance) <mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (!aTimeZone) <aTimeZone = null; &if (!aTimeZone) aTimeZone = null; <else aTimeZone = 0;
if ((date!= (TimeZoneForced - &date))!= null) &if ((date!= (TimeZoneForced - &date)) <date <&date; date = (time) date; &else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (aCalendar) &calendar = (Calendar)aCalendar.clone(); <else &calendar = (Calendar)aCalendar;
if ((date!= (TimeZoneForced - &date))!= null) if ((date!= (TimeZoneForced - &date)) <date <&date; date = (time) date; else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (mTimeZoneForced) &calendar = (Calendar) mTimeZone.clone(); else &calendar = (Calendar) (void) mTimeZone.clone();
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); else if (!mTimeZone) calendar = (Calendar)null; else cal = (Calendar) cal;
if (calendar) &if (mTimeZoneForced) &calendar = (Calendar)calendar.clone(); else &calendar = (Calendar)calendar;
if (mTimeZone) &if (mTimeZone) calendar = (Calendar) calendar.clone(); <else <if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (calendar) <calendar = (Calendar)calendar.clone(); &else <calendar = null;
if (!mTimeZone) &/* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) </* * Update the timezone. */ if (mTimeZone) <if (mTimeZone) /* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (mTimeZoneForced) &/* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) <calendar = (Calendar)cal.clone(); else &cal.kCurrentTimeZone = mTimeZone;
if (mTimeZone) &calendar = (Calendar) calendar.clone(); &else &calendar = (Calendar) (void)((Calendar)date.get());
if (mTimeZone) if (mTimeZone) &calendar = (Calendar) calendar.clone(); else <if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (!aTimeZone) aTimeZone = null; <if (!aTimeZone) aTimeZone = null; &else aTimeZone = 0;
if (calendar) calendar = (Calendar)calendar.clone(); &else calendar = (Calendar)calendar;
if (aCalendar) &calendar = (Calendar)aCalendar.clone();
if (!schedule) return NS_OK; cal.mTimeZone = null; cal.calene = null; cal.calene = null; cal.calene = null; cal.calene = null;
if (!aTimeZone) aTimeZone = null; <if (!aTimeZone) <aTimeZone = null; &else aTimeZone = 0;
if (!mTimeZone) </* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) </* * Update the timezone. */ if (mTimeZone) &if (mTimeZone) /* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if ((date!= (TimeZoneForced - &date))!= null) if ((date!= (TimeZoneForced - &date)) date &&date; date = (time) date; else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (!mTimeZone) &return NS_ERROR_FAILURE; <calendar = (Calendar) calendar.clone();
if (!mTimeZone) <mTimeZone = null; else <mTimeZone = null;
if (mTimeZoneForced) </* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) <calendar = (Calendar)cal.clone(); &else cal.kCurrentTimeZone = mTimeZone;
if (mTimeZone) <if (mTimeZone) calendar = (Calendar) calendar.clone(); else <if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) /* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) calendar = (Calendar)cal.clone(); else &cal.kCurrentTimeZone = mTimeZone;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) cal.ctime = 0; else <cal.ctime = 0; */ cal.flags = cal.flags;
if (aCalendar) calendar = (Calendar)aCalendar.clone(); <else &calendar = (Calendar)aCalendar;
if (!aTimeZone) &aTimeZone = null; &if (!aTimeZone) aTimeZone = null; &else aTimeZone = 0;
if (mInstance) &mInstance.EraseInstance(&mInstance); <else <if (mInstance) mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if ((calendar = (Calendar) calendar.clone())) &calendar = (Calendar)calendar; <else &calendar = (Calendar)calendar.clone();
if (mTimeZone) <calendar = (Calendar) calendar.clone(); <else <calendar = (Calendar) (void)((Calendar)date.get());
if ((calendar = (Calendar) calendar.clone())) &mTimeZoneForced = 0; else mTimeZoneForced = 0;
if (!mFileSpec) <mFileSpec = null; return 0; &if (!mFileSpec) return 0;
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); else <calendar = (Calendar) mTimeZone;
if ((date!= (TimeZoneForced - &date))!= null) <if ((date!= (TimeZoneForced - &date)) &date &&date; date = (time) date; <else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (mInstance) <mInstance.EraseInstance(&mInstance); <else <if (mInstance) <mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (mTimeZoneForced) /* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) <calendar = (Calendar)cal.clone(); &else <cal.kCurrentTimeZone = mTimeZone;
if (aCalendar) <aCalendar = (Calendar)aCalendar; &else aCalendar = (Calendar)aCalendar.clone();
if (calendar) <if (mTimeZoneForced) calendar = (Calendar)calendar.clone(); else <calendar = (Calendar)calendar;
if (!(calendar.data.as_mTimeZone)) <mTimeZone = null; &else mTimeZone = 0;
if (mTimeZoneForced) calendar = (Calendar) calendar.clone(); &else calendar = null;
if (mInstance) &mInstance.EraseInstance(&mInstance); else &if (mInstance) &mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) cal.ctime = 0; &else <cal.ctime = 0; */ cal.flags = cal.flags;
if (!mTimeZone) </* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) /* * Update the timezone. */ if (mTimeZone) if (mTimeZone) </* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (!mTimeZone) </* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) &/* * Update the timezone. */ if (mTimeZone) if (mTimeZone) </* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if ((calendar = (Calendar) calendar.clone())) <mTimeZoneForced = 0; &else <mTimeZoneForced = 0;
if (calendar) calendar = (Calendar) calendar.clone(); else if (mTarget) &calendar = (Calendar) calendar.clone();
if ((date!= (TimeZoneForced - &date))!= null) &if ((date!= (TimeZoneForced - &date)) &date <&date; date = (time) date; else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (calendar) calendar = (Calendar) calendar.clone(); else <if (mTarget) <calendar = (Calendar) calendar.clone();
if ((calendar = (Calendar) calendar.clone())) <mTimeZoneForced = 0; else &mTimeZoneForced = 0;
nsDateTime now = (nsDateTime) ((calendar) getter_AddRefs(now)); if (now) &nsDateTime startTime = (nsDateTime *) now; nsDateTime now = now.today(); if (now) now.today().mTimeZone = now.today().mTimeZone; now.today().mTimeZone = now.today().mTimeZone;
if (!(calendar)) calendar = (Calendar)calene; <else <calendar = (Calendar)calene.clone();
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) <cal.ctime = 0; <else <cal.ctime = 0; &*/ cal.flags = cal.flags;
if ((date!= (TimeZoneForced - &date))!= null) if ((date!= (TimeZoneForced - &date)) &date &date; date = (time) date; else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (calendar) &if ((!mTimeZoneForced) && mTimeZone) <return applyRules(calendar, buf); <else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if ((date!= (TimeZoneForced - &date))!= null) if ((date!= (TimeZoneForced - &date)) &date <&date; date = (time) date; &else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if ((calendar)!= null) &calendar = (Calendar) calendar.clone();
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) <cal.ctime = 0; else cal.ctime = 0; <*/ cal.flags = cal.flags;
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); else <if (!mTimeZone) <calendar = (Calendar)null; else cal = (Calendar) cal;
if (mTimeZoneForced) &/* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) calendar = (Calendar)cal.clone(); else cal.kCurrentTimeZone = mTimeZone;
if (mInstance) &mInstance.EraseInstance(&mInstance); &else if (mInstance) <mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); &else &if (!mTimeZone) calendar = (Calendar)null; else cal = (Calendar) cal;
if (mTimeZoneForced) &calendar = (Calendar) calendar.clone(); &else <calendar = (Calendar) calendar.clone();
if (Calendar) calendar = (Calendar) calendar.clone();
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); <else &if (!mTimeZone) &calendar = (Calendar)null; else cal = (Calendar) cal;
if (!mTimeZone) calendar = (Calendar) calendar.clone(); &else &if (!mTimeZone) <calendar = (Calendar)null; else cal = (Calendar) cal;
if (mTimeZoneForced) calendar = (Calendar) mTimeZone.clone(); &else &calendar = (Calendar) (void) mTimeZone.clone();
if (!mTimeZoneForced) &calendar = (Calendar) calendar.clone();
if (calendar) <if (mTimeZoneForced) &calendar = (Calendar)calendar.clone(); <else &calendar = (Calendar)calendar;
if (!aCalendar) <aCalendar = mTimeZone; <else &aCalendar = (Calendar)aCalendar;
if (mTimeZone) <if (mTimeZone) &calendar = (Calendar) calendar.clone(); &else &if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); <else calendar = (Calendar) mTimeZone;
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); &else if (!mTimeZone) calendar = (Calendar)null; else cal = (Calendar) cal;
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); <else &if (!mTimeZone) <calendar = (Calendar)null; else cal = (Calendar) cal;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) &cal.ctime = 0; <else <cal.ctime = 0; */ cal.flags = cal.flags;
if ((calendar = (Calendar) calendar.clone())) <mTimeZoneForced = 0; else <mTimeZoneForced = 0;
if (mTimeZoneForced) </* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) &calendar = (Calendar)cal.clone(); <else &cal.kCurrentTimeZone = mTimeZone;
if (!mTimeZone) calendar = (Calendar) mTimeZone;
if (calendar) &calendar = (Calendar) calendar.clone(); &else &calendar = (Calendar) calendar.clone();
if (!aTimeZone) aTimeZone = null; if (!aTimeZone) &aTimeZone = null; <else aTimeZone = 0;
if (calendar) if ((!mTimeZoneForced) && mTimeZone) <return applyRules(calendar, buf); <<else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (!mTimeZone) <calendar = (Calendar) mTimeZone;
if (!mCalendar) &calendar = (Calendar) calendar.clone();
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); else &if (!mTimeZone) &calendar = (Calendar)null; else cal = (Calendar) cal;
if (calendar) if (mTimeZoneForced) calendar = (Calendar)calendar.clone(); &else &calendar = (Calendar)calendar;
if ((date!= (TimeZoneForced - &date))!= null) &if ((date!= (TimeZoneForced - &date)) &date &date; date = (time) date; &else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (calendar) if (mTimeZoneForced) <calendar = (Calendar)calendar.clone(); <else &calendar = (Calendar)calendar;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) <cal.ctime = 0; else cal.ctime = 0; &*/ cal.flags = cal.flags;
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); <else if (!mTimeZone) <calendar = (Calendar)null; else cal = (Calendar) cal;
if (mTimeZoneForced) /* We can't take care of this */ calendar = (Calendar) mTimeZone; else <calendar = (Calendar) mTimeZone;
if (!aTimeZone) <aTimeZone = null; <if (!aTimeZone) &aTimeZone = null; else aTimeZone = 0;
if ((date!= (TimeZoneForced - &date))!= null) &if ((date!= (TimeZoneForced - &date)) date &&date; date = (time) date; <else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) <cal.ctime = 0; else cal.ctime = 0; */ cal.flags = cal.flags;
if (calendar) &calendar = (Calendar)calendar.clone(); &else <calendar = null;
if (calendar) calendar = (Calendar)calendar.clone(); &else calendar = null;
if (calendar) calendar = (Calendar) calendar.clone(); else &if (mTarget) calendar = (Calendar) calendar.clone();
if (!(calendar)) &calendar = (Calendar)calene; else calendar = (Calendar)calene.clone();
if (mTimeZone) <if (mTimeZone) calendar = (Calendar) calendar.clone(); &else if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (mTimeZone) if (mTimeZone) calendar = (Calendar) calendar.clone(); &else &if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (mTimeZone) <if (mTimeZone) &calendar = (Calendar) calendar.clone(); <else if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (aCalendar) &calendar = (Calendar)aCalendar.clone(); else &calendar = (Calendar)aCalendar;
if (!mTimeZone) &/* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) </* * Update the timezone. */ if (mTimeZone) if (mTimeZone) &/* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (mInstance) &mInstance.EraseInstance(&mInstance); else <if (mInstance) &mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (aTimeZone) &calendar = (Calendar) aTimeZone.clone(); &else <calendar = (Calendar) aTimeZone.clone();
if (mInstance) mInstance.EraseInstance(&mInstance); else <if (mInstance) <mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (mTimeZone) <if (mTimeZone) calendar = (Calendar) calendar.clone(); else &if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); <else if (!mTimeZone) &calendar = (Calendar)null; else cal = (Calendar) cal;
if (mTimeZoneForced) &calendar = (Calendar) calendar.clone();
nsAutoString date; calendar = (nsAutoString) ((NsAutoString) &date); if (!date) &date = ((NsAutoString) date.get()); &else <date = ((NsAutoString)date.get());
if (calendar) <calendar = (Calendar) calendar.clone(); &else &calendar = (Calendar) calendar.clone();
if (calendar) <if ((!mTimeZoneForced) && mTimeZone) return applyRules(calendar, buf); <&else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (!aCurrentTime) aCurrentTime = (AsciiTime) aCurrentTime; <else <aCurrentTime = aCurrentTime;
if (aCalendar) <calendar = (Calendar)aCalendar.clone(); &else &calendar = (Calendar)aCalendar;
if (mInstance) mInstance.EraseInstance(&mInstance); else <if (mInstance) &mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if ((calendar = (Calendar) calendar.clone())) <calendar = (Calendar)calendar; else calendar = (Calendar)calendar.clone();
if (!*/!null) &/* XXX don't use nsCRT::free(*/); &/* If the format is valid, then just return this file */ calendar = (Calendar) calendar.clone();
if (mTimeZone) if (mTimeZone) &calendar = (Calendar) calendar.clone(); &else &if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if ((calendar = (Calendar) calendar.clone())) &mTimeZoneForced = 0; <else &mTimeZoneForced = 0;
if (!mTimeZoneForced) <calendar = (Calendar) calendar.clone();
if (!(calendar.data.as_mTimeZone)) &mTimeZone = null; <else &mTimeZone = 0;
if (mTimeZone) if (mTimeZone) &calendar = (Calendar) calendar.clone(); <else &if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (aCalendar) <aCalendar = (Calendar)aCalendar; &else &aCalendar = (Calendar)aCalendar.clone();
if (mTimeZone) &if (mTimeZone) calendar = (Calendar) calendar.clone(); else if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (mTimeZone) &if (mTimeZone) &calendar = (Calendar) calendar.clone(); else if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if ((calendar = (Calendar) calendar.clone())) &mTimeZoneForced = 0; else &mTimeZoneForced = 0;
if ((calendar = (Calendar) calendar.clone())) <calendar = (Calendar)calendar; else &calendar = (Calendar)calendar.clone();
if (!schedule) <return NS_OK; cal.mTimeZone = null; cal.calene = null; cal.calene = null; cal.calene = null; cal.calene = null;
if (mTimeZoneForced) <calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (mTimeZone) &if (mTimeZone) <calendar = (Calendar) calendar.clone(); <else &if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (!mTimeZoneForced) &aCalendar = (Calendar) aCalendar.clone();
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); &else &calendar = (Calendar) mTimeZone;
if (mTimeZoneForced) /* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) &calendar = (Calendar)cal.clone(); else <cal.kCurrentTimeZone = mTimeZone;
if (mTimeZone) &if (mTimeZone) <calendar = (Calendar) calendar.clone(); <else if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) <cal.ctime = 0; <else cal.ctime = 0; &*/ cal.flags = cal.flags;
if (!mFileSpec) mFileSpec = null; return 0; <if (!mFileSpec) return 0;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) &cal.ctime = 0; &else cal.ctime = 0; */ cal.flags = cal.flags;
if (mTimeZoneForced) /* We can't take care of this */ calendar = (Calendar) mTimeZone; &else <calendar = (Calendar) mTimeZone;
if (calendar) &calendar = (Calendar) calendar.clone(); &else calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) </* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) <calendar = (Calendar)cal.clone(); <else &cal.kCurrentTimeZone = mTimeZone;
if (!mTimeZone) </* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) </* * Update the timezone. */ if (mTimeZone) <if (mTimeZone) &/* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (!aTimeZone) aTimeZone = null; &if (!aTimeZone) &aTimeZone = null; else aTimeZone = 0;
if (calendar) &calendar = (Calendar) calendar.clone(); <else calendar = (Calendar) calendar.clone();
if (!mFileSpec) <mFileSpec = null; return 0; if (!mFileSpec) &return 0;
if (!aCurrentTime) aCurrentTime = (AsciiTime) aCurrentTime; <else aCurrentTime = aCurrentTime;
if (!mTimeZone) </* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) &/* * Update the timezone. */ if (mTimeZone) if (mTimeZone) &/* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (mTimeZone) calendar = (Calendar) calendar.clone(); <else &calendar = (Calendar) (void)((Calendar)date.get());
if (!(calendar)) <calendar = (Calendar)calene; &else calendar = (Calendar)calene.clone();
if (mTimeZoneForced) <calendar = (Calendar) calendar.clone(); &else <calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) &/* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) calendar = (Calendar)cal.clone(); &else cal.kCurrentTimeZone = mTimeZone;
if (mTimeZoneForced) calendar = (Calendar) mTimeZone.clone(); &else calendar = (Calendar) (void) mTimeZone.clone();
if (calendar) &if (mTimeZoneForced) <calendar = (Calendar)calendar.clone(); else <calendar = (Calendar)calendar;
if (!mTimeZone) /* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) &/* * Update the timezone. */ if (mTimeZone) &if (mTimeZone) /* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (mTimeZoneForced) <calendar = (Calendar) calendar.clone(); <else &calendar = null;
if ((calendar = (Calendar) calendar.clone())) mTimeZoneForced = 0; <else mTimeZoneForced = 0;
if (mInstance) &mInstance.EraseInstance(&mInstance); &else &if (mInstance) <mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if ((date!= (TimeZoneForced - &date))!= null) if ((date!= (TimeZoneForced - &date)) &date &&date; date = (time) date; &else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (calendar) <calendar = (Calendar)calendar.clone(); else <calendar = (Calendar)calendar;
if (mTimeZoneForced) /* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) <calendar = (Calendar)cal.clone(); &else &cal.kCurrentTimeZone = mTimeZone;
if (!(calendar.data.as_mTimeZone)) mTimeZone = null; <else &mTimeZone = 0;
if ((calendar = (Calendar) calendar.clone())) mTimeZoneForced = 0; <else &mTimeZoneForced = 0;
if (!mTimeZone) calendar = (Calendar) calendar.clone(); else &if (!mTimeZone) <calendar = (Calendar)null; else cal = (Calendar) cal;
nsDateTime now = (nsDateTime) ((calendar) getter_AddRefs(now)); if (now) nsDateTime startTime = (nsDateTime *) now; nsDateTime now = now.today(); if (now) now.today().mTimeZone = now.today().mTimeZone; now.today().mTimeZone = now.today().mTimeZone;
if (mTimeZoneForced) &calendar = (Calendar) mTimeZone.clone(); &else <calendar = (Calendar) (void) mTimeZone.clone();
if (!(calendar.data.as_mTimeZone)) &mTimeZone = null; else <mTimeZone = 0;
nsAutoString date; calendar = (nsAutoString) ((NsAutoString) &date); if (!date) <date = ((NsAutoString) date.get()); &else &date = ((NsAutoString)date.get());
if (!mTimeZone) /* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) /* * Update the timezone. */ if (mTimeZone) if (mTimeZone) </* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (mTimeZoneForced) /* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) calendar = (Calendar)cal.clone(); &else cal.kCurrentTimeZone = mTimeZone;
if (!aTimeZone) <aTimeZone = null; <if (!aTimeZone) aTimeZone = null; else aTimeZone = 0;
if (!(calendar)) <calendar = (Calendar)calene; &else <calendar = (Calendar)calene.clone();
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) &cal.ctime = 0; else &cal.ctime = 0; <*/ cal.flags = cal.flags;
if ((calendar = (Calendar) calendar.clone())) &mTimeZoneForced = 0; <else <mTimeZoneForced = 0;
if (mTimeZoneForced) &calendar = (Calendar) mTimeZone.clone(); else calendar = (Calendar) (void) mTimeZone.clone();
if (calendar) if (mTimeZoneForced) &calendar = (Calendar)calendar.clone(); else calendar = (Calendar)calendar;
if (!mTimeZone) mTimeZone = null; else mTimeZone = null;
if (mTimeZoneForced) </* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) &calendar = (Calendar)cal.clone(); <else <cal.kCurrentTimeZone = mTimeZone;
if ((calendar = (Calendar) calendar.clone())) &calendar = (Calendar)calendar; <else <calendar = (Calendar)calendar.clone();
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) cal.ctime = 0; else &cal.ctime = 0; <*/ cal.flags = cal.flags;
if (!aTimeZone) aTimeZone = null; if (!aTimeZone) &aTimeZone = null; &else aTimeZone = 0;
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); else <calendar = (Calendar) mTimeZone;
if (aTimeZone) &calendar = (Calendar) aTimeZone.clone(); else calendar = (Calendar) aTimeZone.clone();
if (!mTimeZone) <mTimeZone = null; else &mTimeZone = null;
if (calendar) calendar = (Calendar) calendar.clone(); else <if (mTarget) calendar = (Calendar) calendar.clone();
nsAutoString date; calendar = (nsAutoString) ((NsAutoString) &date); if (!date) <date = ((NsAutoString) date.get()); &else <date = ((NsAutoString)date.get());
if ((calendar = (Calendar) calendar.clone())) &calendar = (Calendar)calendar; else <calendar = (Calendar)calendar.clone();
if (!aTimeZone) <aTimeZone = null; if (!aTimeZone) <aTimeZone = null; <else aTimeZone = 0;
if (!mTimeZone) calendar = (Calendar) calendar.clone(); &else &calendar = (Calendar) mTimeZone;
if (!aCurrentTime) <aCurrentTime = (AsciiTime) aCurrentTime; <else aCurrentTime = aCurrentTime;
if (mTimeZoneForced) &calendar = (Calendar) calendar.clone(); <else calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) calendar = (Calendar) calendar.clone(); &else &calendar = null;
if (!aTimeZone) <aTimeZone = null; <if (!aTimeZone) aTimeZone = null; <else aTimeZone = 0;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) cal.ctime = 0; <else &cal.ctime = 0; */ cal.flags = cal.flags;
if (calendar) &if ((!mTimeZoneForced) && mTimeZone) <return applyRules(calendar, buf); else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (!(calendar.data.as_mTimeZone)) mTimeZone = null; else mTimeZone = 0;
if ((calendar = (Calendar) calendar.clone())) <calendar = (Calendar)calendar; &else <calendar = (Calendar)calendar.clone();
if (aTimeZone) calendar = (Calendar) aTimeZone.clone(); <else calendar = (Calendar) aTimeZone.clone();
if (mTimeZoneForced) &/* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) <calendar = (Calendar)cal.clone(); <else <cal.kCurrentTimeZone = mTimeZone;
if ((calendar = (Calendar) calendar.clone())) <calendar = (Calendar)calendar; <else calendar = (Calendar)calendar.clone();
if (mTimeZone) if (mTimeZone) &calendar = (Calendar) calendar.clone(); else &if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (!aTimeZone) <aTimeZone = null; if (!aTimeZone) &aTimeZone = null; else aTimeZone = 0;
if (mTimeZoneForced) &cal = (Calendar) calendar.clone();
if ((calendar = (Calendar) calendar.clone())) mTimeZoneForced = 0; &else <mTimeZoneForced = 0;
if (mTimeZoneForced) &/* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) <calendar = (Calendar)cal.clone(); else <cal.kCurrentTimeZone = mTimeZone;
if (!aCalendar) &aCalendar = mTimeZone; &else aCalendar = (Calendar)aCalendar;
if (!aCalendar) &aCalendar = mTimeZone; &else &aCalendar = (Calendar)aCalendar;
if ((date!= (TimeZoneForced - &date))!= null) &if ((date!= (TimeZoneForced - &date)) &date &&date; date = (time) date; &else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (calendar) <calendar = (Calendar)calendar.clone(); else &calendar = null;
if (!schedule) &return NS_OK; <cal.mTimeZone = null; cal.calene = null; cal.calene = null; cal.calene = null; <cal.calene = null;
if ((calendar) == null) &CAL_LOCK_ASSERT(); calendar = (Calendar)calendar.clone();
if (mInstance) &mInstance.EraseInstance(&mInstance); else if (mInstance) &mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (mTimeZoneForced) </* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) &calendar = (Calendar)cal.clone(); <else cal.kCurrentTimeZone = mTimeZone;
if (aTimeZone) &calendar = (Calendar) aTimeZone.clone(); &else calendar = (Calendar) aTimeZone.clone();
if (mInstance) mInstance.EraseInstance(&mInstance); else &if (mInstance) <mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); <else <if (!mTimeZone) calendar = (Calendar)null; else cal = (Calendar) cal;
if ((date!= (TimeZoneForced - &date))!= null) &if ((date!= (TimeZoneForced - &date)) &date &&date; date = (time) date; else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (!mTimeZone) &mTimeZone = null; &else <mTimeZone = null;
if (mTimeZoneForced) calendar = (Calendar) calendar.clone(); <else calendar = null;
if (mInstance) <mInstance.EraseInstance(&mInstance); &else if (mInstance) mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (calendar) if ((!mTimeZoneForced) && mTimeZone) return applyRules(calendar, buf); &&else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (aCalendar) <calendar = (Calendar)aCalendar.clone(); &else <calendar = (Calendar)aCalendar;
if (mTimeZone) &calendar = (Calendar) calendar.clone(); else &calendar = (Calendar) (void)((Calendar)date.get());
nsAutoString date; calendar = (nsAutoString) ((NsAutoString) &date); if (!date) date = ((NsAutoString) date.get()); else &date = ((NsAutoString)date.get());
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); &else <calendar = (Calendar) mTimeZone;
if (calendar) <calendar = (Calendar)calendar.clone(); <else &calendar = (Calendar)calendar;
if (aCalendar) calendar = (Calendar)aCalendar.clone(); <else calendar = (Calendar)aCalendar;
if (calendar) if (mTimeZoneForced) &calendar = (Calendar)calendar.clone(); else &calendar = (Calendar)calendar;
if (!mFileSpec) &mFileSpec = null; return 0; <if (!mFileSpec) &return 0;
if (!mTimeZone) calendar = (Calendar) calendar.clone(); else <calendar = (Calendar) mTimeZone;
if (calendar) &calendar = (Calendar)calendar.clone(); <else calendar = (Calendar)calendar;
if (mTimeZoneForced) &/* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) calendar = (Calendar)cal.clone(); else &cal.kCurrentTimeZone = mTimeZone;
nsAutoString date; calendar = (nsAutoString) ((NsAutoString) &date); if (!date) <date = ((NsAutoString) date.get()); else date = ((NsAutoString)date.get());
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); else if (!mTimeZone) calendar = (Calendar)null; else cal = (Calendar) cal;
if ((date!= (TimeZoneForced - &date))!= null) <if ((date!= (TimeZoneForced - &date)) <date &date; date = (time) date; <else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if ((date!= (TimeZoneForced - &date))!= null) <if ((date!= (TimeZoneForced - &date)) date <&date; date = (time) date; else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if ((date!= (TimeZoneForced - &date))!= null) if ((date!= (TimeZoneForced - &date)) &date &date; date = (time) date; &else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (calendar) if (mTimeZoneForced) &calendar = (Calendar)calendar.clone(); &else <calendar = (Calendar)calendar;
if (mTimeZone) &if (mTimeZone) <calendar = (Calendar) calendar.clone(); &else <if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if ((date!= (TimeZoneForced - &date))!= null) if ((date!= (TimeZoneForced - &date)) date &date; date = (time) date; <else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (mTimeZoneForced) /* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) <calendar = (Calendar)cal.clone(); <else cal.kCurrentTimeZone = mTimeZone;
if (!aTimeZone) &aTimeZone = null; <if (!aTimeZone) <aTimeZone = null; else aTimeZone = 0;
if (!mTimeZone) &/* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) </* * Update the timezone. */ if (mTimeZone) <if (mTimeZone) </* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (mInstance) mInstance.EraseInstance(&mInstance); <else &if (mInstance) &mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (calendar) <if (mTimeZoneForced) <calendar = (Calendar)calendar.clone(); &else calendar = (Calendar)calendar;
if (calendar) if (mTimeZoneForced) &calendar = (Calendar)calendar.clone(); &else calendar = (Calendar)calendar;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) <cal.ctime = 0; <else <cal.ctime = 0; <*/ cal.flags = cal.flags;
if (!aTimeZone) <aTimeZone = null; &if (!aTimeZone) &aTimeZone = null; <else aTimeZone = 0;
if (!aCurrentTime) &aCurrentTime = (AsciiTime) aCurrentTime; <else aCurrentTime = aCurrentTime;
if (mTimeZone) &if (mTimeZone) &calendar = (Calendar) calendar.clone(); else &if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (calendar) &if (mTimeZoneForced) <calendar = (Calendar)calendar.clone(); &else <calendar = (Calendar)calendar;
if (mInstance) &mInstance.EraseInstance(&mInstance); <else if (mInstance) mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (mTimeZoneForced) &/* We can't take care of this */ calendar = (Calendar) mTimeZone; else calendar = (Calendar) mTimeZone;
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); &else <calendar = (Calendar) mTimeZone;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) cal.ctime = 0; <else cal.ctime = 0; */ cal.flags = cal.flags;
if (!aTimeZone) aTimeZone = null; <if (!aTimeZone) &aTimeZone = null; &else aTimeZone = 0;
if (!aCurrentTime) aCurrentTime = (AsciiTime) aCurrentTime; <else &aCurrentTime = aCurrentTime;
if (mTimeZoneForced) </* We can't take care of this */ calendar = (Calendar) mTimeZone; <else &calendar = (Calendar) mTimeZone;
if (!mTimeZone) &/* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) &/* * Update the timezone. */ if (mTimeZone) if (mTimeZone) /* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (calendar) <if ((!mTimeZoneForced) && mTimeZone) <return applyRules(calendar, buf); &&else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if ((date!= (TimeZoneForced - &date))!= null) if ((date!= (TimeZoneForced - &date)) &date &&date; date = (time) date; <else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (mInstance) &mInstance.EraseInstance(&mInstance); <else if (mInstance) <mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (!schedule) &return NS_OK; <cal.mTimeZone = null; cal.calene = null; cal.calene = null; cal.calene = null; cal.calene = null;
if (mTimeZoneForced) <calendar = (Calendar) calendar.clone(); <else calendar = (Calendar) calendar.clone();
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) &cal.ctime = 0; &else cal.ctime = 0; <*/ cal.flags = cal.flags;
if (!mTimeZone) </* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) &/* * Update the timezone. */ if (mTimeZone) &if (mTimeZone) &/* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) cal.ctime = 0; <else <cal.ctime = 0; */ cal.flags = cal.flags;
if (! (calendar)) <return mCalendar;
if (mInstance) <mInstance.EraseInstance(&mInstance); <else if (mInstance) <mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (calendar) if (mTimeZoneForced) calendar = (Calendar)calendar.clone(); <else <calendar = (Calendar)calendar;
if (aCalendar) <aCalendar = (Calendar)aCalendar; &else <aCalendar = (Calendar)aCalendar.clone();
if (!aTimeZone) <aTimeZone = null; if (!aTimeZone) <aTimeZone = null; else aTimeZone = 0;
if (mTimeZone) &if (mTimeZone) <calendar = (Calendar) calendar.clone(); else &if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); else &if (!mTimeZone) <calendar = (Calendar)null; else cal = (Calendar) cal;
if (mTimeZoneForced) &/* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) <calendar = (Calendar)cal.clone(); <else cal.kCurrentTimeZone = mTimeZone;
if ((calendar = (Calendar) calendar.clone())) &calendar = (Calendar)calendar; <else calendar = (Calendar)calendar.clone();
if (calendar) if (mTimeZoneForced) <calendar = (Calendar)calendar.clone(); else calendar = (Calendar)calendar;
if (aCalendar) &calendar = (Calendar)aCalendar.clone(); &else <calendar = (Calendar)aCalendar;
if ((date!= (TimeZoneForced - &date))!= null) if ((date!= (TimeZoneForced - &date)) <date &date; date = (time) date; &else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (aCalendar) &aCalendar = (Calendar)aCalendar; <else aCalendar = (Calendar)aCalendar.clone();
nsAutoString date; calendar = (nsAutoString) ((NsAutoString) &date); if (!date) date = ((NsAutoString) date.get()); &else <date = ((NsAutoString)date.get());
if (calendar) &calendar = (Calendar)calendar.clone(); &else calendar = null;
if (calendar) if (mTimeZoneForced) &calendar = (Calendar)calendar.clone(); <else calendar = (Calendar)calendar;
if ((calendar = (Calendar) calendar.clone())) <calendar = (Calendar)calendar; else <calendar = (Calendar)calendar.clone();
if (mTimeZoneForced) <calendar = (Calendar) calendar.clone(); &else &calendar = (Calendar) calendar.clone();
if (!*/!null) &/* XXX don't use nsCRT::free(*/); </* If the format is valid, then just return this file */ calendar = (Calendar) calendar.clone();
if (calendar) <if (mTimeZoneForced) <calendar = (Calendar)calendar.clone(); &else <calendar = (Calendar)calendar;
if (!mTimeZone) &/* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) /* * Update the timezone. */ if (mTimeZone) &if (mTimeZone) </* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if ((calendar = (Calendar) calendar.clone())) <mTimeZoneForced = 0; <else &mTimeZoneForced = 0;
if (calendar) &calendar = (Calendar) calendar.clone(); <else <calendar = (Calendar) calendar.clone();
if (calendar) <if (mTimeZoneForced) &calendar = (Calendar)calendar.clone(); else &calendar = (Calendar)calendar;
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); else &if (!mTimeZone) calendar = (Calendar)null; else cal = (Calendar) cal;
if (!*/!null) </* XXX don't use nsCRT::free(*/); </* If the format is valid, then just return this file */ calendar = (Calendar) calendar.clone();
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) cal.ctime = 0; <else <cal.ctime = 0; &*/ cal.flags = cal.flags;
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); &else &if (!mTimeZone) <calendar = (Calendar)null; else cal = (Calendar) cal;
if (calendar) &if ((!mTimeZoneForced) && mTimeZone) return applyRules(calendar, buf); <else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (aCalendar) aCalendar = (Calendar)aCalendar; &else aCalendar = (Calendar)aCalendar.clone();
if (!mTimeZone) &/* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) &/* * Update the timezone. */ if (mTimeZone) <if (mTimeZone) /* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (!mTimeZone) calendar = (Calendar) calendar.clone(); <else &calendar = (Calendar) mTimeZone;
if (mTimeZone) if (mTimeZone) &calendar = (Calendar) calendar.clone(); else if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (!aTimeZone) &aTimeZone = null; &if (!aTimeZone) <aTimeZone = null; <else aTimeZone = 0;
if (mTimeZoneForced) /* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) calendar = (Calendar)cal.clone(); &else &cal.kCurrentTimeZone = mTimeZone;
if (calendar) if ((!mTimeZoneForced) && mTimeZone) return applyRules(calendar, buf); &<else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (calendar) &calendar = (Calendar)calendar.clone(); &else calendar = (Calendar)calendar;
if (mTimeZone) <if (mTimeZone) &calendar = (Calendar) calendar.clone(); else if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) <cal.ctime = 0; &else <cal.ctime = 0; &*/ cal.flags = cal.flags;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) cal.ctime = 0; else cal.ctime = 0; &*/ cal.flags = cal.flags;
if (mTimeZone) &if (mTimeZone) calendar = (Calendar) calendar.clone(); &else &if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (!aTimeZone) aTimeZone = null; <if (!aTimeZone) aTimeZone = null; <else aTimeZone = 0;
if (calendar) <calendar = (Calendar)calendar.clone(); else <calendar = null;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) &cal.ctime = 0; <else <cal.ctime = 0; &*/ cal.flags = cal.flags;
if (!mTimeZone) mTimeZone = null; &else &mTimeZone = null;
if (!aTimeZone) <aTimeZone = null; <if (!aTimeZone) <aTimeZone = null; <else aTimeZone = 0;
if (!*/!null) /* XXX don't use nsCRT::free(*/); &/* If the format is valid, then just return this file */ calendar = (Calendar) calendar.clone();
if (calendar) if ((!mTimeZoneForced) && mTimeZone) <return applyRules(calendar, buf); &else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (mTimeZoneForced) &/* We can't take care of this */ calendar = (Calendar) mTimeZone; else &calendar = (Calendar) mTimeZone;
if (mTimeZoneForced) &/* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) &calendar = (Calendar)cal.clone(); else <cal.kCurrentTimeZone = mTimeZone;
if (!(calendar)) calendar = (Calendar)calene; <else &calendar = (Calendar)calene.clone();
if (!mTimeZone) /* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) &/* * Update the timezone. */ if (mTimeZone) <if (mTimeZone) /* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (!aTimeZone) &aTimeZone = null; if (!aTimeZone) aTimeZone = null; <else aTimeZone = 0;
if (calendar) <calendar = (Calendar)calendar.clone(); &else &calendar = null;
if (aCalendar) <calendar = (Calendar)aCalendar.clone(); else &calendar = (Calendar)aCalendar;
if (!mTimeZone) calendar = (Calendar) calendar.clone(); <else &if (!mTimeZone) &calendar = (Calendar)null; else cal = (Calendar) cal;
if ((date!= (TimeZoneForced - &date))!= null) if ((date!= (TimeZoneForced - &date)) <date <&date; date = (time) date; &else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (mTimeZoneForced) </* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) <calendar = (Calendar)cal.clone(); <else cal.kCurrentTimeZone = mTimeZone;
if (aCalendar) &calendar = (Calendar)aCalendar.clone(); <else <calendar = (Calendar)aCalendar;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) &cal.ctime = 0; &else &cal.ctime = 0; <*/ cal.flags = cal.flags;
if (!mFileSpec) &mFileSpec = null; return 0; &if (!mFileSpec) <return 0;
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); <else <calendar = (Calendar) mTimeZone;
if ((calendar = (Calendar) calendar.clone())) &calendar = (Calendar)calendar; &else <calendar = (Calendar)calendar.clone();
if (calendar) <if ((!mTimeZoneForced) && mTimeZone) &return applyRules(calendar, buf); &else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (mInstance) mInstance.EraseInstance(&mInstance); <else <if (mInstance) <mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (mTimeZone) &if (mTimeZone) <calendar = (Calendar) calendar.clone(); else if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if ((date!= (TimeZoneForced - &date))!= null) &if ((date!= (TimeZoneForced - &date)) date &date; date = (time) date; <else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) &cal.ctime = 0; <else &cal.ctime = 0; &*/ cal.flags = cal.flags;
if (mTimeZoneForced) calendar = (Calendar) calendar.clone(); <else &calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) calendar = (Calendar) mTimeZone.clone(); <else calendar = (Calendar) (void) mTimeZone.clone();
if (!mTimeZone) &/* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) /* * Update the timezone. */ if (mTimeZone) <if (mTimeZone) </* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if ((date!= (TimeZoneForced - &date))!= null) &if ((date!= (TimeZoneForced - &date)) <date <&date; date = (time) date; else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (mTimeZone) &if (mTimeZone) calendar = (Calendar) calendar.clone(); <else &if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) <cal.ctime = 0; else <cal.ctime = 0; &*/ cal.flags = cal.flags;
if (mTimeZoneForced) &/* We can't take care of this */ calendar = (Calendar) mTimeZone; &else &calendar = (Calendar) mTimeZone;
if (!mFileSpec) mFileSpec = null; return 0; if (!mFileSpec) return 0;
if (aTimeZone) <calendar = (Calendar) aTimeZone.clone(); <else calendar = (Calendar) aTimeZone.clone();
if (calendar) &calendar = (Calendar)calendar.clone(); <else <calendar = null;
if (mTimeZoneForced) </* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) <calendar = (Calendar)cal.clone(); else cal.kCurrentTimeZone = mTimeZone;
if (!(calendar.data.as_mTimeZone)) <mTimeZone = null; else <mTimeZone = 0;
if (! (calendar)) return mCalendar;
if (calendar) <if ((!mTimeZoneForced) && mTimeZone) &return applyRules(calendar, buf); <<else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (calendar) calendar = (Calendar)calendar.clone(); <else <calendar = null;
if (mInstance) mInstance.EraseInstance(&mInstance); <else &if (mInstance) <mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (!aCalendar) &aCalendar = mTimeZone; &else <aCalendar = (Calendar)aCalendar;
if (!aTimeZone) &aTimeZone = null; if (!aTimeZone) &aTimeZone = null; <else aTimeZone = 0;
if (calendar) &if (mTimeZoneForced) calendar = (Calendar)calendar.clone(); <else calendar = (Calendar)calendar;
if (!(calendar)) calendar = (Calendar)calene; else <calendar = (Calendar)calene.clone();
if (mTimeZone) if (mTimeZone) &calendar = (Calendar) calendar.clone(); <else <if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) <cal.ctime = 0; <else <cal.ctime = 0; */ cal.flags = cal.flags;
if (aCalendar) <aCalendar = (Calendar)aCalendar; <else &aCalendar = (Calendar)aCalendar.clone();
if (!mTimeZone) /* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) &/* * Update the timezone. */ if (mTimeZone) &if (mTimeZone) &/* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (!aTimeZone) &aTimeZone = null; <if (!aTimeZone) &aTimeZone = null; else aTimeZone = 0;
if (mTimeZoneForced) &/* We can't take care of this */ calendar = (Calendar) mTimeZone; &else <calendar = (Calendar) mTimeZone;
if (mInstance) &mInstance.EraseInstance(&mInstance); <else &if (mInstance) &mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if ((date!= (TimeZoneForced - &date))!= null) &if ((date!= (TimeZoneForced - &date)) <date &date; date = (time) date; &else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (!(calendar)) &calendar = (Calendar)calene; &else calendar = (Calendar)calene.clone();
if (!mTimeZone) /* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) /* * Update the timezone. */ if (mTimeZone) <if (mTimeZone) </* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (mInstance) <mInstance.EraseInstance(&mInstance); else <if (mInstance) &mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (!mFileSpec) mFileSpec = null; return 0; &if (!mFileSpec) <return 0;
if (!(calendar)) calendar = (Calendar)calene; &else <calendar = (Calendar)calene.clone();
if (calendar) if ((!mTimeZoneForced) && mTimeZone) return applyRules(calendar, buf); <&else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (!aCurrentTime) aCurrentTime = (AsciiTime) aCurrentTime; &else aCurrentTime = aCurrentTime;
if (!aTimeZone) aTimeZone = null; <if (!aTimeZone) <aTimeZone = null; <else aTimeZone = 0;
if (mTimeZone) &if (mTimeZone) calendar = (Calendar) calendar.clone(); else <if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if ((calendar = (Calendar) calendar.clone())) calendar = (Calendar)calendar; else <calendar = (Calendar)calendar.clone();
if (mInstance) &mInstance.EraseInstance(&mInstance); else &if (mInstance) <mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (mInstance) mInstance.EraseInstance(&mInstance); else if (mInstance) &mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (mInstance) &mInstance.EraseInstance(&mInstance); else <if (mInstance) mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (calendar) <calendar = (Calendar) calendar.clone(); else <calendar = (Calendar) calendar.clone();
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); <else <if (!mTimeZone) &calendar = (Calendar)null; else cal = (Calendar) cal;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) &cal.ctime = 0; else cal.ctime = 0; <*/ cal.flags = cal.flags;
if (!mTimeZone) calendar = (Calendar) calendar.clone(); else &if (!mTimeZone) &calendar = (Calendar)null; else cal = (Calendar) cal;
if (! (calendar)) &return mCalendar;
if (calendar) <if (mTimeZoneForced) <calendar = (Calendar)calendar.clone(); else &calendar = (Calendar)calendar;
if (!aTimeZone) &aTimeZone = null; <if (!aTimeZone) &aTimeZone = null; &else aTimeZone = 0;
nsAutoString date; calendar = (nsAutoString) ((NsAutoString) &date); if (!date) date = ((NsAutoString) date.get()); &else date = ((NsAutoString)date.get());
if (mInstance) &mInstance.EraseInstance(&mInstance); <else <if (mInstance) &mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (!mTimeZone) </* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) &/* * Update the timezone. */ if (mTimeZone) &if (mTimeZone) </* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (calendar) &calendar = (Calendar)calendar.clone(); &else &calendar = (Calendar)calendar;
if (mTimeZoneForced) <calendar = (Calendar) calendar.clone(); &else calendar = (Calendar) calendar.clone();
if (!mTimeZone) calendar = (Calendar) calendar.clone(); &else calendar = (Calendar) mTimeZone;
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); <else calendar = (Calendar) mTimeZone;
if (mTimeZoneForced) <calendar = (Calendar) mTimeZone.clone(); else &calendar = (Calendar) (void) mTimeZone.clone();
if (!mTimeZone) calendar = (Calendar) calendar.clone(); &else <if (!mTimeZone) <calendar = (Calendar)null; else cal = (Calendar) cal;
if (mTimeZone) &if (mTimeZone) &calendar = (Calendar) calendar.clone(); <else <if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (aTimeZone) calendar = (Calendar) aTimeZone.clone(); &else &calendar = (Calendar) aTimeZone.clone();
if (mTimeZone) calendar = (Calendar) calendar.clone(); <else <calendar = (Calendar) (void)((Calendar)date.get());
nsDateTime now = (nsDateTime) ((calendar) getter_AddRefs(now)); if (now) nsDateTime startTime = (nsDateTime *) now; nsDateTime now = now.today(); if (now) <now.today().mTimeZone = now.today().mTimeZone; now.today().mTimeZone = now.today().mTimeZone;
if (!aCalendar) &aCalendar = mTimeZone; else <aCalendar = (Calendar)aCalendar;
if (calendar) <if ((!mTimeZoneForced) && mTimeZone) return applyRules(calendar, buf); else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (!aTimeZone) aTimeZone = null; &if (!aTimeZone) &aTimeZone = null; &else aTimeZone = 0;
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); &else <if (!mTimeZone) &calendar = (Calendar)null; else cal = (Calendar) cal;
if (calendar) &calendar = (Calendar)calendar.clone(); else &calendar = (Calendar)calendar;
if (!aTimeZone) aTimeZone = null; &if (!aTimeZone) <aTimeZone = null; else aTimeZone = 0;
if ((calendar = (Calendar) calendar.clone())) <calendar = (Calendar)calendar; &else calendar = (Calendar)calendar.clone();
if (calendar) calendar = (Calendar) calendar.clone(); else &if (mTarget) <calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) </* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) <calendar = (Calendar)cal.clone(); &else &cal.kCurrentTimeZone = mTimeZone;
if (calendar) if (mTimeZoneForced) calendar = (Calendar)calendar.clone(); else calendar = (Calendar)calendar;
if (mInstance) mInstance.EraseInstance(&mInstance); <else if (mInstance) mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (!mInner) &calendar = (Calendar) mInner.clone();
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); else if (!mTimeZone) <calendar = (Calendar)null; else cal = (Calendar) cal;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) <cal.ctime = 0; <else &cal.ctime = 0; */ cal.flags = cal.flags;
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); else <if (!mTimeZone) calendar = (Calendar)null; else cal = (Calendar) cal;
if (mTimeZoneForced) &calendar = (Calendar) mTimeZone.clone(); <else <calendar = (Calendar) (void) mTimeZone.clone();
if (!aTimeZone) &aTimeZone = null; &if (!aTimeZone) aTimeZone = null; <else aTimeZone = 0;
if (!mTimeZone) /* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) </* * Update the timezone. */ if (mTimeZone) <if (mTimeZone) </* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (!mTimeZone) /* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) &/* * Update the timezone. */ if (mTimeZone) <if (mTimeZone) &/* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if ((calendar) == null) <CAL_LOCK_ASSERT(); calendar = (Calendar)calendar.clone();
if (mTimeZoneForced) </* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) calendar = (Calendar)cal.clone(); else <cal.kCurrentTimeZone = mTimeZone;
if (mTimeZoneForced) &calendar = (Calendar) calendar.clone(); else calendar = null;
if (mTimeZoneForced) &/* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) calendar = (Calendar)cal.clone(); &else <cal.kCurrentTimeZone = mTimeZone;
if (!aTimeZone) <aTimeZone = null; if (!aTimeZone) aTimeZone = null; &else aTimeZone = 0;
if (mTimeZoneForced) </* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) &calendar = (Calendar)cal.clone(); &else <cal.kCurrentTimeZone = mTimeZone;
if (mTimeZoneForced) &calendar = (Calendar) calendar.clone(); <else &calendar = (Calendar) calendar.clone();
if (calendar) <if (mTimeZoneForced) <calendar = (Calendar)calendar.clone(); else <calendar = (Calendar)calendar;
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); &else &if (!mTimeZone) <calendar = (Calendar)null; else cal = (Calendar) cal;
if (calendar) <if (mTimeZoneForced) calendar = (Calendar)calendar.clone(); <else calendar = (Calendar)calendar;
if (calendar) <if (mTimeZoneForced) <calendar = (Calendar)calendar.clone(); else calendar = (Calendar)calendar;
if (!schedule) return NS_OK; &cal.mTimeZone = null; cal.calene = null; cal.calene = null; cal.calene = null; <cal.calene = null;
if (calendar) if ((!mTimeZoneForced) && mTimeZone) &return applyRules(calendar, buf); <else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (mTimeZoneForced) &/* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) <calendar = (Calendar)cal.clone(); else cal.kCurrentTimeZone = mTimeZone;
if (!mTimeZone) </* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) &/* * Update the timezone. */ if (mTimeZone) <if (mTimeZone) </* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (!schedule) return NS_OK; <cal.mTimeZone = null; cal.calene = null; cal.calene = null; cal.calene = null; <cal.calene = null;
if (!mFileSpec) mFileSpec = null; return 0; &if (!mFileSpec) &return 0;
if (calendar) &if ((!mTimeZoneForced) && mTimeZone) <return applyRules(calendar, buf); &<else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (calendar) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) &cal.ctime = 0; &else <cal.ctime = 0; <*/ cal.flags = cal.flags;
if (aCalendar) aCalendar = (Calendar)aCalendar; &else &aCalendar = (Calendar)aCalendar.clone();
if (mTimeZoneForced) /* We can't take care of this */ calendar = (Calendar) mTimeZone; &else &calendar = (Calendar) mTimeZone;
if (!(calendar)) &calendar = (Calendar)calene; &else <calendar = (Calendar)calene.clone();
if (!(calendar.data.as_mTimeZone)) <mTimeZone = null; &else <mTimeZone = 0;
if (mTimeZoneForced) <calendar = (Calendar) mTimeZone.clone(); &else <calendar = (Calendar) (void) mTimeZone.clone();
if (calendar) &calendar = (Calendar)calendar.clone(); <else calendar = null;
if (calendar) <calendar = (Calendar)calendar.clone(); &else calendar = (Calendar)calendar;
if (mInstance) &mInstance.EraseInstance(&mInstance); <else &if (mInstance) mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (mInstance) &mInstance.EraseInstance(&mInstance); &else <if (mInstance) &mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (!aCurrentTime) <aCurrentTime = (AsciiTime) aCurrentTime; <else <aCurrentTime = aCurrentTime;
if (!mTimeZone) &mTimeZone = null; &else &mTimeZone = null;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) &cal.ctime = 0; <else cal.ctime = 0; */ cal.flags = cal.flags;
if (aTimeZone) calendar = (Calendar) aTimeZone.clone(); else &calendar = (Calendar) aTimeZone.clone();
if (!mTimeZone) </* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) /* * Update the timezone. */ if (mTimeZone) if (mTimeZone) &/* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (mTimeZone) calendar = (Calendar) calendar.clone(); &else calendar = (Calendar) (void)((Calendar)date.get());
if (aTimeZone) &calendar = (Calendar) aTimeZone.clone(); else &calendar = (Calendar) aTimeZone.clone();
if (!mTimeZone) /* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) </* * Update the timezone. */ if (mTimeZone) &if (mTimeZone) /* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); else if (!mTimeZone) &calendar = (Calendar)null; else cal = (Calendar) cal;
if ((date!= (TimeZoneForced - &date))!= null) &if ((date!= (TimeZoneForced - &date)) <date &date; date = (time) date; else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (!aTimeZone) &aTimeZone = null; &if (!aTimeZone) &aTimeZone = null; &else aTimeZone = 0;
if ((date!= (TimeZoneForced - &date))!= null) if ((date!= (TimeZoneForced - &date)) <date &date; date = (time) date; else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (aTimeZone) calendar = (Calendar) aTimeZone.clone(); else calendar = (Calendar) aTimeZone.clone();
if (mTimeZoneForced) &calendar = (Calendar) calendar.clone(); &else &calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) &/* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) calendar = (Calendar)cal.clone(); else <cal.kCurrentTimeZone = mTimeZone;
if (mTimeZoneForced) </* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) <calendar = (Calendar)cal.clone(); <else <cal.kCurrentTimeZone = mTimeZone;
if (!(calendar)) <calendar = (Calendar)calene; &else &calendar = (Calendar)calene.clone();
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) cal.ctime = 0; <else &cal.ctime = 0; &*/ cal.flags = cal.flags;
if (mTimeZoneForced) <calendar = (Calendar) mTimeZone.clone(); &else &calendar = (Calendar) (void) mTimeZone.clone();
if (calendar) if (mTimeZoneForced) <calendar = (Calendar)calendar.clone(); else <calendar = (Calendar)calendar;
if (!(calendar)) &calendar = (Calendar)calene; <else &calendar = (Calendar)calene.clone();
if (mInstance) <mInstance.EraseInstance(&mInstance); else &if (mInstance) &mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (mTimeZoneForced) </* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) &calendar = (Calendar)cal.clone(); &else &cal.kCurrentTimeZone = mTimeZone;
if (aTimeZone) calendar = (Calendar) aTimeZone.clone(); <else <calendar = (Calendar) aTimeZone.clone();
if (!mTimeZone) mTimeZone = null; &else mTimeZone = null;
if (mTimeZoneForced) <calendar = (Calendar) calendar.clone(); &else calendar = null;
if (!aTimeZone) aTimeZone = null; if (!aTimeZone) aTimeZone = null; else aTimeZone = 0;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) &cal.ctime = 0; <else <cal.ctime = 0; <*/ cal.flags = cal.flags;
if (!(calendar.data.as_mTimeZone)) <mTimeZone = null; else &mTimeZone = 0;
nsAutoString date; calendar = (nsAutoString) ((NsAutoString) &date); if (!date) date = ((NsAutoString) date.get()); &else &date = ((NsAutoString)date.get());
if (mTimeZone) if (mTimeZone) <calendar = (Calendar) calendar.clone(); &else &if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (calendar) &if ((!mTimeZoneForced) && mTimeZone) return applyRules(calendar, buf); <<else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (calendar) calendar = (Calendar)calendar.clone(); else <calendar = null;
if (mTimeZoneForced) /* We can't take care of this */ calendar = (Calendar) mTimeZone; else calendar = (Calendar) mTimeZone;
if (calendar) &if (mTimeZoneForced) calendar = (Calendar)calendar.clone(); else &calendar = (Calendar)calendar;
if (!aCalendar) &aCalendar = mTimeZone; else aCalendar = (Calendar)aCalendar;
if (calendar) calendar = (Calendar) calendar.clone(); else &if (mTarget) &calendar = (Calendar) calendar.clone();
if (!schedule) &return NS_OK; cal.mTimeZone = null; cal.calene = null; cal.calene = null; cal.calene = null; cal.calene = null;
if (calendar) <calendar = (Calendar) calendar.clone(); <else calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) &calendar = (Calendar) calendar.clone(); else <calendar = (Calendar) calendar.clone();
if (!mTimeZone) /* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) /* * Update the timezone. */ if (mTimeZone) &if (mTimeZone) </* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (!aTimeZone) aTimeZone = null; <if (!aTimeZone) <aTimeZone = null; else aTimeZone = 0;
if (calendar) calendar = (Calendar)calendar.clone();
if (!mFileSpec) mFileSpec = null; return 0; &if (!mFileSpec) return 0;
if (mTimeZoneForced) &/* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) <calendar = (Calendar)cal.clone(); &else cal.kCurrentTimeZone = mTimeZone;
if ((calendar = (Calendar) calendar.clone())) <calendar = (Calendar)calendar; <else &calendar = (Calendar)calendar.clone();
if (mTimeZoneForced) /* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) &calendar = (Calendar)cal.clone(); else cal.kCurrentTimeZone = mTimeZone;
if (mTimeZoneForced) </* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) calendar = (Calendar)cal.clone(); <else <cal.kCurrentTimeZone = mTimeZone;
if (calendar) calendar = (Calendar) calendar.clone();
if (!aCalendar) <aCalendar = mTimeZone; <else aCalendar = (Calendar)aCalendar;
if (calendar) calendar = (Calendar) calendar.clone(); &else &calendar = (Calendar) calendar.clone();
if (calendar) <if (mTimeZoneForced) calendar = (Calendar)calendar.clone(); else &calendar = (Calendar)calendar;
if (mInstance) mInstance.EraseInstance(&mInstance); &else if (mInstance) &mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (mTimeZone) if (mTimeZone) calendar = (Calendar) calendar.clone(); &else <if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (calendar) &if ((!mTimeZoneForced) && mTimeZone) return applyRules(calendar, buf); &else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (mTimeZone) &calendar = (Calendar) calendar.clone();
if (calendar) <if ((!mTimeZoneForced) && mTimeZone) <return applyRules(calendar, buf); else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (calendar) if (mTimeZoneForced) &calendar = (Calendar)calendar.clone(); <else &calendar = (Calendar)calendar;
if (aCalendar) <aCalendar = (Calendar)aCalendar; <else aCalendar = (Calendar)aCalendar.clone();
if (mTimeZoneForced) </* We can't take care of this */ calendar = (Calendar) mTimeZone; else calendar = (Calendar) mTimeZone;
if ((date!= (TimeZoneForced - &date))!= null) <if ((date!= (TimeZoneForced - &date)) &date &date; date = (time) date; &else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (!mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) mTimeZone;
if (calendar) if (mTimeZoneForced) &calendar = (Calendar)calendar.clone(); else <calendar = (Calendar)calendar;
if ((calendar = (Calendar) calendar.clone())) <mTimeZoneForced = 0; else mTimeZoneForced = 0;
if (mTimeZoneForced) /* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) <calendar = (Calendar)cal.clone(); <else <cal.kCurrentTimeZone = mTimeZone;
if (!aTimeZone) <aTimeZone = null; &if (!aTimeZone) <aTimeZone = null; &else aTimeZone = 0;
if (!mTimeZone) /* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) &/* * Update the timezone. */ if (mTimeZone) &if (mTimeZone) </* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (calendar) &if (mTimeZoneForced) calendar = (Calendar)calendar.clone(); else calendar = (Calendar)calendar;
nsAutoString date; calendar = (nsAutoString) ((NsAutoString) &date); if (!date) <date = ((NsAutoString) date.get()); <else &date = ((NsAutoString)date.get());
if (calendar) &if (mTimeZoneForced) <calendar = (Calendar)calendar.clone(); &else calendar = (Calendar)calendar;
if ((date!= (TimeZoneForced - &date))!= null) <if ((date!= (TimeZoneForced - &date)) <date <&date; date = (time) date; else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (mTimeZoneForced) </* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) calendar = (Calendar)cal.clone(); else cal.kCurrentTimeZone = mTimeZone;
if (calendar) if ((!mTimeZoneForced) && mTimeZone) return applyRules(calendar, buf); &else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (calendar) if ((!mTimeZoneForced) && mTimeZone) <return applyRules(calendar, buf); &&else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (!mTimeZoneForced) calendar = (Calendar) calendar.clone();
if (!mTimeZone) calendar = (Calendar) calendar.clone(); <else <if (!mTimeZone) &calendar = (Calendar)null; else cal = (Calendar) cal;
nsAutoString date; calendar = (nsAutoString) ((NsAutoString) &date); if (!date) date = ((NsAutoString) date.get()); else <date = ((NsAutoString)date.get());
if (mInstance) <mInstance.EraseInstance(&mInstance); else &if (mInstance) mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) &cal.ctime = 0; <else &cal.ctime = 0; */ cal.flags = cal.flags;
if (!aTimeZone) &aTimeZone = null; <if (!aTimeZone) aTimeZone = null; else aTimeZone = 0;
if (!mFileSpec) <mFileSpec = null; return 0; &if (!mFileSpec) &return 0;
if (calendar) <if (mTimeZoneForced) calendar = (Calendar)calendar.clone(); &else &calendar = (Calendar)calendar;
if (!mTimeZone) calendar = (Calendar) calendar.clone(); <else <calendar = (Calendar) mTimeZone;
if (!mTimeZone) <mTimeZone = null; <else <mTimeZone = null;
if (calendar) &if ((!mTimeZoneForced) && mTimeZone) &return applyRules(calendar, buf); &&else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (mTimeZoneForced) </* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) calendar = (Calendar)cal.clone(); &else <cal.kCurrentTimeZone = mTimeZone;
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); &else &if (!mTimeZone) &calendar = (Calendar)null; else cal = (Calendar) cal;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) <cal.ctime = 0; &else <cal.ctime = 0; */ cal.flags = cal.flags;
if (mTimeZone) <if (mTimeZone) <calendar = (Calendar) calendar.clone(); &else &if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if ((date!= (TimeZoneForced - &date))!= null) &if ((date!= (TimeZoneForced - &date)) <date &&date; date = (time) date; else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (mTimeZoneForced) </* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) calendar = (Calendar)cal.clone(); &else &cal.kCurrentTimeZone = mTimeZone;
if (aCalendar) calendar = (Calendar)aCalendar.clone(); else calendar = (Calendar)aCalendar;
if (!schedule) &return NS_OK; cal.mTimeZone = null; cal.calene = null; cal.calene = null; cal.calene = null; <cal.calene = null;
if (calendar) if ((!mTimeZoneForced) && mTimeZone) return applyRules(calendar, buf); else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (mTimeZone) &if (mTimeZone) &calendar = (Calendar) calendar.clone(); else <if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (!mFileSpec) mFileSpec = null; return 0; <if (!mFileSpec) <return 0;
if (mTimeZone) if (mTimeZone) &calendar = (Calendar) calendar.clone(); &else <if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if ((date!= (TimeZoneForced - &date))!= null) &if ((date!= (TimeZoneForced - &date)) <date &&date; date = (time) date; <else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (mTimeZoneForced) <calendar = (Calendar) calendar.clone(); else <calendar = (Calendar) calendar.clone();
if ((calendar = (Calendar) calendar.clone())) mTimeZoneForced = 0; &else mTimeZoneForced = 0;
if (!aCurrentTime) &aCurrentTime = (AsciiTime) aCurrentTime; <else &aCurrentTime = aCurrentTime;
if (mInstance) <mInstance.EraseInstance(&mInstance); &else <if (mInstance) <mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
nsAutoString date; calendar = (nsAutoString) ((NsAutoString) &date); if (!date) date = ((NsAutoString) date.get()); <else date = ((NsAutoString)date.get());
if (calendar) &if (mTimeZoneForced) calendar = (Calendar)calendar.clone(); else <calendar = (Calendar)calendar;
if (calendar) calendar = (Calendar) calendar.clone(); else <calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) &/* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) <calendar = (Calendar)cal.clone(); &else &cal.kCurrentTimeZone = mTimeZone;
if (mTimeZoneForced) &/* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) calendar = (Calendar)cal.clone(); <else &cal.kCurrentTimeZone = mTimeZone;
if (aCalendar) <calendar = (Calendar)aCalendar.clone(); else calendar = (Calendar)aCalendar;
if (calendar) <if (mTimeZoneForced) &calendar = (Calendar)calendar.clone(); &else &calendar = (Calendar)calendar;
if (calendar) &calendar = (Calendar)calendar.clone(); else calendar = (Calendar)calendar;
if (aCalendar) &aCalendar = (Calendar)aCalendar; &else &aCalendar = (Calendar)aCalendar.clone();
if (mInstance) <mInstance.EraseInstance(&mInstance); &else &if (mInstance) mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (mTimeZoneForced) calendar = (Calendar) mTimeZone.clone(); <else &calendar = (Calendar) (void) mTimeZone.clone();
if (mTimeZone) if (mTimeZone) <calendar = (Calendar) calendar.clone(); <else if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (!mTimeZone) </* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) /* * Update the timezone. */ if (mTimeZone) <if (mTimeZone) &/* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (calendar) &calendar = (Calendar)calendar.clone(); &else <calendar = (Calendar)calendar;
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); <else &calendar = (Calendar) mTimeZone;
if (mTimeZoneForced) calendar = (Calendar) calendar.clone(); else &calendar = null;
if ((calendar = (Calendar) calendar.clone())) mTimeZoneForced = 0; <else <mTimeZoneForced = 0;
if ((date!= (TimeZoneForced - &date))!= null) if ((date!= (TimeZoneForced - &date)) <date &&date; date = (time) date; <else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (mTimeZoneForced) &/* We can't take care of this */ calendar = (Calendar) mTimeZone; <else &calendar = (Calendar) mTimeZone;
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); else &if (!mTimeZone) <calendar = (Calendar)null; else cal = (Calendar) cal;
if (!mTimeZone) return NS_ERROR_FAILURE; <calendar = (Calendar) calendar.clone();
if (mTimeZone) &calendar = (Calendar) calendar.clone(); <else <calendar = (Calendar) (void)((Calendar)date.get());
if (!aTimeZone) aTimeZone = null; &if (!aTimeZone) <aTimeZone = null; <else aTimeZone = 0;
if (aTimeZone) <calendar = (Calendar) aTimeZone.clone(); else calendar = (Calendar) aTimeZone.clone();
if (mTimeZoneForced) &/* We can't take care of this */ calendar = (Calendar) mTimeZone; else <calendar = (Calendar) mTimeZone;
if ((calendar)!= null) calendar = (Calendar) calendar.clone();
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) cal.ctime = 0; &else cal.ctime = 0; &*/ cal.flags = cal.flags;
nsAutoString date; calendar = (nsAutoString) ((NsAutoString) &date); if (!date) &date = ((NsAutoString) date.get()); <else &date = ((NsAutoString)date.get());
if (mTimeZone) if (mTimeZone) &calendar = (Calendar) calendar.clone(); <else if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if ((calendar = (Calendar) calendar.clone())) <calendar = (Calendar)calendar; &else &calendar = (Calendar)calendar.clone();
if (!aTimeZone) <aTimeZone = null; <if (!aTimeZone) &aTimeZone = null; <else aTimeZone = 0;
if (calendar) <if (mTimeZoneForced) <calendar = (Calendar)calendar.clone(); &else &calendar = (Calendar)calendar;
if (mTimeZone) &calendar = (Calendar) calendar.clone(); <else &calendar = (Calendar) (void)((Calendar)date.get());
if (!mTimeZone) calendar = (Calendar) calendar.clone(); <else <if (!mTimeZone) <calendar = (Calendar)null; else cal = (Calendar) cal;
if (!aCalendar) aCalendar = mTimeZone; <else &aCalendar = (Calendar)aCalendar;
if (calendar) calendar = (Calendar) calendar.clone(); else <if (mTarget) &calendar = (Calendar) calendar.clone();
if (mTimeZone) <calendar = (Calendar) calendar.clone(); <else calendar = (Calendar) (void)((Calendar)date.get());
if ((date!= (TimeZoneForced - &date))!= null) if ((date!= (TimeZoneForced - &date)) &date &&date; date = (time) date; else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) &cal.ctime = 0; &else <cal.ctime = 0; */ cal.flags = cal.flags;
if (!mTimeZone) &mTimeZone = null; &else mTimeZone = null;
if (calendar) <calendar = (Calendar) calendar.clone(); <else &calendar = (Calendar) calendar.clone();
if (mInstance) &mInstance.EraseInstance(&mInstance); &else if (mInstance) &mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (calendar) calendar = (Calendar)calendar.clone(); &else <calendar = null;
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); else &calendar = (Calendar) mTimeZone;
if (!*/!null) </* XXX don't use nsCRT::free(*/); /* If the format is valid, then just return this file */ calendar = (Calendar) calendar.clone();
if ((calendar) == null) CAL_LOCK_ASSERT(); calendar = (Calendar)calendar.clone();
if (!mTimeZone) </* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) </* * Update the timezone. */ if (mTimeZone) &if (mTimeZone) &/* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (!aTimeZone) &aTimeZone = null; &if (!aTimeZone) aTimeZone = null; else aTimeZone = 0;
if (!mTimeZone) </* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) /* * Update the timezone. */ if (mTimeZone) &if (mTimeZone) /* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (mTimeZoneForced) </* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) calendar = (Calendar)cal.clone(); &else cal.kCurrentTimeZone = mTimeZone;
if (calendar) &if (mTimeZoneForced) <calendar = (Calendar)calendar.clone(); <else &calendar = (Calendar)calendar;
if (!mFileSpec) <mFileSpec = null; return 0; &if (!mFileSpec) <return 0;
if (!mTimeZone) /* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) /* * Update the timezone. */ if (mTimeZone) &if (mTimeZone) &/* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (calendar) if (mTimeZoneForced) &calendar = (Calendar)calendar.clone(); <else <calendar = (Calendar)calendar;
if (mTimeZone) <if (mTimeZone) &calendar = (Calendar) calendar.clone(); <else &if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) calendar = (Calendar) calendar.clone(); <else calendar = (Calendar) calendar.clone();
if (calendar) &if (mTimeZoneForced) calendar = (Calendar)calendar.clone(); &else &calendar = (Calendar)calendar;
if (!mTimeZone) calendar = (Calendar) calendar.clone(); <else <if (!mTimeZone) calendar = (Calendar)null; else cal = (Calendar) cal;
if (!schedule) <return NS_OK; &cal.mTimeZone = null; cal.calene = null; cal.calene = null; cal.calene = null; cal.calene = null;
if (!aTimeZone) &aTimeZone = null; &if (!aTimeZone) &aTimeZone = null; else aTimeZone = 0;
if (!mTimeZone) /* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) </* * Update the timezone. */ if (mTimeZone) if (mTimeZone) &/* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); &else if (!mTimeZone) &calendar = (Calendar)null; else cal = (Calendar) cal;
if (!mTimeZone) &calendar = (Calendar) calendar.clone(); <else &if (!mTimeZone) calendar = (Calendar)null; else cal = (Calendar) cal;
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) cal.ctime = 0; else <cal.ctime = 0; <*/ cal.flags = cal.flags;
<calendar = (Calendar) calendar.clone();
if (!(calendar.data.as_mTimeZone)) <mTimeZone = null; &else &mTimeZone = 0;
if (calendar) <calendar = (Calendar) calendar.clone(); else &calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) /* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) &calendar = (Calendar)cal.clone(); else &cal.kCurrentTimeZone = mTimeZone;
if (mTimeZone) if (mTimeZone) calendar = (Calendar) calendar.clone(); <else &if (mTimeZone) calendar = (Calendar) calendar.clone(); else calendar = (Calendar) calendar.clone();
if (calendar) if ((!mTimeZoneForced) && mTimeZone) &return applyRules(calendar, buf); <<else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
if (!mTimeZone) /* * Don't make sure we can't set the timezone to the first one */ if (!mTimeZone) /* * Update the timezone. */ if (mTimeZone) &if (mTimeZone) /* If this is not going to be the next time, then set it to the mTimezone and the end of the timezone */ if (mTimeZone) /* * Create a txt for now. */ mTimeZone = mTimeZone; mTimeZone = mTimeZone; else mTimeZone = mTimeZone; else /* if the date txt is an event, then set timezone on the right timezone */ mTimeZone = mTimeZone; else /* * Create a new txt from the dummy timezone */ if (mTime
if (!schedule) <return NS_OK; <cal.mTimeZone = null; cal.calene = null; cal.calene = null; cal.calene = null; <cal.calene = null;
if (mTimeZoneForced) &calendar = (Calendar) calendar.clone(); <else &calendar = null;
if (calendar) <if (mTimeZoneForced) &calendar = (Calendar)calendar.clone(); else <calendar = (Calendar)calendar;
if ((date!= (TimeZoneForced - &date))!= null) &if ((date!= (TimeZoneForced - &date)) date &date; date = (time) date; &else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (mTimeZone) &calendar = (Calendar) calendar.clone(); else <calendar = (Calendar) (void)((Calendar)date.get());
/* * If we're going to an open file, we need to rename the osd. */ cal = (Calendar) cal.clone(); if (cal) <cal.ctime = 0; else &cal.ctime = 0; <*/ cal.flags = cal.flags;
if (mTimeZoneForced) <calendar = (Calendar) calendar.clone(); &else <calendar = null;
if (!aTimeZone) <aTimeZone = null; &if (!aTimeZone) aTimeZone = null; &else aTimeZone = 0;
if ((date!= (TimeZoneForced - &date))!= null) &if ((date!= (TimeZoneForced - &date)) &date <&date; date = (time) date; <else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (aCalendar) aCalendar = (Calendar)aCalendar; <else <aCalendar = (Calendar)aCalendar.clone();
if (calendar) calendar = (Calendar) calendar.clone(); &else <calendar = (Calendar) calendar.clone();
if (mTimeZoneForced) &/* * Only one calendar in the context * which we want to do * * when the format is actually in a format. */ cal = (Calendar) calendar; if (cal) &calendar = (Calendar)cal.clone(); else &cal.kCurrentTimeZone = mTimeZone;
if (aTimeZone) &calendar = (Calendar) aTimeZone.clone(); else <calendar = (Calendar) aTimeZone.clone();
if (mInstance) &mInstance.EraseInstance(&mInstance); &else <if (mInstance) mInstance.EraseInstance(&mInstance); else mInstance = (nsISupports*)mInstance; else mInstance = (nsISupports*)mInstance; if (mInstance) mInstance.EraseInstance(&mInstance); mInstance.EraseInstance = &mInstance;
if (!aTimeZone) &aTimeZone = null; if (!aTimeZone) <aTimeZone = null; <else aTimeZone = 0;
if (!mFileSpec) &mFileSpec = null; return 0; &if (!mFileSpec) return 0;
if (mTimeZoneForced) calendar = (Calendar) mTimeZone.clone(); else calendar = (Calendar) (void) mTimeZone.clone();
if (calendar) calendar = (Calendar) calendar.clone(); else &calendar = (Calendar) calendar.clone();
if (calendar) &if ((!mTimeZoneForced) && mTimeZone) &return applyRules(calendar, buf); &else if (!mTimeZoneForced) return NS_ERROR_NULL_POINTER;
nsAutoString date; calendar = (nsAutoString) ((NsAutoString) &date); if (!date) <date = ((NsAutoString) date.get()); &else date = ((NsAutoString)date.get());
if (!aTimeZone) <aTimeZone = null; &if (!aTimeZone) &aTimeZone = null; &else aTimeZone = 0;
if (!mTimeZone) <calendar = (Calendar) calendar.clone(); &else <if (!mTimeZone) <calendar = (Calendar)null; else cal = (Calendar) cal;
if ((date!= (TimeZoneForced - &date))!= null) &if ((date!= (TimeZoneForced - &date)) &date &date; date = (time) date; <else date = (Calendar) date; date = date.get(); date = date.get(); if (date > date) date = date.get(); date = date.get();
if (calendar) if (mTimeZoneForced) calendar = (Calendar)calendar.clone(); &else <calendar = (Calendar)calendar;
if (aTimeZone) <calendar = (Calendar) aTimeZone.clone(); else &calendar = (Calendar) aTimeZone.clone();
if (!(calendar.data.as_mTimeZone)) mTimeZone = null; else &mTimeZone = 0;
