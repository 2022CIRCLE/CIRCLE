golden:
Node cArg = callNode.getFirstChild().getNext();
inference:
Node cArg = callNode.getFirstChild();
Node cArg = callNode.getFirstChild().getNext();
Node cArg = callNode.getFirstChild();

Node cArg = CallNode.getFirstChild().getNext();
Node cArg;
Node cArg = callNode.getFirstChild().getNext();
Node cArg = callNode.GetFirstChild();
Node cArg = cArg.getNext();
Node cArg = callNode;
Node cArg = callNode.getFirstChild().getNext();
Node cArg = node.getFirstChild().getNext();
Node cArg = callNode.GetFirstChild().getNext();
Node cArg = callNode.GetFirstChild();
CallNode cArg = callNode.getFirstChild().getNext();
cArg = callNode.getFirstChild().getNext();
cArg = callNode.getFirstChild();
Node cArg = null;
Node cArg = aNode.getFirstChild().getNext();
Node cArg = node.getFirstChild();
Node cArg = callNode.getFirstChild().GetNext();
Node cArg = NodeUtil.getFirstChild(callNode);
Node cArg = callNode.getLastChild();
Node cArg = CallQueryInterface(callNode);
Node cArg = callNode.getFirstChild().getFirst();
Node cArg = callNode.firstChild.getNext();
Node cArg = NodeUtil.getFirstChild();
Node cArg = callNode.getFirstChild(&cArg);
Node cArg = node.getFirstChild().getNext();
node cArg = callNode.getFirstChild();
Node cArg = callNode.getFirstChild().next;
Node cArg = callNode.getChildCount();
Node cArg = callNode.getFirstChild().getNext();
Node cArg = callNode.getNext();
Node cArg = 0;
Node cArg = fnNode.getFirstChild();
Node cArg = callNode.GetFirstChild().getNext();
Node cArg = cArg;
Node cArg = getFirstChild(callNode);
Node cArg = CallNode.getFirstChild();
Node cArg = parent.getFirstChild().getNext();
Node cArg = callNode.firstChild;
Node* cArg = callNode.getFirstChild().getNext();
Node cArg = callNode.firstChild;
Node cArg = &callNode.getFirstChild();
Node cArg = CallQueryInterface(callNode, &cArg);
Node cArg = cArg.getFirstChild();
Node cArg = parentNode.getFirstChild().getNext();
Node cArg = callNode.getFirstChild().GetNext();
Node cArg = cNode.getFirstChild();
NodeArg = callNode.getFirstChild();
Node cArg = callNode.getFirstChild(node);
node cArg = callNode.getFirstChild().getNext();
CallNode cArg = callNode.getFirstChild();
Node cArg = cArg.get();
Node cArg = CallQueryInterface(callNode.getFirstChild());
NodeArg = callNode.getFirstChild().getNext();
Node cArg = callnode.getFirstChild().getNext();
NodeCArg = callNode.getFirstChild().getNext();
Node cArg = callNode.getFirstChild() == 0;
Node cArg = callNode.firstChild();
Node cArg = callNode[0].getFirstChild();
Node cArg = callNode.firstChild.getNext();
Node cArg = callNode.getFirstChild(fnNode);
Node cArg = callNode.GetFirstChild().GetNext();
*cArg = callNode.getFirstChild().getNext();
Node cArg = child.getFirstChild().getNext();
Node cArg = result;
Node *cArg = callNode.getFirstChild().getNext();
Node cArg = callNode.FirstChild();
Node cArg = CallNode.getFirstChild().getNext();
Node cArg = nodeUtil.getFirstChild();
Node cArg = block.getFirstChild().getNext();
Node cArg = callNode.getFirstChild() + 1;
Node cArg = &cArg;
Node cArg = CallNode().getFirstChild().getNext();
Node cArg = prevNode.getFirstChild().getNext();
Node cArg = callNode.getFirstChild(false);
Node cArg = cNode.getFirstChild().getNext();
Node cArg = CallGetFirstChild(callNode);
Node cArg = callNode.GetFirstChild().GetNext();
NodeCArg = callNode.getFirstChild();
Node cArg = callNode.getFirstChild( );
Node cArg = cArg.getFirst();
Node cArg = callNode.get(firstChild);
CallNode cArg = CallNode.getFirstChild().getNext();
Node cArg = cArg.getFirstChild().getNext();
Node cArg = callNode.getFirstChild(&node);
Node cArg = *callNode.getFirstChild().getNext();
Node cArg = result.getFirstChild().getNext();
Node cArg = callNode.getFirstChild(*this);
Node cArg=callNode.getFirstChild().getNext();
Node cArg=callNode.getFirstChild();
Node cArg = *callNode.getFirstChild();
Node cArg = cArg.getNext();
Node& cArg = callNode.getFirstChild().getNext();
Node cArg = callNode.getFirstChild() - 1;
cArg = callNode.getFirstChild().getNext();
Node cArg = callName.getFirstChild().getNext();
Node cArg = NodeUtil.GetFirstChild(callNode);
Node cArg = cArg.GetNext();
Node cArg = aNode.getFirstChild().getNext();
Node cArg = callNode.getFirstChild(this);
Node cArg = callNode.getFirstChild().getPrev();
Node cArg = CallChildAt(callNode);
Node_cArg = callNode.getFirstChild().getNext();
Node cArg = rv;
Node aArg = callNode.getFirstChild().getNext();
Node cArg = childNode.getFirstChild().getNext();
cArg = fnNode.getFirstChild().getNext();
cArg = callNode.getFirstChild().getNext();
Node cArg = callNode.next;
Node cArg = callNode.FirstChild().getNext();
callNode.getFirstChild().getNext();
Node cArg = CallChildren.getFirstChild();
Node cArg = callnode.getFirstChild();
Node cArg = node;
Node cArg = callNode.getChildCount() - 1;
Node cArg2 = callNode.getFirstChild().getNext();
Node cArg = callNode.getFirstChild(&callNode);
Node cArg1 = callNode.getFirstChild().getNext();
*cArg = callNode.getFirstChild();
Node cArg = (Node) callNode.getFirstChild();
Node cArg = null;
Node cArg = &callNode;
Node cArg = callNode.GetFirstChild().GetNext();
Node cArg = CallNode.GetFirstChild().getNext();
Node cArg = '0';
Node cArg = callNode.getFirstChild(null);
Node cArg = callNode.GetLastChild();
Node cArg = CallUtil.getFirstChild().getNext();
Node cArg = callNode.getFirstChild(null);
Node cArg = node.getFirstChild().getNext();
Node cArg = newNode;
Node cArg = calledNode.getFirstChild().getNext();
Node cArg = GetFirstChild(callNode);
cArg = CallNode.getFirstChild().getNext();
Node cArg = CallChild(callNode);
Node cArg = callNode.firstChild();
Node result = callNode.getFirstChild();
Node cArg = cnt.getFirstChild().getNext();
Node cArg = firstChild.getNext();
Node cArg = name.getFirstChild().getNext();
Node cArg = nodeUtil.getFirstChild(callNode);
NodecArg = callNode.getFirstChild().getNext();
Node cArg = -1;
Node cArg = node.GetFirstChild().getNext();
Node cArg = nodeList.getFirstChild().getNext();
Node cArg = callNode.getFirstChild(eNode);
return CanInlineResult.NO;
Node cArg = (Node)callNode.getFirstChild();
Node *cArg = callNode.getFirstChild();
Node cArg = cnt;
NodeNode cArg = callNode.getFirstChild();
Node cArg = callNode.mFirstChild;
Node cArg = node.getFirstChild();
Node cArg = child.getFirstChild().getNext();
Node cArg = CallChildNode.getFirstChild();
Node cArg = aNode.getFirstChild();
Node cArg; cArg = callNode.getFirstChild();
cArg = callNode.getFirstChild();
CallNode cArg;
Node cArg = fnNode.firstChild.getNext();
Node cArg = callNode);
Node cArg = callNode.getFirstChild(&fnNode);
Node cArg = callNode.getfirstChild();
Node cArg = fnNode.firstChild.getNext();
Node cArg = CallNode(callNode);
Node cArg = fnNode;
Node cArg = CallNodeUtil.getFirstChild();
Node cArg = callNode.getFirstChild(true);
Node cArg = callNode.getNodeCount();
Node cArg = callNode.getFirstChild().get();
Node cArg = nsCRT::free(callNode);
Node cArg = callNode.GetFirstChild().getNext();
Node cArg = callNode.getFirstChild().mNext;
Node cArg = callNode.mFirstChild.getNext();
Node cArg = CallNode.GetFirstChild().getNext();
Node cArg = callNode.getFirstChild().next();
Node cArg = CanInlineResult.NO;
Node cArg = callNode.getFirstChild(cArg);
Node cArg = callNode[1].getFirstChild();
Node cArg = callNode[0];
Node cArg = callNode.FirstChild();
Node cArg = new Node();
Node cArg = CallUtil.getFirstChild(callNode);
Node cArg = callNode.getFirstChild()!= 0;
Node cArg = CallQueryInterface(callNode, cArg);
Node cArg = cArg.GetFirstChild();
Node cArg = *callNode;
Node cArg = NodeUtil.GetFirstChild();
Node cArg = name;
Node cArg = callNode.getFirstChild(aNode);
Node cArg(callNode);
Node cArg = parent.getFirstChild();
Node cArg = new Node;
Node cArg = callNode.getFirstChild().next;
Node cArg = NodeUtil.getFirstChild(node);
Node cArg = block.getFirstChild();
Node cArg = CallChildFunc(callNode, &cArg);
Node cArg = fnNode.getFirstChild().getNext();
Node cArg = nsCRT::strdup(callNode.getFirstChild());
Node cArg = CallNodeUtil.getFirstChild().getNext();
Node cArg = NodeUtil.getCurrentNode(callNode);
Node cArg = ioctl.CALL_NODE_PREFIX;
Node cArg = CallChildFuncs(callNode, &cArg);
Node cArg = CallOperator::CallNode(&callNode);
Node cArg = NS_STATIC_CAST(Node cArg, callNode.getFirstChild()).getNext();
Node cArg = CallChild_NODE_ASSERT(callNode);
Node cArg = nsCRT::strdup(callNode.getFirstChild().getNext());
Node cArg = CallChildFunction(callNode, &cArg);
Node cArg = &(NodeUtil.isFunctionObjectCall(callNode)) ||!cArg.isThis();
Node cArg = NodeUtil.getFirstChild(callNode).getNext();
Node cArg = ioctl(&callNode, &cArg);
Node cArg = CallChildAt(callNode.getFirstChild());
Node cArg = CallChildConstants.CALL_NODE;
Node cArg = CallBackupNode(callNode);
Node cArg = CallChildReference.getFirstChild().getNext();
Node cArg = NS_STATIC_CAST(NodeUtil.getFunctionParameters(callNode).getFirstChild()).getNext();
Node cArg = CallChildNode.getFirstChild().getNext();
Node cArg = CallAttrCall(callNode);
Node cArg = CallChildAt(callNode, getter_AddRefs(cArg));
Node cArg = CallActiveNode.getFirstChild().getNext();
Node cArg = CallChildren.getFirstChild().getNext();
Node cArg = CallGetNode(callNode);
Node cArg = ioNode.getFirstChild().getNext();
Node cArg = CallNodeCallNode.getFirstChild().getNext();
Node cArg = CallChildContentUtils.getFirstChild(callNode);
Node cArg = &callNode.getFirstChild().getNext();
Node cArg = iNodeUtil.getFirstChild().getNext();
Node cArg = CallOutReference(callNode, callNode.getFirstChild());
Node cArg = CallBackNext(callNode);
Node cArg = '<0';
Node cArg = '0';
Node cArg = '&0';
