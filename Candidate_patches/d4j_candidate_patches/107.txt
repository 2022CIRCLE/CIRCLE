golden:
return isNoType() || isNoObjectType() || isNoResolvedType();
inference:
return (isNoType() || isNoObjectType() || isNoResolvedType());
return isNoType() || isNoObjectType();
return isNoType();
return (isNoType()) || (isNoObjectType() || isNoResolvedType());
return(isNoType() || isNoObjectType() || isNoResolvedType());
return isNoType() || isNoObjectType() || isNoResolvedType();
return isEmptyType() || isNoObjectType() || isNoResolvedType();
return isNoType() || (isNoObjectType() || isNoResolvedType());
return isNoType() || isNoResolvedType();
return ( isNoType() || isNoObjectType() || isNoResolvedType());
return (isEmptyType() || isNoObjectType() || isNoResolvedType());
return (!isNoType() || isNoObjectType() || isNoResolvedType());
return isNoType() || isNoObjectType() && isNoResolvedType();
return ( isNoType() || isNoObjectType() || isNoResolvedType() );
return (isNoType() || isNoObjectType() || isNoResolvedType())
return!isNoType() || isNoObjectType() || isNoResolvedType();
return (isNoType) || (isNoObjectType() || isNoResolvedType());
return isNoType() || isNoType();
return (isNoType() || isNoObjectType());
return IsNoType() || IsNoObjectType() || IsNoResolvedType();
return (isNoType() || isNoObjectType() || isNoResolvedType();
return isNoType() || isNoObjectType() || isNoType();
return (isNoType() || (isNoObjectType() || isNoResolvedType()));
return isNoType() || isNoObjType() || isNoResolvedType();
return (IsNoType() || IsNoObjectType() || IsNoResolvedType());
return isNoType()? isNoObjectType() : isNoResolvedType();
return isNoType(); return isNoObjectType();
return (isNoType()|| isNoObjectType() || isNoResolvedType());
return ((isNoType() || isNoObjectType() || isNoResolvedType()));
return isNoType( ) || isNoObjectType( ) || isNoResolvedType( );
return isEmptyType() || isNoObjectType() || isEmptyType();
return isNoType (); || isNoObject (); || isNoResolved ();
return (isNoType() || isNoObjectType()) || (isNoResolvedType());
return isNoType(void) || isNoObjectType(void) || isNoResolvedType(void);
return isNoType() && isNoObjectType() && isNoResolvedType();
return isNoType() && isNoObjectType() || isNoResolvedType();

return isNoType(0) || isNoObject(0) || isNoResolved(0);
return isNoType() || isNoNoObjectType();
return!isNoType() ||!isNoObjectType() ||!isNoResolvedType();
return isNoType() || isNoObjectType() || isNoResolvedType() || isNoType();
return isNoType() || isNoObjectType() || isNoResolvedType() || isType();
return false;
return (isNoType()) || (isNoObjectType() && isNoResolvedType());
return isNoType() || isNoObjectType() || isNoEmptyType();
return hasNoType() || hasNoObjectType() || hasNoResolvedType();
return (isType() || isNoObjectType() || isNoResolvedType());
return (IsNoType() || isNoObjectType() || isNoResolvedType());
return (isNoType()) || (isNoObjectType()) || (isNoResolvedType());
return isNoType ();
return isNoType() || isNoResolvedType() || isEmptyType();
return (isNoType() && isNoObjectType() && isNoResolvedType());
return isNoType () || isNoObject () || isNoResolved ();
return isNoType() || isNoObjectType() || isNoResolvedType;
return isNoType() ||!isNoObjectType() ||!isNoResolvedType();
return isNoType(this) || isNoObjectType(this) || isNoResolvedType(this);
return isNoType() || isNoObjectType() ||!isNoResolvedType();
return isNoType() || isNoContentType() || isNoResolvedType();
return isNoType() || isNoObjectType() || isNoResolvedType() || isEmpty();
return (isNoType || isNoObjectType() || isNoResolvedType());
return isNoObjectType() || isNoResolvedType();
return (isNoType()) || isNoObjectType() || isNoResolvedType();
return isNoType(); return isNoObjectType() || isNoResolvedType();
return (isNoType() || isNoObjectType()) || isNoResolvedType();
return isObjectType() || isNoResolvedType();
return (!isNoType()) || (isNoObjectType() || isNoResolvedType());
return ((isNoType()) || (isNoObjectType() || isNoResolvedType()));
return (isNoType() || isNoObjectType()|| isNoResolvedType());
return isNoType() || isObjectType() || isResolvedType();
return (isNoType() || isNoObjectType() || isNoResolvedType() || isNoType());
return (IsEmptyType() || isNoObjectType() || isNoResolvedType());
return type || isNoType() || isNoObjectType() || isNoResolvedType();
return isNoType() || isNoObjectType());
return isNoType() || isNoObjectType() || isNoResolvedType()
return isNoType() || isNoObjectType()
return NS_OK;
return isNoType() || isNoNoType();
return isType() || isObjectType() || isResolvedType();
return!isEmptyType() || isNoObjectType() || isNoResolvedType();
return (!isEmptyType() || isNoObjectType() || isNoResolvedType());
return isNoType("") || isNoObjectType("") || isNoResolvedType("");
return isNoType( ); || isNoObjectType( ); || isNoResolvedType( );
return isEmptyType() || isNoObjectType() || isResolvedType();
return isEmptyType();
return isNoType() || isNoObjectType() || isNoType() || isNoResolvedType();
return isNoType() || isNoObjectType() || isNoUnresolvedType();
return(isNoType()) ||(isNoObjectType() || isNoResolvedType());
return = isNoType() || isNoObjectType() || isNoResolvedType();
return isNoType() || isNoResolvedType() || isNoType();
return (*isNoType() || isNoObjectType() || isNoResolvedType());
return isNoType() || isNoDocumentType() || isNoResolvedType();
return isNoType() || isNoObjectType() || isNoType(0);
return isNoType() || isNoObjectType(), isNoResolvedType();
return isNoType() || isNoNativeType() || isNoObjectType() || isNoResolvedType();
return isNoType() || isNoObjectType() || isEmptyType();
return ((isNoType()) || (isNoObjectType()) || (isNoResolvedType()));
return (isNoType() || (isNoObjectType() || isNoResolvedType());
return (isNoType) || isNoObjectType() || isNoResolvedType();
return (isNoType() || isNoObjectType() || isNoResolvedType()) || isNoType();
return isNoType;
return type;
return isNoType() || isNoNoObjectType() || isNoResolvedType();
return IsEmptyType() || isNoObjectType() || isNoResolvedType();
return (isNoType() || isNoObjectType() || isNoResolvedType())!= 0;
return (isNoType());
return isNoType() || (isNoObjectType() || isNoResolvedType()));
return ((isNoType() || isNoObjectType()) || isNoResolvedType());
ret = isNoType() || isNoObjectType() || isNoResolvedType(); return ret;
return isNoType() || isNoObjectType() || isNoResolvedType() || isEmpty;
return (isNoType() || isNoObjectType() || isNoResolvedType() || isType());
return isNoType() || isObjectType();
return ( isNoType() ) || ( isNoObjectType() ) || ( isNoResolvedType() );
return isNoType( ) || isNoObject( ) || isNoResolvedType( );
return isNoType() || isNoOtherType() || isNoResolvedType();
return isNoType() || isNoType() || isNoObjectType();
return (isNoType() && isNoObjectType() || isNoResolvedType());
return isNoType() || isNoObjectType() || isNoResolvedType(0);
return noType || noObject || noResolvedType;
return isNoType() || isNoOwnerType() || isNoResolvedType();
return (isNoType() || isNoObjectType() || isNoResolvedType() || isEmpty);
return (isNotype() || isNoObjectType() || isNoResolvedType());
return isNoType() || isObjType() || isNoResolvedType();
return isNoType(type) || isNoObjectType(type) || isNoResolvedType(type);
return isNoType() || isNoType() || isNoResolvedType();
rv = isNoType() || isNoObjectType() || isNoResolvedType(); return rv;
return isNoType() || isNoObjectType() || isNoResolvedType()!= 0;
return (isNoType() || isNoObjectType() || isNoResolvedType() == 0);
return isNoType()
return isNoType() || isNoObject();
return (isNOType() || isNoObjectType() || isNoResolvedType());
return isType() || isNoObjectType() || isResolvedType();
return isNoType(aType); || isNoObjectType(aType); || isNoResolvedType(aType);
return isEmptyType() || isNoObjectType();
return isNoType() || isNoObjectType() || isNoResolvedType() || isInType();
return (! isNoType() || isNoObjectType() || isNoResolvedType());
else return isNoType() || isNoObjectType() || isNoResolvedType();
return isNoResolvedType() || isNoType();
return isNoType() || isNoObjectType() || isNoResolvedType() == 0;
return (isNoType () || isNoObject () || isNoResolved ());
return isType() || isNoObjectType() || isNoResolvedType();
return( isNoType() || isNoObjectType() || isNoResolvedType());
return isNoType() || isNoObjectType() || isNoPrototype();
return noType || noObjectType || noResolvedType;
return isNoType() || hasNoObjectType() || isNoResolvedType();
return isObjectType() || isResolvedType();
return (isObjectType() || isNoResolvedType());
return!(isNoType() || isNoObjectType() || isNoResolvedType());
return (rv = isNoType() || isNoObjectType() || isNoResolvedType());
return isNoType() || isNoPtrType() || isNoResolvedType();
return!isNoType || isNoObjectType() || isNoResolvedType();
return isNoType() || isNoObjectType() || isNoResolvedType ();
return isNoType(null) || isNoObjectType(null) || isNoResolvedType(null);
return isNoType() || isNoObjectType() || isNoAttributes();
return isNoType() || isNoObjectType() || isNoRawType();
return isNoType() || isNoObjectType() || isNoResolvedType());
return (hasNoType() || isNoObjectType() || isNoResolvedType());
return isNoType() || isNoOfType() || isNoResolvedType();
return true;
return (isNoType()? isNoObjectType() : isNoResolvedType());
return isNoResolvedType();
return (isNoObjectType() || isNoResolvedType());
return isNoType() || isNoPseudoType() || isNoResolvedType();
return isType() || isNoObjectType();
return isNoType(aType) || isNoObjectType(aType) || isNoResolvedType(aType);
return isNoType() || isNoObjectType() || isNoAttributeType();
return isNoType() || isNoObjectType() || isNoResolvedType() || isObjectType();
return isNoType() || isNoObjectType() || isNoObjectType();
return isNoType() || isNoObjectType() || isNoNativeType();
return (isNoType() || isNoObjectType()) || (isNoResolvedType() || isType());
return isNoType(aType) || isNoObject(aType) || isNoResolvedType(aType);
return isNoType() || isNoObjectType() || isNoResolvedType() || isNoType(0);
return isNoObjectType();
return isNoType() || isNoObjectType() || isNoResolvedType() || isFrameType();
return isNoType(aType);
return ((isNoType() || isNoObjectType() || isNoResolvedType()) == 0);
return isNoType(eType) || isNoObjectType(eType) || isNoResolvedType(eType);
return isNoType() || isNoObjectType() || isNoResolvedType() || isSubType();
return null;
return isNoType() || isNoObjectType() || isNoRuleType();
return isNoType() || isNoObjectType() || isNoResolvedType() || isNoObjectType();
return isNoType() || isNoObjectType() || isNoTypeType();
return isNoType() || isNoObjectType() || isNoResolvedType() || isContentType();
return type || type;
return isNoType() || isNoObjectType() || isNoResolvedType() || isDeepType();
return false;
return (isNoType() || isNoObjectType() || isNoResolvedType())? 1 : 1;
return isNoType() || (isNoObjectType() || isNoResolvedType()) || isNoType();
return (isNoType() || isNoObjectType()) || (isNoResolvedType() == 0);
return isNoType() || isNoObjectType() || isNoResolvedType() || isFunctionType();
return (*isNoType()) || (*isNoObjectType()) || (*isNoResolvedType());
return isNoType() || isNoObjectType() || isNoResolvedType() || isNoAtom();
return isNoType() || isNoObjectType() || isNoResolvedType() || isDeadType();
return isNoType() || isNoObjectType() || isNoResolvedType() || isNoEmptyType();
return (isNoType() || isNoObjectType() || isNoResolvedType())? (type == KEY_OUTPUT) : (type == KEY_OUTPUT)? type : type;
return (isNoType() || isNoObjectType() || isNoResolvedType())? isEmptyType() : isType();
return (isNoType() || isNoObjectType() || isNoResolvedType()) || (isNonEmptyType() || isFunctionType());
return (((const char*)isNoType()) || (isNoObjectType() || isNoResolvedType()));
return isNoType(false) || isNoObjectType(false) || isNoResolvedType(false) || isNoType() || isNoType();
return isNoType() || isNoObjectType() || isNoResolvedType() || isInline);
return ((null!= mTypeType) || (null!= mTypeType) || (null!= mTypeType));
return isNoType() || isNoObjectType() || isNoResolvedType() || isInNoObjectType();
return isNoType() || isNoResolvedType() || isNoNoOptions();
return (isNoType() || isNoObjectType() || isNoResolvedType())? NS_OK : NS_ERROR_UNEXPECTED;
return ((type == NS_OBJECT_TO_CHAR_TYPE_EXTERNAL) || (type == NS_DOM_Type_EXTERNAL) || (type == NS_DOM_Type_EXTERNAL) || (type == NS_DOM_Type_EXTERNAL) || (type == NS_DOM_Type_EXTERNAL) || (type == NS_DOM_TYPE_CONTENT) || (type == NS_DOM_TYPE_NOT_VISIBLE) || (type == NS_DOM_TYPE_ENTRY) || (type == NS_DOM_TYPE_CONTENT) || (type == NS_DOM_TYPE_CLASS || type == NS_DOM_TYPE_CLASS) || (type == NS_DOM_TYPE_CONTENT) || (type == NS_DOM_TYPE_COMPLETE) || (type == NS_DOM_TYPE_
return ((id & IID_IID) == 0) || (isNoType() || isNoObjectType() || isNoResolvedType());
return isNoType(nsIDOMCSSRule::id) || isNoObjectType(nsIDOMCSSRule::id) || isNoResolvedType(nsIDOMCSSRule::id);
return isNoType() || isNoObjectType() || isNoResolvedType() || isIsResolved();
return (isNoType() || isNoObjectType() || isNoResolvedType()) || (isSupports() || isObjType() || isUndefined());
return isNoType() || isNoObjectType() || isNoType((const char*)isNoResolvedType));
return isNoType() || isNoObjectType() || isNoResolvedType() || isNoType() || isNoSingleType();
return (isNoType() || isNoObjectType() || isNoResolvedType())? isIntType() : isOutFunc();
return ((isNoType() || isNoObjectType() || isNoResolvedType()) && isNoType() || isNoImplementation());
return isNoType() || isNoObjectType() || isNoResolvedType() || (isNoPosition() == 0) || (isNoObjectType() || isNoObjType()) || (isNoAttributeType() == 0) || (isNoAttributeType() == 0) || (isNoObjType() == 0));
return isNoType(null) || isNoObjectType(null) || isNoResolvedType(null);
return isNoType() || isNoObjectType() || isNoResolvedType() || isEmptyType();
return isNoType() || isNoObjectType() || isNoResolvedType() || isConstant();
return isNoType() || isNoObjectType() || isNoResolvedType() || isResolvedType();
return isNoType() || isNoObjectType() || isNoResolvedType() || isNoSupports();
return isNoType() || isNoObjectType() || isNoResolvedType() || isSameType();
return isNoType() || isNoObjectType() || isNoResolvedType() || isNoInheritance();
return isNoType(false) || isNoObjectType(false) || isNoResolvedType(false) || isNoType();
return ((type == Type) || (type == Type) || (type == Type) || (type == Type) || (type == Type) || (type == Type));
return isNoType() || isNoResolvedType() || isDeadType() || isPropertyType();
return isNoType() || isNoResolvedType() || isNoObject();
return (isNoType() || isNoObjectType() || isNoResolvedType()) || (isResolvedType() || isEmptyType());
return isNoType() || isNoObjectType() || isNoResolvedType() || isCXA(0);
return ((isNoType() || isNoObjectType()) || (isNoResolvedType() || isNoType()));
return isNoType() || isNoObjectType() || isNoResolvedType() || (IsType(&isNoType) || IsType(&isType(&isType)));
return isNoType() || isNoObjectType() || isNoResolvedType() || isIsEmpty();
return (isNoType() || isNoObjectType() || isNoResolvedType()) || (isNoType() || isNoResolvedType());
return isNoType() || isNoObjectType() || isNoType() || isNoType() || isNoResolvedType();
return isNoType( ), isNoObject( ), isNoResolved( ), isNoType( ), isNoEmpty( ), isNoType( ) );
return isNoType() || isNoObjectType() || isNoResolvedType() || isInNo() || isInNoType();
return (isNoType() || isNoObjectType() || isNoResolvedType()) || (isNoType() || isNoAtom() || isNoAtom());
return isNoType() || isNoObjectType() || isNoResolvedType() || isNoDtor();
return isNoType(false), isNoObjectType(false), isNoResolvedType(false), isNoResolvedType(false), isNoType() || isNoType(false), isNoType(false), isNoObjectType(false), isNoResolvedType(false), isNoResolvedType(false), isNoType(false), isNoType(false), isNoObjectType(false), isNoType(false), isNoType(false), isNoType(false), isNoType(false), isNoObjectType(false), isNoType(false), isNoType(false), isNoType(false), isNoType(false), isNoType(false), isNoType(PR_FALS
return isNoType() || isNoObjectType() || isNoResolvedType() || (!isNoType() || isNoType() || isNoResolvedType()) || (isNoObjectType() || isNoResolvedType() || isNoResolvedType() || isNoType() || isNoNoType()));
return isNoType() || isNoObjectType() || isNoResolvedType() || ((flags & SECTION_INT_TYPE) == SECTION_INT_TYPE_TYPE) || ((flags & SECTION_INT_TYPE_NO) == SECTION_INT_TYPE_NO_TYPE_NO_TYPE_NO_TYPE_NO_TYPE_NO_TYPE_NO_TYPE_NO_TYPE_NO_TYPE_NO_TYPE_NO_TYPE_NO_TYPE_NO_TYPE_NO_TYPE_NO_TYPE)) || ((flags & SECTION_INT_TYPE_NO_TYPE_NO_TYPE_NO_TYPE_NO_TYPE_NO_TYPE_NO_TYPE_NO_TYPE_NO_TYPE_NO_TYPE_NO_TYPE_NO_TYPE_NO_TYPE_NO_TYPE_NO_TYPE_NO_TYPE_NO_TYPE
return isNoType() || isNoObjectType() || isNoResolvedType() || isXType() || isXType();
return isNoType(eType) || isNoObjectType(eType) || isNoResolvedType(eType) || isEmptyType();
return isNoType(true) || isNoObjectType(false) || isNoResolvedType(false) || isNoEmptyType(false) || isNoObjectType(false) || isNoResolvedType(false) || isNoRuntime(false) || isNoType() || isNoType() || isNoType() || isNoObjectType() || isNoType() || isNoResolvedType() || isNoType() || isNoType();
return isNoType() || isNoObjectType() || isNoResolvedType() || isUnicodeType();
return isNoType() || isNoObjectType() || isNoResolvedType() || isFlags();
return isNoType() || isNoObjectType() || isNoResolvedType() || isNoResolvedType() || isFrameType();
return isNoType(false) || isNoObjectType(false) || isNoResolvedType(false);
return isNoType() || isNoResolvedType() || isNoRef();
return isNoType(true) || isNoObjectType(true) || isNoResolvedType(false);
return isNoType() || isNoObjectType() || isNoType(null) || isNoResolvedType();
return isNoType() || isNoObjectType() || isNoResolvedType() || ((obj = isNoPlaceholders()) || (obj == isPlaceholders())));
return isNoType() || isNoType() || isNoResolvedType() || isNoContentType();
return isNoType(void) || isNoObjectType(void) || isNoResolvedType(void) || isNoType(void) || isNoType();
return isNoType() || isNoObjectType() || isNoResolvedType() || isNoInstanceType();
return ((isNoType() || isNoObjectType() || isNoResolvedType()) || isObjType());
return isNoType(true) || isNoObjectType(true) || isNoResolvedType(true) || isNoSupportType();
return isNoType() || isNoObjectType() || isNoType() || isNoResolvedType() || isNoType() || isNoResolvedType() || isNoType();
return (isNoType() || isNoObjectType() || isNoResolvedType()) || (isNoSize()  sizeof(void)) || (isNoType()  (sizeof(void)) || isNoResolvedType());
return (isNoType() || isNoObjectType() || isNoResolvedType()) || (isNoType() || isNoPtr());
return isNoType(false) || isNoObjectType(false) || isNoResolvedType(false);
return isNoType() || isNoObjectType() || isNoResolvedType() || isNoUnicode();
return isNoType() || isNoObjectType() || isNoResolvedType() || isIsSubType();
return isNoType() || isNoType((unsigned char *)&this); || isNoObjectType((unsigned char *)&this);
return isNoType() || isNoObjectType() || isNoResolvedType() || isNoNegatedType();
return isNoType(true) || isNoObjectType(false) || isNoResolvedType(false) || isNoResolvedType(false) || isNoResolvedType(false) || isNoEmptyType(false) || isNoEmptyType(false) || isNoEmptyType(false) || isNoResolvedType(false) || isNoResolvedType(false) || isNoObjectType(false) || isNoResolvedType(false) || isNoResolvedType(false) || isNoNoType(false) || isNoType(false) || isNoType(false) || isNoType(false) || isNoType(PR_FALS
return isNoType() || isNoObjectType() || isNoResolvedType() || isUnresolvedType();
return isNoType() || isNoObjectType() || isNoResolvedType() || (isPropertyType() == TYPE_BASE || isNoType() == TYPE_CONTRACTID));
return (isNoType() || isNoObjectType() || isNoResolvedType()) || (isSingleTypeAt(0x8000) || isSingleTypeAt(0x8000));
return (isNoType() || isNoObjectType() || isNoResolvedType())? (*isNoResolvedType() || (*isNoResolvedType() || isNoType()));
return isNoType() || isNoObjectType() || isNoResolvedType() || isAssertionPoint();
return isNoType() || isNoObjectType() || isNoResolvedType() || isNoDtorType();
return isNoType() || isNoObjectType() || isNoResolvedType() || (typeIsType(type) || typeIsType(type)));
return isNoType() || isNoType() || isNoResolvedType() || isNoAttributeType() || isNoType() || isNoResolvedType();
return isNoType() || isNoObjectType() || isNoResolvedType() || isNoNoResolvedType() || isInstanceOfType();
return (isNoType() || isNoObjectType() || isNoResolvedType()) || (isNoSignType() || isNoPseudoType() || isNoSingleType());
return isNoType() || isNoObjectType() || isNoResolvedType() || (isType() == type() || isType()));
return isNoType() || isNoObjectType() || isNoResolvedType() || isNoUnknownType();
return isNoType() || isNoType() || isNoType() || isNoResolvedType() || isType(nsIDOMNode**) || isSameType();
return isNoType() || isNoObjectType() || isNoResolvedType() || isTypeInline;
return isNoType() || isNoObjectType() || isNoResolvedType() || isNoConstructor();
return isNoType() || isNoObjectType() || isNoResolvedType() || isNoNoType() || isNoNoBodyType();
<return isNoType() || isNoObjectType() || isNoResolvedType();
&return isNoType() || isNoObjectType() || isNoResolvedType();
return (isNoType() || isNoObjectType() || isNoResolvedType()) || (isNoSize() <sizeof(void)) || (isNoType() <(sizeof(void)) || isNoResolvedType());
return (isNoType() || isNoObjectType() || isNoResolvedType()) || (isNoSize() &sizeof(void)) || (isNoType() &(sizeof(void)) || isNoResolvedType());
return (isNoType() || isNoObjectType() || isNoResolvedType()) || (isNoSize() sizeof(void)) || (isNoType() <(sizeof(void)) || isNoResolvedType());
return (isNoType() || isNoObjectType() || isNoResolvedType()) || (isNoSize() sizeof(void)) || (isNoType() (sizeof(void)) || isNoResolvedType());
return isNoType() || isNoObjectType() || isNoResolvedType();
return (isNoType() || isNoObjectType() || isNoResolvedType()) || (isNoSize() &sizeof(void)) || (isNoType() <(sizeof(void)) || isNoResolvedType());
return (isNoType() || isNoObjectType() || isNoResolvedType()) || (isNoSize() <sizeof(void)) || (isNoType() (sizeof(void)) || isNoResolvedType());
return (isNoType() || isNoObjectType() || isNoResolvedType()) || (isNoSize() <sizeof(void)) || (isNoType() &(sizeof(void)) || isNoResolvedType());
return (isNoType() || isNoObjectType() || isNoResolvedType()) || (isNoSize() sizeof(void)) || (isNoType() &(sizeof(void)) || isNoResolvedType());
return (isNoType() || isNoObjectType() || isNoResolvedType()) || (isNoSize() &sizeof(void)) || (isNoType() (sizeof(void)) || isNoResolvedType());
