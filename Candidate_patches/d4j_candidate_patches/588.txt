golden:
a = FastMath.sqrt(c1 / c2);
inference:
a = FastMath.sqrt((int)c1 / c2);
a = FastMath.sqrt((c1 / c2));

a = FastMath.sqrt((long)c1 / c2);
a = FastMath.sqrt(c1 / c2);
a = FastMath.sqrt(c1 / c1);
a = FastMath.sqrt(c1, c2);
a = FastMath.sqrt(&c1 / c2);
a = FastMath.sqrt(c1 / (int)c2);
a = FastMath.sqrt(c2 / c1);
a = FastMath.sqrt(C1 / c2);
a = FastMath.sqrt();
a = FastMath.sqrt(c1 / c2);
a = FastMath();
a = FastMath.sqrt(a1 / a2);
a = FastMath.sqrt((c1 - c2));
a = FastMath.sqrt(c1 - c2);
a = FastMath.sqrt(c1) / c2;
a = FastMath.sqrt(c1);
a = FastMath.sqrt(c1 + c2);
a = FastMath.sqrt((long)(c1 / c2));
a = FastMath.sqrt(c0 / c2);
a = FastMath.sqrt((char *)c1 / c2);
a = fastMath.sqrt(c1 / c2);
a = FastMath.sqrt (c1 / c2);
a = FastMath.sqrt(int(c1 / c2));
a = FastMath.sqrt(size);
a = FastMath.sqrt(c1 / c2) / 2;
m = FastMath.sqrt(c1 / c2);
a = FastMath.sqrt(c1 / c3);
*a = FastMath.sqrt(c1 / c2);
a = FastMath.sqrt( c1 / c2 );
a = FastMath.sqrt(1 / c2);
a = FastMath.sqrt(c1 / c1, c2);
a = FastMath.sqrt((Int)c1 / c2);
a = FastMath.sqrt(c1 / c2) - 1;
a = FastMath.sqrt(c1 / c2) + 1;
a = FastMath.sqrt(-c1 / c2);
a = BufMath.sqrt(c1 / c2);
a = FastMath.sqrt((void *)c1 / c2);
(void) FastMath.sqrt(c1 / c2);
a = c1 / c2;
a = FastMath;
a = FastMath.sqrt(c1 / c2 + 1);
a = FastMath.sqrt((C1 / c2));
a = FastMath::sqrt(c1 / c2);
a = FastMath.sqrt(nc1 / nc2);
FastMath.sqrt(c1 / c2);
a = FastMath.sqrt(lc1 / lc2);
a = FastMath((int)c1 / c2);
a = FastMath.sqrt(int(c1) / c2);
a = FastMath.lsqrt(c1 / c2);
a = FastMath.sqrt((c1 + c2));
a = FastMath.sqrt(0 / c2);
a = FastMath.sqrt(*c1 / c2);
u = FastMath.sqrt(c1 / c2);
a = FastMath.sqrt(0);
a = FastMath.sqrt(c1 / c2, 0);
a = FastMath.sqrt(bc1 / bc2);
a = FastMath_sqrt(c1 / c2);
a = FastMath.sqrt(c1 / (long)c2);
int a = FastMath.sqrt(c1 / c2);
a = FastMath.sqrt(c0 / c1);
a = FastMath.sqrt((c1-c2) / c2);
a = FastMath.sqrt(c1 * c2);
a = FastMath.sqrt(0, c1 / c2);
FastMath.sqrt((int)c1 / c2);
a = FastMath.sqrt(c1 / c2 - 1);
a = FastMath.sqrt(c1.x / c2.y);
a = FastMath.sqrt(c2 / c2);
c1 = FastMath.sqrt(c1 / c2);
b = FastMath.sqrt(c1 / c2);
a = FastMath.sqrt((double)c1 / c2);
a = FastMath.sqrt(h1 / h2);
a = FastMath.sqrt(m1 / m2);
a = FastMath.sqrt(((long)c1 / c2));
a = FastMath.sqrt(1);
a = FastMath.sqrt((c1 >> c2));
r = FastMath.sqrt(c1 / c2);
a = FastMath.sqrt(c1 / c1 + 1);
a = FastMath.sqrt(-1 / c2);
a = FastMath.sqrt(size / c2);
a = FASTMath.sqrt(c1 / c2);
a = FastMath.sqrt(c1 / c2) + c1;
a = FastMath.sqrt(lc1 / c2);
a = FastMath.sqrt(c1 / c1, 0);
a = FastMath.sqrt(b1 / b2);
n = FastMath.sqrt(c1 / c2);
a = FastMath.sqrt(c3 / c3);
a = FastMath.sqrt((float)c1 / c2);
a = FastMath.sqrt((ulong)c1 / c2);
a = FastMath.sqrt( c1 / c2);
a = FastMath.sqrt(c1 / c1 + c2);
a = FastMath[c1 / c2];
a = FastMath.sqrt(c1 // c2);
a = FastMath.sqrt( (int)c1 / c2);
i = FastMath.sqrt(c1 / c2);
a = FastMath.sqrt((c1) / c2);
a = FastMath.sqrt(a1 / c2);
a = FastMath2.sqrt(c1 / c2);
a = FastMath.sqrt(c1 / c0);
s = FastMath.sqrt(c1 / c2);
a = FastMath.sqrt(-1);
a = FastMath.sqrt((c1 / (c2)));
a = FastMath.tqrt(c1 / c2);
a = FastMath.sqrt(aC1 / aC2);
a = FastMath.sqrt(c1 / c2, 1);
a = FastMath.sqrt(bC1 / bC2);
a = FastMath.dqrt(c1 / c2);
a = FastMathSqrt(c1 / c2);
a = FastMath.sqrt(2);
a = FastMath.sqrt(0 / c1);
a = FastMath.sqrt(c3 / c2);
a = FastMath.sqrt(c1; c2);
a = FastMath.Sqrt((int)c1 / c2);
a = FastMath.sqrt((*c1) / c2);
a = FastMath.sqrt(c1 / (u_long)c2);
a = FastMath.sqrt(c1 / a2);
a = FastMath.sqrt(*c1);
a = FastMath.sqrt((short)c1 / c2);
a = FastMath.sqrt([c1 / c2]);
a = FastMath.sqrt(float(c1) / float(c2));
a = FastMath.sqrt(c1 / c);
fast = FastMath.sqrt(c1 / c2);
a = FastMath.sqrt(c1 / c2) * c1;
a = FastMath.sqrt(c1 / sizeof(c1));
a = FastMath.sqrt(u1 / u2);
a = FastMath.sqrt(i / c2);
a = FastMath.sqrt(r1 / r2);
a = FastMath.sqrt(c1 / c2) * 2;
a = FastMath.sqrt(i1 / i2);
a = fast_sqrt(c1 / c2);
a = FastMath.sqrt(size_t / c2);
a = FastMath.sqrt(3 / c2);
a = FastMath.sqrt(c);
a = FastMath.sqrt(sc1 / sc2);
a = FastMath.sqrt(nC1 / nC2);
a2 = FastMath.sqrt(c1 / c2);
a = FastMath.sqrt(sizeof(c1) / c2);
a = FastMath.sqrt2(c1 / c2);
else a = FastMath.sqrt(c1 / c2);
*c1 = FastMath.sqrt(c1 / c2);
a = FastMath.sqrt((int)C1 / c2);
a = FastMath.sqrt(c1 / c1, 1);
a = FastMath.sqrt(+c1 / c2);
a = FastMath.sqrt((char*)c1 / c2);
c = FastMath.sqrt(c1 / c2);
a = FastMath.sqrt(0xff / c2);
a = FastMath.sqrt((int)c1 - c2);
a = FastMath.sqrt((int)c1 / c2));
a = FastMath.sqrt(c1 / c2) / 4;
a = FastMath.sqrt((c1  c2));
a = FastMath.sqrt((int)c1 / (c2));
a = FastMath.sqrt(c1 / c2) + c2;
a = FastMath.sqrt(c1 / c2 + c1);
a = FastMath.sqrt(c1 / (c1 + c2));
a = FastMath.sqrt((c2 / c2));
a = FastMath.sqrt(/*c1 /*c2);
a = FastMath.sqrt(c1 / c2) / 3;
a = false;
a = c1;
a = FastSqrt(c1 / c2);
a = FastMath.sqrt( (c1 / c2));
a = FastMath.sqrt(c1 / c2, c1);
a = FastMath / c1;
ret = FastMath.sqrt(c1 / c2);
a = FastMath.sqrt(c1 / c2 / 2);
tmp = FastMath.sqrt(c1 / c2);
a = FastMath.sqrt(c1 / c2, c2);
a = FastMath.sqrt(c1 / sizeof(c2));
a = FastMath.sqrt(c1 / c2) / 1;
a = FastMath.sqrt(c1 / c2) + 2;
a = FastMath.sqrt(c1 / (int) c2);
a = FastMath.sqrt(c1 / c2, c0);
a = FastMath.sqrt(c1 / c2 + c2);
a = FastMath.sqrt(c1 / c2) / 1000;
a = FastMath.sqrt(c1 / c1) / 2;
a = FastMath.sqrt((int)c1) / c2;
a = FastMath.get();
a = FastMath.sqrt(c1 / c2 + 2);
a = FastMath.sqrt(c1 / ((int)c2));
a = FastMath.sqrt(c1 / c2) - 2;
a = FastMath.sqrt(c1 / c1 + c1);
a = FastMath.sqrt(c1 / c2) * c2;
a = FastMath.sqrt((int)c1) / c2);
a = FastMath.sqrt(c1 / (int)c1);
a = FastMath.sqrt(c1 / c2) / 1024;
a = FastMath.sqrt(c1 / c2) / 2.0;
a = FastMath.next();
a = FastMath.sqrt((int)(c1 / c2));
a = FastMath.sqrt((u_long)c1 / c2);
a = FastMath.sqrt(c1 / c2, 0, 0);
a = FastMath.sqrt(c1 / c2) / c2;
a = FastMath.sqrt(c1, c2, c3);
a = FastMath.sqrt(c1 / c2, c2 + 1);
a = FastMath.sqrt((u_int)c1 / c2);
a = FastMath.sqrt(c1 / c1, c2 / c2);
a = FastMath.sqrt((unsigned long)c1 / c2);
a = FastMath.sqrt(c1 / c2 / c3);
a = FastMath.sqrt((unsigned char)(c1 / c2));
a = FastMath.sqrt(c1 / c2, sizeof(c1));
a = FastMath.sqrt(c1 / c2) + (a == null? 0 : 0);
a = FastMath.sqrt(c1 / c2, c2 + 2);
a = FastMath.sqrt(c1 / c1, c2 - 1);
a = FastMath.sqrt((unsigned char *)c1 / c2);
a = FastMath.sqrt(c1 / c2 + c1 + c2);
a = FastMath.sqrt((unsigned char)c1 / c2);
a = FastMath.sqrt(c1 / c2) + c1 / c2;
a = FastMath.sqrt(c1 / c2) / ((int)((int)(c1 / c2)) / ((int)((int)(c1 / c2)) / c2));
a = FastMath.sqrt((u_int8_t *)c1 / c2);
a = FastMath.sqrt(c1 / c2) * 3;
a = FastMath.sqrt((unsigned char *)(c1 / c2));
a = FastMath.sqrt(c1 / c2, c1 + c2);
a = FastMath.sqrt(c1 / c2 - 1, c2 - 1, c2 - 1, c2 - 1, c2 - 1, c2 - 1, c2 - 2, c2 - 2, c2 - 1, c2 - 1, c2 - 1, c2 - 1, c2 - 2, c2 - 2, c3 - 1, c4 - 1, c2 - 1, c4 - 1, c2 - 2, c4 - 1, c2 - 1, c4 - 1, c4 - 1, c4 - 1, c2 - 2, c2 - 1, c4 - 1, c5 - 2, c5 - 2, c4 - 2, c4 - 2, c5 - 2, c5 - 3, c4 - 2, c4 - 1, c5 - 1, c5 - 2, c4 - 2, c5 - 3, c5
a = FastMath.sqrt(c1 / c2 + sizeof(c1));
a = FastMath.sqrt(c1 / c2) - c1;
a = FastMath.sqrt(c1 / c2, &c1, &c2, &c1, &c2, &c2, &c3, &c3, &c2, &c3, &c3, &c4, &c3, &c4, &c6, &c6, &c6, &c6, &c6, &c7);
a = FastMath.sqrt((u_int32_t)c1 / c2);
<a = FastMath.sqrt(c1 / c2);
a = FastMath.sqrt((c1 c2));
a = FastMath.sqrt(c1 / c2);
&a = FastMath.sqrt(c1 / c2);
a = FastMath.sqrt((c1 <c2));
a = FastMath.sqrt((c1 &c2));
&a = FastMath.sqrt(c1 / c2);
a = FastMath.sqrt(c1 / c2);
<a = FastMath.sqrt(c1 / c2);
