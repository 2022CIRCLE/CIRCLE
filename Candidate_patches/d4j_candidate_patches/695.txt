T> T withOuterClass(ClassT> cls){
static T> T withOuterClass(ClassT> cls){
T withOuterClass(ClassT> cls){
private T> T withOuterClass(ClassT> cls){
T> withOuterClass(ClassT> cls){
static const T> T withOuterClass(ClassT> cls){
private T> T withOuterClass(ClassT>& cls){
private T> T withOuterClass(ClassT> aClass){
private T> T withOuterClass(){
virtual T> T withOuterClass(ClassT> cls){
const T> T withOuterClass(ClassT> cls){
T>T withOuterClass(ClassT> cls){
inline T> T withOuterClass(ClassT> cls){
T> T withOuterClass(){
static inline T> T withOuterClass(ClassT> cls){
private ConstructorT> T withOuterClass(ClassT> cls){
private const T> T withOuterClass(ClassT> cls){
private inline T> T withOuterClass(ClassT> cls){
protected T> T withOuterClass(ClassT> cls){
Private T> T withOuterClass(ClassT> cls){
private T> T withOuterClass(classes){
private T> T withOuterClass (ClassT> cls){
public T> T withOuterClass(ClassT> cls){
T> TwithOuterClass(ClassT> cls){
T> T withOuterClass(classT> cls){
private T> T withOuterClass(class){
private T> TT> withOuterClass(ClassT> cls){
private T> T withOuterClass(ClassT> *cls){
private T> withOuterClass(ClassT> cls){
T> TWithOuterClass(ClassT> cls){
private ClassT> T withOuterClass(ClassT> cls){
T> T withOuterClass(ClassT>& cls){
static T> withOuterClass(ClassT> cls){
TWithOuterClass(ClassT> cls){
private T> T withOuterClass(ConstructorT> cls){
private T withOuterClass(ClassT> cls){
private T> T withOuterClass(ClassT> class){
private T> T withOuterClass(classT> cls){
T> T> T withOuterClass(ClassT> cls){
T> T withOuterClass(classes){
private T> T withOuterClass(ClassT> &cls){
PRBool withOuterClass(ClassT> cls){
private T> withOuterClass(ClassT>& cls){
private T> T withOuterClass(ClassesT> cls){
T> T withOuterClass (ClassT> cls){
static T>T withOuterClass(ClassT> cls){
private T> T withOuterClass(ClassT> aCls){
t> T withOuterClass(Classt> cls){
private T> T withOuterClass(ClassT> cls) const{
static static T> T withOuterClass(ClassT> cls){
static ConstructorT> T withOuterClass(ClassT> cls){
private T> withOuterClass(ClassT> aClass){
T> T withOuterClass(ClassT> aClass){
private T> T withOuterClass(ClassT>& aClass){
private T> T withOuterClass(T> cls){
private T> T[] withOuterClass(ClassT> cls){
private static T> T withOuterClass(ClassT> cls){
T> T> withOuterClass(ClassT> cls){
private T> T withOuterClass(ClassT>* cls){
TT> withOuterClass(ClassT> cls){
T> T withOuterClass(class){
static T> TwithOuterClass(ClassT> cls){
static T withOuterClass(ClassT> cls){
T> TT> withOuterClass(ClassT> cls){
private T>T withOuterClass(ClassT> cls){
private T> C withOuterClass(ClassT> cls){
static T> T withOuterClass(classT> cls){
T> C withOuterClass(ClassT> cls){
private T> T withOuterClass(nsClassT> cls){
private T> withOuterClass(){
private T> T withOuterClass(ClassT> cls ){
private TT> withOuterClass(ClassT> cls){
self T> T withOuterClass(ClassT> cls){
private T withOuterClass(ClassT>& cls){
TwithOuterClass(ClassT> cls){
T> T withOuterClass(ClassT> cls) const{
private T> T withOuterClass(ClassT> ccls){
private T>T withOuterClass(ClassT>& cls){
private T> T withOuterClass(ClassT> t){
static T> TWithOuterClass(ClassT> cls){
static const T> withOuterClass(ClassT> cls){
private T> T withOuterClass(ClassT> c){
PRBool T withOuterClass(ClassT> cls){
T> T withOuterClass( ClassT> cls){
T>> T withOuterClass(ClassT> cls){
private T>TT> withOuterClass(ClassT> cls){
private T> T withOuterClass(T* cls){
private T>T> withOuterClass(ClassT> cls){
private T> T withOuterClass(ClassT>){
private ElementT> T withOuterClass(ClassT> cls){
private T> T withOuterClass(ClassT> s){
private T> T withInstance(ClassT> cls){
private ClassT> withOuterClass(ClassT> cls){
NS_IMETHOD T withOuterClass(ClassT> cls){
classWithOuterClass(ClassT> cls){
private T>T withOuterClass(ClassT> aClass){
private T> T> withOuterClass(ClassT> cls){
private T> T withOuterClass(ConstructorT>& cls){
withOuterClass(ClassT> cls){
private T> T withOuterClass(ClassT>, cls){
T> T withOuterClass( ClassT> cls ){
private Const T> T withOuterClass(ClassT> cls){
private T> T withOuterClass(ClassT> ls){
private T> T withOuterClass(IClassT> cls){
private T> T withOuterClass(ClassT>cls){
ConstructorT> T withOuterClass(ClassT> cls){
private T>T> T withOuterClass(ClassT> cls){
T> T withOuterClass(ClassT>> cls){
private T> T* withOuterClass(ClassT> cls){
private T withOuterClass(ClassT> aClass){
T> T withOuterClass(ClassesT> cls){
private T> TClassT> cls){
T> T WITHOUTERCLASS(ClassT> cls){
inline T> withOuterClass(ClassT> cls){
T> T withOuterClass(ConstructorT> cls){
const T> withOuterClass(ClassT> cls){
private T> TWithOuterClass(ClassT> cls){
private T> T withOuterClass( ClassT> cls ){
T> T[] withOuterClass(ClassT> cls){
private T>T withOuterClass(){
T> T withOuterClass(ClassT>cls){
private T> TwithOuterClass(ClassT> cls){
private T> T withOuterClass(Class cls){
private T> T withOuterClass(ClassC> cls){
T>> withOuterClass(ClassT> cls){
private T> classWithOuterClass(ClassT> cls){
private T>& T withOuterClass(ClassT> cls){
private T> T withOuterClass(ElementT> cls){
T> withOuterClass(){
unsigned T> T withOuterClass(ClassT> cls){
T> T withOuterClass(ClassT> class){
private T> T withOuterClass(ClassT> cls);{
private T> T withOuterClass(nsIClassT> cls){
static const T>T withOuterClass(ClassT> cls){
private T>& withOuterClass(ClassT> cls){
ClassT> T withOuterClass(ClassT> cls){
private T> T withOuterClass(cls){
private T> TT>(ClassT> cls){
private T> T withOuterClass(ClassT> cls, void){
private T>WithOuterClass(ClassT> cls){
class withOuterClass(ClassT> cls){
T>  T withOuterClass(ClassT> cls){
T> T* withOuterClass(ClassT> cls){
private t> T withOuterClass(Classt> cls){
private ConstructorT> withOuterClass(ClassT> cls){
private T> T withOuterClass(ObjectT> cls){
private T> ClassT> cls{
CONSTRUCTORT> T withOuterClass(ClassT> cls){
private T> T withOuterClass(ClassT> l){
static ClassT> T withOuterClass(ClassT> cls){
private T> cls withOuterClass(ClassT> cls){
static PRBool T withOuterClass(ClassT> cls){
virtual T> withOuterClass(ClassT> cls){
T> T withOuterClass(ClassT>){
T> T withOuterClass(ClassT> &cls){
private LT> T withOuterClass(ClassT> cls){
private T> andOuterClass(ClassT> cls){
private T> ClassT> cls;{
private T> T withOuterClass(ClassT> p){
T>  T> withOuterClass(ClassT> cls){
private T>t withOuterClass(ClassT> cls){
private T> TWithOuterClass(){
private T> int withOuterClass(ClassT> cls){
private T> T(ClassT> cls){
private T withOuterClass(){
private T> T withOuterClass(TypeT> cls){
T> ClassT> cls;{
private T> T withOuterClass(ClassT> acls){
T> T withOuterClass(CLASST> cls){
private T> T withOuterClass(int cls){
private int T withOuterClass(ClassT> cls){
private T> TwithOuterClass(ClassT>& cls){
T> T withOuterClass(ClassT> *cls){
private int withOuterClass(ClassT> cls){
private T> withOuterClass(classes){
private T> T withOuterClass(nsClassT>& cls){
static T> T withOuterClass(){
T> T withOuterClass(ClassT> s){
T> T withOuterClass(ClassT> ccls){
private T> T withOuterClass(ClassT> cl){
private T> T withOuterClass(class cls){
T>T> T withOuterClass(ClassT> cls){
private T> TWithOuterClass(ClassT>& cls){
private T> TwithOuterClass(){
private T> T withOuterClass(T){
private T> TwithOuterClass(ClassT> aClass){
private T> T withOuterClass(ClassT> cls, p){
private T> cls{
private T> TWithOuterClass(ClassT> aClass){
private T> T withOuterClass(ClassT>> cls){
private T> T withOuterClass(ClassT> cls, int ret){
private T> T withOuterClass(ClassT> cls, struct cls* cls){
private T> T withOuterClass(ClassT> cls, PRUint32 numClasses){
private T> T withOuterClass(ClassT> cls, PRInt32 aInstanceT){
private T> T withOuterClass(ClassT> cls, PRBool* aT){
private T> T withOuterClass(ClassT> cls, struct classType cp){
private T> T withOuterClass(ClassT> cls, ObjectT> object){
private T> T withOuterClass(ClassT> cls, int startOffset, int endOffset){
private T> T withOuterClass(ClassT> cls, T> t){
private T> T withOuterClass(ClassT> cls, T*& clsp){
private T> T withOuterClass(ClassT> cls, boolean do_required){
private T> T withOuterClass(ClassT> cls, PRUint32 aNameSpaceID){
private T> T withOuterClass(ClassT> cls, T* aClassType){
private T> T withOuterClass(ClassT> cls, T> type){
private T> T withOuterClass(ClassT> cls, PRBool clsIsHidden){
private T> T withOuterClass(ClassT> cls, tor> cls, tor> cls){
private T> T withOuterClass(ClassT> cls, PRInt32* aCls){
private T> T withOuterClass(ClassT> cls, T> cls2){
private T> T withOuterClass(ClassT> cls, nsIArena* aArena){
private T> T withOuterClass(ClassT> cls, nsIInt32ClassT>& cls){
private T> withOuterClass(ClassT> cls, T *aMatch){
private T> T withOuterClass(ClassT> cls, Object* aObject){
private T> withOuterClass(ClassT> cls, const char* clsStr){
private T> T withOuterClass(ClassT> cls, void* aProperty){
private T> T withOuterClass(ClassT> cls, void* a){
private T> T withOuterClass(ClassT> cls, T> nsIListClass aClass){
private T> T withOuterClass(ClassT> cls, PRUint32 *cls){
private T> T withOuterClass(ClassT> cls, nsIStyleContext* aContext, nsIStyleContext* aContext, const nsStyleContext* aStyleContext, nsIContent* aContext, nsIStyleContext* aContext){
private T> T withOuterClass(ClassT> cls, PRUint32 id){
private T> T withOuterClass(ClassT> cls, int obj, const char *name){
private T> T withOuterClass(ClassT> cls, int flags){
private T> T withOuterClass(ClassT> cls, const T>& rc){
private T> T withOuterClass(ClassT> cls, int i){
private T> T withOuterClass(ClassT> cls, PRBool &mOwner){
private T> T withOuterClass(ClassT> cls, PRInt32* aInstancePtr){
private T> T withOuterClass(ClassT> cls, const char*& clsList){
private T> T withOuterClass(ClassT> cls, struct cls *cls){
private T> T withOuterClass(ClassT> cls, PRUint32 size){
private T> T withOuterClass(ClassT> cls, PRUint32 type){
private T> T withOuterClass(ClassT> cls, const char *c){
private T> T withOuterClass(ClassT> cls, T> cls.tc_class){
private T> T withOuterClass(ClassT> cls, PRBool &isTemp){
private T> T withOuterClass(ClassT> cls, nsClasses** cls){
private T> T withOuterClass(ClassT> cls, structorT>*>& cls){
private T> T withOuterClass(ClassT> cls, T* cls2){
private T> T withOuterClass(ClassT> cls, T>> cls1){
private T> T withOuterClass(ClassT> cls, PRInt32(int)){
private T> T withOuterClass(ClassT> cls, void** aResult){
private T> T withOuterClass(ClassT> cls, T* rts){
private T> withOuterClass(ClassT> cls, void** cls){
private T> withOuterClass(ClassT> cls, T* cls){
private T> T withOuterClass(ClassT> cls, PRBool* aProtectedClass){
private T> T withOuterClass(ClassT> cls, const char* cls.className){
private T> T withOuterClass(ClassT> cls, PRInt32* aParam){
private T> T withOuterClass(ClassT> cls, uint32_t trlen){
private T> T withOuterClass(ClassT> cls, T> ret){
private T> T withOuterClass(ClassT> cls, const char* aClass){
&T> T> withOuterClass(Class&T> cls){
<T>T withOuterClass(Class<T> cls){
T> T withOuterClass( Class<T> cls){
private T> T withOuterClass(ClassT> cls, <tor> cls, <tor> cls){
private inline &T> T withOuterClass(Class&T> cls){
private <T> TT> withOuterClass(ClassT> cls){
private T> T withOuterClass(ClassT> cls, ObjectT> object){
static ClassT> T withOuterClass(Class&T> cls){
static ConstructorT> T withOuterClass(Class&T> cls){
T> T withOuterClass(CLASST> cls){
private <T> T withOuterClass(ClassT> cl){
T> T> withOuterClass(Class<T> cls){
private <T> T withOuterClass(ClassT> cls, ObjectT> object){
&T> T&T> withOuterClass(ClassT> cls){
private &T> T withOuterClass(Class&T> cls, PRUint32 *cls){
private T> T withOuterClass(ClassT> cls, struct classType cp){
private <T> TT>(ClassT> cls){
private &T> T withOuterClass(Class<T> cls, T> t){
&T> T withOuterClass(ClassT>& cls){
private &T> T withOuterClass(ClassT>cls){
T&T> withOuterClass(Class&T> cls){
private <T> T withOuterClass(ClassT> ccls){
private <Class&T> T withOuterClass(Class<T> cls){
private T>T withOuterClass(ClassT> cls){
T> TwithOuterClass(ClassT> cls){
private &T> T withOuterClass(Class<T> cls, nsIInt32<Class&T>& cls){
private <T> T withOuterClass(nsClassT>& cls){
private <T> T withOuterClass(){
private <T> T withOuterClass(Class&T> cls, struct cls *cls){
static &T> T withOuterClass(Class&T> cls){
private <T> T<T> withOuterClass(ClassT> cls){
T> T withOuterClass(ClassT>> cls){
&T> T withOuterClass(ClassT> class){
private <T> cls withOuterClass(Class&T> cls){
private T> TwithOuterClass(Class&T>& cls){
<T> &T> withOuterClass(Class&T> cls){
<T><T> T withOuterClass(Class<T> cls){
<T> &T> T withOuterClass(Class<T> cls){
private T> andOuterClass(Class<T> cls){
private &T> T withOuterClass(Class<T> cls, PRUint32 size){
private T> T withOuterClass(ClassT> cls, nsIInt32ClassT>& cls){
static T>T withOuterClass(Class&T> cls){
&T> T withOuterClass(ClassT> aClass){
private <T> T withOuterClass(Element&T> cls){
private <T> T&ClassT> cls){
private &T> T withOuterClass(Class&T> cls, PRInt32* aInstancePtr){
CONSTRUCTOR<T> T withOuterClass(Class<T> cls){
<T> T withOuterClass( Class&T> cls){
private &T> T withOuterClass(IClass<T> cls){
private T> T withOuterClass(Class<T> cls, structor<T>*>& cls){
T> ClassT> cls;{
private <T> T withOuterClass(ClassT> c){
private &T> withOuterClass(Class<T> aClass){
private <T> T withOuterClass(Class<T> cls, PRUint32 type){
private &T> T withOuterClass(Class&T> cls, Object<T> object){
private T> T withOuterClass(ClassT> cls, uint32_t trlen){
private T> T[] withOuterClass(Class<T> cls){
&t> T withOuterClass(Class&t> cls){
static &T> TwithOuterClass(ClassT> cls){
private T> T withOuterClass(ClassT> cls, structorT>*>& cls){
static ClassT> T withOuterClass(Class<T> cls){
private &T> T withOuterClass(ClassT> cls, PRInt32(int)){
T> T withOuterClass(Class<T>> cls){
private T> T withOuterClass(Class&T> cls, T>> cls1){
private Const T> T withOuterClass(Class<T> cls){
private &T> T withOuterClass(Class<T> cls, const char* aClass){
private <T> T withOuterClass(Class&T> cls){
private T> T withOuterClass(Class<T> cls, T> ret){
private T> T withOuterClass(Class&T> cls, T> type){
private <T> T withOuterClass(T> cls){
private <T> T withOuterClass(class<T> cls){
<T> &T withOuterClass(Class<T> cls){
T> &ClassT> cls;{
<T> withOuterClass(Class&T> cls){
private <T> withOuterClass(Class&T> cls){
private T>& T withOuterClass(Class<T> cls){
private &T> T<T>(ClassT> cls){
self &T> T withOuterClass(Class<T> cls){
private T>T withOuterClass(Class<T> cls){
private const T> T withOuterClass(ClassT> cls){
private T> T withOuterClass(nsIClassT> cls){
private <T> T withOuterClass(Class&T> cls, int obj, const char *name){
private &T> T withOuterClass(ClassT> cls){
private &T> T withOuterClass(Class&T> cls, T* cls2){
private <T> T withOuterClass(ClassT> cls);{
private &T>T withOuterClass(ClassT> cls){
static &T> T withOuterClass(class&T> cls){
private &T> T withOuterClass(Class&T> cls, struct classType cp){
static &T>T withOuterClass(ClassT> cls){
private &T> T withOuterClass(Class&T> cls, PRUint32 id){
T> &T withOuterClass(ClassT> cls){
private T> withOuterClass(Class&T> cls, T* cls){
private &T> <T> withOuterClass(ClassT> cls){
private &T> T withOuterClass(Class&T> cls, Object* aObject){
<T> T withOuterClass(Classes<T> cls){
private T> T withOuterClass(ClassT> cls, int ret){
private <T> T withOuterClass(Class&T> cls, T> cls2){
private inline <T> T withOuterClass(Class<T> cls){
private T> T withOuterClass(Class&C> cls){
private <T> withOuterClass(ClassT> cls){
private T> T withOuterClass(Class&T> cls);{
private T> T&ClassT> cls){
private <T> T withOuterClass(Class&T> cls, const T>& rc){
CONSTRUCTOR&T> T withOuterClass(ClassT> cls){
private T> T withOuterClass(Class<T> cls, int ret){
static &T> TWithOuterClass(ClassT> cls){
<T> &Class<T> cls;{
private T> cls{
private <T> T withOuterClass(Class<T> cls, Object* aObject){
private &T> T withOuterClass(class cls){
private <T> withOuterClass(Class<T> cls){
static ConstructorT> T withOuterClass(Class<T> cls){
private T> T withOuterClass(Class&T> cls, PRBool &isTemp){
private T> T withOuterClass(Class<T> *cls){
private T> <Class&T> cls;{
private T> T withOuterClass(Class<T> cls, ObjectT> object){
private &T> T withOuterClass(Class&T> cls, T> ret){
private <T> withOuterClass(Class<T> aClass){
private T> TwithOuterClass(Class<T> aClass){
<T> TWithOuterClass(Class<T> cls){
T> T withOuterClass(classes){
private <T> TT> withOuterClass(Class&T> cls){
private &T>&T> T withOuterClass(Class&T> cls){
<T> &Class&T> cls;{
private T> T withOuterClass(class<T> cls){
&T> &T withOuterClass(ClassT> cls){
private <T> T[] withOuterClass(ClassT> cls){
private <T> T withOuterClass(Class<T> cls, T> ret){
private &T> TwithOuterClass(Class&T> cls){
private T> T withOuterClass(Class<T> cls, T* cls2){
private <ClassT> T withOuterClass(Class&T> cls){
private &T>T withOuterClass(Class<T> aClass){
private T> T(ClassT> cls){
static const T> T withOuterClass(ClassT> cls){
private <T> T withOuterClass(Class&T> ccls){
private <T> T withOuterClass(ConstructorT>& cls){
&T> T withOuterClass( Class&T> cls ){
<T>> withOuterClass(Class<T> cls){
private T> T withOuterClass(Class&T> cl){
static const &T> withOuterClass(Class<T> cls){
private &T> T withOuterClass(ClassT>* cls){
private &T> T withOuterClass(Class<T> cls, int flags){
virtual T> T withOuterClass(Class&T> cls){
private T> T withOuterClass(Class&T> cls, const char*& clsList){
private &T> int withOuterClass(Class&T> cls){
private <T> T withOuterClass(Class<T> cls, const char*& clsList){
T> T* withOuterClass(Class<T> cls){
private <T> T withOuterClass(Class&T> cls, tor> cls, &tor> cls){
&T>> T withOuterClass(ClassT> cls){
private <T> T withOuterClass(Class<T> cls, int ret){
private T> Class<T> cls;{
private T> TwithOuterClass(Class&T> cls){
private &T>&T> T withOuterClass(Class<T> cls){
private T> T withOuterClass(ClassT> t){
T> T withOuterClass(Class<T> ccls){
T> T withOuterClass( Class&T> cls ){
private T> T withOuterClass(Class<T> cls, void** aResult){
T> T withOuterClass(ClassT> *cls){
private <T> <T> withOuterClass(Class<T> cls){
<T> T withOuterClass(ClassT>> cls){
private <T> T withOuterClass(ClassT> cls, PRInt32* aInstancePtr){
private T> T withOuterClass(Class&T> cls, nsIInt32Class<T>& cls){
NS_IMETHOD T withOuterClass(Class<T> cls){
T> TwithOuterClass(Class<T> cls){
TWithOuterClass(ClassT> cls){
private TT> withOuterClass(ClassT> cls){
private &T>T> withOuterClass(Class<T> cls){
private <T> T withOuterClass(ClassT> cls, nsIArena* aArena){
private <T> T withOuterClass(Class&T> cls, int i){
private &T> T withOuterClass(ClassT> cls, T> nsIListClass aClass){
T> C withOuterClass(Class&T> cls){
private &T> T withOuterClass(Class&T> cls, T>> cls1){
private &T> &T> withOuterClass(ClassT> cls){
<T> T withOuterClass(Class<T> cls){
private &T><T> withOuterClass(Class&T> cls){
private T> T withOuterClass(Class cls){
private &T>& withOuterClass(ClassT> cls){
inline <T> T withOuterClass(Class<T> cls){
private T> T withOuterClass(ClassT> cls, &tor> cls, &tor> cls){
private <T> T withOuterClass(Class&T> cls, void* a){
private <T> TWithOuterClass(ClassT>& cls){
static T> TwithOuterClass(Class<T> cls){
private &T> T withOuterClass(Constructor<T>& cls){
private &T> T* withOuterClass(Class<T> cls){
private <T> T withOuterClass(Class&T> cls, tor> cls, <tor> cls){
private &T>TT> withOuterClass(ClassT> cls){
&T> T* withOuterClass(Class&T> cls){
private &T> <T> withOuterClass(Class&T> cls){
&T> T withOuterClass(ClassT> *cls){
private &T>& T withOuterClass(Class<T> cls){
private <T> T withOuterClass(ClassT> cls){
private &T> T withOuterClass(ElementT> cls){
<T> TT> withOuterClass(Class&T> cls){
<T> T withOuterClass(Class&T> class){
private int T withOuterClass(Class<T> cls){
private <T> int withOuterClass(ClassT> cls){
private &T> T withOuterClass(Class<T> cls, tor> cls, tor> cls){
static &T> T withOuterClass(Class<T> cls){
private T> T withOuterClass(Class&T>, cls){
private &T> T withOuterClass(Class<T> cls, PRInt32* aCls){
static const <T> T withOuterClass(ClassT> cls){
private &T> T withOuterClass(Class&T> cl){
private &T> T withOuterClass(Class&T> s){
Class&T> T withOuterClass(Class&T> cls){
private &T> T withOuterClass(ClassT> cls, nsIInt32&Class&T>& cls){
virtual T> withOuterClass(ClassT> cls){
private <T> T withOuterClass(Class&T> ls){
private <T> T withOuterClass(Class<T> cls, PRInt32* aCls){
private &T> T withOuterClass(ClassT> cls, PRUint32 numClasses){
static const T> withOuterClass(Class&T> cls){
private <T> T withOuterClass(Class&T> cls, ObjectT> object){
private T> T withOuterClass(ClassT> cls, PRUint32 aNameSpaceID){
private <T> T withOuterClass(Class<T> cls, nsIInt32Class<T>& cls){
private &T>T> T withOuterClass(ClassT> cls){
private <T> T(Class<T> cls){
private <T> T&T>(Class&T> cls){
&T> C withOuterClass(ClassT> cls){
const &T> withOuterClass(Class<T> cls){
private <T> T withOuterClass(Class<T>> cls){
private <T> T withOuterClass(ClassT> cls, PRInt32(int)){
private <T> T withOuterClass(Class<T>& cls){
&T> &T> withOuterClass(Class&T> cls){
private <T><T> T withOuterClass(Class&T> cls){
private T> T withOuterClass(nsIClass<T> cls){
private T> withOuterClass(Class&T> cls, void** cls){
&T> T<T> withOuterClass(Class<T> cls){
private &T> int withOuterClass(Class<T> cls){
inline <T> withOuterClass(ClassT> cls){
private T> T withOuterClass(Class<T> cls, void* aProperty){
private &T> T withOuterClass(Class&T>cls){
private <T> withOuterClass(classes){
&T> T withOuterClass(Class&T> class){
private <T> T withOuterClass(ClassT> cls) const{
private <T> T withOuterClass(ClassT> cls, T* cls2){
private T> withOuterClass(ClassT> cls, T *aMatch){
private <T> T withOuterClass(Class&T> cls, T> ret){
private const &T> T withOuterClass(ClassT> cls){
private static &T> T withOuterClass(Class&T> cls){
private T> T withOuterClass(Class&T> cls, void* aProperty){
T> T withOuterClass(Class&T>> cls){
private <T>T> T withOuterClass(ClassT> cls){
private <T> T withOuterClass(ClassT> cls, T> type){
static const <T> T withOuterClass(Class<T> cls){
Private T> T withOuterClass(ClassT> cls){
static const &T> T withOuterClass(ClassT> cls){
private &T> T withOuterClass(T* cls){
private <T> T withOuterClass(ClassT> cls, const T>& rc){
static inline T> T withOuterClass(Class&T> cls){
private <T> T withOuterClass(Type&T> cls){
private <T> T withOuterClass(Class<T> cls, PRUint32 id){
private <T> T withOuterClass(Class<T> cls, boolean do_required){
&T> T* withOuterClass(Class<T> cls){
private L<T> T withOuterClass(Class&T> cls){
private &T>T withOuterClass(Class&T> cls){
private <T> andOuterClass(ClassT> cls){
<T> T<T> withOuterClass(Class<T> cls){
withOuterClass(ClassT> cls){
virtual T> withOuterClass(Class<T> cls){
T> TT> withOuterClass(Class<T> cls){
static <T> TWithOuterClass(Class&T> cls){
private T> T withOuterClass(ClassT> cls, p){
private <T> int withOuterClass(Class&T> cls){
private <T> T withOuterClass(Class<T> cls, int obj, const char *name){
private T> T withOuterClass(ClassT> cls, &tor> cls, <tor> cls){
&T>T withOuterClass(Class&T> cls){
private LT> T withOuterClass(Class<T> cls){
private <Class&T> T withOuterClass(ClassT> cls){
private <T> T withOuterClass(ClassT> cls, T>> cls1){
private &T> T withInstance(ClassT> cls){
private <T> T withOuterClass(Class<T> cl){
private T withOuterClass(Class<T> aClass){
private &T> T withOuterClass(ClassT> aCls){
private &T> T withOuterClass(Class&T> cls, ObjectT> object){
private T> T withOuterClass(Constructor<T>& cls){
private <T> T withOuterClass(Class<T> cls, void){
private T> T withOuterClass(Class<T> cls, &tor> cls, <tor> cls){
private &T> T withOuterClass(Class<T> cls, T* rts){
private T> T withOuterClass(ClassT> cls, nsIInt32Class&T>& cls){
private <T> T withOuterClass(Class<T> cls, T> t){
const <T> T withOuterClass(ClassT> cls){
private T> T withOuterClass(ClassT> cls, T> ret){
private <T> T withOuterClass(Class&T> cls, nsIInt32&ClassT>& cls){
private <T>T withOuterClass(ClassT> aClass){
private T> &T> withOuterClass(Class&T> cls){
private &T> T withOuterClass(ClassT> cls ){
private T> TWithOuterClass(ClassT> cls){
static inline <T> T withOuterClass(ClassT> cls){
private T>t withOuterClass(ClassT> cls){
private &T> withOuterClass(classes){
&T> T withOuterClass(Class&T> *cls){
&T> <Class<T> cls;{
private T> T withOuterClass(ClassT> c){
<T> T withOuterClass(Class&T> *cls){
private &T> T withOuterClass(Class&T> cls, T* rts){
private T> T&Class&T> cls){
private &T> T withOuterClass(Class<T> cls, nsIInt32Class&T>& cls){
private &T>T> T withOuterClass(Class<T> cls){
private T> T* withOuterClass(Class<T> cls){
static const <T>T withOuterClass(Class&T> cls){
&T> T withOuterClass (Class<T> cls){
private const T> T withOuterClass(Class<T> cls){
private inline T> T withOuterClass(Class&T> cls){
T> T withOuterClass( Class<T> cls ){
private <T> T withOuterClass(ClassT> cls, void){
private &Class<T> T withOuterClass(Class<T> cls){
&T> T withOuterClass(Class<T> cls){
&T> T withOuterClass(Class&T> aClass){
private T> T withOuterClass(ClassT>, cls){
&T> TWithOuterClass(Class<T> cls){
private ClassT> T withOuterClass(Class<T> cls){
private <T> T withOuterClass(Class&T> p){
private T><T> T withOuterClass(ClassT> cls){
<T> T withOuterClass(Class<T> cls){
private &T> T withOuterClass(Class<T> cls, &tor> cls, <tor> cls){
<T> T withOuterClass(Class<T> class){
private int withOuterClass(ClassT> cls){
&T> &T withOuterClass(Class<T> cls){
private T> TT>(Class&T> cls){
private &T> T withOuterClass(Class&T> cls, nsIInt32<ClassT>& cls){
private <T> TT>(Class&T> cls){
static <T>T withOuterClass(ClassT> cls){
private <T> T withOuterClass(Constructor&T> cls){
private &T> T withOuterClass(Class<T> cls, PRUint32 id){
private T> T withOuterClass(Class&T> cls, PRInt32 aInstanceT){
private Constructor&T> T withOuterClass(Class<T> cls){
private &T> T withOuterClass(nsClassT>& cls){
static T>T withOuterClass(ClassT> cls){
static static T> T withOuterClass(Class<T> cls){
private <T> T withOuterClass(ClassT> cls, PRBool &isTemp){
static T> TwithOuterClass(ClassT> cls){
private <T> T withOuterClass(ClassT> cls, const char*& clsList){
public &T> T withOuterClass(ClassT> cls){
private <T> T&T> withOuterClass(Class<T> cls){
static static &T> T withOuterClass(Class<T> cls){
private T>&T> withOuterClass(Class<T> cls){
private &T> T withOuterClass(Class&T> cls, T> t){
virtual <T> T withOuterClass(ClassT> cls){
T> T WITHOUTERCLASS(ClassT> cls){
class withOuterClass(ClassT> cls){
private &T> T withOuterClass(IClassT> cls){
private <T> <T> withOuterClass(ClassT> cls){
static <T> TwithOuterClass(ClassT> cls){
private &T> T withOuterClass(Class&T> cls, nsIInt32&Class&T>& cls){
private T> T withOuterClass(Class<T> cls){
private T> T withOuterClass(Class<T> cls, PRInt32* aParam){
private t> T withOuterClass(Class&t> cls){
private <T> T withOuterClass(Class&T> cls, nsIArena* aArena){
private &T> T withOuterClass(Class&T> cls, int flags){
private T> T withOuterClass(Class&T> cls, <tor> cls, tor> cls){
private T> T withOuterClass(Class&T> cls, T* rts){
private <T> T withOuterClass(Class&T> cls);{
private T> T withOuterClass(ClassT> cls ){
private <T> T withOuterClass(ObjectT> cls){
static T> T withOuterClass(){
private T> T withOuterClass(Class&T> cls, PRInt32(int)){
<T> T&T> withOuterClass(Class<T> cls){
private T> T withOuterClass(Class<T> cls, T* aClassType){
private &T> T withOuterClass(Class&T> acls){
private T> T withOuterClass(Class<T> cls, uint32_t trlen){
private T> T withOuterClass(Class<T>* cls){
private T> T withOuterClass(ClassT> *cls){
<T> T withOuterClass(Class<T>){
private <T> T withOuterClass(Class&T> cls, T> type){
<T> T withOuterClass(ClassT> cls){
private &T> T withOuterClass(Class&T> cls, T> cls2){
private &T> T withOuterClass(Class<T> cls, int startOffset, int endOffset){
private const T> T withOuterClass(Class&T> cls){
private <T> T withOuterClass(Class<T> cls, structorT>*>& cls){
private T> T withOuterClass(Class&T> cls, &tor> cls, &tor> cls){
private const &T> T withOuterClass(Class&T> cls){
private T> T withOuterClass(Class<T>& aClass){
private <T> T&Class&T> cls){
<T> T withOuterClass(Class<T> &cls){
private <T> TwithOuterClass(ClassT> aClass){
private &T>&T> withOuterClass(Class<T> cls){
private T> withOuterClass(Class<T> cls, T *aMatch){
private <T> T withOuterClass(Class<T> cls, <tor> cls, <tor> cls){
<T> T withOuterClass(ClassT> cls) const{
private T> T withOuterClass(Class&T> t){
private T> T withOuterClass(Classes&T> cls){
private Class&T> withOuterClass(Class<T> cls){
private <T> T withOuterClass(Class<T>cls){
private &T>T<T> withOuterClass(Class&T> cls){
&T>T withOuterClass(Class<T> cls){
private &T> T withOuterClass(Class&T> cls ){
static static T> T withOuterClass(Class&T> cls){
private <T>T withOuterClass(Class<T> aClass){
private <T>&T> withOuterClass(Class<T> cls){
private <T> T withOuterClass(Class&T> aClass){
&T> T withOuterClass(ClassT> &cls){
&T> <T withOuterClass(Class&T> cls){
private &T> T withOuterClass(Type&T> cls){
private <T> T withOuterClass(Class&T> cls, int startOffset, int endOffset){
&T> T withOuterClass( Class&T> cls){
private <T> C withOuterClass(Class&T> cls){
private T> TWithOuterClass(ClassT> aClass){
T> T withOuterClass(){
private T> T withOuterClass(nsClass&T> cls){
private T> T withOuterClass (Class<T> cls){
<T> T&T> withOuterClass(ClassT> cls){
private &T> T withOuterClass(Class&T> cls, nsIInt32Class<T>& cls){
private T> T withOuterClass(Class<T> cls);{
private <T> TWithOuterClass(Class<T> aClass){
private T>t withOuterClass(Class<T> cls){
const T> withOuterClass(ClassT> cls){
<T><T> T withOuterClass(ClassT> cls){
private T> T withOuterClass(ClassT> cls);{
private &T> T withOuterClass(ClassT> cls, p){
private <T> T withOuterClass(nsClass&T>& cls){
static T> T withOuterClass(Class&T> cls){
private &T> T withOuterClass(Class&T> cls, structorT>*>& cls){
virtual &T> T withOuterClass(Class&T> cls){
private T> TWithOuterClass(Class&T> aClass){
static <T> T withOuterClass(class&T> cls){
private T> T withOuterClass(Class<T> cls, nsIInt32<Class&T>& cls){
private <T> TClassT> cls){
static static <T> T withOuterClass(Class<T> cls){
private <T> T withOuterClass(Class<T> cls, T* rts){
private T&T> withOuterClass(Class&T> cls){
private <T> T withOuterClass(Class<T>* cls){
private &T> T withOuterClass(nsIClassT> cls){
private <T> T withOuterClass(ClassT> s){
private &T> T withOuterClass(Class<T> cls, const T>& rc){
private T> T withOuterClass(ClassT> cls, T> type){
private T> T withOuterClass(Class<T> cls, const &T>& rc){
private T> T withOuterClass(ClassT> cls, const char *c){
private T><T> withOuterClass(Class<T> cls){
private &T> T<T> withOuterClass(Class<T> cls){
private <T> T withOuterClass(ClassT> cls, T> nsIListClass aClass){
private &T> T withOuterClass(Class&T> cls, nsIInt32ClassT>& cls){
&T> T withOuterClass(Class&T> ccls){
private T> T withOuterClass(Class<T> cls, struct classType cp){
private <T> T withOuterClass(Class<T> cls, PRUint32 aNameSpaceID){
private T> T withOuterClass(Type<T> cls){
private &T> T withOuterClass(Class<T> cls, p){
private &T> withOuterClass(Class&T> cls, T *aMatch){
private <T> cls{
private &T> T withOuterClass(Class&T> class){
private <T> T withOuterClass(ClassT> cls, nsIInt32Class<T>& cls){
<T> T withOuterClass(Class&T> ccls){
private T> T withOuterClass(Class<T> acls){
ConstructorT> T withOuterClass(Class&T> cls){
private T>T> withOuterClass(Class&T> cls){
private <T>t withOuterClass(ClassT> cls){
private <T> T withOuterClass(Class<T> cls, nsIInt32<Class&T>& cls){
private T> withOuterClass(Class&T> cls){
private <T> T withOuterClass(Class<T> cls, nsIInt32&Class<T>& cls){
private &T> withOuterClass(ClassT> cls, void** cls){
private <T>T withOuterClass(ClassT> cls){
private &T> T withOuterClass(Class&T> cls, <tor> cls, <tor> cls){
private <T> T withOuterClass(Class<T> cls, T>> cls1){
private T> T withOuterClass(Class<T> cls, tor> cls, tor> cls){
private &T> T withOuterClass(Class<T> cls, struct cls *cls){
private <T> T withOuterClass(Class<T> cls, int flags){
private Class&T> T withOuterClass(Class<T> cls){
private <T> T withOuterClass(Constructor<T> cls){
private ConstructorT> withOuterClass(ClassT> cls){
private &T> T withOuterClass(Class&T> cls);{
private <T> T withOuterClass(ClassT> cls, Object* aObject){
T> withOuterClass(){
&T> T withOuterClass(Class<T> aClass){
<T> withOuterClass(Class<T> cls){
private &T> T withOuterClass(ClassT> class){
private &T> T withOuterClass(Class&T> cls, structor<T>*>& cls){
private <T> TwithOuterClass(Class<T> aClass){
private inline <T> T withOuterClass(Class&T> cls){
private T> T withOuterClass(ClassT> cls, void** aResult){
private <T> T withOuterClass(ClassT> cls, nsClasses** cls){
private T> T withOuterClass(ClassT> cls, <tor> cls, tor> cls){
private <T> cls withOuterClass(Class<T> cls){
private <ClassT> T withOuterClass(Class<T> cls){
private T> T withOuterClass(ClassT> cls, void* aProperty){
private &T> T withOuterClass(Class<T> cls, PRUint32 numClasses){
private T> T withOuterClass(ClassT> cls){
private <T> T withOuterClass(Class<T> cls, PRInt32(int)){
T>&T> T withOuterClass(Class&T> cls){
private &T> T withInstance(Class<T> cls){
private &T> T withOuterClass(Class&T> cls, T* aClassType){
private &T><T> withOuterClass(Class<T> cls){
private T> T withOuterClass(int cls){
private &T> T withInstance(Class&T> cls){
private T> T withOuterClass(Class&T> cls, int obj, const char *name){
private T> T withOuterClass(Class<T> cls, const T>& rc){
private &T> TT>(Class&T> cls){
private <T> T withOuterClass(Class<T> *cls){
private &T> T withOuterClass(ClassT> cls, PRBool &mOwner){
private Const T> T withOuterClass(ClassT> cls){
private <T> T withOuterClass(Class<T> cls, struct classType cp){
private T> T withOuterClass(classes){
private &T> T withOuterClass(cls){
private <T> T withOuterClass(ClassT> cls, void* aProperty){
private &T> T withOuterClass(Class<T> cls, struct classType cp){
T> &Class&T> cls;{
T> T withOuterClass(Class<T>){
private <ClassT> T withOuterClass(ClassT> cls){
private T> T withOuterClass(Class&T> cls, tor> cls, &tor> cls){
private T> T withOuterClass(ClassT> cls, boolean do_required){
private <T> T withOuterClass(ClassT>cls){
private T> T withOuterClass(nsClass&T>& cls){
private &T> T withOuterClass(Class<T> cls, nsIInt32ClassT>& cls){
T> T withOuterClass(ClassT>){
T> TwithOuterClass(Class&T> cls){
self &T> T withOuterClass(ClassT> cls){
private T> &Class<T> cls;{
private T> T withOuterClass(Class<T> p){
protected T> T withOuterClass(Class<T> cls){
private &T> T withOuterClass(Class&T> cls, void){
private &T> T withOuterClass(Class&T> cls, PRUint32 size){
&T> T withOuterClass(Class&T>cls){
const &T> T withOuterClass(Class<T> cls){
T> T withOuterClass(Class&T>& cls){
private T> T withOuterClass(Class<T> s){
private <T> T withOuterClass(Class&T> cls, void* aProperty){
private T> T withOuterClass(Class<T> cls, PRBool* aProtectedClass){
private T> T withOuterClass(Class<T> cls, nsIInt32Class<T>& cls){
private <T> cls withOuterClass(ClassT> cls){
private &T> T withOuterClass(Class&T>, cls){
private &T> ClassT> cls;{
private <T> T withOuterClass(Class<T> cls, structor&T>*>& cls){
<T> T withOuterClass(Class&T>& cls){
private &T> T withOuterClass(Class&T> cls, int ret){
<T>&T> T withOuterClass(Class<T> cls){
private &T> T withOuterClass(Class<T> acls){
private &T> T withOuterClass(Class<T> cls, &tor> cls, &tor> cls){
private T> T withOuterClass(Class<T> aClass){
private &T> T withOuterClass(Class&T> cls, nsIInt32&ClassT>& cls){
inline &T> T withOuterClass(Class<T> cls){
private T>WithOuterClass(Class<T> cls){
<T>> T withOuterClass(Class&T> cls){
private <T> T withOuterClass(Class<T> cls, T*& clsp){
private T> T withOuterClass(Class<T> cls, nsIInt32&Class<T>& cls){
private T> T withOuterClass(Class&T> cls, int startOffset, int endOffset){
static <T> T withOuterClass(Class&T> cls){
private T> T withOuterClass(Class<T> cls, &tor> cls, tor> cls){
private &T><T> T withOuterClass(Class<T> cls){
private T> T withOuterClass(Class<T> cls, T> nsIListClass aClass){
T> T withOuterClass(Class<T> cls) const{
private <T> T withOuterClass(ClassT> cls, PRUint32 *cls){
private &T>T withOuterClass(Class&T> aClass){
protected T> T withOuterClass(ClassT> cls){
private T> T<T>(Class&T> cls){
Constructor<T> T withOuterClass(Class<T> cls){
private T> T withOuterClass(Class<T> cls, nsIInt32Class&T>& cls){
private &T> withOuterClass(){
static const &T>T withOuterClass(ClassT> cls){
private T> T withOuterClass(Class&T> cls, <tor> cls, &tor> cls){
<T> T withOuterClass(classT> cls){
private &T> withOuterClass(Class&T> cls){
private &T> TWithOuterClass(Class<T>& cls){
T> T withOuterClass (ClassT> cls){
private T> T withOuterClass(ClassC> cls){
T> <T> T withOuterClass(Class&T> cls){
private <T> T withOuterClass(Class&T> cls, PRUint32 *cls){
private <T> T withOuterClass(Type<T> cls){
T> T withOuterClass( Class&T> cls){
<T> T WITHOUTERCLASS(Class&T> cls){
private T> T(Class&T> cls){
T withOuterClass(Class&T> cls){
static Class&T> T withOuterClass(ClassT> cls){
private &T> T&Class<T> cls){
private &T>& T withOuterClass(Class&T> cls){
private <T> T withOuterClass(IClass<T> cls){
private T> int withOuterClass(Class<T> cls){
private <T> T withOuterClass(Class<T> cls, PRBool* aT){
private &T> T withOuterClass(ClassT> cls, structorT>*>& cls){
private &T> T withOuterClass(ClassT> cls, PRBool* aT){
private T> classWithOuterClass(ClassT> cls){
static &T> TwithOuterClass(Class<T> cls){
private <T> classWithOuterClass(ClassT> cls){
private T> T withOuterClass(ClassT> cls, Object* aObject){
private &T> T withOuterClass(ClassT> cls, Object* aObject){
private Element<T> T withOuterClass(ClassT> cls){
&T> T&T> withOuterClass(Class&T> cls){
private T> Class<T> cls{
private &T> &Class&T> cls;{
private &T> T withOuterClass(ClassT>> cls){
private T> T withOuterClass(ClassesT> cls){
T> <Class<T> cls;{
private &T> TwithOuterClass(ClassT>& cls){
T> T&T> withOuterClass(ClassT> cls){
private <T>WithOuterClass(ClassT> cls){
<T> T[] withOuterClass(ClassT> cls){
private <T> T withOuterClass(Class&T> cls, const char *c){
virtual &T> withOuterClass(Class<T> cls){
&T> T withOuterClass(Class<T> cls){
private &T>& T withOuterClass(ClassT> cls){
static const <T>T withOuterClass(ClassT> cls){
&T> T withOuterClass(Class&T> cls){
private &T> T withOuterClass(Class<T> c){
T> T withOuterClass(Class<T> &cls){
private &t> T withOuterClass(Classt> cls){
private &T> TT> withOuterClass(Class<T> cls){
private <T> T withOuterClass(ClassT> cls, Object&T> object){
private <T> Class<T> cls;{
private T>T> T withOuterClass(ClassT> cls){
private int withOuterClass(Class<T> cls){
T> <T withOuterClass(ClassT> cls){
private T> TwithOuterClass(ClassT>& cls){
private T> T withOuterClass(Class<T> cls, const char* cls.className){
private <T> T withOuterClass(Class&T> cl){
unsigned T> T withOuterClass(Class&T> cls){
private &T> T withOuterClass(ClassT> cls, nsIInt32Class<T>& cls){
private &T> T withOuterClass(ClassT> cls, nsIStyleContext* aContext, nsIStyleContext* aContext, const nsStyleContext* aStyleContext, nsIContent* aContext, nsIStyleContext* aContext){
private T> TT>(ClassT> cls){
Constructor&T> T withOuterClass(ClassT> cls){
private <T>TT> withOuterClass(Class<T> cls){
private T> T withOuterClass(Class<T>> cls){
private &T> T&T> withOuterClass(ClassT> cls){
private <T> T withOuterClass(nsIClassT> cls){
private <T> withOuterClass(ClassT> cls, const char* clsStr){
private <T> withOuterClass(Class<T> cls){
private &T> T&T> withOuterClass(Class<T> cls){
private ElementT> T withOuterClass(Class<T> cls){
&T> T withOuterClass (ClassT> cls){
private <T> T withOuterClass(nsIClass<T> cls){
private const <T> T withOuterClass(Class&T> cls){
private T> T withOuterClass(ElementT> cls){
private Class<T> withOuterClass(ClassT> cls){
static <T>T withOuterClass(Class&T> cls){
private T> T withOuterClass(cls){
private &T> T withOuterClass(ClassT> cls, uint32_t trlen){
static T> withOuterClass(Class&T> cls){
private T> T withOuterClass(Class<T> cls, Object* aObject){
Private &T> T withOuterClass(Class&T> cls){
static Class<T> T withOuterClass(ClassT> cls){
private &T> T withOuterClass(Constructor<T> cls){
private Const T> T withOuterClass(Class&T> cls){
PRBool T withOuterClass(Class&T> cls){
private &T> T withOuterClass(Class&T> cls, nsIStyleContext* aContext, nsIStyleContext* aContext, const nsStyleContext* aStyleContext, nsIContent* aContext, nsIStyleContext* aContext){
&T> C withOuterClass(Class<T> cls){
private &T> T withOuterClass(ClassT> cls, nsIInt32<Class<T>& cls){
private <T> T withOuterClass(T){
private <T> T withOuterClass(Class<T> cls, PRInt32* aParam){
private &T> TClass&T> cls){
private Class<T> T withOuterClass(Class&T> cls){
private ConstructorT> T withOuterClass(ClassT> cls){
private &T> T withOuterClass(ClassT> cls, tor> cls, <tor> cls){
static T> T withOuterClass(Class&T> cls){
<T> C withOuterClass(ClassT> cls){
private &T> T withOuterClass(Class<T> ccls){
&T> withOuterClass(){
private <T> T withOuterClass(ClassT> cls, T> cls2){
private T>& withOuterClass(Class&T> cls){
private &T> T withOuterClass(ClassT> acls){
private <T> T withOuterClass(Class<T> cls, nsIInt32&ClassT>& cls){
private <T> int withOuterClass(Class<T> cls){
private &T> &ClassT> cls;{
private &T> T withOuterClass(Class<T>cls){
&T> T withOuterClass(Class<T> &cls){
&T> T withOuterClass(Class&T> s){
private &T> T withOuterClass(ClassT> cls, const char *c){
private <T>T&T> withOuterClass(Class<T> cls){
private T>&T> T withOuterClass(ClassT> cls){
T> T withOuterClass(ClassT> cls){
static const T>T withOuterClass(Class&T> cls){
static <T> T withOuterClass(ClassT> cls){
private T> T withOuterClass(Class<T> cls, <tor> cls, &tor> cls){
private <T> T withOuterClass(ClassT> cls, &tor> cls, &tor> cls){
static &T> withOuterClass(Class&T> cls){
private <T> T withOuterClass(Class<T> ls){
private <T> withOuterClass(Class&T> cls){
private <T> T withOuterClass(ClassT> &cls){
private T>T> withOuterClass(ClassT> cls){
private &T> andOuterClass(Class<T> cls){
static const T>T withOuterClass(Class<T> cls){
&T> T withOuterClass(Constructor<T> cls){
T> T withOuterClass(Class<T> cls){
private T> withOuterClass(){
private &T> T withOuterClass(Class<T> cl){
private T> classWithOuterClass(Class<T> cls){
private T> T withOuterClass(T> cls){
<T> <T withOuterClass(ClassT> cls){
private <T> T withOuterClass(Class cls){
class withOuterClass(Class&T> cls){
private &T> T withOuterClass(ClassT> cls, T> cls2){
private &T> T withOuterClass(ClassT> cls, int i){
private T> withOuterClass(Class<T> aClass){
T> T withOuterClass(ClassT> aClass){
PRBool withOuterClass(ClassT> cls){
private T> T withOuterClass(Class&T> cls, nsIInt32&Class<T>& cls){
private T> T<Class<T> cls){
private <T> T withOuterClass(Class&T> cls, PRUint32 aNameSpaceID){
private <T> withOuterClass(Class<T> cls, T* cls){
private T> T withOuterClass(ClassT>& aClass){
private &T> T withOuterClass(ClassT> cls, nsIInt32<Class&T>& cls){
private <T> T withOuterClass(Class<T> cls, nsIInt32Class&T>& cls){
private &T> T withOuterClass(Class&T> cls) const{
static inline T> T withOuterClass(ClassT> cls){
private &T> T withOuterClass( ClassT> cls ){
<T>T withOuterClass(ClassT> cls){
private <T> withOuterClass(ClassT>& cls){
private <T> T withOuterClass(Class<T> cls, nsIInt32<Class<T>& cls){
private const <T> T withOuterClass(Class<T> cls){
private &T> T withOuterClass(ClassT> cls, PRUint32 id){
static const &T>T withOuterClass(Class&T> cls){
private T> T withOuterClass(ClassT> cls, PRInt32* aParam){
static &T> TWithOuterClass(Class<T> cls){
static static <T> T withOuterClass(ClassT> cls){
private &T> Class&T> cls{
private T> T withOuterClass(Class&T> cls, PRInt32* aInstancePtr){
private &T> Class&T> cls;{
static static &T> T withOuterClass(Class&T> cls){
private <T> T withOuterClass(ClassT> t){
private <T> withOuterClass(ClassT> cls, void** cls){
private <T> T withOuterClass(Class&T> cls, <tor> cls, &tor> cls){
private Class<T> withOuterClass(Class<T> cls){
private <T> TwithOuterClass(Class&T>& cls){
<t> T withOuterClass(Class&t> cls){
private T>T> T withOuterClass(Class&T> cls){
private &T> T withOuterClass(ClassT> cls, &tor> cls, tor> cls){
private <T> T&Class<T> cls){
private &T> TwithOuterClass(Class<T>& cls){
public T> T withOuterClass(Class&T> cls){
private <T>& T withOuterClass(Class<T> cls){
private T> T withOuterClass(Class&T> cls, void** aResult){
private <T> andOuterClass(Class<T> cls){
private &T> T withOuterClass(ClassT>& cls){
T> T<T> withOuterClass(Class<T> cls){
private <T> T> withOuterClass(Class&T> cls){
private T>T withOuterClass(Class&T>& cls){
private <T>T withOuterClass(Class&T> cls){
private T> T withOuterClass(Class&T> cls, Object<T> object){
private T> T withOuterClass(T){
private T> T* withOuterClass(ClassT> cls){
<T> Class<T> cls;{
private <T> T withOuterClass(ClassT> cls, nsIInt32&Class<T>& cls){
private &T> T withOuterClass(ClassT> cls, tor> cls, tor> cls){
T> T> T withOuterClass(Class<T> cls){
private T> T withOuterClass(Class&T> acls){
private T> T withOuterClass(Class&T> cls, structorT>*>& cls){
static PRBool T withOuterClass(Class&T> cls){
T> T withOuterClass(ClassT> cls) const{
TWithOuterClass(Class<T> cls){
<T> <T> T withOuterClass(Class<T> cls){
private &T> &T> withOuterClass(Class<T> cls){
T> T withOuterClass(Class&T> aClass){
<T> Class&T> cls;{
T> T withOuterClass(classT> cls){
private &T> TWithOuterClass(ClassT> aClass){
private <T> T withOuterClass(Class&T> cls, T* aClassType){
private T> &ClassT> cls;{
private <T> T withOuterClass(Class<T> cls ){
private static &T> T withOuterClass(ClassT> cls){
private &T> T withOuterClass(Class&T> cls, nsClasses** cls){
private t> T withOuterClass(Class<t> cls){
private <T> T withOuterClass(Class&T> cls, structor<T>*>& cls){
&T>> withOuterClass(ClassT> cls){
T> T withOuterClass( ClassT> cls){
&T> T withOuterClass(Classes&T> cls){
private <T> T withOuterClass(Class<T> cls) const{
private T> T withOuterClass(Class&T> cls, PRBool* aT){
private <T> T withOuterClass(ClassT> cls, PRBool &mOwner){
private Constructor<T> T withOuterClass(Class&T> cls){
private <T> T* withOuterClass(Class<T> cls){
<T> TwithOuterClass(ClassT> cls){
private <T>& withOuterClass(Class&T> cls){
static <T> T withOuterClass(Class<T> cls){
T> T withOuterClass(class){
private <T> T withOuterClass(Class&T> cls, T*& clsp){
private <T> T withOuterClass(Class<T> cls);{
private <T> T withOuterClass(Class<T> cls, PRUint32 size){
&T> T withOuterClass(Class<T> *cls){
<T> T> withOuterClass(ClassT> cls){
private &T> T withOuterClass(Class<T>* cls){
T> <T withOuterClass(Class&T> cls){
private <T> T withOuterClass(Class&T> cls, uint32_t trlen){
private T> T&Class<T> cls){
private &T> T withOuterClass(classT> cls){
private <T> T withOuterClass(Class<T> cls, &tor> cls, tor> cls){
private &T> T withOuterClass(Class&T> cls, const <T>& rc){
private &T> T withOuterClass(Class<T> cls, PRUint32 *cls){
virtual &T> withOuterClass(Class&T> cls){
private T>T withOuterClass(){
private <T> T withOuterClass(nsIClass&T> cls){
private &T> T&T>(Class&T> cls){
<T> <ClassT> cls;{
private &T> T withOuterClass(Class<T> cls, nsIInt32Class<T>& cls){
T>> withOuterClass(Class<T> cls){
Constructor&T> T withOuterClass(Class&T> cls){
private T> T withOuterClass(Class&T>* cls){
private &T> C withOuterClass(ClassT> cls){
private &T> T withOuterClass(ConstructorT>& cls){
private T><T> withOuterClass(Class&T> cls){
private <T> T withOuterClass(Class&C> cls){
private T> T withOuterClass(Class&T> cls, struct cls* cls){
&T> T withOuterClass(Class<T> cls) const{
<T> &ClassT> cls;{
private &T> T withOuterClass(Class&T> cls, PRBool clsIsHidden){
T> T withOuterClass(Class<T> cls){
private <T> T withOuterClass(ClassT> cls, PRBool* aProtectedClass){
Class<T> T withOuterClass(Class&T> cls){
private T> T[] withOuterClass(Class&T> cls){
private &T> T withOuterClass(Class<T> cls) const{
private &T> T withOuterClass(Class&T> p){
private T> withOuterClass(Class&T> cls, const char* clsStr){
private T> T<T> withOuterClass(ClassT> cls){
private <T> T withOuterClass(ClassT> cls, void* a){
<T> T<T> withOuterClass(ClassT> cls){
<T>&T> T withOuterClass(Class&T> cls){
const <T> withOuterClass(ClassT> cls){
<T> TT> withOuterClass(Class<T> cls){
private T> withOuterClass(Class&T>& cls){
&T> Class&T> cls;{
private &T> int withOuterClass(ClassT> cls){
<T> T withOuterClass(ClassT> *cls){
private <T> T withOuterClass(ClassT> l){
private T> T&T> withOuterClass(ClassT> cls){
private &T> T(Class&T> cls){
private <T> T withOuterClass(ClassT> cls, PRUint32 size){
<T> T[] withOuterClass(Class<T> cls){
private ClassT> T withOuterClass(Class&T> cls){
T> T withOuterClass(ClassT> class){
private <T> T withOuterClass(Class&T> cls, Object&T> object){
private <T> T withOuterClass(Class&T> cls, PRInt32(int)){
private &T> T withOuterClass(Class<T> cls, void* aProperty){
private &T> TWithOuterClass(Class&T> aClass){
private T> <ClassT> cls;{
<T> T withOuterClass(Class&T> aClass){
private T> T withOuterClass(Class<T> cls, int i){
private ClassT> withOuterClass(ClassT> cls){
<T> T withOuterClass(ConstructorT> cls){
&T> T withOuterClass(CLASS<T> cls){
private T> T withOuterClass(Class<T> t){
public <T> T withOuterClass(ClassT> cls){
private <T> T withOuterClass(ClassT> cls, int startOffset, int endOffset){
private <T> T withOuterClass(Class&T> class){
inline <T> withOuterClass(Class<T> cls){
private &Class&T> T withOuterClass(Class&T> cls){
public T> T withOuterClass(Class<T> cls){
<T> T WITHOUTERCLASS(ClassT> cls){
private &T> T withOuterClass(Class&T> cls, nsIInt32<Class&T>& cls){
&T> T[] withOuterClass(Class<T> cls){
private T> T withOuterClass(Class&T> class){
&T> T withOuterClass(Class&T>> cls){
private T> T withOuterClass( ClassT> cls ){
<T> T withOuterClass(Constructor<T> cls){
static PRBool T withOuterClass(Class<T> cls){
private &T> T withOuterClass(Class<T> cls){
private <T> T withOuterClass(Class<T> c){
&T> T[] withOuterClass(Class&T> cls){
private &T> T[] withOuterClass(Class<T> cls){
private &T> T withOuterClass(Class<T> cls, structor&T>*>& cls){
private <T> T(ClassT> cls){
private &T> T withOuterClass(Class&T> cls, uint32_t trlen){
private T><T> T withOuterClass(Class<T> cls){
private &T> T withOuterClass(ClassT> cls, T>> cls1){
<T> TT> withOuterClass(ClassT> cls){
private &T> T withOuterClass(Class&T> cls, &tor> cls, &tor> cls){
private T> T withOuterClass(nsClass<T> cls){
private T> T withOuterClass(ClassT> cls, PRBool* aT){
private <T> &Class&T> cls;{
private T withOuterClass(Class&T> cls){
private <T> T withOuterClass(ClassT> ls){
private &t> T withOuterClass(Class<t> cls){
private Constructor<T> withOuterClass(Class<T> cls){
Private &T> T withOuterClass(ClassT> cls){
private <T> T withOuterClass(Class&T>& cls){
private <T> T withOuterClass(Class&T> cls, &tor> cls, <tor> cls){
<T> T withOuterClass( Class<T> cls){
unsigned T> T withOuterClass(Class<T> cls){
private T> TWithOuterClass(Class<T> cls){
T> T withOuterClass(Class<T> class){
T> &T> T withOuterClass(Class<T> cls){
PRBool T withOuterClass(Class<T> cls){
private &T>t withOuterClass(ClassT> cls){
CONSTRUCTORT> T withOuterClass(Class<T> cls){
private &T> withOuterClass(Class<T> cls){
<T> T withOuterClass(ClassT> cls){
private T> T<T> withOuterClass(Class&T> cls){
private inline T> T withOuterClass(Class<T> cls){
private <T> T withOuterClass(Class&T> cls, PRUint32 type){
static T> T withOuterClass(Class<T> cls){
private T> T withOuterClass(ClassT> cls, PRInt32* aInstancePtr){
private &T> T withOuterClass(ClassT> cls, <tor> cls, <tor> cls){
private T> T withOuterClass(IClassT> cls){
private T> T withOuterClass(Class&T> cls, nsIInt32Class&T>& cls){
private T> T withOuterClass(Class&T> cls){
classWithOuterClass(Class&T> cls){
private <T> T withOuterClass(Class&T> cls, const &T>& rc){
private T> withOuterClass(Class<T> cls, const char* clsStr){
private T> T withOuterClass(Class&T> aCls){
Constructor&T> T withOuterClass(Class<T> cls){
private T> TClassT> cls){
<T> T> T withOuterClass(Class&T> cls){
private <T> T withOuterClass(ClassT> cls, tor> cls, &tor> cls){
private T> T withOuterClass(Class<T> cls, <tor> cls, tor> cls){
private <T> T withOuterClass(Class<T> cls, const char* cls.className){
private &T> T withOuterClass(ClassT> cls, ObjectT> object){
static inline &T> T withOuterClass(Class<T> cls){
private T> TwithOuterClass(){
private T> withOuterClass(Class<T>& cls){
withOuterClass(Class<T> cls){
private T> T withOuterClass(ClassT> cl){
private &T><T> T withOuterClass(ClassT> cls){
private &T> withOuterClass(Class&T> cls, void** cls){
<T> C withOuterClass(Class&T> cls){
private <T> T withOuterClass(Class<T> cls, const char *c){
private &T> T withOuterClass(Class<T> cls, const <T>& rc){
static inline <T> T withOuterClass(Class<T> cls){
private T> T withOuterClass(Class&T> cls, PRBool &mOwner){
private T> TWithOuterClass(ClassT>& cls){
private &T> T withOuterClass(Class&T> ccls){
classWithOuterClass(ClassT> cls){
private &T> classWithOuterClass(Class<T> cls){
private <T> T withOuterClass(Class&T> cls, PRInt32* aInstancePtr){
private <T> T withOuterClass(Class<T> cls, PRInt32* aInstancePtr){
static &T> TwithOuterClass(Class&T> cls){
T><T> T withOuterClass(Class<T> cls){
static inline &T> T withOuterClass(Class&T> cls){
private <T> withOuterClass(Class<T> cls, void** cls){
PRBool withOuterClass(Class<T> cls){
static <T> withOuterClass(Class<T> cls){
&T> Class<T> cls;{
private &T> T withOuterClass(Class&T> cls, struct cls *cls){
private <T> TwithOuterClass(Class&T> aClass){
T> T[] withOuterClass(Class&T> cls){
private &T> T withOuterClass(ClassT> cls, PRInt32* aInstancePtr){
private <T> T withOuterClass(Class&T>, cls){
private T> cls withOuterClass(Class<T> cls){
private &T> withOuterClass(ClassT> cls){
private <T> T withOuterClass(ClassT> cls, nsIInt32&Class&T>& cls){
private <T> classWithOuterClass(Class<T> cls){
private &T> T withOuterClass(Class<T> cls, nsIStyleContext* aContext, nsIStyleContext* aContext, const nsStyleContext* aStyleContext, nsIContent* aContext, nsIStyleContext* aContext){
private T> T withOuterClass(ClassT> p){
private T> T withOuterClass(Object&T> cls){
private T> T withOuterClass(ClassT> cls, nsIStyleContext* aContext, nsIStyleContext* aContext, const nsStyleContext* aStyleContext, nsIContent* aContext, nsIStyleContext* aContext){
T> T WITHOUTERCLASS(Class<T> cls){
private T> T withOuterClass(Class<T> cls, nsIStyleContext* aContext, nsIStyleContext* aContext, const nsStyleContext* aStyleContext, nsIContent* aContext, nsIStyleContext* aContext){
<T> <T> withOuterClass(Class<T> cls){
private T> T<T>(ClassT> cls){
private T> T withOuterClass(Classes<T> cls){
protected &T> T withOuterClass(Class<T> cls){
private T> &Class&T> cls;{
private &T>& withOuterClass(Class&T> cls){
private <T> T withOuterClass(ClassT>& cls){
private &T> T withOuterClass(ClassT> cls, T> type){
inline T> T withOuterClass(Class<T> cls){
&T> T withOuterClass(ConstructorT> cls){
private <T> T withOuterClass(Class&T>> cls){
private <T> T withOuterClass(ClassT>){
private &T> T withOuterClass(Class<T> cls, boolean do_required){
private &T> T withOuterClass(Class&T> cls, struct cls* cls){
private &T> T withOuterClass(Class<T> cls, nsClasses** cls){
&T> withOuterClass(ClassT> cls){
classWithOuterClass(Class<T> cls){
private &T> T withOuterClass( Class<T> cls ){
unsigned <T> T withOuterClass(ClassT> cls){
private T> T withOuterClass(ClassT> cls, nsIInt32&ClassT>& cls){
private <T> T withOuterClass(ClassT> cls, nsIInt32<Class&T>& cls){
&T> T withOuterClass(Class&T>){
virtual <T> withOuterClass(ClassT> cls){
private ConstructorT> T withOuterClass(Class<T> cls){
&T> T&T> withOuterClass(Class<T> cls){
&T>T withOuterClass(ClassT> cls){
private <T> T withOuterClass(Class<T> cls, const &T>& rc){
<T> withOuterClass(ClassT> cls){
&T> T withOuterClass( ClassT> cls ){
private &T> T withOuterClass(Class&T> cls, const &T>& rc){
private &T> T withOuterClass(Class<T> aClass){
private <T> T withOuterClass(Classes&T> cls){
private <T> Class&T> cls{
private &T> T withOuterClass(Element&T> cls){
private T> T withOuterClass(ClassT> cls, const char*& clsList){
&T>T> T withOuterClass(Class&T> cls){
<T> T withOuterClass(Class&T> cls) const{
<T> T withOuterClass(ClassT>cls){
private &T> T withOuterClass(Class<T> cls, PRInt32* aInstancePtr){
private <T> classWithOuterClass(Class&T> cls){
private &T> T&T>(Class<T> cls){
T>T> T withOuterClass(Class&T> cls){
&T> T> T withOuterClass(ClassT> cls){
private T><T> T withOuterClass(Class&T> cls){
private &T> T&T>(ClassT> cls){
T> &T> T withOuterClass(ClassT> cls){
private &T> T withOuterClass(Object&T> cls){
private <T> T withOuterClass(ClassT> cls, const char *c){
T> &T> T withOuterClass(Class&T> cls){
private T> T withOuterClass(Class&T> cls, structor<T>*>& cls){
private <T> TwithOuterClass(Class<T> cls){
private <T> T withOuterClass(Class<T> ccls){
private &T> T withOuterClass(ClassT> cls, <tor> cls, tor> cls){
<T> T withOuterClass(class<T> cls){
&T> T* withOuterClass(ClassT> cls){
private <T> T withOuterClass(ClassT> cls, struct cls* cls){
private T> T withOuterClass(Class&T> cls, uint32_t trlen){
private <T> T withOuterClass(Class&T> c){
<t> T withOuterClass(Class<t> cls){
<T> T withOuterClass(CLASS<T> cls){
private T> T withOuterClass(Class&T> cls, &tor> cls, <tor> cls){
private <T> T withOuterClass(Class<T> cls, PRUint32 *cls){
private T> T withOuterClass(Class<T> class){
private &T> T withOuterClass(Class&T> cls, &tor> cls, tor> cls){
&T> T withOuterClass( Class<T> cls){
<t> T withOuterClass(Classt> cls){
private &T> T withOuterClass(Class&T> &cls){
static <T> TWithOuterClass(Class<T> cls){
private T> cls withOuterClass(ClassT> cls){
private T> T withOuterClass(class){
private <T>& withOuterClass(ClassT> cls){
private T> int withOuterClass(ClassT> cls){
private T withOuterClass(ClassT> aClass){
private &T>&T> withOuterClass(ClassT> cls){
private <T> T withOuterClass(class){
private &T> <Class<T> cls;{
private &T>&T> withOuterClass(Class&T> cls){
<T> <T withOuterClass(Class&T> cls){
private &T> T withOuterClass(Element<T> cls){
inline &T> withOuterClass(ClassT> cls){
private <T> T withOuterClass(Class&T> cls, PRInt32* aCls){
private &T> T withOuterClass(Class&T> cls, T> nsIListClass aClass){
private T> TwithOuterClass(Class<T>& cls){
private const &T> T withOuterClass(Class<T> cls){
static T> TWithOuterClass(Class<T> cls){
unsigned <T> T withOuterClass(Class<T> cls){
private &T> T<ClassT> cls){
private <T> T withOuterClass(Class&T>* cls){
private T> T withOuterClass(ClassT>> cls){
virtual &T> T withOuterClass(Class<T> cls){
private T> T withOuterClass(Class&T> cls, nsIInt32&ClassT>& cls){
private &T> T withOuterClass(ClassT> s){
private <T> T withOuterClass(Class&T> cls, int flags){
private <T> T withOuterClass(Class&T> cls, void){
private &ClassT> T withOuterClass(Class&T> cls){
static const <T> T withOuterClass(Class&T> cls){
private &T> T withOuterClass(ClassT> cls, T* rts){
<T> T withOuterClass(ClassT> class){
private &T> T withOuterClass(ClassT> cls, T> ret){
private inline &T> T withOuterClass(ClassT> cls){
private T> T withOuterClass(Class&T> cls, struct classType cp){
private T> T withOuterClass(Class<T> cls, PRInt32 aInstanceT){
static Constructor<T> T withOuterClass(Class<T> cls){
PRBool withOuterClass(Class&T> cls){
private &T> TT> withOuterClass(Class&T> cls){
static <T> TwithOuterClass(Class<T> cls){
private &T> T withOuterClass(Class<T> p){
private T> T withOuterClass(Class<T> cls, T>> cls1){
private T> T withOuterClass(Class&T> cls, Object* aObject){
Private T> T withOuterClass(Class<T> cls){
private <T>t withOuterClass(Class<T> cls){
private &T> withOuterClass(Class<T> cls){
private ConstructorT> withOuterClass(Class&T> cls){
private <T>&T> T withOuterClass(Class<T> cls){
withOuterClass(Class&T> cls){
private <T> T withOuterClass(ClassT> cls, PRUint32 numClasses){
private &T> ClassT> cls{
class withOuterClass(Class<T> cls){
static <T> T withOuterClass(){
private &T> withOuterClass(Class<T> cls, void** cls){
private T> T withOuterClass(ClassT> cls, T*& clsp){
<T> T withOuterClass(classes){
<T> T withOuterClass(Class&T>){
T> T withOuterClass(CLASS&T> cls){
&T> &Class&T> cls;{
private T> T withOuterClass(ClassT> cls, PRUint32 type){
private T> T withOuterClass(Element&T> cls){
<T> T> withOuterClass(Class&T> cls){
private T> T withOuterClass(Class&T>& aClass){
<T> T withOuterClass(ClassesT> cls){
private T> T withOuterClass(ClassT> aClass){
private T>T withOuterClass(Class<T>& cls){
&t> T withOuterClass(Class<t> cls){
T> withOuterClass(Class<T> cls){
private T withOuterClass(Class&T> aClass){
private T<T> withOuterClass(Class<T> cls){
private T> T withOuterClass(Class&T> cls, PRInt32* aCls){
private ElementT> T withOuterClass(Class&T> cls){
private <T> T withOuterClass(Class<T> cls, void* a){
static const <T> withOuterClass(Class&T> cls){
&T>&T> T withOuterClass(Class<T> cls){
T> T WITHOUTERCLASS(Class&T> cls){
private &T> T withOuterClass(ClassT> cls);{
private Class<T> withOuterClass(Class&T> cls){
private &T> <ClassT> cls;{
static <T>T withOuterClass(Class<T> cls){
T> &T withOuterClass(Class&T> cls){
private inline <T> T withOuterClass(ClassT> cls){
private T> T withOuterClass(Class<T> cls, PRInt32* aCls){
<T> <T withOuterClass(Class<T> cls){
private T> T withOuterClass(ClassT> cls, PRUint32 numClasses){
private <T> T withOuterClass(Class<T> cls, int i){
virtual T> T withOuterClass(ClassT> cls){
private <T> T withOuterClass(Class&T> l){
Class<T> T withOuterClass(Class<T> cls){
const T> withOuterClass(Class&T> cls){
private &T> T withOuterClass(ClassT> cls, const <T>& rc){
<T> T withOuterClass(class){
private &T> T withOuterClass(Class&T> *cls){
static &T> T withOuterClass(class<T> cls){
virtual &T> T withOuterClass(ClassT> cls){
private T>TT> withOuterClass(Class&T> cls){
ClassT> T withOuterClass(Class&T> cls){
private <T> T withOuterClass(Class<T> cls, nsClasses** cls){
private static &T> T withOuterClass(Class<T> cls){
private <T> Class<T> cls{
private &T> T withOuterClass(Class&T> ls){
private T> T withOuterClass(Class<T> c){
private T> T withOuterClass(ClassT> cls, T> nsIListClass aClass){
private &T> T withOuterClass(Class<T> cls, T> cls.tc_class){
T> &T withOuterClass(Class<T> cls){
private &T> T withOuterClass(Class<T> cls, PRUint32 aNameSpaceID){
private &T> withOuterClass(Class&T> cls, const char* clsStr){
private Class&T> T withOuterClass(Class&T> cls){
private <T>T&T> withOuterClass(ClassT> cls){
static static &T> T withOuterClass(ClassT> cls){
private <T> T withOuterClass(Class<T> cls, PRUint32 numClasses){
private &T> T withOuterClass(Class<T> cls, structorT>*>& cls){
T<T> withOuterClass(ClassT> cls){
private <T> T withOuterClass(Class&T> cls, PRBool &mOwner){
private <T> T withOuterClass(IClass&T> cls){
private <T> T withOuterClass(nsClass<T>& cls){
private T> T withOuterClass(Class<T> cls, struct cls* cls){
private &T> T withOuterClass(T> cls){
private &T>t withOuterClass(Class<T> cls){
<T> T withOuterClass(){
private &T> T withOuterClass(Class&T> cls, const char *c){
private T> T withOuterClass(nsIClass&T> cls){
private T> T withOuterClass(ClassT> cls){
private <T> T withOuterClass(Class&T> cls, PRInt32 aInstanceT){
private T> T withOuterClass(Class&T> cls, tor> cls, tor> cls){
private <T> T withOuterClass(Class<T> cls, p){
private T> withOuterClass(Class&T> cls, T *aMatch){
private T> TwithOuterClass(Class<T> cls){
private &T> T withOuterClass(Class<T> cls, PRBool* aProtectedClass){
private int T withOuterClass(Class&T> cls){
private &T> T withOuterClass(Class&T> cls, &tor> cls, <tor> cls){
private <T> T withOuterClass(ClassT> cls, nsIStyleContext* aContext, nsIStyleContext* aContext, const nsStyleContext* aStyleContext, nsIContent* aContext, nsIStyleContext* aContext){
private &T> T withOuterClass(Class<T> cls, <tor> cls, &tor> cls){
private T> TwithOuterClass(ClassT> aClass){
public <T> T withOuterClass(Class&T> cls){
private &T> T withOuterClass(nsIClass&T> cls){
private &T> T withOuterClass(Class&T> cls, PRUint32 type){
private &T> T withOuterClass(ClassT> cls, structor&T>*>& cls){
private T> T withOuterClass(Class&T> cls, T> t){
private &T>T> withOuterClass(Class&T> cls){
private &T> T withOuterClass(ClassT> cls, const char* aClass){
private T> T withOuterClass(Constructor&T> cls){
<T> T withOuterClass( ClassT> cls){
private <T> T withOuterClass(Class&T> cls, Object* aObject){
private T> T withOuterClass(Class&T> cls, PRBool* aProtectedClass){
<T> T withOuterClass(Class&T>> cls){
private <T> T<Class<T> cls){
private T> T withOuterClass(ClassT>){
private &T> C withOuterClass(Class&T> cls){
private &T> T withOuterClass(ClassT> cls, nsClasses** cls){
private T> T withOuterClass(ClassT> cls, void* a){
private <T><T> T withOuterClass(ClassT> cls){
Private <T> T withOuterClass(Class<T> cls){
private T> T withOuterClass(Class<T> cls, T> cls.tc_class){
T&T> withOuterClass(ClassT> cls){
private <T>&T> T withOuterClass(ClassT> cls){
private T> T withOuterClass(IClass&T> cls){
static PRBool T withOuterClass(ClassT> cls){
static &T> T withOuterClass(){
unsigned T> T withOuterClass(ClassT> cls){
<T> T withOuterClass(Class<T>cls){
<T> TwithOuterClass(Class<T> cls){
private <T> T withOuterClass(ClassT> cls, nsIInt32Class&T>& cls){
private <T> T withOuterClass(nsClass&T> cls){
private T> T withOuterClass(Class<T> cls, nsIInt32<ClassT>& cls){
&T> &ClassT> cls;{
private Constructor<T> withOuterClass(Class&T> cls){
private &T> T withOuterClass (ClassT> cls){
private <T> C withOuterClass(Class<T> cls){
private T> <T> withOuterClass(Class<T> cls){
private T> T withOuterClass(Class<T> cl){
private T> T withOuterClass(Class<T> cls ){
private T> T withOuterClass(ClassT> ls){
private <T> T withOuterClass(Class&T> cls, &tor> cls, tor> cls){
private T> T withOuterClass(Class<T> cls, nsIInt32ClassT>& cls){
private T> TwithOuterClass(Class&T> aClass){
private T> T withOuterClass(Class&T> cls, const <T>& rc){
private <T> T withOuterClass(Class<T> cls, PRBool &isTemp){
private &T> T* withOuterClass(Class&T> cls){
inline <T> withOuterClass(Class&T> cls){
private &T> withOuterClass(Class&T> cls){
private T> T withOuterClass(Class<T> cls, const <T>& rc){
private T> T withOuterClass(Class<T> ccls){
<T> T[] withOuterClass(Class&T> cls){
static Constructor&T> T withOuterClass(ClassT> cls){
private &T> T withOuterClass(ClassT> cls, void* aProperty){
private <T> T withOuterClass(ClassT> cls, int obj, const char *name){
private T> T(Class<T> cls){
private <T> TWithOuterClass(Class&T> aClass){
static const &T> withOuterClass(Class&T> cls){
<T> &T> T withOuterClass(ClassT> cls){
private <T> T withOuterClass(Class<C> cls){
private &T> T withOuterClass(Class&T> t){
private Element<T> T withOuterClass(Class<T> cls){
private <T> T withOuterClass(Class&T> cls, nsClasses** cls){
private &T>T withOuterClass(Class&T>& cls){
private static T> T withOuterClass(Class<T> cls){
private <T> withOuterClass(Class<T> cls, T *aMatch){
&T> T withOuterClass(Class<T> ccls){
inline <T> T withOuterClass(Class&T> cls){
static Class<T> T withOuterClass(Class&T> cls){
private T>t withOuterClass(Class&T> cls){
private T> ClassT> cls;{
private T> T withOuterClass(nsClass<T>& cls){
private T> withOuterClass(classes){
private T> TClass&T> cls){
T> withOuterClass(ClassT> cls){
<T> T* withOuterClass(ClassT> cls){
T> T withOuterClass(Class&T> &cls){
<T> TwithOuterClass(Class&T> cls){
private &T> T withOuterClass(Class<T> cls, PRBool &isTemp){
private <T> T withOuterClass(Class<T> cls, PRInt32 aInstanceT){
private <T> T withOuterClass(Class&T> cls ){
private <T> T withOuterClass(Class&T> cls, &tor> cls, &tor> cls){
private &T> T withOuterClass(Class&T> cls, PRUint32 aNameSpaceID){
T> <T> withOuterClass(Class&T> cls){
private <T>T> withOuterClass(Class&T> cls){
private T> T withOuterClass(Class&T> p){
private <T> T withOuterClass(ClassT> cls, p){
private <T> withOuterClass(Class<T> cls, const char* clsStr){
private &T>T withOuterClass(ClassT>& cls){
private T> T withOuterClass(Class<T> cls, PRUint32 type){
<T> T withOuterClass(Class<T> aClass){
private T> T withOuterClass(ClassT> cls, <tor> cls, &tor> cls){
private T> T withOuterClass(Class&T> cls, int flags){
private <T> T withOuterClass(ClassesT> cls){
private T withOuterClass(ClassT>& cls){
virtual <T> withOuterClass(Class&T> cls){
virtual T> T withOuterClass(Class<T> cls){
static inline <T> T withOuterClass(Class&T> cls){
private T><T> withOuterClass(ClassT> cls){
private &T> T withOuterClass(ClassT> cls, int flags){
private T> classWithOuterClass(Class&T> cls){
private L&T> T withOuterClass(ClassT> cls){
private <T> T withOuterClass(ClassT> cls, T> ret){
protected <T> T withOuterClass(ClassT> cls){
private &T> T withOuterClass(Constructor&T>& cls){
const &T> withOuterClass(ClassT> cls){
private <T> T withOuterClass(Class&T> &cls){
private <T> T withOuterClass(Class<T> cls, nsIInt32&Class&T>& cls){
private T> T withOuterClass(Class<C> cls){
&T> T<T> withOuterClass(Class&T> cls){
private Element&T> T withOuterClass(Class<T> cls){
private &T> andOuterClass(Class&T> cls){
T> &T> withOuterClass(ClassT> cls){
private T> T withInstance(ClassT> cls){
<T>> T withOuterClass(Class<T> cls){
T> C withOuterClass(Class<T> cls){
static &T> T withOuterClass(Class&T> cls){
<T> <Class<T> cls;{
static const <T> withOuterClass(ClassT> cls){
private T<T> withOuterClass(ClassT> cls){
private <T>T withOuterClass(ClassT>& cls){
private <T> T withOuterClass (Class&T> cls){
<T> T withOuterClass(Class<T> cls) const{
private <T> T withOuterClass(ClassT> cls, nsIInt32<ClassT>& cls){
private <T>T withOuterClass(Class&T>& cls){
private &T> T withOuterClass(Class&T>& aClass){
T> T> withOuterClass(Class&T> cls){
&T>> withOuterClass(Class<T> cls){
private T>T<T> withOuterClass(Class&T> cls){
CONSTRUCTOR&T> T withOuterClass(Class<T> cls){
T> T withOuterClass(class<T> cls){
private T> T withOuterClass(Class<T> cls, p){
T> Class<T> cls;{
private <T> T withOuterClass(Class<T> cls, T> nsIListClass aClass){
<T> &T> withOuterClass(ClassT> cls){
private Constructor<T> T withOuterClass(Class<T> cls){
&T> <T> withOuterClass(ClassT> cls){
&T> T withOuterClass(Class<T>> cls){
private &T> T withOuterClass(Class<T> cls, T* cls2){
private <T> T withOuterClass(ClassT> cls, structor<T>*>& cls){
private T> T withOuterClass(Class<T> cls, nsIInt32&ClassT>& cls){
private &T>T withOuterClass(Class<T> cls){
private &T> T> withOuterClass(Class&T> cls){
<T> T* withOuterClass(Class<T> cls){
private T> T withOuterClass(ClassT> cls, PRBool &mOwner){
T<T> withOuterClass(Class<T> cls){
<T> T withOuterClass(class&T> cls){
private Constructor&T> withOuterClass(Class<T> cls){
private T> T withOuterClass(class cls){
private T> T withOuterClass(ClassT> cls, const char* cls.className){
private <T> T withOuterClass(ClassT> cls, const &T>& rc){
private <T> TwithOuterClass(ClassT>& cls){
private &T> <Class&T> cls;{
private T> T withOuterClass(Class<T> cls, PRUint32 *cls){
private Constructor<T> withOuterClass(ClassT> cls){
T> <T withOuterClass(Class<T> cls){
private ClassT> withOuterClass(Class&T> cls){
private T> T withOuterClass(Class&T> cls, PRUint32 *cls){
private L<T> T withOuterClass(ClassT> cls){
T> T withOuterClass(Classes<T> cls){
private &T> T withOuterClass(Class&T> cls, p){
&T> T withOuterClass(){
private T> T withOuterClass(Class<T> cls, <tor> cls, <tor> cls){
private <T> T withOuterClass(ClassT> cls, int i){
private <T> T withOuterClass(Class<T> cls, structor<T>*>& cls){
private &T> cls withOuterClass(Class&T> cls){
&T> &T withOuterClass(Class&T> cls){
<T> T withOuterClass(ClassT>){
private T> TWithOuterClass(Class&T>& cls){
private &T> T withOuterClass(Class<T> l){
private T> T withOuterClass(Class<T> cls, T*& clsp){
private T> T* withOuterClass(Class&T> cls){
private <T> T withOuterClass(IClassT> cls){
private &T> C withOuterClass(Class<T> cls){
private <T> T withOuterClass(Class<T> class){
private &T>WithOuterClass(ClassT> cls){
private T> T withOuterClass(ClassT> class){
public &T> T withOuterClass(Class<T> cls){
private &T>WithOuterClass(Class<T> cls){
private T> T withOuterClass(Class<T> cls, PRBool &isTemp){
private T>T withOuterClass(Class<T> aClass){
private &T> T withOuterClass(ClassT> cls, const &T>& rc){
private &T> T withOuterClass(ClassT> cls, const char* cls.className){
private &T> T withOuterClass(Class&T> cls, PRBool &mOwner){
T> T<T> withOuterClass(Class&T> cls){
Constructor<T> T withOuterClass(ClassT> cls){
private <T> TClass<T> cls){
<T> T* withOuterClass(Class&T> cls){
T> <T> withOuterClass(ClassT> cls){
private T> T withOuterClass(Class<T> cls, void){
private <T> T* withOuterClass(Class&T> cls){
private T> TWithOuterClass(Class<T>& cls){
private T>WithOuterClass(Class&T> cls){
<T> <Class&T> cls;{
private T> T withOuterClass(ClassT> cls, nsIInt32&Class&T>& cls){
private <T> T[] withOuterClass(Class&T> cls){
private &T> TwithOuterClass(Class<T> aClass){
private <T> T withOuterClass(ClassT> cls ){
private <T> T withOuterClass(Class<T> t){
private T> T withOuterClass(Class&T> cls, p){
private <T> T withOuterClass(ClassT> cls, int ret){
unsigned &T> T withOuterClass(Class&T> cls){
static Constructor<T> T withOuterClass(Class&T> cls){
private Const &T> T withOuterClass(Class&T> cls){
T>T> T withOuterClass(ClassT> cls){
&T> T WITHOUTERCLASS(Class&T> cls){
private &T> T withOuterClass(Type<T> cls){
&T> &T> withOuterClass(Class<T> cls){
<T> T withOuterClass( ClassT> cls ){
private &T> T withOuterClass(ClassT> p){
T> <T> T withOuterClass(Class<T> cls){
<T> T withOuterClass(ClassT> aClass){
&T> T withOuterClass(ClassT>cls){
static const &T> T withOuterClass(Class<T> cls){
private T> T withOuterClass(ClassT> cls, Object<T> object){
private &T> T withOuterClass(Class<T> cls, PRBool* aT){
private &T>T> T withOuterClass(Class&T> cls){
private T> T withOuterClass(TypeT> cls){
private <T> T withOuterClass(ClassT> cls, <tor> cls, &tor> cls){
private &T> T withOuterClass(Class<T> cls, int i){
private &T> T<T> withOuterClass(Class&T> cls){
private &T> T withOuterClass(Class<C> cls){
&T> TwithOuterClass(Class&T> cls){
TwithOuterClass(Class<T> cls){
private &Class&T> T withOuterClass(ClassT> cls){
private Constructor&T> T withOuterClass(ClassT> cls){
private <T> T withOuterClass(Class&T> cls, nsIStyleContext* aContext, nsIStyleContext* aContext, const nsStyleContext* aStyleContext, nsIContent* aContext, nsIStyleContext* aContext){
private &T> T<T>(Class&T> cls){
private T> cls withOuterClass(Class&T> cls){
virtual T> withOuterClass(Class&T> cls){
private T withOuterClass(Class<T> cls){
private T> T withOuterClass(Class<T> cls, tor> cls, &tor> cls){
private T withOuterClass(Class&T>& cls){
private T> T withOuterClass(Class&T> cls, boolean do_required){
private <T> withOuterClass(Class<T>& cls){
const <T> withOuterClass(Class&T> cls){
private <T>T withOuterClass(Class&T> aClass){
T> T withOuterClass(Class&T>cls){
private T> T withOuterClass(Class&T> cls, nsIInt32&Class&T>& cls){
TwithOuterClass(Class&T> cls){
&T> T withOuterClass(Classes<T> cls){
T> TT> withOuterClass(ClassT> cls){
&T> T withOuterClass(CLASS&T> cls){
private &T> T> withOuterClass(ClassT> cls){
const <T> withOuterClass(Class<T> cls){
private T withOuterClass(ClassT> cls){
private &T> TWithOuterClass(ClassT>& cls){
private <T> T withOuterClass(Class&T> cls, T> nsIListClass aClass){
private T> T withOuterClass(Class<T> cls, structor&T>*>& cls){
private <T><T> withOuterClass(ClassT> cls){
private &T> T withOuterClass(Class<T> cls, T> cls2){
private <T> withOuterClass(Class&T> aClass){
private <T> T withOuterClass(Class<T> cls, T* cls2){
private T>TT> withOuterClass(ClassT> cls){
private &T> T withOuterClass(ClassT> aClass){
<T> &T withOuterClass(Class&T> cls){
&T> T withOuterClass(ClassT> cls) const{
static <T> T withOuterClass(Class<T> cls){
static &T>T withOuterClass(Class&T> cls){
private &T> T withOuterClass (Class&T> cls){
protected <T> T withOuterClass(Class<T> cls){
T><T> T withOuterClass(ClassT> cls){
private <T>T<T> withOuterClass(Class<T> cls){
private &T> T withOuterClass(Class&T> cls, nsIInt32&Class<T>& cls){
CONSTRUCTORT> T withOuterClass(ClassT> cls){
private &T> cls{
private &T> T withOuterClass(ClassT> cls, const T>& rc){
private T> T withOuterClass(Constructor<T> cls){
private &T> T withOuterClass(Class&T> cls, PRInt32* aParam){
<T> T withOuterClass(Class&T> s){
private int T withOuterClass(ClassT> cls){
private T> T withOuterClass(ClassT> cls, PRUint32 size){
private T> T withOuterClass(Class<T>& cls){
private &T>T&T> withOuterClass(Class<T> cls){
private &T> TT>(Class<T> cls){
&T> <ClassT> cls;{
private T>WithOuterClass(ClassT> cls){
private &T> T withOuterClass(ClassT> cls, <tor> cls, &tor> cls){
private T> T withOuterClass(nsClassT>& cls){
private &T> T withOuterClass(ClassT> cls, const char*& clsList){
private &Class<T> T withOuterClass(ClassT> cls){
private <T> TT>(Class<T> cls){
private Element&T> T withOuterClass(Class&T> cls){
<T> T> T withOuterClass(Class<T> cls){
private &Class<T> T withOuterClass(Class&T> cls){
&T>&T> T withOuterClass(Class&T> cls){
private <T>&T> withOuterClass(ClassT> cls){
private <T>& T withOuterClass(ClassT> cls){
private <T> T withOuterClass(ClassT> cls, PRInt32* aParam){
private T> T withOuterClass(Class&T> ls){
private &T> T withOuterClass(nsClass&T> cls){
private <T> T withOuterClass(nsClassT> cls){
private T>T<T> withOuterClass(Class<T> cls){
private T> T withOuterClass(Class&T> cls, T> cls2){
&T> &T> T withOuterClass(Class&T> cls){
private &T> T withOuterClass(Class<T> aCls){
private T> T withOuterClass(Class&T> cls, void){
private &T> withOuterClass(Class<T>& cls){
private &T> T withOuterClass(ClassT> ccls){
const <T> T withOuterClass(Class&T> cls){
<T>T> T withOuterClass(ClassT> cls){
&T> &T> T withOuterClass(ClassT> cls){
private T> T withOuterClass(T* cls){
private &T> T withOuterClass(Class&T>* cls){
private T>&T> T withOuterClass(Class<T> cls){
private <T> T withOuterClass(ClassT> cls, struct cls *cls){
private <T> T withOuterClass(Class<T>& aClass){
private Class&T> withOuterClass(ClassT> cls){
static T> TwithOuterClass(Class&T> cls){
static &T> withOuterClass(Class<T> cls){
private <T>T<T> withOuterClass(ClassT> cls){
private T> T withOuterClass(Class&T> cls, T* aClassType){
private T> withOuterClass(ClassT> cls){
private T> T withOuterClass( Class<T> cls ){
private &T> T withOuterClass(ClassT> cls, nsIArena* aArena){
private &T><T> T withOuterClass(Class&T> cls){
&T>T> T withOuterClass(Class<T> cls){
static inline &T> T withOuterClass(ClassT> cls){
&T> T withOuterClass(classT> cls){
private &T> T withOuterClass(ClassT> cls, PRUint32 aNameSpaceID){
private &T> T withOuterClass(Class&T> cls, T> cls.tc_class){
private &T> T withOuterClass(ClassC> cls){
private &T> T withOuterClass(Class&T> cls, PRInt32(int)){
private &T>TT> withOuterClass(Class&T> cls){
&T> T withOuterClass(ClassT>> cls){
T> T withOuterClass(Class<T>cls){
private &T> T withOuterClass(ClassT> cls, PRUint32 size){
static T>T withOuterClass(Class<T> cls){
private &T> T withOuterClass(Class<T> cls, void** aResult){
<T> T withOuterClass (Class<T> cls){
private <T> T withInstance(Class<T> cls){
private <T> T withOuterClass(ClassT> p){
private <T>T> withOuterClass(ClassT> cls){
private T> T withOuterClass(Class&T> cls, Object&T> object){
private <T> T withOuterClass(ClassT> cls, T* aClassType){
private &T> T withOuterClass(Class<T> cls, void* a){
private <T> T<T>(Class&T> cls){
private &T> T withOuterClass(Class<T> class){
private T> T withOuterClass(ClassT> cls, void){
private <T> T withOuterClass(Class&T> cls, nsIInt32&Class&T>& cls){
private T&T> withOuterClass(ClassT> cls){
private &T> T withOuterClass(Class&T> cls, int obj, const char *name){
private &T> T withOuterClass(Class&C> cls){
private &T> cls withOuterClass(ClassT> cls){
T> C withOuterClass(ClassT> cls){
private <T>T withOuterClass(Class<T>& cls){
private T> T withOuterClass(ClassT> cls, PRBool &isTemp){
private T> T withOuterClass(Class&T> cls, PRUint32 id){
private T> T withOuterClass(ClassT> cls, Object&T> object){
private &T> T withOuterClass(classes){
private &T><T> withOuterClass(ClassT> cls){
inline <T> T withOuterClass(ClassT> cls){
private <T> T withOuterClass(ElementT> cls){
private &T> T withOuterClass(Class&T> cls, T> type){
private &T> TT> withOuterClass(ClassT> cls){
private &T> cls withOuterClass(Class<T> cls){
PRBool T withOuterClass(ClassT> cls){
private &T> T withOuterClass(ClassT> cls, boolean do_required){
private &T> T withOuterClass(Class<T> cls, <tor> cls, tor> cls){
private &T> T withOuterClass(T){
private &T> T withOuterClass(ClassT> cls, T* cls2){
private &T>&T> T withOuterClass(ClassT> cls){
<T> T withOuterClass(Class<T> s){
private &T> T withOuterClass(ClassT> *cls){
private <T> T withOuterClass(Class&T> cls) const{
private T> T withOuterClass(Class&T> cls ){
private <T> T<Class&T> cls){
const T> T withOuterClass(ClassT> cls){
private T> T withOuterClass(Class<T> cls, T* rts){
<T> T&T> withOuterClass(Class&T> cls){
private &T> T withOuterClass(Class&T> cls, PRBool* aT){
T> TT> withOuterClass(Class&T> cls){
inline &T> T withOuterClass(ClassT> cls){
private T<T> withOuterClass(Class&T> cls){
private <T> T withOuterClass(Class&T> cls, PRInt32* aParam){
private Class&T> T withOuterClass(ClassT> cls){
&T><T> T withOuterClass(Class<T> cls){
private <T> T withOuterClass(ClassT> *cls){
private T> T withOuterClass(classT> cls){
private <T> T withOuterClass(ClassT>> cls){
private T> T withOuterClass(Constructor&T>& cls){
static ClassT> T withOuterClass(ClassT> cls){
private <T> T withOuterClass( ClassT> cls ){
static const T> withOuterClass(Class<T> cls){
private &T> T(ClassT> cls){
private &T> T withOuterClass(ClassT> cls, T*& clsp){
private <T> T withOuterClass(int cls){
private &T> T withOuterClass(Class<T> cls, <tor> cls, <tor> cls){
private &T> T withOuterClass(ClassT>){
private <T> T withOuterClass(T* cls){
T> withOuterClass(Class&T> cls){
private &T> T withOuterClass(ClassT> cls, struct cls *cls){
private <T> TWithOuterClass(ClassT> cls){
private <T> T> withOuterClass(Class<T> cls){
private &T> T withOuterClass (Class<T> cls){
private &T> Class<T> cls{
private &T> T withOuterClass(Class<T> cls, const char *c){
<T> T withOuterClass(Class<T>& cls){
private ClassT> T withOuterClass(ClassT> cls){
private &T> T withOuterClass(Class&T> cls, tor> cls, tor> cls){
private T> T withOuterClass(ClassT> cls, T> cls.tc_class){
static &T> T withOuterClass(ClassT> cls){
private &T> Class<T> cls;{
private T> T withOuterClass(ClassT> cls, structor&T>*>& cls){
private &T> withOuterClass(Class<T> cls, const char* clsStr){
private <T>&T> withOuterClass(Class&T> cls){
private &T> T withOuterClass(Class&T> cls, const char* aClass){
private T> T withOuterClass(ClassT> cls, T>> cls1){
private T> T withOuterClass(Class&T> cls, const char* aClass){
private T> T withInstance(Class&T> cls){
private &T> TWithOuterClass(Class<T> aClass){
Class<T> T withOuterClass(ClassT> cls){
private &T> T withOuterClass(ClassT> cls, T* aClassType){
<T> <T> withOuterClass(Class&T> cls){
private <T> T withOuterClass(Class<T> cls, nsIInt32<ClassT>& cls){
static const <T>T withOuterClass(Class<T> cls){
private T> T withOuterClass(ClassT> cls, int flags){
private T> T withOuterClass(ClassT> cls, structor<T>*>& cls){
static const &T> T withOuterClass(Class&T> cls){
private &T> T withOuterClass(Class<T> cls, nsIInt32&ClassT>& cls){
private Const <T> T withOuterClass(Class&T> cls){
private T> T withOuterClass(Class<T> cls, const char*& clsList){
static Class<T> T withOuterClass(Class<T> cls){
private T> T withOuterClass(Class&T>){
private &T> T withOuterClass(ObjectT> cls){
private &T> T[] withOuterClass(Class&T> cls){
private <T> T withOuterClass(Class&T> cls, nsIInt32&Class<T>& cls){
private T> T withOuterClass(Class&T> cls, const char* cls.className){
private &T> T withOuterClass(Class&T> cls, PRInt32 aInstanceT){
private T> T withOuterClass(ClassT> cls, &tor> cls, tor> cls){
private T> andOuterClass(ClassT> cls){
private &T> T withOuterClass(Class&T> cls, Object&T> object){
private &T> &Class<T> cls;{
&T>T> T withOuterClass(ClassT> cls){
private &T> T withOuterClass(Class<T> cls, const char*& clsList){
private <T> T withOuterClass(Class<T> cls, nsIInt32ClassT>& cls){
&T> TwithOuterClass(ClassT> cls){
<T> T withOuterClass( Class&T> cls ){
private T> T withOuterClass(ClassT> cls, T> t){
private T> withOuterClass(ClassT> cls, const char* clsStr){
private &T> T withOuterClass(ClassT>& aClass){
private &T> T withOuterClass(Class<T> cls, T* aClassType){
static Constructor&T> T withOuterClass(Class<T> cls){
T> T withOuterClass(class&T> cls){
<T> T WITHOUTERCLASS(Class<T> cls){
protected T> T withOuterClass(Class&T> cls){
private T> T withOuterClass(ConstructorT>& cls){
&T> T withOuterClass (Class&T> cls){
private <T> T withOuterClass(Class<T> cls, T> type){
private <T> TWithOuterClass(){
&T> T withOuterClass(ClassT> ccls){
private T> T withOuterClass(Class&T> cls, nsClasses** cls){
T> T> T withOuterClass(ClassT> cls){
private <T> T withOuterClass(cls){
private T> T withOuterClass(ClassT> cls, nsIArena* aArena){
private &T> T withOuterClass(Class<T> cls, nsIInt32&Class<T>& cls){
private <T> T withOuterClass(Class<T> cls, PRBool* aProtectedClass){
private &T> T withOuterClass(ClassT> cls, nsIInt32<ClassT>& cls){
private &T>T&T> withOuterClass(Class&T> cls){
private &T> T withOuterClass(nsClassT> cls){
private &T> T withOuterClass(Object<T> cls){
private T> ClassT> cls{
private <T> T(Class&T> cls){
private <T> T withOuterClass(Class&T> cls, const char*& clsList){
private <T> T withOuterClass(ClassT> cls){
private T>T> withOuterClass(Class<T> cls){
T> T[] withOuterClass(ClassT> cls){
private <T> T withOuterClass(Class&T> cls, boolean do_required){
&T> <T withOuterClass(Class<T> cls){
private T> T withOuterClass(ClassT>* cls){
private &T> T withOuterClass(ClassT>, cls){
private &T> T withOuterClass(ClassT> cls, nsIInt32&ClassT>& cls){
T&T> withOuterClass(Class<T> cls){
&T> <T> T withOuterClass(Class&T> cls){
private <T> T withOuterClass(Class<T> cls, const <T>& rc){
private &T> T withOuterClass(Classes&T> cls){
private T>T&T> withOuterClass(ClassT> cls){
private &T> T withOuterClass(Class&T> cls, int startOffset, int endOffset){
T> <T> withOuterClass(Class<T> cls){
private T> T> withOuterClass(Class&T> cls){
const T> T withOuterClass(Class&T> cls){
private <T> T withOuterClass(Class&T> cls, p){
private <T> TwithOuterClass(Class&T> cls){
private &T> T withOuterClass(Class&T> cls, void** aResult){
<T>> T withOuterClass(ClassT> cls){
static T> T withOuterClass(classT> cls){
private &T> T withOuterClass(ClassT> cls, Object<T> object){
private <T> T withOuterClass(Class&T> cls, nsIInt32ClassT>& cls){
private <T> T withOuterClass(ClassT> cls, int flags){
private <T> T withOuterClass(Class<T> cls, PRBool &mOwner){
<T> T withOuterClass(Class<T> ccls){
private <T> withOuterClass(ClassT> cls, T *aMatch){
private &T> T withOuterClass(ClassT> ls){
inline T> T withOuterClass(ClassT> cls){
private Element<T> T withOuterClass(Class&T> cls){
T>> withOuterClass(Class&T> cls){
private &T> T withOuterClass(Class<T> cls, nsIInt32<Class<T>& cls){
private T> T withOuterClass(ClassT> cls, T* aClassType){
private T> &T> withOuterClass(ClassT> cls){
private static <T> T withOuterClass(ClassT> cls){
inline T> T withOuterClass(Class&T> cls){
private &T> T withOuterClass(Class<T> cls, ObjectT> object){
private <T>TT> withOuterClass(ClassT> cls){
private &T> T withOuterClass(ClassT> cls, struct cls* cls){
private &T> T withOuterClass(Class&T> cls, nsIArena* aArena){
private T> TT> withOuterClass(ClassT> cls){
private const <T> T withOuterClass(ClassT> cls){
<T> T withOuterClass(Constructor&T> cls){
private &T> T> withOuterClass(Class<T> cls){
T> TWithOuterClass(Class<T> cls){
private <T> <Class<T> cls;{
private &T> T withOuterClass(Class<T> cls, PRBool clsIsHidden){
private T>&T> withOuterClass(Class&T> cls){
private &T> TClass<T> cls){
private &T> T withOuterClass(ClassT> &cls){
<T> T withOuterClass(Classes&T> cls){
static static <T> T withOuterClass(Class&T> cls){
private <T> ClassT> cls;{
&T> C withOuterClass(Class&T> cls){
private LT> T withOuterClass(ClassT> cls){
private <T> TwithOuterClass(ClassT> cls){
private <T> T withOuterClass(Class<T> cls){
private T> int withOuterClass(Class&T> cls){
&T> TwithOuterClass(Class<T> cls){
private &T> T<T>(Class<T> cls){
private T> T withOuterClass(Class&T> cls, PRUint32 numClasses){
private <T> T withOuterClass(Class&T> cls, PRUint32 numClasses){
private &T> T withOuterClass(Class&T> cls, nsIInt32<Class<T>& cls){
private &T> T withOuterClass(ClassT> cls, nsIInt32ClassT>& cls){
private <T> T withOuterClass(Class&T> cls, <tor> cls, <tor> cls){
T> <ClassT> cls;{
private <T> T withOuterClass(ClassT> cls, PRUint32 id){
private &T> T withOuterClass(ClassT> cls, Object&T> object){
&T> &Class<T> cls;{
private &T> T withOuterClass(ClassT> cls) const{
private &T> T withOuterClass(ClassT> cl){
private T> T withOuterClass( Class&T> cls ){
private <T> T withOuterClass(Class<T> cls, tor> cls, <tor> cls){
private &T> T withOuterClass(ClassT> cls, PRInt32* aParam){
private &T>T withOuterClass(ClassT> aClass){
private T> T withOuterClass(ClassT> aCls){
private <T> T withOuterClass(Class&T> cls, PRUint32 size){
private T> T withOuterClass(Class&T> cls, nsIStyleContext* aContext, nsIStyleContext* aContext, const nsStyleContext* aStyleContext, nsIContent* aContext, nsIStyleContext* aContext){
private &T> T withOuterClass(Class<T> cls, T> nsIListClass aClass){
private &T> withOuterClass(Class&T>& cls){
private &T> T withOuterClass( Class&T> cls ){
private <T> T withOuterClass(Class<T> p){
private Const &T> T withOuterClass(ClassT> cls){
private T> T withOuterClass(Class<T>){
private <T> &T> withOuterClass(Class&T> cls){
T> &T> withOuterClass(Class<T> cls){
private <T> T withOuterClass(Object&T> cls){
<T> T> withOuterClass(Class<T> cls){
private <T> withOuterClass(ClassT> cls){
private &T> T withOuterClass(Class<T> cls, void){
private &T> T withOuterClass(IClass&T> cls){
private <T> T withOuterClass(Class&T> cls, struct classType cp){
private <T> T withOuterClass(Class&T> *cls){
virtual <T> withOuterClass(Class<T> cls){
&T> T withOuterClass(classes){
private <T> T withOuterClass(Class<T> s){
private T> T withOuterClass(Class&T> cls, nsIInt32<ClassT>& cls){
private <T> T withOuterClass(Class&T> cls, nsIInt32<ClassT>& cls){
private &T> withOuterClass(ClassT> cls, T *aMatch){
T> T<T> withOuterClass(ClassT> cls){
private <T> T withOuterClass(Class<T> cls, const T>& rc){
T> T&T> withOuterClass(Class<T> cls){
<T> T withOuterClass(Class<T> *cls){
static T withOuterClass(ClassT> cls){
private &T> T withOuterClass(Class<T> cls, const char* cls.className){
private T> T withOuterClass(Class<T> cls, nsClasses** cls){
private &T> T withOuterClass(Class<T> cls, &tor> cls, tor> cls){
&T> T withOuterClass(Class&T> cls) const{
private &T> T withOuterClass(ClassT> cls, int ret){
<T> T withOuterClass(ClassT> ccls){
static T> TWithOuterClass(ClassT> cls){
private T> T&T> withOuterClass(Class<T> cls){
private <T> T withOuterClass(Class&T> cls, T* cls2){
&T> &T> withOuterClass(ClassT> cls){
T> T withOuterClass(ClassT> s){
private ElementT> T withOuterClass(ClassT> cls){
private &T> T withOuterClass(Class<T> cls, T> type){
<T> <T> T withOuterClass(ClassT> cls){
static &T> T withOuterClass(ClassT> cls){
T> T withOuterClass( ClassT> cls ){
private <T> T withInstance(ClassT> cls){
private &T> T withOuterClass(Class&T> cls, <tor> cls, &tor> cls){
T> T* withOuterClass(Class&T> cls){
private <T> T withOuterClass(Class&T> t){
private <T>T withOuterClass(Class<T> cls){
private &T> withOuterClass(ClassT> cls, const char* clsStr){
private T> C withOuterClass(ClassT> cls){
private T> T withOuterClass(Class&T> cls, T*& clsp){
const &T> T withOuterClass(ClassT> cls){
static T> withOuterClass(ClassT> cls){
private &T> T withOuterClass(Class<T> cls, int ret){
&T> T> withOuterClass(ClassT> cls){
private <T> T withOuterClass(classT> cls){
&T> T> withOuterClass(Class<T> cls){
<T> &T withOuterClass(ClassT> cls){
private T> T withOuterClass(ClassT> ccls){
private <T> TWithOuterClass(Class<T>& cls){
private <T> withOuterClass(ClassT> cls, T* cls){
T> TWithOuterClass(Class&T> cls){
private &T> T withOuterClass(Class&T> cls, tor> cls, <tor> cls){
private &T> TwithOuterClass(Class&T>& cls){
static const T> T withOuterClass(Class&T> cls){
private &T> withOuterClass(ClassT> aClass){
private &T> T withOuterClass(Class<T> cls){
private &T> TT>(ClassT> cls){
private &T> T withOuterClass(Class<T> ls){
private <T> TT> withOuterClass(Class<T> cls){
private &T> T withOuterClass(ClassT> cls, &tor> cls, <tor> cls){
private <T> ClassT> cls{
private T> T withOuterClass(Class&T> cls, PRInt32* aParam){
private T> TWithOuterClass(Class<T> aClass){
private <T> T withOuterClass(Class<T> &cls){
private &T> T withOuterClass(Class&T> cls, PRUint32 numClasses){
private &T> withOuterClass(ClassT> cls){
private <T> T withOuterClass(Class&T>& aClass){
private &T> T withOuterClass(Class&T> cls, nsIInt32Class&T>& cls){
private T>T&T> withOuterClass(Class<T> cls){
&t> T withOuterClass(Classt> cls){
private &T> withOuterClass(ClassT> cls, T* cls){
private T> T withOuterClass(ClassT> cls, nsIInt32<Class<T>& cls){
private T> T withOuterClass(ClassT> cls, nsIInt32Class<T>& cls){
T> Class&T> cls;{
private &T> T withOuterClass(Class cls){
private <T> T withOuterClass (ClassT> cls){
private <T>& withOuterClass(Class<T> cls){
<T> <T> T withOuterClass(Class&T> cls){
private T> T<T>(Class<T> cls){
private &T> &T> withOuterClass(Class&T> cls){
private <T> TWithOuterClass(Class&T>& cls){
&T> T withOuterClass(Class<T>cls){
&T> T withOuterClass(ClassT> s){
t> T withOuterClass(Classt> cls){
private <T> T withOuterClass(ClassT> cls, boolean do_required){
private &T>WithOuterClass(Class&T> cls){
private <T> T withOuterClass(Class&T> cls, <tor> cls, tor> cls){
private <T> T<ClassT> cls){
private <T> T withOuterClass(classes){
<T> ClassT> cls;{
private <T>T> T withOuterClass(Class<T> cls){
T> <Class&T> cls;{
private T>T withOuterClass(ClassT> aClass){
private &T> T withOuterClass(ClassT> cls, PRBool clsIsHidden){
private T>& T withOuterClass(Class&T> cls){
private &T>& withOuterClass(Class<T> cls){
private T> T withOuterClass(Class&T> cls, void* a){
Private &T> T withOuterClass(Class<T> cls){
private <T> T withOuterClass(Class&T>cls){
private <T> T withOuterClass(Class&T> cls, PRBool* aT){
private <T> T withOuterClass(Class&T> cls, nsIInt32Class<T>& cls){
private T> T withOuterClass(Class&T> cls, PRBool clsIsHidden){
private T> T withOuterClass(ObjectT> cls){
self T> T withOuterClass(Class<T> cls){
private T> C withOuterClass(Class<T> cls){
private <T>TT> withOuterClass(Class&T> cls){
T> T withOuterClass(Classes&T> cls){
private &T>t withOuterClass(Class&T> cls){
private T> T withOuterClass(Class<T> cls, PRBool clsIsHidden){
private T> withOuterClass(Class<T> cls){
private T> T withOuterClass(Class&T> cls, int ret){
private <T> T withOuterClass(Class<T> cls, &tor> cls, &tor> cls){
private <T> T withOuterClass(ClassT> acls){
private <T> T withOuterClass(ClassT> cls, PRInt32 aInstanceT){
NS_IMETHOD T withOuterClass(ClassT> cls){
private T>& T withOuterClass(ClassT> cls){
private T> T withOuterClass(Type&T> cls){
&T> <Class&T> cls;{
&T><T> T withOuterClass(ClassT> cls){
private T> T withOuterClass(Class<T> cls, PRInt32* aInstancePtr){
private T>T withOuterClass(Class&T> cls){
private T withOuterClass(){
private T> T withOuterClass(ClassT>& cls){
<T> TWithOuterClass(Class&T> cls){
private T> T&T>(Class&T> cls){
private &T> T withOuterClass(Class&T>> cls){
private &Class&T> T withOuterClass(Class<T> cls){
private &T> T withOuterClass(Class<T> cls, PRUint32 type){
private <T> T withOuterClass(Class&T> cls, void** aResult){
private T>T withOuterClass(ClassT>& cls){
ConstructorT> T withOuterClass(ClassT> cls){
private &T> T<T> withOuterClass(ClassT> cls){
private &T> T withOuterClass(Class<T> *cls){
<T>> withOuterClass(ClassT> cls){
private <T> T> withOuterClass(ClassT> cls){
&T> &T> T withOuterClass(Class<T> cls){
private Constructor<T> T withOuterClass(ClassT> cls){
private T> T withOuterClass(ClassT> cls, const &T>& rc){
private T> T withOuterClass(ClassT> cls, tor> cls, tor> cls){
private T> T withOuterClass(Class&T> aClass){
private <T> T<T>(Class<T> cls){
private T> andOuterClass(Class&T> cls){
private <T> T withOuterClass(ClassT> cls, T> t){
private T>TT> withOuterClass(Class<T> cls){
private <T> T withOuterClass(Constructor<T>& cls){
private <T> T withOuterClass(ClassT> cls, Object<T> object){
T> T* withOuterClass(ClassT> cls){
private &T> T withOuterClass(Class<T> s){
self &T> T withOuterClass(Class&T> cls){
private &T> TwithOuterClass(ClassT> aClass){
private T> T withOuterClass(Object<T> cls){
&T> T withOuterClass( ClassT> cls){
&T> TT> withOuterClass(Class&T> cls){
private <t> T withOuterClass(Class<t> cls){
private T> T withOuterClass(Class&T> cls, int i){
private <T> T&T> withOuterClass(Class&T> cls){
private T> T withOuterClass(Class<T> cls, nsIInt32&Class&T>& cls){
private T> T withOuterClass(ClassT> cls, PRUint32 *cls){
private &t> T withOuterClass(Class&t> cls){
CONSTRUCTOR<T> T withOuterClass(Class&T> cls){
private &T> T withOuterClass(Class&T> cls, T*& clsp){
private T> withOuterClass(Class&T> aClass){
private <T> T withOuterClass(class&T> cls){
static const T> T withOuterClass(Class<T> cls){
private <T> <T> withOuterClass(Class&T> cls){
private <T> T withOuterClass(ClassT> cls, PRInt32* aCls){
private T> <T> withOuterClass(Class&T> cls){
private &T> T withOuterClass(nsClass<T>& cls){
protected <T> T withOuterClass(Class&T> cls){
T> T withOuterClass(ClassT>& cls){
private T> T withOuterClass(nsClassT> cls){
private &T> T withOuterClass(ClassT> cls, int obj, const char *name){
Private <T> T withOuterClass(Class&T> cls){
private <T> T withOuterClass(ClassT> cls, const <T>& rc){
private &T> T withOuterClass(ClassT> cls, void* a){
private &T> T withOuterClass(Class<T> cls, Object* aObject){
private T> T withOuterClass(Class&T> cls, ObjectT> object){
private T> T withOuterClass(Class&T> cls, const char *c){
private Class<T> T withOuterClass(ClassT> cls){
private &T> T<Class&T> cls){
NS_IMETHOD T withOuterClass(Class&T> cls){
private <T> T withOuterClass(Class<T> cls, T> cls2){
static &T> withOuterClass(ClassT> cls){
private T>&T> withOuterClass(ClassT> cls){
private <Class<T> T withOuterClass(ClassT> cls){
inline &T> withOuterClass(Class&T> cls){
static const T>T withOuterClass(ClassT> cls){
private T>& withOuterClass(ClassT> cls){
&T> T withOuterClass(ClassesT> cls){
CONSTRUCTOR<T> T withOuterClass(ClassT> cls){
T>T withOuterClass(Class<T> cls){
private T&T> withOuterClass(Class<T> cls){
private T> T withOuterClass(Class<T> cls, PRBool* aT){
private <T> T withOuterClass(Class&T> cls, const char* cls.className){
private T> T withOuterClass(ClassT> cls, nsIInt32<ClassT>& cls){
static T> T withOuterClass(ClassT> cls){
Private <T> T withOuterClass(ClassT> cls){
private &T> T withOuterClass(Class&T> cls, <tor> cls, tor> cls){
private T> T> withOuterClass(Class<T> cls){
private &T> T withOuterClass(Class<T> cls, PRInt32* aParam){
T> T withOuterClass(ClassT>cls){
static Constructor<T> T withOuterClass(ClassT> cls){
private <T> T withOuterClass(Class<T> aCls){
private T> T withOuterClass(Class&T>cls){
private <T> T withOuterClass(ClassT> cls, PRBool* aT){
private T> T withOuterClass(Class<T>, cls){
private T>T withOuterClass(Class&T> aClass){
private T> T withOuterClass(ClassT> cls, PRInt32(int)){
private <T> withOuterClass(){
<T> T withOuterClass(CLASST> cls){
Class&T> T withOuterClass(Class<T> cls){
private <T> T withOuterClass( Class&T> cls ){
unsigned <T> T withOuterClass(Class&T> cls){
<T> &T> withOuterClass(Class<T> cls){
private T> &T> withOuterClass(Class<T> cls){
private T> <T> withOuterClass(ClassT> cls){
private <T> T withOuterClass(Class<T> cls, <tor> cls, &tor> cls){
private <T> T withOuterClass(Class&T> aCls){
private Const <T> T withOuterClass(Class<T> cls){
T> T withOuterClass(Class&T> s){
private <T> T withOuterClass(ClassT> class){
private &T> T withOuterClass(Class&T>){
self T> T withOuterClass(Class&T> cls){
private &T> T withOuterClass(Class<T> cls, tor> cls, <tor> cls){
private <T> T withOuterClass(Class&T> cls, struct cls* cls){
static T> T withOuterClass(class&T> cls){
&T>> withOuterClass(Class&T> cls){
private T> T withOuterClass(Class<T> cls, boolean do_required){
&T> TWithOuterClass(Class&T> cls){
private &ClassT> T withOuterClass(ClassT> cls){
private T> T withOuterClass(ClassT> cls, int obj, const char *name){
private &T> T withOuterClass(Class<T> cls, uint32_t trlen){
private T> T withOuterClass(Class<T> cls, const char* aClass){
private <T> T withOuterClass(Class&T> cls, const char* aClass){
private &T> TwithOuterClass(){
private &T> T&Class&T> cls){
private &T> withOuterClass(Class<T> cls, T *aMatch){
T> T withOuterClass(Class&T> ccls){
static &T> TWithOuterClass(Class&T> cls){
private <T> TWithOuterClass(Class&T> cls){
private <T> T withOuterClass(Class&T> cls, int ret){
private <T>T<T> withOuterClass(Class&T> cls){
private &T> T withOuterClass(ClassT> cls, int startOffset, int endOffset){
private T> T withInstance(Class<T> cls){
private <T> T withOuterClass(Class<T> cls, Object&T> object){
private &T> TClassT> cls){
private &T> T withOuterClass(Class<T> cls, T*& clsp){
T> T withOuterClass(Class&T> cls){
static <T> T withOuterClass(classT> cls){
private <T>& T withOuterClass(Class&T> cls){
private T> withOuterClass(ClassT>& cls){
private <T> T withOuterClass(ClassT>& aClass){
private &T> T withOuterClass(Class<T> &cls){
private <T> T withOuterClass(ClassT>, cls){
private T> withOuterClass(Class<T> cls, void** cls){
t> T withOuterClass(Class&t> cls){
T> T withOuterClass(ClassesT> cls){
TT> withOuterClass(Class<T> cls){
<T> withOuterClass(){
private <T> T withOuterClass(Class<T> cls, Object<T> object){
private <T> T withOuterClass(ClassT> cls, T> cls.tc_class){
private <T> T withOuterClass(ClassT> cls, structorT>*>& cls){
&T> T withOuterClass(Class&T> cls){
private <T> T withOuterClass(Class<T> cls, const char* aClass){
private T> withOuterClass(Class&T> cls){
private T> T withOuterClass(Class&T> cls, structor&T>*>& cls){
private T> T withOuterClass(Class<T> cls, Object<T> object){
private <T> TWithOuterClass(ClassT> aClass){
private <T> andOuterClass(Class&T> cls){
private T> T withOuterClass(IClass<T> cls){
private Constructor&T> T withOuterClass(Class&T> cls){
private T> T withOuterClass(Class&T> cls, const &T>& rc){
private &T> TWithOuterClass(Class<T> cls){
private &T> T withOuterClass(ClassT> l){
private <T> T withOuterClass(ClassT> cls, T* rts){
virtual <T> T withOuterClass(Class<T> cls){
private T> T withOuterClass(Class<T> cls) const{
private T> T<Class&T> cls){
private T> T withOuterClass(Class&T> cls, nsIArena* aArena){
private &T> T withOuterClass(Class<T> cls, T>> cls1){
static ConstructorT> T withOuterClass(ClassT> cls){
private <T> T withOuterClass(Class<T> cls, nsIArena* aArena){
private T> T withOuterClass(Class<T> cls, PRUint32 numClasses){
private &T> T withOuterClass(Class&T> cls, PRBool* aProtectedClass){
private T> TT> withOuterClass(Class<T> cls){
private <T> T withOuterClass(Classes<T> cls){
private T> T withOuterClass(Class<T> cls, T> type){
T> T withOuterClass(ConstructorT> cls){
&T> T<T> withOuterClass(ClassT> cls){
private &T> withOuterClass(ClassT>& cls){
private <T> withOuterClass(Class&T> cls, const char* clsStr){
private <T> T withOuterClass(Element<T> cls){
private &T> withOuterClass(Class<T> cls, T* cls){
private T> T withOuterClass(Class&T> cls) const{
private T> T withOuterClass(Class<T> cls, struct cls *cls){
private static T> T withOuterClass(Class&T> cls){
private &T> T withOuterClass(Class<T>& aClass){
private &T> T withOuterClass(ClassT> cls, &tor> cls, &tor> cls){
private L<T> T withOuterClass(Class<T> cls){
private T> T withOuterClass(ClassT> cls, int i){
private <T> withOuterClass(Class&T> cls, T* cls){
private &T>T&T> withOuterClass(ClassT> cls){
private <T> T withOuterClass(Class&T> cls, structor&T>*>& cls){
<T>&T> T withOuterClass(ClassT> cls){
private &T> T withOuterClass(Class&T> c){
private &T> T&ClassT> cls){
private <T> T withOuterClass(Class<T> cls, void** aResult){
private <T> &Class<T> cls;{
private <T> T[] withOuterClass(Class<T> cls){
virtual &T> withOuterClass(ClassT> cls){
private <T> T withOuterClass(ClassT>* cls){
private &T> T withOuterClass(Class<T>> cls){
&T> T withOuterClass(Class&T>& cls){
private <T> T withOuterClass(Class<T> cls, &tor> cls, <tor> cls){
private &T> TwithOuterClass(Class&T> aClass){
&T> T withOuterClass(class<T> cls){
private <T> T withOuterClass(Class&T> cls, T* rts){
private <Class&T> T withOuterClass(Class&T> cls){
private &T> T withOuterClass(Class<T> cls, PRBool &mOwner){
private <T> T withOuterClass(Class&T> cls, PRUint32 id){
private T>T> T withOuterClass(Class<T> cls){
private T> T withOuterClass(Class&T> cls, PRUint32 type){
static const T> withOuterClass(ClassT> cls){
private ConstructorT> T withOuterClass(Class&T> cls){
&T> T> T withOuterClass(Class&T> cls){
T> &T> withOuterClass(Class&T> cls){
private &T> T withOuterClass(Class&T> cls, PRBool &isTemp){
private <T> T withOuterClass(ConstructorT> cls){
private &T> T* withOuterClass(ClassT> cls){
&T> TT> withOuterClass(Class<T> cls){
private T> T> withOuterClass(ClassT> cls){
T> T withOuterClass(Class&T> *cls){
private T> T withOuterClass(ClassT> &cls){
private T> T withOuterClass(ClassT> cls, PRUint32 id){
private <T> T withOuterClass(Class<T> cls, void* aProperty){
private &T> T withOuterClass(Class<T> cls);{
private T> T withOuterClass(Class<T> cls, int obj, const char *name){
&T> <T withOuterClass(ClassT> cls){
T> T> T withOuterClass(Class&T> cls){
private <T> T withOuterClass(ClassT> cls, void** aResult){
T<T> withOuterClass(Class&T> cls){
<T> T withOuterClass (Class&T> cls){
private inline T> T withOuterClass(ClassT> cls){
T> T withOuterClass(ClassT> cls){
private &T> T withOuterClass(ClassT> cls, T> cls.tc_class){
<T> T withOuterClass(Class&T> cls){
private T> T withOuterClass(Class<T> cls, Object&T> object){
<T> C withOuterClass(Class<T> cls){
private <T> T withOuterClass(Class&T> cls, PRBool &isTemp){
private T> T withOuterClass(Class<T> &cls){
private T> T withOuterClass(Class<T>cls){
static <T> TwithOuterClass(Class&T> cls){
private <T> T withOuterClass(ClassT> cls, PRBool clsIsHidden){
private T> T&T>(Class<T> cls){
unsigned &T> T withOuterClass(Class<T> cls){
&T> <T> T withOuterClass(Class<T> cls){
private <T> TWithOuterClass(Class<T> cls){
private &T> T withOuterClass(Class&T> cls, const T>& rc){
inline &T> T withOuterClass(Class&T> cls){
private T> withOuterClass(ClassT> aClass){
<T> T withOuterClass(ClassT> s){
inline T> withOuterClass(Class&T> cls){
private &T> TWithOuterClass(){
private T> T withOuterClass(Class&T>> cls){
private <T> T withOuterClass(ClassT> aCls){
const T> withOuterClass(Class<T> cls){
<T> T<T> withOuterClass(Class&T> cls){
private <T> T withOuterClass(ClassT> cls, const char* cls.className){
private &T> withOuterClass(Class&T> aClass){
public T> T withOuterClass(ClassT> cls){
private T> withOuterClass(Class<T> cls, T* cls){
private <T> &ClassT> cls;{
static &T> T withOuterClass(classT> cls){
T> T withOuterClass(Class<T> s){
T>&T> T withOuterClass(ClassT> cls){
static Class&T> T withOuterClass(Class&T> cls){
private <T> T withOuterClass(Object<T> cls){
private <T>T> withOuterClass(Class<T> cls){
private &T> T withOuterClass(){
private T> T withOuterClass(ClassT>cls){
static &T>T withOuterClass(Class<T> cls){
private T> T withOuterClass(Element<T> cls){
private T> T withOuterClass(Class&T> cls, <tor> cls, <tor> cls){
static T> T withOuterClass(class<T> cls){
private T> T withOuterClass(Class<T> cls, nsIArena* aArena){
static T> withOuterClass(Class<T> cls){
private &T>T withOuterClass(Class<T>& cls){
private Element&T> T withOuterClass(ClassT> cls){
static Class&T> T withOuterClass(Class<T> cls){
private T> C withOuterClass(Class&T> cls){
private <T> T withOuterClass(Class<T> l){
private <T>WithOuterClass(Class<T> cls){
<T> &T> T withOuterClass(Class&T> cls){
private T>&T> T withOuterClass(Class&T> cls){
private &T>T withOuterClass(){
private <T> T withOuterClass(Class<T> cls, uint32_t trlen){
private <T> T withOuterClass(Class&T>){
static <T> withOuterClass(Class&T> cls){
private T> T withOuterClass(ClassT> cls, T* cls2){
ConstructorT> T withOuterClass(Class<T> cls){
private <T> T withOuterClass(Constructor&T>& cls){
private T withOuterClass(Class<T>& cls){
&T>> T withOuterClass(Class&T> cls){
private T> T withOuterClass(Class&T> cls, nsIInt32ClassT>& cls){
private <T><T> withOuterClass(Class&T> cls){
TT> withOuterClass(ClassT> cls){
private &T> T withOuterClass(ClassesT> cls){
private <T> T<T> withOuterClass(Class&T> cls){
private T> T<T> withOuterClass(Class<T> cls){
private &T> T withOuterClass(Class&T> aCls){
protected &T> T withOuterClass(ClassT> cls){
private T> T&T>(ClassT> cls){
private T> T withOuterClass(Class<T> cls, PRUint32 aNameSpaceID){
private &T> T withOuterClass(Class<T> cls, nsIInt32<ClassT>& cls){
T>&T> T withOuterClass(Class<T> cls){
private T> T withOuterClass(Class<T> cls, PRUint32 size){
private &T> T withOuterClass(Class<T> t){
private &T> T withOuterClass(Class&T> cls, int i){
private &T> T[] withOuterClass(ClassT> cls){
private T> T withOuterClass(Class&T> cls){
private T> TT> withOuterClass(Class&T> cls){
private T> T withOuterClass(ClassT> acls){
private &T> classWithOuterClass(Class&T> cls){
private <T> T withOuterClass(Class<T> aClass){
private &T> andOuterClass(ClassT> cls){
private <T> T withOuterClass(Class&T> cls, nsIInt32<Class&T>& cls){
private T> T&T> withOuterClass(Class&T> cls){
t> T withOuterClass(Class<t> cls){
private Class<T> T withOuterClass(Class<T> cls){
private T> T withOuterClass(Class&T> cls, struct cls *cls){
T withOuterClass(ClassT> cls){
private <T> withOuterClass(Class&T> cls, void** cls){
<T> T withOuterClass(ClassT> &cls){
private T> T withOuterClass(ClassT> cls, const char* aClass){
private <T> T withOuterClass(Class<T> cls, T* aClassType){
private T> T withOuterClass(Class&T> cls, nsIInt32<Class&T>& cls){
private T> T<ClassT> cls){
private &T> T withOuterClass(Class<T> cls, nsIInt32&Class&T>& cls){
static const &T>T withOuterClass(Class<T> cls){
<T> T> T withOuterClass(ClassT> cls){
private T> T withOuterClass(Class<T> aCls){
private <T> T withOuterClass(Class<T> cls){
static const <T> withOuterClass(Class<T> cls){
private <T> T withOuterClass(Class<T> acls){
private ClassT> withOuterClass(Class<T> cls){
private <T> T withOuterClass(Class&T> cls, T> cls.tc_class){
private <T> withOuterClass(Class&T> cls, T *aMatch){
private <T> T withOuterClass(ClassT> cls, tor> cls, tor> cls){
private <T> Class&T> cls;{
&T> T withOuterClass(ClassT> cls){
private &T> T withOuterClass(ClassT> cls, PRUint32 type){
private <T> T withOuterClass(Class<T> cls, tor> cls, &tor> cls){
private T> T withOuterClass(Class&T> ccls){
T> T withOuterClass(Class&T>){
private <T> T withOuterClass(Class&T> cls, PRBool clsIsHidden){
private &T> T withOuterClass(ClassT> cls, PRInt32* aCls){
<T> T withOuterClass(Class<T>> cls){
private &T> T withOuterClass(Class&T> cls, PRInt32* aCls){
private T> T withOuterClass(ClassT> cls, const T>& rc){
private T> T[] withOuterClass(ClassT> cls){
static <T> T withOuterClass(class<T> cls){
private &T> T withOuterClass(Class<T>, cls){
private <t> T withOuterClass(Classt> cls){
private &T> TWithOuterClass(Class&T>& cls){
private <T> T withOuterClass(ClassT> cls, &tor> cls, tor> cls){
T> <T> T withOuterClass(ClassT> cls){
<T> <T> withOuterClass(ClassT> cls){
private T> T withOuterClass(ClassT> cls, nsIInt32&Class<T>& cls){
private inline &T> T withOuterClass(Class<T> cls){
&T> T withOuterClass(Constructor&T> cls){
&T><T> T withOuterClass(Class&T> cls){
private <T> T withOuterClass(Class<T> cls, ObjectT> object){
const &T> T withOuterClass(Class&T> cls){
static &T> T withOuterClass(Class<T> cls){
private T> T withOuterClass(Class<T> cls, int flags){
private &T> T withOuterClass(Class<T>& cls){
private <Class<T> T withOuterClass(Class&T> cls){
private <T> <Class&T> cls;{
private T> Class&T> cls{
private &T> T withOuterClass(Class<T> cls, Object<T> object){
&T> T withOuterClass(Class<T>){
private <T> T withOuterClass(Class&T> cls, PRBool* aProtectedClass){
private <T> T withOuterClass(Class<T> cls, nsIStyleContext* aContext, nsIStyleContext* aContext, const nsStyleContext* aStyleContext, nsIContent* aContext, nsIStyleContext* aContext){
private <T> T withOuterClass(ClassT> cls, nsIInt32<Class<T>& cls){
private T> TwithOuterClass(ClassT> cls){
static inline T> T withOuterClass(Class<T> cls){
private t> T withOuterClass(Classt> cls){
TwithOuterClass(ClassT> cls){
private T> T withOuterClass(ClassT> cls, PRBool* aProtectedClass){
private T> T withOuterClass(Class<T> cls, T> t){
private &T> T withOuterClass(ClassT> cls, PRInt32 aInstanceT){
private T> T withOuterClass(Class&T> s){
private T> T withOuterClass(ClassT> cls) const{
private <T> T withOuterClass(Class&T> cls, tor> cls, tor> cls){
private T> T withOuterClass(ClassT> cls, tor> cls, <tor> cls){
private &T> T<Class<T> cls){
private <T> T&T>(ClassT> cls){
private T> T withOuterClass(Class<T> cls, &tor> cls, &tor> cls){
private <T> T withOuterClass(ClassT> cls, struct classType cp){
private T> T withOuterClass(Class&T>& cls){
private &T>T<T> withOuterClass(Class<T> cls){
private &T> T withOuterClass(Class<T> cls, const &T>& rc){
&T> T withOuterClass(class&T> cls){
private static <T> T withOuterClass(Class<T> cls){
T>T withOuterClass(ClassT> cls){
private <T> T withInstance(Class&T> cls){
<T> T withOuterClass(Class&T> cls){
private <T> &T> withOuterClass(ClassT> cls){
private int withOuterClass(Class&T> cls){
private T> T withOuterClass(ConstructorT> cls){
private T> T withOuterClass(Class<T> cls, tor> cls, <tor> cls){
private &T> classWithOuterClass(ClassT> cls){
T> T withOuterClass(Class&T> cls){
private <T>T withOuterClass(){
private <T> T withOuterClass(Class<T>){
private <Class<T> T withOuterClass(Class<T> cls){
<T> T withOuterClass (ClassT> cls){
T> T withOuterClass(CLASS<T> cls){
static T> T withOuterClass(ClassT> cls){
private T> T withOuterClass(ClassT> cls, T* rts){
private &T> T withOuterClass(ClassT> cls, structor<T>*>& cls){
private T> T withOuterClass(Class<T> cls, const char *c){
private T> T withOuterClass (ClassT> cls){
private &T> T&T> withOuterClass(Class&T> cls){
private T> TT>(Class<T> cls){
public &T> T withOuterClass(Class&T> cls){
static <T> T withOuterClass(ClassT> cls){
private T> T withOuterClass(Class<T> cls, structorT>*>& cls){
self T> T withOuterClass(ClassT> cls){
CONSTRUCTORT> T withOuterClass(Class&T> cls){
T>> T withOuterClass(ClassT> cls){
&T> ClassT> cls;{
self <T> T withOuterClass(ClassT> cls){
private <T> T withOuterClass(nsClass<T> cls){
&T> T withOuterClass(ClassT>){
private &T> T withOuterClass(class){
private T> withOuterClass(ClassT> cls, void** cls){
private L&T> T withOuterClass(Class<T> cls){
inline T> withOuterClass(ClassT> cls){
private T> T withOuterClass(Class&T> cls, PRUint32 aNameSpaceID){
&T> <T> withOuterClass(Class<T> cls){
&T> T[] withOuterClass(ClassT> cls){
private T> T withOuterClass(Class&T> cls, &tor> cls, tor> cls){
private T> withOuterClass(ClassT> cls){
&T> TT> withOuterClass(ClassT> cls){
private &T> T withOuterClass(Class&T> cls, void* a){
private T>T&T> withOuterClass(Class&T> cls){
private static T> T withOuterClass(ClassT> cls){
T> T withOuterClass(Constructor&T> cls){
private T> T withOuterClass(Class&T> cls, T> ret){
private T> T withOuterClass(ClassT> cls, const <T>& rc){
private &T> T withOuterClass(Class<T> cls, T> ret){
inline T> withOuterClass(Class<T> cls){
private <T> T withOuterClass(Class&T> cls, structorT>*>& cls){
private <T> TwithOuterClass(){
&T> TWithOuterClass(ClassT> cls){
private T> T withOuterClass(Class&T> l){
T> T withOuterClass(ClassT> &cls){
private T> TClass<T> cls){
private T> T withOuterClass(ClassT> cls, struct cls* cls){
private &T> T withOuterClass(Class&T> aClass){
private &T> T withOuterClass(ConstructorT> cls){
T>T withOuterClass(Class&T> cls){
private &T> T withOuterClass(Class<T> cls, struct cls* cls){
private <T> withOuterClass(ClassT> aClass){
private T> T withOuterClass(ClassT> cls, tor> cls, &tor> cls){
private T> TWithOuterClass(Class&T> cls){
private &T> T withOuterClass(Class&T> cls, tor> cls, &tor> cls){
private Const <T> T withOuterClass(ClassT> cls){
private T>& withOuterClass(Class<T> cls){
private &T> T withOuterClass(class<T> cls){
private <T> T withOuterClass(ClassT> aClass){
T> T withOuterClass(Class<T> *cls){
static <T> T withOuterClass(Class&T> cls){
&T> T withOuterClass(Class<T> class){
private <T> T withOuterClass(Class&T> acls){
private <T> T withOuterClass(Class<T> cls, struct cls *cls){
private <T> C withOuterClass(ClassT> cls){
private &T>T> withOuterClass(ClassT> cls){
private <T> T withOuterClass(Class<T> cls, <tor> cls, tor> cls){
private &ClassT> T withOuterClass(Class<T> cls){
const &T> withOuterClass(Class&T> cls){
T> T[] withOuterClass(Class<T> cls){
private T> T withOuterClass(Class&T> &cls){
private &T> T withOuterClass(Classes<T> cls){
private <T>WithOuterClass(Class&T> cls){
private <T> T withOuterClass(ClassT> cls, <tor> cls, <tor> cls){
private &T> T withOuterClass(Class<T> cls ){
T> T withOuterClass(Class<T>& cls){
private <T> T&T> withOuterClass(ClassT> cls){
private <T> T withOuterClass(ClassC> cls){
&T> <T> withOuterClass(Class&T> cls){
T> TWithOuterClass(ClassT> cls){
private &T> T withOuterClass(ClassT> cls, PRUint32 *cls){
private &T> T withOuterClass(Class<T> cls, int obj, const char *name){
private <T> T withOuterClass(Class&T> cls, nsIInt32<Class<T>& cls){
const <T> T withOuterClass(Class<T> cls){
private <T> T withOuterClass(Class<T> cls, tor> cls, tor> cls){
private &T> T withOuterClass(ClassT> t){
private T> T withOuterClass(Class<T> cls, PRBool &mOwner){
private <T> T<T> withOuterClass(Class<T> cls){
private &T> T withOuterClass(Class&T> cls, boolean do_required){
private <T> T withOuterClass(ClassT> cls, <tor> cls, tor> cls){
private &T> T withOuterClass(Class<T> cls, tor> cls, &tor> cls){
private <T> T withOuterClass(Class<T> cls, PRBool clsIsHidden){
&T> T withOuterClass(class){
&T> <T> T withOuterClass(ClassT> cls){
private T>T<T> withOuterClass(ClassT> cls){
T> T withOuterClass(Class&T> class){
private &T> T withOuterClass(Class<T> cls, structor<T>*>& cls){
private T> T withOuterClass(ClassT> l){
private &T> T withOuterClass(int cls){
Class&T> T withOuterClass(ClassT> cls){
T> T> withOuterClass(ClassT> cls){
private static <T> T withOuterClass(Class&T> cls){
static T> TWithOuterClass(Class&T> cls){
private &T> T withOuterClass(Class&T> cls, const char* cls.className){
self <T> T withOuterClass(Class<T> cls){
private Constructor&T> withOuterClass(Class&T> cls){
T> T withOuterClass(Class&T> cls) const{
&T> T WITHOUTERCLASS(Class<T> cls){
T>> withOuterClass(ClassT> cls){
private <T> T withOuterClass(Class&T> cls, nsIInt32Class&T>& cls){
private <T> T&T>(Class<T> cls){
private <T> T withOuterClass(Class&T> cls, T>> cls1){
<T> T withOuterClass( Class<T> cls ){
private TT> withOuterClass(Class<T> cls){
<T> T withOuterClass(Class&T>cls){
private &T> T withOuterClass(Class<T> cls, Object&T> object){
&T> T withOuterClass(Class&T> &cls){
private <T> T withOuterClass(class cls){
<T> T withOuterClass(Class&T> &cls){
private T> T withOuterClass(Class&T> cls, T> nsIListClass aClass){
private &T> T withOuterClass(ClassT> cls, PRBool* aProtectedClass){
private &T> <T> withOuterClass(Class<T> cls){
private &T> T withOuterClass(ClassT> c){
inline &T> withOuterClass(Class<T> cls){
private <T> T withOuterClass(Class&T> cls, Object<T> object){
private T> T withOuterClass(Class<T> cls, T> cls2){
private &T> TwithOuterClass(Class<T> cls){
T> T withOuterClass (Class<T> cls){
Constructor<T> T withOuterClass(Class&T> cls){
private T> T withOuterClass(ClassT> cls, PRInt32* aCls){
T withOuterClass(Class<T> cls){
private <T> T<T>(ClassT> cls){
private <T> T withOuterClass(Class&T> cls, T> t){
T> T withOuterClass(Class<T> aClass){
TWithOuterClass(Class&T> cls){
&T> withOuterClass(Class&T> cls){
private <T> T withOuterClass(ClassT> cls, PRUint32 type){
private T> T withOuterClass(Class&T> cls, PRUint32 size){
private T> T withOuterClass(Class<T> cls, void* a){
private T> T withOuterClass (Class&T> cls){
private <T><T> T withOuterClass(Class<T> cls){
private ConstructorT> withOuterClass(Class<T> cls){
private &T> T withOuterClass(Class&T> cls, structor&T>*>& cls){
&T> T> T withOuterClass(Class<T> cls){
private T> T withOuterClass(ClassT> cls, nsIInt32<Class&T>& cls){
private T> T withOuterClass(Class&T> cls, T* cls2){
private &T> T withOuterClass(ClassT> cls, PRBool &isTemp){
private <T> T withOuterClass( Class<T> cls ){
private LT> T withOuterClass(Class&T> cls){
T> T&T> withOuterClass(Class&T> cls){
private <T> <ClassT> cls;{
private T> T withOuterClass(Class<T> cls){
private T> T withOuterClass(Class&T> cls, const T>& rc){
T> &Class<T> cls;{
private Constructor&T> withOuterClass(ClassT> cls){
private TT> withOuterClass(Class&T> cls){
private <T> T withOuterClass(ClassT> cls, nsIInt32ClassT>& cls){
private <T> T withOuterClass(ClassT> cls, &tor> cls, <tor> cls){
private <T> T withOuterClass(Class&T> cls){
private &T> T withOuterClass(ClassT> cls, nsIInt32Class&T>& cls){
T>> T withOuterClass(Class<T> cls){
private <T> &T> withOuterClass(Class<T> cls){
private T> T withOuterClass(Class&T> cls, T> cls.tc_class){
const T> T withOuterClass(Class<T> cls){
private &T> T(Class<T> cls){
private &T> T withOuterClass(Class&T> cls){
static T> T withOuterClass(Class<T> cls){
private <T> T withOuterClass(ClassT> cls, uint32_t trlen){
<T>> withOuterClass(Class&T> cls){
private &T> withOuterClass(Class&T> cls, T* cls){
private <T> T withOuterClass(Class&T> cls, const <T>& rc){
private T> T withOuterClass(){
private &T> T withOuterClass(ClassT> cls, T> t){
private T> withOuterClass(Class<T> cls){
static static T> T withOuterClass(ClassT> cls){
private T> <Class<T> cls;{
private <T> T withOuterClass(Class&T> s){
private &T>TT> withOuterClass(Class<T> cls){
private <T> T* withOuterClass(ClassT> cls){
&T> T WITHOUTERCLASS(ClassT> cls){
Private T> T withOuterClass(Class&T> cls){
private &T> T withOuterClass(Class&T> l){
T> T withOuterClass (Class&T> cls){
<T>T> T withOuterClass(Class&T> cls){
private &T> TWithOuterClass(ClassT> cls){
private <T>&T> T withOuterClass(Class&T> cls){
private &T> T withOuterClass(Class<T> cls, nsIArena* aArena){
private T> withOuterClass(ClassT> cls, T* cls){
static <T> TWithOuterClass(ClassT> cls){
T> T withOuterClass(ClassT> ccls){
protected &T> T withOuterClass(Class&T> cls){
private <T> withOuterClass(Class&T>& cls){
&T> T withOuterClass(CLASST> cls){
static Constructor&T> T withOuterClass(Class&T> cls){
static T withOuterClass(Class<T> cls){
private T> T withOuterClass(Class&T> cls, tor> cls, <tor> cls){
self <T> T withOuterClass(Class&T> cls){
&T> T withOuterClass(ClassT> cls){
private <T><T> withOuterClass(Class<T> cls){
private Class&T> withOuterClass(Class&T> cls){
&T> withOuterClass(Class<T> cls){
private T> T withOuterClass(Class<T> ls){
private <T> T withOuterClass(ClassT> cls, const char* aClass){
private &T> TWithOuterClass(Class&T> cls){
T>T> T withOuterClass(Class<T> cls){
private &T> T withOuterClass(Class<T>){
private <T> T withOuterClass(ClassT> cls, structor&T>*>& cls){
private T> T withOuterClass(Class&T> cls, nsIInt32<Class<T>& cls){
private T> T withOuterClass(ClassT> cls, T> cls2){
private &T> T withOuterClass(Constructor&T> cls){
private T> T withOuterClass(Class<T> cls, PRUint32 id){
private &T> T withOuterClass(ClassT> cls){
private T> TWithOuterClass(){
private L&T> T withOuterClass(Class&T> cls){
private &T> T withOuterClass(ClassT> cls, void** aResult){
private &T> T withOuterClass(ClassT> cls, void){
private T> T withOuterClass(Class<T> cls, PRInt32(int)){
private &T> T withOuterClass(nsClass<T> cls){
private <T>T&T> withOuterClass(Class&T> cls){
<T> TWithOuterClass(ClassT> cls){
TT> withOuterClass(Class&T> cls){
private T> T withOuterClass(Class&T> *cls){
private &T> T withOuterClass(ClassT> cls, tor> cls, &tor> cls){
&T> T withOuterClass(Class<T>& cls){
private T> T withOuterClass(ClassT> cls, PRBool clsIsHidden){
static T withOuterClass(Class&T> cls){
private &T> T withOuterClass(nsClass&T>& cls){
<T>T withOuterClass(Class&T> cls){
private &T>T<T> withOuterClass(ClassT> cls){
&T> T withOuterClass(Class<T> s){
private Const &T> T withOuterClass(Class<T> cls){
private T> T withOuterClass(Class<T> l){
private T> T withOuterClass(Class<T> cls, int startOffset, int endOffset){
private &T> T withOuterClass(Class&T>& cls){
<T> T withOuterClass(CLASS&T> cls){
private <T> T withOuterClass(Class<T> cls, T> cls.tc_class){
private <T> TClass&T> cls){
T> T withOuterClass(Constructor<T> cls){
private T> T withOuterClass(ClassT> cls, nsClasses** cls){
private <T> T withOuterClass(TypeT> cls){
ClassT> T withOuterClass(Class<T> cls){
private <T> T withOuterClass(Class<T>, cls){
<T>T> T withOuterClass(Class<T> cls){
&T> T withOuterClass( Class<T> cls ){
static const &T> withOuterClass(ClassT> cls){
private <T> T withOuterClass (Class<T> cls){
private &T> T withOuterClass(nsIClass<T> cls){
private &T> T withOuterClass(class&T> cls){
T><T> T withOuterClass(Class&T> cls){
private &T> TwithOuterClass(ClassT> cls){
private &T> T withOuterClass(Class<T> cls, PRInt32(int)){
private &T> T withOuterClass(TypeT> cls){
private T> T withOuterClass(class&T> cls){
private T> T withOuterClass(ClassT> s){
static <T> withOuterClass(ClassT> cls){
private &T> T withOuterClass(ClassT> cls, nsIInt32&Class<T>& cls){
public <T> T withOuterClass(Class<T> cls){
CONSTRUCTOR&T> T withOuterClass(Class&T> cls){
private <T> TwithOuterClass(Class<T>& cls){
virtual <T> T withOuterClass(Class&T> cls){
private <T> T withOuterClass(ClassT> cls, nsIInt32&ClassT>& cls){
private &T> T withOuterClass(Class&T> cls, const char*& clsList){
private <T> T withOuterClass(ClassT> cls, T*& clsp){
<T><T> T withOuterClass(Class&T> cls){
&T>&T> T withOuterClass(ClassT> cls){
T>> T withOuterClass(Class&T> cls){
private T> T withOuterClass(ClassT> cls, struct cls *cls){
private T> T withOuterClass(Class<T> cls, nsIInt32<Class<T>& cls){
private T> T withOuterClass(ClassT> cls, PRInt32 aInstanceT){
&T>> T withOuterClass(Class<T> cls){
private <T> T withOuterClass(ClassT> cls, PRUint32 aNameSpaceID){
unsigned &T> T withOuterClass(ClassT> cls){
private <T>t withOuterClass(Class&T> cls){
ClassT> T withOuterClass(ClassT> cls){
private &T> T withOuterClass(ClassT> cls, struct classType cp){
private &T> T withOuterClass(Class<T> cls, PRInt32 aInstanceT){
private <T> T withOuterClass(Class<T> cls, struct cls* cls){
private <T>T> T withOuterClass(Class&T> cls){
private T> T withOuterClass(Class&T> c){
private &T> T withOuterClass(Class&T> cls, void* aProperty){
private &T> T withOuterClass(Class&T> cls){
<T> T withOuterClass(ClassT>& cls){
private <T> T withOuterClass(Class<T> cls, int startOffset, int endOffset){
private T> T withOuterClass(ClassT> cls, int startOffset, int endOffset){
private <T> T withOuterClass(ClassT> cls, tor> cls, <tor> cls){
private T> Class&T> cls;{
private <t> T withOuterClass(Class&t> cls){
