return getRegistry().contains(value);
return getRegistry().containsKey(value);
return getRegistry().contains(key);
return getRegistry().contains(new IDKey(value));
return GetRegistry().contains(new IDKey(value));
return getRegistry() == null;
return getRegistry().contains(value);
return isRegistered(value);
return (getRegistry()).contains(new IDKey(value));
return (getRegistry().contains(new IDKey(value)));
return getRegistry().contains(name);
return getRegistry().containsKey(value);
return register.contains(new IDKey(value));
return (getRegistry()).contains(new IDKey(value));
return!getRegistry().contains(new IDKey(value));
return false;
return getRegistry().contains(id);
return getRegistry().contains(value.get());
return getRegistry(value);
return getRegistry().contains(new IIDKey(value));
return getRegistry(&value);
return getRegistry().contains(&value);
return getRegistry().contains(key);
return getRegistry().contains(nsIDKey(value));
return getRegistry().contains(IDKey(value));
return getRegistry().contains(IIDKey(value));
return getRegistry() == null;
return getRegistry().contains(new idKey(value));
return getRegistry().contains(aKey);
return true;
return rv;
return getRegistry().containsKey(new IDKey(value));
return true;
return &getRegistry().contains(new IDKey(value));
return getRegistry().contains(new IDKey(value));
return (getRegistry().contains(new IDKey(value)));
return mRegistry.contains(new IDKey(value));
return getRegistry().contains(aIDKey);
return getRegistry().contains(type);
return getRegistry().contains(new Key(value));
return register().contains(new IDKey(value));
return getRegistry().contains(null);
return (GetRegistry()).contains(new IDKey(value));
return getRegistry().contains(_IDKey(value));
return NS_OK;
return getRegistry().contains(idKey);
return getRegistry().contains(new _IDKey(value));
return getRegistry().contains(*value);
return getRegistry().contains( value );
return getRegistry().contains(NS_IDKey(value));
return mRegistry.contains(new IDKey(value));
return getRegister().contains(new IDKey(value));

return getRegistry().contains(key.get());
return getRegistry().contains((void**)value);
return GetRegistry().contains(new IDKey(value));
return getRegistry().contains(getter_Copies(value));
return getRegistry()!= null;
return getRegistry().contains(null);
return getRegistry().contains(nsIIDKey(value));
return getRegistry().contains(name);
return getRegistry().contains(new IIDKey(value));
return getRegistry().containsKey(key);
return get_registry().contains(new IDKey(value));
return reg.get().contains(new IDKey(value));
return getRegistry().contains(nsIDKey(value));
return getRegistry().contains(NS_IDKEY(value));
return getRegistry().contains(nsAutoString(value));
return getRegistry();
return getRegistry().contains(key, value);
return (GetRegistry().contains(new IDKey(value)));
return (*getRegistry()).contains(new IDKey(value));
return getRegistered().contains(new IDKey(value));
return getRegistry().contains(strlen(value));
return 0;
return getRegistry().contains((void **)value);
return aRegistry.contains(new IDKey(value));
return getRegistry().contains(NS_NewIDKey(value));
return getRegistry().ContainsKey(value);
return getRegistry().contains(IDocumentKey(value));
return getRegistry().contains(PRUnichar(value));
return getRegistry().contains(NS_IID(value));
return getRegistry().contains((const IDKey*)value);
return GetRegistry().contains(value);
return getRegistry().contains(idkey);
return getRegistry().Equals(new IDKey(value));
return this.getRegistry().contains(new IDKey(value));
return getRegistry().contains(mIDKey);
return isRegistered(getRegistry());
return getRegistry(getter_AddRefs(value));
return getRegistry()!= null; return new IDKey(value);
return getsRegistry().contains(new IDKey(value));
return = getRegistry().contains(new IDKey(value));
return getRegistry().contains(nsCIDKey(value));
return getRegistry().contains(None);
return!getRegistry().contains(value);
return do_GetRegistry().contains(new IDKey(value));
return getRegistry().contains(new IDKey(value).get());
return getRegistry().contains(new ObjectKey(value));
return getRegistry().contains(v);
return isRegistered(value, getRegistry());
return!isRegistered(value);
return getRegistry().contains(obj);
return getRegistry().contains((void**) value);
return getRegistry().contains(index);
return getRegistry().contains(val);
return do_QueryInterface(value);
return getRegistry().contains(newKey(value));
return getRegistry().contains((IIDKey*)value);
return getRegistry().contains(uri);
return getRegistry().get() == null;
return getRegistry().contains(s);
return getRegistry().contains((void*)value);
return getRegistry().contains(this);
return (new IDKey(value));
return getRegistry(key);
return isRegistered;
return getRegistry().contains(new IDKey(key));
return getRegistry().contains(value).get();
return true;
return super.isRegistered(value);
return getRegistry().contains(addr);
return new IDKey(value);
return getRegistry().contains(PRUint32(value));
return getRegistry().contains(new IDKey(&value));
return getRegistry().contains(new DOMKey(value));
return getRegistry().contains(nodeInfo);
return getRegistry().contains(new idKey(value));
return getRegistry() == new IDKey(value);
getRegistry().contains(new IDKey(value));
return getRegistry().contains(new &IDKey(value));
return value == null;
return (getRegistry().contains(value));
return getRegistry().contains(strdup(value));
return isRegistry(value);
return getRegistry().get().contains(value);
return!getRegistry();
return null;
return getRegistry().contains((void **) value);
return getRegistry().contains((PRInt32)value);
return getRegistry().contains(NS_IDKey(value));
return ret;
return isRegistered (value);
return getRegistry().contains((PRUint32)value);
return getRegistry().contains((nsIDKey*)value);
return getRegistered(value);
return getRegistry().contains(isRegistered);
return getRegistry().contains((const char*)value);
return getRegistry().contains(NS_IDKEY(value));
return null;
return (getRegistry().contains(value));
return getRegistry().contains(kIDKey(value));
return getRegistry().contains(nsIIDKey(value));
return getRegistry()!=null;
return nsCRT::strdup(getRegistry());
return hasRegistered(value);
return value;
return register.contains(value);
return getRegistry().contains(isRegistered(value));
return getRegistry().contains((unsigned char*)value);
return getRegistry()!= null;
return getRegistry().contains((int)value);
return getRegistry().containsValue(value);
return getRegistry().contains(new IDKey(*value));
return getRegistry().contains((caddr_t)value);
return do_GetRegistry(value);
return getRegistry().contains(new IDKey(aKey));
return getRegistry().contains(new NSKey(value));
return getRegistry().contains(new char(value));
return result;
return getRegistry(&key);
return getRegistry().contains(new IDKey(value) + 1);
return getRegistry().contains(value == null);
return isRegistry();
return getRegistry().contains(mIIDKey);
return getRegistry().contains((const IDKey*) value);
return getRegistry().contains(mRegistry);
return getRegistry().contains((void**)&value);
return getRegistry().contains((unsigned long)value);
return getRegistry().contains("%s", value);
return false;
(void) getRegistry().contains(new IDKey(value));
return getRegistry().contains((unsigned char*) value);
return getRegistry().contains((const char*) value);
getRegistry().contains(new IDKey(value));
return getRegistry().contains((IDKey*)value);
return getRegistry().contains((u_long)value);
return getRegistry().contains(new IDKey(value).get());
return getRegistry().contains((IIDKey*) value);
return getRegistry().contains((nsIDKey*) value);
return getRegistry().contains((unsigned char *)value);
return getRegistry().contains(nsIDKey::value);
return getRegistry().contains((const char *)value);
result = getRegistry().contains(new IDKey(value));
return getRegistry().contains(strcmp(value));
return getRegistry().contains((PRUint32) value);
return getRegistry().contains(NS_REINTERPRET_CAST(NativeIDKey(value)));
return (!getRegistry())? getRegistry().contains(new IDKey(value)) : null;
/* XXX */ return getRegistry().contains(value);
if (node)  if (!td)  return NS_ERROR_NULL_POINTER;   return NS_OK;
if (!do_GetRegistry())  return false;  else  return getRegistry().contains(new IDKey(value));
return getRegistry().contains(new IDKey(value)) &&!mDependent ||!mUnique);
return getRegistry().contains(new IDKey(value, aKey));
return kNC_DbName.IsDbName(value);
return getRegistry().contains(nsIDKey::ID_SYSCAR(value));
return getRegistry().contains((key)new IDKey(value));
if (eBool!= 0)  return getRegistry().contains(new IDKey(value));  else  if (value!= null)  return 0;  else  if (! value.Equals(""))  return 1;  return 0;  return 0;
return ((code = getRegistry()).contains(new IDKey(value)));
return getRegistry().contains(NS_ConvertASCIItoUCS2(value));
return getRegistry().contains(new IDKey((unsigned char*) value));
if (value)  if (! aKey) return; aKey.Remove(value); aKey.SetType(NS_TYPE_INPUT_STR);  return;  return NS_OK;
return getRegistry().contains(new /* IDKey(value)*/);
return (((*value).isRegistered) && getRegistry().contains(new IDKey(value)));
return getRegistry().contains(nsIDK_KEY(value));
return (!isRegistered)? getRegistry().contains(value) : null;
if (!key)  mRegistry = null;  if (!((key = new char)(value)))  return NS_OK;  if (!((key = new char)(value)))  return NS_ERROR_NULL_POINTER;  if (!(key = new char)(value)))  return NS_ERROR_NULL_POINTER;  return NS_ERROR_NULL_POINTER;  return NS_OK;
if (getRegistry().contains(value))  return 0;  return true;
if (!GetRegistry()) return NS_ERROR_NOT_INITIALIZED; return GetRegistry().IsRegistered(&value);
return getRegistry().contains((*)value);
if (value)  if (! getRegistry()) return 0; return getRegistry().contains(new IDKey(value));  else  return 0;
return getRegistry().contains(new (aIDKey)(value));
return getRegistry().contains(NS_LITERAL_STRING("identity"));
return getRegistry().contains(nsIDecoder::EnumerateKey(value));
if (!__active) return 0; if (isDebug())  if (getRegistry().isDebug()) return 1;  else  if (!__active) return -1;  if (__active) return -1; return -1;  return -1;
if (getRegistry())  ret = ret.removeFromRegistry(); return ret;  else  ret = ret.removeFromRegistry();  return ret;
return &isRegistered;
if (value!= null)  nsCOMPtrnsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID())  return false;   return false;
if (value)  if (getRegistry().contains(new IDKey(value)))  ret = GetRegistry(); return ret;  else  ret = GetRegistry();  if (ret == 0)  ret = GetRegistry(); return ret;  return ret;
if (!value) return null; return 0;
return (nsIRegistry::GetRegistry().contains(new IDKey(value)));
return aRegistry.contains(new IDKey(value));
return getRegistry().contains(new IDKey((PRInt32)value));
if (id && (value))  return getRegistry().contains(id);  else  return (0);
/* * The new idkey is used to get the info to the txtRegistry * of the value of the value. */ return 0;
return &(getRegistry().contains(new IDKey(value)));
return getRegistry().contains(nsGenericHostKey::ISKEY(value));
if (!value) return NS_ERROR_NULL_POINTER; if (!value) return NS_ERROR_NULL_POINTER; if (!value) return NS_ERROR_NULL_POINTER; return (value!= null)? NS_ERROR_NULL_POINTER : NS_ERROR_NULL_POINTER;
return getRegistry().contains(new KEY(value));
/* The IDKey is used by this entry. */ if (_is_setRegistry(_IDKey)) return _IsRegistered(); return _IsRegistered(_IDKey);
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty)  id.id = id.id;  else  if (isDebug()) return 0;  return id.id = id.id;   else  return id.id = id.id;   else return 0;  return 0;
return getRegistry().contains((Conversion *) new IDKey(value));
return (aRegistry).contains(new IDKey(value));
return getRegistry().contains(nsDependentCString(value));
return getRegistry().contains(new IDKey((int)value));
return getRegistry().contains(new uidKey(value));
return id.id_key.get() == 0;
return getRegistry().contains(new aIDKey(value));
return (!isAssignment && getRegistry())? null : getRegistry().contains(new IDKey(value));
return getRegistry().contains(getter_AddRefs(value));
nsresult rv = getRegistry().contains(nsIDKey(value)); if (NS_FAILED(rv)) return rv; rv = getRegistry().contains(nsIDKey(value)); if (NS_FAILED(rv)) return rv; if (NS_FAILED(rv)) return rv; return rv;
return &isRegistered(value);
if (value == null) return NS_ERROR_NULL_POINTER; if (id)  id.id = id; id.id = id;  else  id.id = id;   return (id.id == null)? id.id : id.id;
return getRegistry().contains(NS_LITERAL_STRING("name"));
return getRegistry().contains((NS_LITERAL_STRING("")));
aClone = getRegistry(); return aClone == null;
return getRegistry().contains(nsIDKey::EmptyKey(value));
return getRegistry().contains(NS_STATIC_CAST(PRUint32*, value));
return getRegistry().contains(new NS_CONST_CAST(const nsAString&, value));
return getRegistry().contains(new nsIDKey(value));
return mRegistry.contains(value);
return getRegistry().contains(NS_DIRTY_ATTR(value));
if (!isImplementation(value))  return NS_OK;  if (!isImplementation(value))  return NS_ERROR_NULL_POINTER;  return getRegistry().contains(new IDKey(value));
if (!GetCID())  return false;  return 0;
if (value) return getRegistry().contains(new IDKey(value)); return false;
return getRegistry().contains(NS_CONTENT_ATTR(value));
return (getRegistry() == null)? new IDKey(value) : null;
if (! isInRegistry) return NS_ERROR_FAILURE; if (! ((value = getRegistry()) &&! isRegistered)) return NS_ERROR_FAILURE; if (!(value == null)) return NS_ERROR_NULL_POINTER; if (isReserved) return NS_ERROR_FAILURE; if (! (value = getRegistry()) &&!isReserved) return NS_ERROR_FAILURE; if (isReserved) return NS_ERROR_FAILURE; if (isReserved) return NS_ERROR_FAILURE; return NS_ERROR_FAILURE;
return &db_src.mRegistry.contains(value);
if (!strlen(value))  return false;  return false;
return kNameKeys[1].isRegistered;
if (isInRegistry(&value))  return false;  return (result)(*value, &isInRegistry);
return getRegistry().contains(NS_LITERAL_STRING("IDKey"));
return getRegistry().contains(NS_STATIC_CAST(nsIDKey(value)));
return (IIDKey) getRegistry().contains(value);
return getRegistry().contains(new IDKey(value, &value));
if (*name)  if (!value.IsEmpty())  return NS_ERROR_OUT_OF_MEMORY;   return NS_OK;
if (value)  return false;  return getRegistry().contains(new IDKey(value));
return getRegistry().contains((struct IDKey*) value);
return getRegistry().contains(ref)? (ref.type == OBJECT_REFNSIZE : "")? null : "unknown";
rv = getRegistry().contains(new IDKey(value)); if (NS_FAILED(rv)) return rv; return rv;
return!strlen(value);
return getRegistry().contains(NS_CSTRING(value));
return _getRegistry().contains(new IDKey(value));
return (!isInitialized)? getRegistry().contains(value) : null;
return getRegistry().contains(new IDKey((const char *)value));
if (!value) return -1; if (!value) return -1; return false;
if ((isRegistered = true) || isRegistered == false)  return false;  return!isRegistered;
return getRegistry().contains(NS_LITERAL_STRING("").get());
return getRegistry().contains(new (dummy)IDKey(value));
return getRegistry().contains(new IDKey(value, &mCurrent););
if (!value) return NS_ERROR_FAILURE; if (! value.IsFrame()) return NS_ERROR_FAILURE; if (!value.IsBlocking()) return NS_ERROR_FAILURE; if (!value.IsBlocking()) return NS_ERROR_FAILURE; if (!value.IsRecorded()) return NS_ERROR_FAILURE; if (!value.IsCount()) return NS_ERROR_FAILURE; if (value.IsBlocking()) return NS_ERROR_FAILURE; if (!value.IsBlocking()) return NS_ERROR_FAILURE; if (value.IsBlocking()) return NS_ERROR_FAILURE; return true;
return getRegistry().contains(NS_LITERAL_STRING("digit_key"));
return ret.isRegistered(value);
return getRegistry().contains(NS_ID_PROTO_VALUE(value));
return getRegistry().contains(NS_LITERAL_STRING("id"));
return getRegistry().contains(new RDFTestKey(value));
if (!value)  return false;  if ((ptr) == null)  return false;  return false;
if (! getRegistry())  return null;  return!GetRegistry();
aValue.acquires =!isDestroyElement::isRegistered; if (aValue) aValue.acquires =!isDestroyElement::isRegistered; return NS_OK;
return getRegistry().contains(new (XULElement) value);
return getRegistry().contains((id_t)value);
return gConfigFile.getRegistry().contains(new IDKey(value));
return getRegistry().contains(NS_ID_KEY(value));
return getRegistry().contains((String)value);
if (getRegistry().contains(value))  return (void) getRegistry().contains(new IDKey(value));
if (!isRegistered(value))  return 0;  return 0;
if (!isRegistered)  return 0;  if (isReal && value == null)  return false;  return getRegistry().contains(null);
return p.p_registry.contains(new IDKey(value));
return getRegistry().contains(NS_CONTENT_ID_KEY(value));
return getRegistry().contains(NS_STATIC_CAST(nsIDocument*, value));
if (!aRegistry)  return false;  aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry)  aRegistry = new NSKey(aKey);  if (!aRegistry) return false; return true;
return getRegistry().contains((UnicodeKey*)value);
if (!value)  return false;  else  return false;  return false;
return getRegistry().contains(mIDKey(value));
if (!isImplementation(value)) <return NS_OK; &if (!isImplementation(value)) return NS_ERROR_NULL_POINTER; <return getRegistry().contains(new IDKey(value));
if (!aRegistry) <return false; <aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) aRegistry = new NSKey(aKey); &if (!aRegistry) return false; return true;
if (!isRegistered) return 0; if (isReal && value == null) return false; &return getRegistry().contains(null);
if (! getRegistry()) return null; <return!GetRegistry();
if (id && (value)) return getRegistry().contains(id); else return (0);
if (id && (value)) <return getRegistry().contains(id); <else <return (0);
if (!key) mRegistry = null; <if (!((key = new char)(value))) return NS_OK; &if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!value) <return false; &if ((ptr) == null) return false; return false;
if (value!= null) <nsCOMPtr<nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (value) &return false; return getRegistry().contains(new IDKey(value));
if ((isRegistered = true) || isRegistered == false) &return false; <return!isRegistered;
if (value) &if (getRegistry().contains(new IDKey(value))) &ret = GetRegistry(); return ret; &else ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!isImplementation(value)) return NS_OK; &if (!isImplementation(value)) <return NS_ERROR_NULL_POINTER; &return getRegistry().contains(new IDKey(value));
if (value) if (! aKey) return; aKey.Remove(value); aKey.SetType(NS_TYPE_INPUT_STR); return; return NS_OK;
if (!key) &mRegistry = null; if (!((key = new char)(value))) &return NS_OK; if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!__active) return 0; if (isDebug()) <if (getRegistry().isDebug()) return 1; <else &if (!__active) return -1; if (__active) return -1; return -1; return -1;
if (value!= null) &nsCOMPtr<nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!__active) return 0; if (isDebug()) <if (getRegistry().isDebug()) return 1; &else <if (!__active) return -1; &if (__active) return -1; return -1; return -1;
if (value) <if (! aKey) return; aKey.Remove(value); aKey.SetType(NS_TYPE_INPUT_STR); return; <return NS_OK;
if (!__active) return 0; if (isDebug()) <if (getRegistry().isDebug()) return 1; <else if (!__active) return -1; &if (__active) return -1; return -1; return -1;
if (node) <if (!td) return NS_ERROR_NULL_POINTER; &&return NS_OK;
if (!value) &return false; &else return false; return false;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) &id.id = id.id; <else if (isDebug()) return 0; return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) &id.id = id; id.id = id; else &id.id = id; <return (id.id == null)? id.id : id.id;
if (value) &if (getRegistry().contains(new IDKey(value))) <ret = GetRegistry(); return ret; else &ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!value) return false; <if ((ptr) == null) return false; &return false;
if (!key) mRegistry = null; if (!((key = new char)(value))) return NS_OK; &if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (isInRegistry(&value)) return false; return (result)(*value, &isInRegistry);
if (!aRegistry) <return false; &aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) <aRegistry = new NSKey(aKey); <if (!aRegistry) return false; return true;
if (!isRegistered) &return 0; <if (isReal && value == null) &return false; &return getRegistry().contains(null);
if (getRegistry()) <ret = ret.removeFromRegistry(); return ret; else &ret = ret.removeFromRegistry(); <return ret;
if (getRegistry()) &ret = ret.removeFromRegistry(); return ret; &else &ret = ret.removeFromRegistry(); return ret;
if (!isRegistered) &return 0; if (isReal && value == null) return false; return getRegistry().contains(null);
if (eBool!= 0) return getRegistry().contains(new IDKey(value)); <else &if (value!= null) <return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!key) mRegistry = null; <if (!((key = new char)(value))) &return NS_OK; &if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (eBool!= 0) &return getRegistry().contains(new IDKey(value)); <else &if (value!= null) <return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (value!= null) nsCOMPtr<nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!isImplementation(value)) &return NS_OK; &if (!isImplementation(value)) &return NS_ERROR_NULL_POINTER; return getRegistry().contains(new IDKey(value));
if (*name) <if (!value.IsEmpty()) <return NS_ERROR_OUT_OF_MEMORY; &<return NS_OK;
if (eBool!= 0) <return getRegistry().contains(new IDKey(value)); &else if (value!= null) &return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (eBool!= 0) <return getRegistry().contains(new IDKey(value)); else if (value!= null) return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (getRegistry()) ret = ret.removeFromRegistry(); return ret; <else &ret = ret.removeFromRegistry(); &return ret;
if (!isRegistered) &return 0; if (isReal && value == null) &return false; return getRegistry().contains(null);
if (id && (value)) <return getRegistry().contains(id); <else return (0);
if (id && (value)) return getRegistry().contains(id); else &return (0);
if (value!= null) nsCOMPtr<nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (getRegistry()) ret = ret.removeFromRegistry(); return ret; &else &ret = ret.removeFromRegistry(); &return ret;
&if (!value) &return false; <else &return false; return false;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) id.id = id.id; <else if (isDebug()) return 0; <return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (node) &if (!td) return NS_ERROR_NULL_POINTER; &<return NS_OK;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) id.id = id.id; &else if (isDebug()) return 0; <return id.id = id.id; else return id.id = id.id; else return 0; return 0;
<if (!value) &return false; &else return false; return false;
if (!key) mRegistry = null; &if (!((key = new char)(value))) return NS_OK; <if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (value) &if (! aKey) return; aKey.Remove(value); aKey.SetType(NS_TYPE_INPUT_STR); &return; return NS_OK;
if (value!= null) <nsCOMPtrnsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (eBool!= 0) return getRegistry().contains(new IDKey(value)); &else &if (value!= null) return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!value) &return false; &if ((ptr) == null) <return false; &return false;
if (!aRegistry) return false; &aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) &aRegistry = new NSKey(aKey); if (!aRegistry) return false; return true;
if (!__active) return 0; if (isDebug()) <if (getRegistry().isDebug()) return 1; &else <if (!__active) return -1; <if (__active) return -1; return -1; return -1;
&if (!value) &return false; else return false; return false;
if (eBool!= 0) &return getRegistry().contains(new IDKey(value)); <else &if (value!= null) &return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (! getRegistry()) return null; return!GetRegistry();
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) <id.id = id.id; &else &if (isDebug()) return 0; &return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (value!= null) &nsCOMPtrnsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!value) <return false; <if ((ptr) == null) return false; return false;
if (!isImplementation(value)) &return NS_OK; if (!isImplementation(value)) return NS_ERROR_NULL_POINTER; &return getRegistry().contains(new IDKey(value));
return getRegistry().contains(value);
if (!isImplementation(value)) return NS_OK; if (!isImplementation(value)) <return NS_ERROR_NULL_POINTER; &return getRegistry().contains(new IDKey(value));
if (!isImplementation(value)) <return NS_OK; <if (!isImplementation(value)) <return NS_ERROR_NULL_POINTER; <return getRegistry().contains(new IDKey(value));
if (node) if (!td) <return NS_ERROR_NULL_POINTER; &&return NS_OK;
if (getRegistry()) <ret = ret.removeFromRegistry(); return ret; &else ret = ret.removeFromRegistry(); return ret;
if (getRegistry()) <ret = ret.removeFromRegistry(); return ret; else <ret = ret.removeFromRegistry(); &return ret;
if (!__active) return 0; if (isDebug()) &if (getRegistry().isDebug()) return 1; &else &if (!__active) return -1; <if (__active) return -1; return -1; return -1;
if (!aRegistry) &return false; &aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) <aRegistry = new NSKey(aKey); &if (!aRegistry) return false; return true;
if (*name) if (!value.IsEmpty()) return NS_ERROR_OUT_OF_MEMORY; <return NS_OK;
if (value!= null) &nsCOMPtr&nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!key) mRegistry = null; &if (!((key = new char)(value))) &return NS_OK; <if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (value!= null) &nsCOMPtr&nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (value!= null) &nsCOMPtr&nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!__active) return 0; if (isDebug()) <if (getRegistry().isDebug()) return 1; else <if (!__active) return -1; &if (__active) return -1; return -1; return -1;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) <id.id = id; id.id = id; else id.id = id; <return (id.id == null)? id.id : id.id;
if (!isImplementation(value)) <return NS_OK; if (!isImplementation(value)) <return NS_ERROR_NULL_POINTER; return getRegistry().contains(new IDKey(value));
if (!isRegistered) &return 0; &if (isReal && value == null) &return false; <return getRegistry().contains(null);
if (getRegistry()) ret = ret.removeFromRegistry(); return ret; <else ret = ret.removeFromRegistry(); return ret;
return getRegistry().contains(new IDKey(value));
if (eBool!= 0) <return getRegistry().contains(new IDKey(value)); else if (value!= null) &return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (value) if (getRegistry().contains(new IDKey(value))) <ret = GetRegistry(); return ret; <else ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!isRegistered) <return 0; <if (isReal && value == null) return false; &return getRegistry().contains(null);
if (!isImplementation(value)) <return NS_OK; &if (!isImplementation(value)) <return NS_ERROR_NULL_POINTER; &return getRegistry().contains(new IDKey(value));
if (!isRegistered) &return 0; &if (isReal && value == null) return false; return getRegistry().contains(null);
if (value) if (! aKey) return; aKey.Remove(value); aKey.SetType(NS_TYPE_INPUT_STR); <return; <return NS_OK;
if (eBool!= 0) &return getRegistry().contains(new IDKey(value)); &else <if (value!= null) &return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (value) &if (getRegistry().contains(new IDKey(value))) &ret = GetRegistry(); return ret; <else &ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!isImplementation(value)) <return NS_OK; if (!isImplementation(value)) return NS_ERROR_NULL_POINTER; return getRegistry().contains(new IDKey(value));
if (value == null) return NS_ERROR_NULL_POINTER; if (id) <id.id = id; id.id = id; else <id.id = id; <return (id.id == null)? id.id : id.id;
if (!__active) return 0; if (isDebug()) if (getRegistry().isDebug()) return 1; else &if (!__active) return -1; &if (__active) return -1; return -1; return -1;
if (getRegistry()) ret = ret.removeFromRegistry(); return ret; else <ret = ret.removeFromRegistry(); return ret;
if (value!= null) &nsCOMPtrnsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!value) return false; &else <return false; return false;
if (!aRegistry) <return false; aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) aRegistry = new NSKey(aKey); <if (!aRegistry) return false; return true;
<if (!value) <return false; &else <return false; return false;
if (getRegistry()) &ret = ret.removeFromRegistry(); return ret; &else <ret = ret.removeFromRegistry(); return ret;
if (!__active) return 0; if (isDebug()) <if (getRegistry().isDebug()) return 1; else if (!__active) return -1; &if (__active) return -1; return -1; return -1;
if (getRegistry().contains(value)) return 0; return true;
if (value) &if (! getRegistry()) return 0; return getRegistry().contains(new IDKey(value)); &else return 0;
if (!isImplementation(value)) return NS_OK; &if (!isImplementation(value)) &return NS_ERROR_NULL_POINTER; &return getRegistry().contains(new IDKey(value));
if (value!= null) nsCOMPtrnsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) &id.id = id; id.id = id; &else <id.id = id; return (id.id == null)? id.id : id.id;
if (!isImplementation(value)) return NS_OK; &if (!isImplementation(value)) return NS_ERROR_NULL_POINTER; <return getRegistry().contains(new IDKey(value));
if (node) if (!td) <return NS_ERROR_NULL_POINTER; &<return NS_OK;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) <id.id = id.id; else <if (isDebug()) return 0; return id.id = id.id; else return id.id = id.id; else return 0; return 0;
&if (!value) <return false; else &return false; return false;
if (value!= null) &nsCOMPtr&nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) <id.id = id.id; &else <if (isDebug()) return 0; <return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!isRegistered) <return 0; if (isReal && value == null) &return false; &return getRegistry().contains(null);
if (!__active) return 0; if (isDebug()) &if (getRegistry().isDebug()) return 1; else if (!__active) return -1; if (__active) return -1; return -1; return -1;
if (getRegistry()) <ret = ret.removeFromRegistry(); return ret; else ret = ret.removeFromRegistry(); <return ret;
if (!aRegistry) return false; &aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) aRegistry = new NSKey(aKey); if (!aRegistry) return false; return true;
if (!aRegistry) <return false; aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) <aRegistry = new NSKey(aKey); if (!aRegistry) return false; return true;
if (!value) return false; <if ((ptr) == null) <return false; return false;
if (!key) mRegistry = null; if (!((key = new char)(value))) return NS_OK; if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) &id.id = id; id.id = id; else &id.id = id; return (id.id == null)? id.id : id.id;
if (!aRegistry) &return false; aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) <aRegistry = new NSKey(aKey); if (!aRegistry) return false; return true;
if (!value) &return false; if ((ptr) == null) return false; <return false;
if (*name) &if (!value.IsEmpty()) return NS_ERROR_OUT_OF_MEMORY; &return NS_OK;
if (!key) <mRegistry = null; &if (!((key = new char)(value))) &return NS_OK; <if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!isImplementation(value)) <return NS_OK; <if (!isImplementation(value)) return NS_ERROR_NULL_POINTER; &return getRegistry().contains(new IDKey(value));
if (!key) <mRegistry = null; <if (!((key = new char)(value))) return NS_OK; if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!isImplementation(value)) return NS_OK; <if (!isImplementation(value)) &return NS_ERROR_NULL_POINTER; <return getRegistry().contains(new IDKey(value));
if (!value) return false; &else &return false; return false;
if (value) if (! getRegistry()) return 0; return getRegistry().contains(new IDKey(value)); <else &return 0;
if (!isImplementation(value)) <return NS_OK; <if (!isImplementation(value)) return NS_ERROR_NULL_POINTER; <return getRegistry().contains(new IDKey(value));
if (getRegistry().contains(value)) &return 0; <return true;
if (eBool!= 0) <return getRegistry().contains(new IDKey(value)); else &if (value!= null) <return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (value) &if (getRegistry().contains(new IDKey(value))) <ret = GetRegistry(); return ret; <else <ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (value) if (! aKey) return; aKey.Remove(value); aKey.SetType(NS_TYPE_INPUT_STR); return; &return NS_OK;
if (! getRegistry()) <return null; &return!GetRegistry();
if (!do_GetRegistry()) return false; <else &return getRegistry().contains(new IDKey(value));
if (node) if (!td) return NS_ERROR_NULL_POINTER; <<return NS_OK;
if (!aRegistry) <return false; <aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) <aRegistry = new NSKey(aKey); &if (!aRegistry) return false; return true;
if (!value) &return false; if ((ptr) == null) return false; &return false;
if (!isRegistered) &return 0; &if (isReal && value == null) &return false; &return getRegistry().contains(null);
if (value) <if (getRegistry().contains(new IDKey(value))) &ret = GetRegistry(); return ret; else &ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (node) &if (!td) &return NS_ERROR_NULL_POINTER; &<return NS_OK;
if (getRegistry()) &ret = ret.removeFromRegistry(); return ret; <else &ret = ret.removeFromRegistry(); <return ret;
if (!isRegistered) &return 0; if (isReal && value == null) return false; <return getRegistry().contains(null);
if (value) &if (getRegistry().contains(new IDKey(value))) <ret = GetRegistry(); return ret; &else &ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!value) &return false; <if ((ptr) == null) &return false; <return false;
if (value!= null) &nsCOMPtr&nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (getRegistry()) &ret = ret.removeFromRegistry(); return ret; &else ret = ret.removeFromRegistry(); <return ret;
if (!aRegistry) <return false; <aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) &aRegistry = new NSKey(aKey); &if (!aRegistry) return false; return true;
if (getRegistry()) <ret = ret.removeFromRegistry(); return ret; <else &ret = ret.removeFromRegistry(); <return ret;
if (value) if (getRegistry().contains(new IDKey(value))) ret = GetRegistry(); return ret; else ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (id && (value)) &return getRegistry().contains(id); <else &return (0);
if (!isRegistered(value)) <return 0; return 0;
if (getRegistry()) &ret = ret.removeFromRegistry(); return ret; else <ret = ret.removeFromRegistry(); return ret;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) <id.id = id; id.id = id; <else id.id = id; &return (id.id == null)? id.id : id.id;
if (getRegistry()) ret = ret.removeFromRegistry(); return ret; else &ret = ret.removeFromRegistry(); &return ret;
if (!value) <return false; <if ((ptr) == null) return false; &return false;
if (!do_GetRegistry()) <return false; <else <return getRegistry().contains(new IDKey(value));
if (!isRegistered) return 0; if (isReal && value == null) &return false; &return getRegistry().contains(null);
if (!__active) return 0; if (isDebug()) if (getRegistry().isDebug()) return 1; <else &if (!__active) return -1; <if (__active) return -1; return -1; return -1;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) id.id = id.id; <else <if (isDebug()) return 0; &return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) &id.id = id; id.id = id; else id.id = id; &return (id.id == null)? id.id : id.id;
if (!isRegistered) &return 0; if (isReal && value == null) <return false; <return getRegistry().contains(null);
if (!isImplementation(value)) <return NS_OK; <if (!isImplementation(value)) <return NS_ERROR_NULL_POINTER; &return getRegistry().contains(new IDKey(value));
if (!aRegistry) <return false; <aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) <aRegistry = new NSKey(aKey); if (!aRegistry) return false; return true;
if (!value) return false; if ((ptr) == null) &return false; &return false;
if (getRegistry()) ret = ret.removeFromRegistry(); return ret; &else <ret = ret.removeFromRegistry(); &return ret;
if (!value) return false; if ((ptr) == null) &return false; <return false;
if (!value) <return false; &else <return false; return false;
if (getRegistry()) <ret = ret.removeFromRegistry(); return ret; <else ret = ret.removeFromRegistry(); &return ret;
if (node) <if (!td) return NS_ERROR_NULL_POINTER; <return NS_OK;
if (value) return false; <return getRegistry().contains(new IDKey(value));
if (value) &if (! getRegistry()) return 0; return getRegistry().contains(new IDKey(value)); else return 0;
if (eBool!= 0) return getRegistry().contains(new IDKey(value)); else &if (value!= null) return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!isImplementation(value)) &return NS_OK; &if (!isImplementation(value)) <return NS_ERROR_NULL_POINTER; return getRegistry().contains(new IDKey(value));
if (eBool!= 0) &return getRegistry().contains(new IDKey(value)); else if (value!= null) &return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (eBool!= 0) return getRegistry().contains(new IDKey(value)); else if (value!= null) return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (id && (value)) return getRegistry().contains(id); else <return (0);
if (eBool!= 0) &return getRegistry().contains(new IDKey(value)); else <if (value!= null) return 0; else if (! value.Equals("")) return 1; return 0; return 0;
<if (!value) <return false; else &return false; return false;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) &id.id = id.id; &else <if (isDebug()) return 0; return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!value) return false; <if ((ptr) == null) <return false; <return false;
if (!isRegistered) return 0; &if (isReal && value == null) &return false; &return getRegistry().contains(null);
if (!__active) return 0; if (isDebug()) &if (getRegistry().isDebug()) return 1; else &if (!__active) return -1; <if (__active) return -1; return -1; return -1;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) id.id = id; id.id = id; else &id.id = id; return (id.id == null)? id.id : id.id;
if (! getRegistry()) <return null; <return!GetRegistry();
if (!key) &mRegistry = null; <if (!((key = new char)(value))) &return NS_OK; <if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!__active) return 0; if (isDebug()) if (getRegistry().isDebug()) return 1; else if (!__active) return -1; <if (__active) return -1; return -1; return -1;
if (*name) if (!value.IsEmpty()) <return NS_ERROR_OUT_OF_MEMORY; &<return NS_OK;
if (!aRegistry) &return false; <aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) &aRegistry = new NSKey(aKey); &if (!aRegistry) return false; return true;
if (! getRegistry()) <return null; return!GetRegistry();
if (!value) &return false; if ((ptr) == null) &return false; return false;
if (!isImplementation(value)) &return NS_OK; <if (!isImplementation(value)) &return NS_ERROR_NULL_POINTER; <return getRegistry().contains(new IDKey(value));
if (value == null) return NS_ERROR_NULL_POINTER; if (id) id.id = id; id.id = id; <else id.id = id; &return (id.id == null)? id.id : id.id;
if (getRegistry()) ret = ret.removeFromRegistry(); return ret; <else ret = ret.removeFromRegistry(); <return ret;
if (eBool!= 0) <return getRegistry().contains(new IDKey(value)); else &if (value!= null) return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (getRegistry().contains(value)) <return 0; <return true;
if (!value) <return false; if ((ptr) == null) <return false; return false;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) id.id = id; id.id = id; else id.id = id; &return (id.id == null)? id.id : id.id;
if (value) &if (getRegistry().contains(new IDKey(value))) &ret = GetRegistry(); return ret; <else ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (eBool!= 0) &return getRegistry().contains(new IDKey(value)); else if (value!= null) return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!isRegistered) <return 0; <if (isReal && value == null) <return false; <return getRegistry().contains(null);
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) <id.id = id.id; else if (isDebug()) return 0; &return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) &id.id = id.id; <else <if (isDebug()) return 0; &return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!isRegistered) &return 0; &if (isReal && value == null) return false; <return getRegistry().contains(null);
if (!isRegistered) <return 0; &if (isReal && value == null) <return false; <return getRegistry().contains(null);
if (getRegistry()) ret = ret.removeFromRegistry(); return ret; &else ret = ret.removeFromRegistry(); <return ret;
if (value!= null) nsCOMPtr&nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (value) if (getRegistry().contains(new IDKey(value))) ret = GetRegistry(); return ret; <else ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) &id.id = id; id.id = id; <else &id.id = id; <return (id.id == null)? id.id : id.id;
if (!isRegistered) &return 0; <if (isReal && value == null) &return false; return getRegistry().contains(null);
if (!__active) return 0; if (isDebug()) &if (getRegistry().isDebug()) return 1; &else if (!__active) return -1; if (__active) return -1; return -1; return -1;
if (!isImplementation(value)) return NS_OK; <if (!isImplementation(value)) &return NS_ERROR_NULL_POINTER; return getRegistry().contains(new IDKey(value));
if (*name) <if (!value.IsEmpty()) <return NS_ERROR_OUT_OF_MEMORY; &&return NS_OK;
if (value!= null) nsCOMPtrnsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!value) return false; &if ((ptr) == null) return false; return false;
if (!key) &mRegistry = null; <if (!((key = new char)(value))) return NS_OK; <if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!isImplementation(value)) <return NS_OK; <if (!isImplementation(value)) &return NS_ERROR_NULL_POINTER; <return getRegistry().contains(new IDKey(value));
if (value == null) return NS_ERROR_NULL_POINTER; if (id) id.id = id; id.id = id; <else <id.id = id; return (id.id == null)? id.id : id.id;
if (!isRegistered) <return 0; if (isReal && value == null) &return false; return getRegistry().contains(null);
if (getRegistry()) <ret = ret.removeFromRegistry(); return ret; &else ret = ret.removeFromRegistry(); &return ret;
if (!__active) return 0; if (isDebug()) <if (getRegistry().isDebug()) return 1; else &if (!__active) return -1; <if (__active) return -1; return -1; return -1;
if (!__active) return 0; if (isDebug()) if (getRegistry().isDebug()) return 1; &else if (!__active) return -1; &if (__active) return -1; return -1; return -1;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) <id.id = id; id.id = id; else &id.id = id; return (id.id == null)? id.id : id.id;
if (getRegistry()) ret = ret.removeFromRegistry(); return ret; &else &ret = ret.removeFromRegistry(); return ret;
if (!value) <return false; else &return false; return false;
if (value!= null) <nsCOMPtrnsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!do_GetRegistry()) &return false; &else return getRegistry().contains(new IDKey(value));
if (value!= null) <nsCOMPtr&nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!aRegistry) <return false; aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) &aRegistry = new NSKey(aKey); &if (!aRegistry) return false; return true;
if (!aRegistry) return false; aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) &aRegistry = new NSKey(aKey); &if (!aRegistry) return false; return true;
if ((isRegistered = true) || isRegistered == false) return false; <return!isRegistered;
&if (!value) return false; else return false; return false;
if (eBool!= 0) <return getRegistry().contains(new IDKey(value)); &else &if (value!= null) return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!value) &return false; &if ((ptr) == null) <return false; return false;
if (getRegistry()) <ret = ret.removeFromRegistry(); return ret; &else ret = ret.removeFromRegistry(); <return ret;
if (value!= null) nsCOMPtrnsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (getRegistry()) <ret = ret.removeFromRegistry(); return ret; <else <ret = ret.removeFromRegistry(); return ret;
if (!isRegistered) return 0; if (isReal && value == null) &return false; <return getRegistry().contains(null);
if (!key) &mRegistry = null; &if (!((key = new char)(value))) <return NS_OK; if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) <id.id = id.id; <else <if (isDebug()) return 0; <return id.id = id.id; else return id.id = id.id; else return 0; return 0;
&return getRegistry().contains(new IDKey(value));
if (!key) mRegistry = null; &if (!((key = new char)(value))) <return NS_OK; <if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (getRegistry()) <ret = ret.removeFromRegistry(); return ret; else &ret = ret.removeFromRegistry(); &return ret;
if (value) &if (! aKey) return; aKey.Remove(value); aKey.SetType(NS_TYPE_INPUT_STR); <return; <return NS_OK;
if (!__active) return 0; if (isDebug()) <if (getRegistry().isDebug()) return 1; &else &if (!__active) return -1; &if (__active) return -1; return -1; return -1;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) &id.id = id.id; <else &if (isDebug()) return 0; return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (eBool!= 0) <return getRegistry().contains(new IDKey(value)); &else <if (value!= null) return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (getRegistry()) &ret = ret.removeFromRegistry(); return ret; <else &ret = ret.removeFromRegistry(); return ret;
if (!isImplementation(value)) return NS_OK; <if (!isImplementation(value)) return NS_ERROR_NULL_POINTER; <return getRegistry().contains(new IDKey(value));
if (!isRegistered) return 0; <if (isReal && value == null) &return false; <return getRegistry().contains(null);
if (!isRegistered) <return 0; if (isReal && value == null) <return false; return getRegistry().contains(null);
if (!aRegistry) return false; aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) <aRegistry = new NSKey(aKey); &if (!aRegistry) return false; return true;
if (getRegistry()) ret = ret.removeFromRegistry(); return ret; <else ret = ret.removeFromRegistry(); &return ret;
if (getRegistry().contains(value)) return (void) getRegistry().contains(new IDKey(value));
if (!key) &mRegistry = null; if (!((key = new char)(value))) return NS_OK; &if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!isRegistered) return 0; &if (isReal && value == null) return false; <return getRegistry().contains(null);
if (!isImplementation(value)) return NS_OK; &if (!isImplementation(value)) return NS_ERROR_NULL_POINTER; return getRegistry().contains(new IDKey(value));
if (!isRegistered) <return 0; if (isReal && value == null) return false; <return getRegistry().contains(null);
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) <id.id = id.id; &else if (isDebug()) return 0; <return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if ((isRegistered = true) || isRegistered == false) <return false; <return!isRegistered;
if (value!= null) nsCOMPtr&nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (node) <if (!td) &return NS_ERROR_NULL_POINTER; &&return NS_OK;
if (!isRegistered) &return 0; if (isReal && value == null) <return false; &return getRegistry().contains(null);
if (value) if (! getRegistry()) return 0; return getRegistry().contains(new IDKey(value)); &else <return 0;
if (eBool!= 0) return getRegistry().contains(new IDKey(value)); else &if (value!= null) <return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!value) <return false; &if ((ptr) == null) &return false; &return false;
if (!__active) return 0; if (isDebug()) <if (getRegistry().isDebug()) return 1; else <if (!__active) return -1; if (__active) return -1; return -1; return -1;
if (eBool!= 0) &return getRegistry().contains(new IDKey(value)); &else &if (value!= null) return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (eBool!= 0) <return getRegistry().contains(new IDKey(value)); <else <if (value!= null) &return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!value) &return false; <else return false; return false;
if (!value) &return false; &if ((ptr) == null) <return false; <return false;
if (getRegistry().contains(value)) return 0; &return true;
if (!key) mRegistry = null; if (!((key = new char)(value))) return NS_OK; <if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (node) if (!td) &return NS_ERROR_NULL_POINTER; <return NS_OK;
&if (!value) &return false; else <return false; return false;
if (value!= null) nsCOMPtr&nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (node) &if (!td) <return NS_ERROR_NULL_POINTER; <<return NS_OK;
if (eBool!= 0) <return getRegistry().contains(new IDKey(value)); <else <if (value!= null) return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!key) mRegistry = null; if (!((key = new char)(value))) <return NS_OK; <if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (node) &if (!td) return NS_ERROR_NULL_POINTER; <&return NS_OK;
if (!isRegistered) &return 0; if (isReal && value == null) <return false; return getRegistry().contains(null);
if (getRegistry()) &ret = ret.removeFromRegistry(); return ret; <else ret = ret.removeFromRegistry(); <return ret;
if (!aRegistry) &return false; &aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) &aRegistry = new NSKey(aKey); <if (!aRegistry) return false; return true;
if (getRegistry()) &ret = ret.removeFromRegistry(); return ret; &else &ret = ret.removeFromRegistry(); <return ret;
if (!isRegistered(value)) <return 0; &return 0;
if (!aRegistry) return false; <aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) &aRegistry = new NSKey(aKey); <if (!aRegistry) return false; return true;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) <id.id = id.id; &else &if (isDebug()) return 0; <return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!__active) return 0; if (isDebug()) if (getRegistry().isDebug()) return 1; &else <if (!__active) return -1; &if (__active) return -1; return -1; return -1;
if (!value) &return false; else &return false; return false;
if (getRegistry()) &ret = ret.removeFromRegistry(); return ret; &else ret = ret.removeFromRegistry(); return ret;
if (node) <if (!td) <return NS_ERROR_NULL_POINTER; <&return NS_OK;
if (value) if (! getRegistry()) return 0; return getRegistry().contains(new IDKey(value)); <else return 0;
if (value!= null) &nsCOMPtr<nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!__active) return 0; if (isDebug()) <if (getRegistry().isDebug()) return 1; else &if (!__active) return -1; &if (__active) return -1; return -1; return -1;
if (node) <if (!td) <return NS_ERROR_NULL_POINTER; &return NS_OK;
if (id && (value)) <return getRegistry().contains(id); else <return (0);
if (!do_GetRegistry()) return false; else <return getRegistry().contains(new IDKey(value));
if (*name) <if (!value.IsEmpty()) return NS_ERROR_OUT_OF_MEMORY; &&return NS_OK;
if (value) <if (getRegistry().contains(new IDKey(value))) ret = GetRegistry(); return ret; &else &ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!isImplementation(value)) &return NS_OK; &if (!isImplementation(value)) &return NS_ERROR_NULL_POINTER; <return getRegistry().contains(new IDKey(value));
if (!key) <mRegistry = null; &if (!((key = new char)(value))) return NS_OK; if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
&if (!value) <return false; <else <return false; return false;
if (value) <if (getRegistry().contains(new IDKey(value))) ret = GetRegistry(); return ret; else ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (value) <if (getRegistry().contains(new IDKey(value))) ret = GetRegistry(); return ret; <else ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!isImplementation(value)) <return NS_OK; <if (!isImplementation(value)) <return NS_ERROR_NULL_POINTER; return getRegistry().contains(new IDKey(value));
if (!value) <return false; if ((ptr) == null) return false; &return false;
if (!key) &mRegistry = null; <if (!((key = new char)(value))) &return NS_OK; &if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!value) <return false; &if ((ptr) == null) return false; <return false;
if (!key) <mRegistry = null; <if (!((key = new char)(value))) return NS_OK; &if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (value) &if (getRegistry().contains(new IDKey(value))) <ret = GetRegistry(); return ret; &else <ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!value) &return false; if ((ptr) == null) &return false; <return false;
if (!do_GetRegistry()) <return false; else <return getRegistry().contains(new IDKey(value));
<if (!value) <return false; <else return false; return false;
if (node) &if (!td) &return NS_ERROR_NULL_POINTER; <<return NS_OK;
if (!isRegistered) <return 0; if (isReal && value == null) return false; &return getRegistry().contains(null);
if (value!= null) &nsCOMPtr<nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (value) &if (getRegistry().contains(new IDKey(value))) ret = GetRegistry(); return ret; <else &ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!value) &return false; <if ((ptr) == null) &return false; return false;
if (*name) &if (!value.IsEmpty()) &return NS_ERROR_OUT_OF_MEMORY; &return NS_OK;
if (!do_GetRegistry()) &return false; <else return getRegistry().contains(new IDKey(value));
if (value) <if (getRegistry().contains(new IDKey(value))) &ret = GetRegistry(); return ret; &else ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!value) return false; <if ((ptr) == null) &return false; &return false;
if (!aRegistry) return false; <aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) <aRegistry = new NSKey(aKey); if (!aRegistry) return false; return true;
if (node) &if (!td) return NS_ERROR_NULL_POINTER; <return NS_OK;
&if (!value) &return false; &else return false; return false;
if (!isRegistered) <return 0; &if (isReal && value == null) &return false; <return getRegistry().contains(null);
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) &id.id = id.id; &else <if (isDebug()) return 0; <return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) id.id = id.id; else <if (isDebug()) return 0; <return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (getRegistry().contains(value)) <return (void) getRegistry().contains(new IDKey(value));
if (!isRegistered) <return 0; <if (isReal && value == null) &return false; &return getRegistry().contains(null);
if (value == null) return NS_ERROR_NULL_POINTER; if (id) <id.id = id; id.id = id; <else &id.id = id; <return (id.id == null)? id.id : id.id;
if (*name) &if (!value.IsEmpty()) <return NS_ERROR_OUT_OF_MEMORY; &&return NS_OK;
if (eBool!= 0) &return getRegistry().contains(new IDKey(value)); &else &if (value!= null) &return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!__active) return 0; if (isDebug()) &if (getRegistry().isDebug()) return 1; &else <if (!__active) return -1; if (__active) return -1; return -1; return -1;
&if (!value) &return false; <else return false; return false;
if (!key) <mRegistry = null; <if (!((key = new char)(value))) return NS_OK; <if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (value) &if (! getRegistry()) return 0; return getRegistry().contains(new IDKey(value)); else &return 0;
if (eBool!= 0) return getRegistry().contains(new IDKey(value)); else <if (value!= null) <return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (value!= null) &nsCOMPtr<nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) &id.id = id; id.id = id; <else id.id = id; &return (id.id == null)? id.id : id.id;
if (!value) &return false; else return false; return false;
if (!key) mRegistry = null; <if (!((key = new char)(value))) <return NS_OK; <if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) &id.id = id.id; &else &if (isDebug()) return 0; return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (value) if (! getRegistry()) return 0; return getRegistry().contains(new IDKey(value)); else <return 0;
if (node) <if (!td) &return NS_ERROR_NULL_POINTER; return NS_OK;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) id.id = id; id.id = id; else &id.id = id; &return (id.id == null)? id.id : id.id;
if (!__active) return 0; if (isDebug()) if (getRegistry().isDebug()) return 1; &else &if (!__active) return -1; &if (__active) return -1; return -1; return -1;
if (!__active) return 0; if (isDebug()) &if (getRegistry().isDebug()) return 1; <else if (!__active) return -1; if (__active) return -1; return -1; return -1;
if (!isRegistered) return 0; if (isReal && value == null) return false; <return getRegistry().contains(null);
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) &id.id = id.id; else if (isDebug()) return 0; &return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (value) &if (getRegistry().contains(new IDKey(value))) ret = GetRegistry(); return ret; &else &ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!isImplementation(value)) &return NS_OK; <if (!isImplementation(value)) <return NS_ERROR_NULL_POINTER; <return getRegistry().contains(new IDKey(value));
if (id && (value)) <return getRegistry().contains(id); &else return (0);
if (!aRegistry) &return false; aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) aRegistry = new NSKey(aKey); <if (!aRegistry) return false; return true;
if (value) &if (getRegistry().contains(new IDKey(value))) ret = GetRegistry(); return ret; <else ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
&if (!value) return false; <else return false; return false;
if (!__active) return 0; if (isDebug()) <if (getRegistry().isDebug()) return 1; &else if (!__active) return -1; &if (__active) return -1; return -1; return -1;
if (!aRegistry) &return false; &aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) aRegistry = new NSKey(aKey); if (!aRegistry) return false; return true;
if (!value) &return false; &if ((ptr) == null) &return false; &return false;
if (value!= null) <nsCOMPtr&nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (value) &if (getRegistry().contains(new IDKey(value))) &ret = GetRegistry(); return ret; <else <ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!key) &mRegistry = null; <if (!((key = new char)(value))) return NS_OK; if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) id.id = id.id; <else <if (isDebug()) return 0; return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (node) <if (!td) &return NS_ERROR_NULL_POINTER; &<return NS_OK;
if (!strlen(value)) &return false; return false;
if (isInRegistry(&value)) return false; &return (result)(*value, &isInRegistry);
if (value == null) return NS_ERROR_NULL_POINTER; if (id) &id.id = id; id.id = id; <else <id.id = id; &return (id.id == null)? id.id : id.id;
if (eBool!= 0) &return getRegistry().contains(new IDKey(value)); <else if (value!= null) <return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!value) &return false; &if ((ptr) == null) return false; &return false;
if (!key) &mRegistry = null; &if (!((key = new char)(value))) return NS_OK; <if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!aRegistry) <return false; <aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) aRegistry = new NSKey(aKey); if (!aRegistry) return false; return true;
if (!value) &return false; <else <return false; return false;
if (value) <if (getRegistry().contains(new IDKey(value))) ret = GetRegistry(); return ret; &else <ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!key) mRegistry = null; &if (!((key = new char)(value))) &return NS_OK; if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (value) <if (getRegistry().contains(new IDKey(value))) ret = GetRegistry(); return ret; else &ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (eBool!= 0) <return getRegistry().contains(new IDKey(value)); <else if (value!= null) &return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (id && (value)) <return getRegistry().contains(id); &else <return (0);
if (*name) <if (!value.IsEmpty()) &return NS_ERROR_OUT_OF_MEMORY; &&return NS_OK;
if (!isRegistered) &return 0; <if (isReal && value == null) return false; return getRegistry().contains(null);
if (eBool!= 0) return getRegistry().contains(new IDKey(value)); <else if (value!= null) return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (getRegistry()) ret = ret.removeFromRegistry(); return ret; else ret = ret.removeFromRegistry(); &return ret;
if (!__active) return 0; if (isDebug()) if (getRegistry().isDebug()) return 1; <else if (!__active) return -1; <if (__active) return -1; return -1; return -1;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) <id.id = id; id.id = id; &else <id.id = id; return (id.id == null)? id.id : id.id;
if (value!= null) nsCOMPtr<nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!aRegistry) return false; aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) aRegistry = new NSKey(aKey); &if (!aRegistry) return false; return true;
if (getRegistry().contains(value)) &return 0; return true;
<if (!value) return false; &else <return false; return false;
if (eBool!= 0) &return getRegistry().contains(new IDKey(value)); &else <if (value!= null) <return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (value) &if (getRegistry().contains(new IDKey(value))) &ret = GetRegistry(); return ret; else <ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (getRegistry()) ret = ret.removeFromRegistry(); return ret; <else &ret = ret.removeFromRegistry(); <return ret;
if (!key) <mRegistry = null; &if (!((key = new char)(value))) return NS_OK; <if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (getRegistry()) <ret = ret.removeFromRegistry(); return ret; &else &ret = ret.removeFromRegistry(); &return ret;
if (getRegistry()) ret = ret.removeFromRegistry(); return ret; else &ret = ret.removeFromRegistry(); <return ret;
if (!__active) return 0; if (isDebug()) &if (getRegistry().isDebug()) return 1; &else <if (!__active) return -1; <if (__active) return -1; return -1; return -1;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) &id.id = id; id.id = id; &else &id.id = id; <return (id.id == null)? id.id : id.id;
if (!isImplementation(value)) return NS_OK; <if (!isImplementation(value)) <return NS_ERROR_NULL_POINTER; &return getRegistry().contains(new IDKey(value));
if (value!= null) <nsCOMPtr<nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (value) &if (getRegistry().contains(new IDKey(value))) ret = GetRegistry(); return ret; <else <ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!value) return false; if ((ptr) == null) return false; <return false;
if (!isRegistered) <return 0; &if (isReal && value == null) <return false; return getRegistry().contains(null);
if (*name) if (!value.IsEmpty()) <return NS_ERROR_OUT_OF_MEMORY; <<return NS_OK;
if (!aRegistry) &return false; aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) &aRegistry = new NSKey(aKey); <if (!aRegistry) return false; return true;
if (!isRegistered) return 0; &if (isReal && value == null) <return false; <return getRegistry().contains(null);
if (!__active) return 0; if (isDebug()) &if (getRegistry().isDebug()) return 1; <else &if (!__active) return -1; &if (__active) return -1; return -1; return -1;
if (!isRegistered) <return 0; &if (isReal && value == null) &return false; &return getRegistry().contains(null);
if (getRegistry()) <ret = ret.removeFromRegistry(); return ret; else ret = ret.removeFromRegistry(); &return ret;
if (value!= null) &nsCOMPtr<nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) &id.id = id.id; else &if (isDebug()) return 0; &return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (value) &if (! aKey) return; aKey.Remove(value); aKey.SetType(NS_TYPE_INPUT_STR); return; return NS_OK;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) &id.id = id.id; else if (isDebug()) return 0; <return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (node) if (!td) <return NS_ERROR_NULL_POINTER; <<return NS_OK;
if (!value) &return false; if ((ptr) == null) <return false; return false;
<if (!value) return false; else return false; return false;
if (id && (value)) <return getRegistry().contains(id); <else &return (0);
if (! getRegistry()) &return null; &return!GetRegistry();
if (!__active) return 0; if (isDebug()) <if (getRegistry().isDebug()) return 1; else <if (!__active) return -1; <if (__active) return -1; return -1; return -1;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) &id.id = id; id.id = id; &else id.id = id; return (id.id == null)? id.id : id.id;
if (value!= null) <nsCOMPtrnsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!aRegistry) return false; <aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) aRegistry = new NSKey(aKey); &if (!aRegistry) return false; return true;
if (value) <if (! aKey) return; aKey.Remove(value); aKey.SetType(NS_TYPE_INPUT_STR); &return; return NS_OK;
if (!__active) return 0; if (isDebug()) <if (getRegistry().isDebug()) return 1; else if (!__active) return -1; if (__active) return -1; return -1; return -1;
if (value) if (! aKey) return; aKey.Remove(value); aKey.SetType(NS_TYPE_INPUT_STR); return; <return NS_OK;
if (*name) <if (!value.IsEmpty()) <return NS_ERROR_OUT_OF_MEMORY; <&return NS_OK;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) id.id = id.id; else &if (isDebug()) return 0; &return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (value) if (getRegistry().contains(new IDKey(value))) &ret = GetRegistry(); return ret; <else ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!__active) return 0; if (isDebug()) <if (getRegistry().isDebug()) return 1; <else if (!__active) return -1; if (__active) return -1; return -1; return -1;
if (!__active) return 0; if (isDebug()) &if (getRegistry().isDebug()) return 1; else &if (!__active) return -1; &if (__active) return -1; return -1; return -1;
if (value!= null) &nsCOMPtrnsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!strlen(value)) &return false; <return false;
if (node) if (!td) return NS_ERROR_NULL_POINTER; &<return NS_OK;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) &id.id = id.id; <else <if (isDebug()) return 0; <return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (*name) if (!value.IsEmpty()) <return NS_ERROR_OUT_OF_MEMORY; &&return NS_OK;
if (value) &return false; <return getRegistry().contains(new IDKey(value));
if (*name) &if (!value.IsEmpty()) return NS_ERROR_OUT_OF_MEMORY; return NS_OK;
if (!aRegistry) &return false; &aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) <aRegistry = new NSKey(aKey); <if (!aRegistry) return false; return true;
if (!aRegistry) <return false; &aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) <aRegistry = new NSKey(aKey); if (!aRegistry) return false; return true;
if (!isImplementation(value)) &return NS_OK; if (!isImplementation(value)) return NS_ERROR_NULL_POINTER; <return getRegistry().contains(new IDKey(value));
if (value == null) return NS_ERROR_NULL_POINTER; if (id) id.id = id; id.id = id; &else <id.id = id; return (id.id == null)? id.id : id.id;
if (!aRegistry) <return false; &aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) aRegistry = new NSKey(aKey); <if (!aRegistry) return false; return true;
if (!isImplementation(value)) &return NS_OK; <if (!isImplementation(value)) return NS_ERROR_NULL_POINTER; return getRegistry().contains(new IDKey(value));
if (!isImplementation(value)) &return NS_OK; <if (!isImplementation(value)) &return NS_ERROR_NULL_POINTER; return getRegistry().contains(new IDKey(value));
if (value) if (getRegistry().contains(new IDKey(value))) <ret = GetRegistry(); return ret; else &ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (eBool!= 0) &return getRegistry().contains(new IDKey(value)); &else if (value!= null) return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (value) &if (! aKey) return; aKey.Remove(value); aKey.SetType(NS_TYPE_INPUT_STR); <return; &return NS_OK;
&if (!value) return false; &else return false; return false;
if (!isImplementation(value)) &return NS_OK; <if (!isImplementation(value)) &return NS_ERROR_NULL_POINTER; &return getRegistry().contains(new IDKey(value));
if (!isRegistered) <return 0; &if (isReal && value == null) <return false; &return getRegistry().contains(null);
if (!do_GetRegistry()) <return false; &else return getRegistry().contains(new IDKey(value));
if (!value) &return false; <if ((ptr) == null) return false; &return false;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) <id.id = id; id.id = id; &else id.id = id; <return (id.id == null)? id.id : id.id;
if (!isRegistered(value)) return 0; &return 0;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) <id.id = id.id; <else &if (isDebug()) return 0; <return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (*name) if (!value.IsEmpty()) <return NS_ERROR_OUT_OF_MEMORY; <&return NS_OK;
if (!do_GetRegistry()) return false; &else return getRegistry().contains(new IDKey(value));
if (!__active) return 0; if (isDebug()) if (getRegistry().isDebug()) return 1; else if (!__active) return -1; if (__active) return -1; return -1; return -1;
if (!key) &mRegistry = null; if (!((key = new char)(value))) return NS_OK; <if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!value) <return false; if ((ptr) == null) &return false; <return false;
if (!value) <return false; if ((ptr) == null) return false; return false;
if (getRegistry()) &ret = ret.removeFromRegistry(); return ret; else &ret = ret.removeFromRegistry(); &return ret;
if (eBool!= 0) &return getRegistry().contains(new IDKey(value)); else &if (value!= null) &return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!key) &mRegistry = null; <if (!((key = new char)(value))) <return NS_OK; &if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!key) &mRegistry = null; if (!((key = new char)(value))) <return NS_OK; if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (value!= null) nsCOMPtr&nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (node) <if (!td) <return NS_ERROR_NULL_POINTER; <<return NS_OK;
if (eBool!= 0) <return getRegistry().contains(new IDKey(value)); <else if (value!= null) return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) <id.id = id; id.id = id; <else id.id = id; <return (id.id == null)? id.id : id.id;
if (!__active) return 0; if (isDebug()) &if (getRegistry().isDebug()) return 1; &else if (!__active) return -1; <if (__active) return -1; return -1; return -1;
if (value) if (getRegistry().contains(new IDKey(value))) ret = GetRegistry(); return ret; <else <ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) &id.id = id; id.id = id; &else id.id = id; <return (id.id == null)? id.id : id.id;
if (getRegistry()) <ret = ret.removeFromRegistry(); return ret; else &ret = ret.removeFromRegistry(); return ret;
if (!strlen(value)) return false; &return false;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) id.id = id.id; else <if (isDebug()) return 0; &return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) <id.id = id.id; else if (isDebug()) return 0; return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!isRegistered) <return 0; &if (isReal && value == null) return false; &return getRegistry().contains(null);
if (node) if (!td) return NS_ERROR_NULL_POINTER; &return NS_OK;
if (!aRegistry) return false; <aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) &aRegistry = new NSKey(aKey); &if (!aRegistry) return false; return true;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) <id.id = id.id; else <if (isDebug()) return 0; <return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!aRegistry) &return false; <aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) <aRegistry = new NSKey(aKey); &if (!aRegistry) return false; return true;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) id.id = id; id.id = id; else &id.id = id; <return (id.id == null)? id.id : id.id;
if (*name) &if (!value.IsEmpty()) <return NS_ERROR_OUT_OF_MEMORY; <&return NS_OK;
if (!aRegistry) &return false; <aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) <aRegistry = new NSKey(aKey); if (!aRegistry) return false; return true;
if (!aRegistry) <return false; &aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) &aRegistry = new NSKey(aKey); <if (!aRegistry) return false; return true;
<if (!value) <return false; <else &return false; return false;
if (!isRegistered) return 0; &if (isReal && value == null) <return false; return getRegistry().contains(null);
if (*name) <if (!value.IsEmpty()) <return NS_ERROR_OUT_OF_MEMORY; <return NS_OK;
if (node) &if (!td) <return NS_ERROR_NULL_POINTER; &return NS_OK;
if (value) if (! aKey) return; aKey.Remove(value); aKey.SetType(NS_TYPE_INPUT_STR); <return; return NS_OK;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) &id.id = id; id.id = id; else <id.id = id; return (id.id == null)? id.id : id.id;
if (*name) if (!value.IsEmpty()) &return NS_ERROR_OUT_OF_MEMORY; <return NS_OK;
if (!__active) return 0; if (isDebug()) &if (getRegistry().isDebug()) return 1; &else &if (!__active) return -1; &if (__active) return -1; return -1; return -1;
if (value) &if (getRegistry().contains(new IDKey(value))) &ret = GetRegistry(); return ret; &else <ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (value!= null) <nsCOMPtr<nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!isImplementation(value)) <return NS_OK; <if (!isImplementation(value)) &return NS_ERROR_NULL_POINTER; &return getRegistry().contains(new IDKey(value));
if (!isRegistered) return 0; &if (isReal && value == null) &return false; <return getRegistry().contains(null);
if (value!= null) nsCOMPtrnsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!key) <mRegistry = null; &if (!((key = new char)(value))) &return NS_OK; &if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) <id.id = id; id.id = id; &else &id.id = id; return (id.id == null)? id.id : id.id;
if (*name) &if (!value.IsEmpty()) <return NS_ERROR_OUT_OF_MEMORY; &<return NS_OK;
if (node) if (!td) return NS_ERROR_NULL_POINTER; <return NS_OK;
if (value!= null) nsCOMPtr<nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (*name) &if (!value.IsEmpty()) &return NS_ERROR_OUT_OF_MEMORY; <&return NS_OK;
if (!__active) return 0; if (isDebug()) <if (getRegistry().isDebug()) return 1; &else <if (!__active) return -1; if (__active) return -1; return -1; return -1;
if (value) <if (getRegistry().contains(new IDKey(value))) <ret = GetRegistry(); return ret; &else <ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (node) &if (!td) <return NS_ERROR_NULL_POINTER; &&return NS_OK;
if (!key) <mRegistry = null; if (!((key = new char)(value))) <return NS_OK; if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (*name) <if (!value.IsEmpty()) <return NS_ERROR_OUT_OF_MEMORY; <<return NS_OK;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) <id.id = id; id.id = id; else &id.id = id; <return (id.id == null)? id.id : id.id;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) <id.id = id; id.id = id; <else <id.id = id; return (id.id == null)? id.id : id.id;
&if (!value) &return false; &else <return false; return false;
if (!key) <mRegistry = null; if (!((key = new char)(value))) return NS_OK; &if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (value!= null) <nsCOMPtr&nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (*name) &if (!value.IsEmpty()) &return NS_ERROR_OUT_OF_MEMORY; <return NS_OK;
&if (!value) &return false; &else &return false; return false;
if (!value) <return false; <else return false; return false;
if (!GetCID()) <return false; return 0;
if (!isRegistered(value)) &return 0; &return 0;
if (!__active) return 0; if (isDebug()) &if (getRegistry().isDebug()) return 1; <else &if (!__active) return -1; <if (__active) return -1; return -1; return -1;
if (value!= null) &nsCOMPtrnsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!isImplementation(value)) <return NS_OK; if (!isImplementation(value)) return NS_ERROR_NULL_POINTER; &return getRegistry().contains(new IDKey(value));
if (value) &if (getRegistry().contains(new IDKey(value))) ret = GetRegistry(); return ret; &else ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (value!= null) nsCOMPtrnsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (getRegistry()) ret = ret.removeFromRegistry(); return ret; else ret = ret.removeFromRegistry(); return ret;
if (value) &if (getRegistry().contains(new IDKey(value))) &ret = GetRegistry(); return ret; else ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (value) <if (getRegistry().contains(new IDKey(value))) <ret = GetRegistry(); return ret; else ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!key) &mRegistry = null; if (!((key = new char)(value))) &return NS_OK; &if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) &id.id = id; id.id = id; <else id.id = id; <return (id.id == null)? id.id : id.id;
if (value!= null) <nsCOMPtrnsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (value) <if (! getRegistry()) return 0; return getRegistry().contains(new IDKey(value)); <else <return 0;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) <id.id = id.id; <else <if (isDebug()) return 0; &return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!value) &return false; <if ((ptr) == null) return false; <return false;
if (!aRegistry) return false; aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) aRegistry = new NSKey(aKey); <if (!aRegistry) return false; return true;
if (eBool!= 0) <return getRegistry().contains(new IDKey(value)); &else &if (value!= null) &return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (value!= null) <nsCOMPtr&nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (value!= null) &nsCOMPtr&nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (*name) if (!value.IsEmpty()) &return NS_ERROR_OUT_OF_MEMORY; &return NS_OK;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) id.id = id.id; <else &if (isDebug()) return 0; return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) id.id = id.id; &else &if (isDebug()) return 0; <return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!__active) return 0; if (isDebug()) &if (getRegistry().isDebug()) return 1; &else &if (!__active) return -1; if (__active) return -1; return -1; return -1;
if (!isImplementation(value)) &return NS_OK; if (!isImplementation(value)) &return NS_ERROR_NULL_POINTER; return getRegistry().contains(new IDKey(value));
if (!key) mRegistry = null; <if (!((key = new char)(value))) <return NS_OK; &if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!value) &return false; <if ((ptr) == null) &return false; &return false;
if (!key) <mRegistry = null; <if (!((key = new char)(value))) &return NS_OK; <if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
<if (!value) &return false; <else return false; return false;
if (!strlen(value)) <return false; &return false;
if (node) &if (!td) <return NS_ERROR_NULL_POINTER; &<return NS_OK;
if (value) <if (! aKey) return; aKey.Remove(value); aKey.SetType(NS_TYPE_INPUT_STR); <return; &return NS_OK;
if (!key) mRegistry = null; <if (!((key = new char)(value))) &return NS_OK; if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (getRegistry()) ret = ret.removeFromRegistry(); return ret; &else <ret = ret.removeFromRegistry(); <return ret;
if (getRegistry()) &ret = ret.removeFromRegistry(); return ret; &else <ret = ret.removeFromRegistry(); <return ret;
if (!isRegistered) &return 0; if (isReal && value == null) return false; &return getRegistry().contains(null);
if (value) if (getRegistry().contains(new IDKey(value))) ret = GetRegistry(); return ret; else <ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) id.id = id; id.id = id; &else &id.id = id; return (id.id == null)? id.id : id.id;
<if (!value) &return false; &else &return false; return false;
if (!isImplementation(value)) <return NS_OK; if (!isImplementation(value)) &return NS_ERROR_NULL_POINTER; return getRegistry().contains(new IDKey(value));
if (value!= null) nsCOMPtrnsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (value!= null) nsCOMPtr<nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (node) if (!td) &return NS_ERROR_NULL_POINTER; <&return NS_OK;
if (!value) <return false; &if ((ptr) == null) <return false; return false;
if (value) &if (getRegistry().contains(new IDKey(value))) ret = GetRegistry(); return ret; &else <ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!isImplementation(value)) return NS_OK; &if (!isImplementation(value)) <return NS_ERROR_NULL_POINTER; <return getRegistry().contains(new IDKey(value));
if (*name) &if (!value.IsEmpty()) return NS_ERROR_OUT_OF_MEMORY; <return NS_OK;
<if (!value) <return false; &else &return false; return false;
if (value!= null) &nsCOMPtrnsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!__active) return 0; if (isDebug()) if (getRegistry().isDebug()) return 1; else if (!__active) return -1; &if (__active) return -1; return -1; return -1;
if (!key) &mRegistry = null; <if (!((key = new char)(value))) &return NS_OK; if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (node) &if (!td) return NS_ERROR_NULL_POINTER; &return NS_OK;
if (!aRegistry) &return false; &aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) aRegistry = new NSKey(aKey); &if (!aRegistry) return false; return true;
if (value) <if (getRegistry().contains(new IDKey(value))) ret = GetRegistry(); return ret; else <ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!isImplementation(value)) &return NS_OK; if (!isImplementation(value)) &return NS_ERROR_NULL_POINTER; <return getRegistry().contains(new IDKey(value));
if (!value) return false; &if ((ptr) == null) &return false; &return false;
if (value!= null) &nsCOMPtrnsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!isImplementation(value)) return NS_OK; <if (!isImplementation(value)) return NS_ERROR_NULL_POINTER; &return getRegistry().contains(new IDKey(value));
<if (!value) return false; else <return false; return false;
if (!isImplementation(value)) <return NS_OK; if (!isImplementation(value)) &return NS_ERROR_NULL_POINTER; &return getRegistry().contains(new IDKey(value));
if (value) <if (! getRegistry()) return 0; return getRegistry().contains(new IDKey(value)); <else return 0;
if (getRegistry()) <ret = ret.removeFromRegistry(); return ret; <else <ret = ret.removeFromRegistry(); &return ret;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) id.id = id.id; &else if (isDebug()) return 0; &return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!value) <return false; &if ((ptr) == null) <return false; &return false;
if (!isRegistered) &return 0; &if (isReal && value == null) <return false; &return getRegistry().contains(null);
if (eBool!= 0) &return getRegistry().contains(new IDKey(value)); <else <if (value!= null) return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!strlen(value)) return false; return false;
if (!__active) return 0; if (isDebug()) if (getRegistry().isDebug()) return 1; <else if (!__active) return -1; if (__active) return -1; return -1; return -1;
if (!__active) return 0; if (isDebug()) if (getRegistry().isDebug()) return 1; <else <if (!__active) return -1; if (__active) return -1; return -1; return -1;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) &id.id = id; id.id = id; <else <id.id = id; return (id.id == null)? id.id : id.id;
if (!isRegistered) return 0; &if (isReal && value == null) return false; &return getRegistry().contains(null);
if (node) <if (!td) <return NS_ERROR_NULL_POINTER; &&return NS_OK;
if (*name) <if (!value.IsEmpty()) &return NS_ERROR_OUT_OF_MEMORY; <&return NS_OK;
if (!isImplementation(value)) return NS_OK; &if (!isImplementation(value)) &return NS_ERROR_NULL_POINTER; <return getRegistry().contains(new IDKey(value));
if (eBool!= 0) &return getRegistry().contains(new IDKey(value)); else &if (value!= null) return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!isRegistered) &return 0; <if (isReal && value == null) <return false; <return getRegistry().contains(null);
if (!key) <mRegistry = null; if (!((key = new char)(value))) &return NS_OK; &if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) id.id = id.id; <else if (isDebug()) return 0; return id.id = id.id; else return id.id = id.id; else return 0; return 0;
&if (!value) <return false; &else <return false; return false;
if (eBool!= 0) <return getRegistry().contains(new IDKey(value)); <else if (value!= null) <return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!key) <mRegistry = null; <if (!((key = new char)(value))) <return NS_OK; <if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!__active) return 0; if (isDebug()) &if (getRegistry().isDebug()) return 1; <else <if (!__active) return -1; &if (__active) return -1; return -1; return -1;
if (!__active) return 0; if (isDebug()) <if (getRegistry().isDebug()) return 1; &else &if (!__active) return -1; if (__active) return -1; return -1; return -1;
if (value) <if (getRegistry().contains(new IDKey(value))) &ret = GetRegistry(); return ret; <else <ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (getRegistry()) &ret = ret.removeFromRegistry(); return ret; &else <ret = ret.removeFromRegistry(); &return ret;
if (!do_GetRegistry()) <return false; else &return getRegistry().contains(new IDKey(value));
if (value == null) return NS_ERROR_NULL_POINTER; if (id) &id.id = id; id.id = id; &else &id.id = id; return (id.id == null)? id.id : id.id;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) &id.id = id.id; else &if (isDebug()) return 0; <return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!value) return false; <else <return false; return false;
if (!isImplementation(value)) return NS_OK; if (!isImplementation(value)) return NS_ERROR_NULL_POINTER; <return getRegistry().contains(new IDKey(value));
if (*name) if (!value.IsEmpty()) <return NS_ERROR_OUT_OF_MEMORY; <return NS_OK;
if (!do_GetRegistry()) return false; <else return getRegistry().contains(new IDKey(value));
if (node) &if (!td) <return NS_ERROR_NULL_POINTER; <&return NS_OK;
if (!isRegistered) <return 0; if (isReal && value == null) return false; return getRegistry().contains(null);
if (*name) &if (!value.IsEmpty()) &return NS_ERROR_OUT_OF_MEMORY; <<return NS_OK;
if (value) <if (! aKey) return; aKey.Remove(value); aKey.SetType(NS_TYPE_INPUT_STR); <return; <return NS_OK;
if (!isImplementation(value)) <return NS_OK; &if (!isImplementation(value)) &return NS_ERROR_NULL_POINTER; return getRegistry().contains(new IDKey(value));
if (!isImplementation(value)) <return NS_OK; &if (!isImplementation(value)) <return NS_ERROR_NULL_POINTER; <return getRegistry().contains(new IDKey(value));
if (!aRegistry) &return false; <aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) &aRegistry = new NSKey(aKey); if (!aRegistry) return false; return true;
if (!value) return false; if ((ptr) == null) return false; &return false;
if (!key) mRegistry = null; if (!((key = new char)(value))) &return NS_OK; &if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!__active) return 0; if (isDebug()) if (getRegistry().isDebug()) return 1; else &if (!__active) return -1; if (__active) return -1; return -1; return -1;
if (value!= null) &nsCOMPtrnsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!key) <mRegistry = null; if (!((key = new char)(value))) &return NS_OK; <if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!__active) return 0; if (isDebug()) &if (getRegistry().isDebug()) return 1; <else <if (!__active) return -1; <if (__active) return -1; return -1; return -1;
if (!aRegistry) return false; <aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) <aRegistry = new NSKey(aKey); <if (!aRegistry) return false; return true;
if (eBool!= 0) &return getRegistry().contains(new IDKey(value)); else <if (value!= null) &return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (value) <if (! aKey) return; aKey.Remove(value); aKey.SetType(NS_TYPE_INPUT_STR); &return; &return NS_OK;
&if (!value) return false; else &return false; return false;
if (!isRegistered) <return 0; &if (isReal && value == null) return false; <return getRegistry().contains(null);
if (!isRegistered) &return 0; &if (isReal && value == null) <return false; <return getRegistry().contains(null);
if (eBool!= 0) &return getRegistry().contains(new IDKey(value)); <else if (value!= null) return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (value) if (getRegistry().contains(new IDKey(value))) <ret = GetRegistry(); return ret; &else ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (value) &if (getRegistry().contains(new IDKey(value))) <ret = GetRegistry(); return ret; <else &ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) id.id = id.id; <else if (isDebug()) return 0; &return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (value) <if (! aKey) return; aKey.Remove(value); aKey.SetType(NS_TYPE_INPUT_STR); return; return NS_OK;
if (!isRegistered) return 0; if (isReal && value == null) <return false; <return getRegistry().contains(null);
if (!do_GetRegistry()) &return false; <else &return getRegistry().contains(new IDKey(value));
if (!value) return false; &if ((ptr) == null) &return false; <return false;
if (!aRegistry) <return false; <aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) <aRegistry = new NSKey(aKey); <if (!aRegistry) return false; return true;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) <id.id = id; id.id = id; <else <id.id = id; &return (id.id == null)? id.id : id.id;
if (!isImplementation(value)) &return NS_OK; if (!isImplementation(value)) <return NS_ERROR_NULL_POINTER; return getRegistry().contains(new IDKey(value));
if (value) if (! getRegistry()) return 0; return getRegistry().contains(new IDKey(value)); <else <return 0;
if (node) <if (!td) <return NS_ERROR_NULL_POINTER; return NS_OK;
if (eBool!= 0) return getRegistry().contains(new IDKey(value)); <else <if (value!= null) &return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (getRegistry()) &ret = ret.removeFromRegistry(); return ret; else ret = ret.removeFromRegistry(); <return ret;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) <id.id = id; id.id = id; &else <id.id = id; &return (id.id == null)? id.id : id.id;
if (!__active) return 0; if (isDebug()) if (getRegistry().isDebug()) return 1; else <if (!__active) return -1; if (__active) return -1; return -1; return -1;
if (*name) if (!value.IsEmpty()) return NS_ERROR_OUT_OF_MEMORY; <&return NS_OK;
if (value) if (! getRegistry()) return 0; return getRegistry().contains(new IDKey(value)); else &return 0;
if (isInRegistry(&value)) <return false; return (result)(*value, &isInRegistry);
if (!aRegistry) &return false; &aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) &aRegistry = new NSKey(aKey); &if (!aRegistry) return false; return true;
if (node) <if (!td) &return NS_ERROR_NULL_POINTER; <return NS_OK;
if (!key) mRegistry = null; if (!((key = new char)(value))) <return NS_OK; if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (eBool!= 0) return getRegistry().contains(new IDKey(value)); &else if (value!= null) return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (value) if (getRegistry().contains(new IDKey(value))) <ret = GetRegistry(); return ret; <else <ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (eBool!= 0) return getRegistry().contains(new IDKey(value)); <else <if (value!= null) <return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!isImplementation(value)) &return NS_OK; <if (!isImplementation(value)) <return NS_ERROR_NULL_POINTER; return getRegistry().contains(new IDKey(value));
if (!value) return false; &if ((ptr) == null) &return false; return false;
if (!strlen(value)) <return false; <return false;
if (!__active) return 0; if (isDebug()) if (getRegistry().isDebug()) return 1; <else &if (!__active) return -1; &if (__active) return -1; return -1; return -1;
if (getRegistry()) ret = ret.removeFromRegistry(); return ret; else ret = ret.removeFromRegistry(); <return ret;
if (!key) &mRegistry = null; <if (!((key = new char)(value))) <return NS_OK; <if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!key) <mRegistry = null; &if (!((key = new char)(value))) <return NS_OK; <if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!aRegistry) &return false; aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) &aRegistry = new NSKey(aKey); &if (!aRegistry) return false; return true;
if (!do_GetRegistry()) &return false; else return getRegistry().contains(new IDKey(value));
if (!aRegistry) <return false; aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) aRegistry = new NSKey(aKey); &if (!aRegistry) return false; return true;
if (!value) <return false; &if ((ptr) == null) <return false; <return false;
if (!isRegistered) <return 0; <if (isReal && value == null) return false; return getRegistry().contains(null);
if (!value) return false; if ((ptr) == null) &return false; return false;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) &id.id = id.id; else <if (isDebug()) return 0; return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (getRegistry()) <ret = ret.removeFromRegistry(); return ret; &else <ret = ret.removeFromRegistry(); &return ret;
if (value) &return false; &return getRegistry().contains(new IDKey(value));
if (isInRegistry(&value)) &return false; &return (result)(*value, &isInRegistry);
if (value) &if (! getRegistry()) return 0; return getRegistry().contains(new IDKey(value)); <else return 0;
if (getRegistry()) ret = ret.removeFromRegistry(); return ret; <else &ret = ret.removeFromRegistry(); return ret;
if (isInRegistry(&value)) <return false; <return (result)(*value, &isInRegistry);
if (node) if (!td) <return NS_ERROR_NULL_POINTER; <&return NS_OK;
if (value!= null) nsCOMPtrnsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!value) <return false; <if ((ptr) == null) &return false; <return false;
if (getRegistry()) ret = ret.removeFromRegistry(); return ret; &else <ret = ret.removeFromRegistry(); return ret;
if (!aRegistry) &return false; <aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) &aRegistry = new NSKey(aKey); <if (!aRegistry) return false; return true;
if (!isRegistered(value)) return 0; return 0;
if (!key) mRegistry = null; if (!((key = new char)(value))) &return NS_OK; if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (getRegistry()) <ret = ret.removeFromRegistry(); return ret; else <ret = ret.removeFromRegistry(); <return ret;
if (!__active) return 0; if (isDebug()) &if (getRegistry().isDebug()) return 1; else <if (!__active) return -1; if (__active) return -1; return -1; return -1;
if (eBool!= 0) <return getRegistry().contains(new IDKey(value)); else &if (value!= null) &return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!key) mRegistry = null; <if (!((key = new char)(value))) &return NS_OK; <if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!key) mRegistry = null; <if (!((key = new char)(value))) return NS_OK; <if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!GetCID()) &return false; &return 0;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) id.id = id; id.id = id; else id.id = id; <return (id.id == null)? id.id : id.id;
if (!aRegistry) <return false; aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) &aRegistry = new NSKey(aKey); <if (!aRegistry) return false; return true;
&if (!value) return false; &else &return false; return false;
if (value) &if (getRegistry().contains(new IDKey(value))) <ret = GetRegistry(); return ret; <else ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (*name) &if (!value.IsEmpty()) <return NS_ERROR_OUT_OF_MEMORY; <<return NS_OK;
if (value!= null) nsCOMPtr<nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (node) &if (!td) <return NS_ERROR_NULL_POINTER; return NS_OK;
if (getRegistry()) ret = ret.removeFromRegistry(); return ret; <else <ret = ret.removeFromRegistry(); <return ret;
if (!key) &mRegistry = null; if (!((key = new char)(value))) &return NS_OK; <if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (value) if (! aKey) return; aKey.Remove(value); aKey.SetType(NS_TYPE_INPUT_STR); &return; <return NS_OK;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) &id.id = id.id; &else if (isDebug()) return 0; &return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (id && (value)) return getRegistry().contains(id); &else return (0);
if (*name) if (!value.IsEmpty()) &return NS_ERROR_OUT_OF_MEMORY; return NS_OK;
if (eBool!= 0) &return getRegistry().contains(new IDKey(value)); &else if (value!= null) <return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (value!= null) <nsCOMPtrnsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (*name) if (!value.IsEmpty()) return NS_ERROR_OUT_OF_MEMORY; &&return NS_OK;
if (value) if (getRegistry().contains(new IDKey(value))) <ret = GetRegistry(); return ret; else <ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (*name) <if (!value.IsEmpty()) return NS_ERROR_OUT_OF_MEMORY; <<return NS_OK;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) <id.id = id.id; <else if (isDebug()) return 0; <return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) id.id = id.id; else &if (isDebug()) return 0; <return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!value) <return false; <if ((ptr) == null) &return false; return false;
if (!aRegistry) return false; &aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) &aRegistry = new NSKey(aKey); &if (!aRegistry) return false; return true;
if (getRegistry()) ret = ret.removeFromRegistry(); return ret; else &ret = ret.removeFromRegistry(); return ret;
if (!isImplementation(value)) <return NS_OK; <if (!isImplementation(value)) &return NS_ERROR_NULL_POINTER; return getRegistry().contains(new IDKey(value));
if (!isRegistered) <return 0; if (isReal && value == null) &return false; <return getRegistry().contains(null);
if (!value) &return false; <if ((ptr) == null) <return false; <return false;
if (node) <if (!td) &return NS_ERROR_NULL_POINTER; &return NS_OK;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) id.id = id.id; <else <if (isDebug()) return 0; <return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!GetCID()) return false; return 0;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) id.id = id.id; &else if (isDebug()) return 0; return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!do_GetRegistry()) <return false; &else &return getRegistry().contains(new IDKey(value));
if (value) <if (! getRegistry()) return 0; return getRegistry().contains(new IDKey(value)); else <return 0;
if (value!= null) nsCOMPtr&nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (eBool!= 0) <return getRegistry().contains(new IDKey(value)); <else <if (value!= null) <return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (node) <if (!td) &return NS_ERROR_NULL_POINTER; <&return NS_OK;
if (!isRegistered) <return 0; <if (isReal && value == null) <return false; &return getRegistry().contains(null);
if (node) &if (!td) &return NS_ERROR_NULL_POINTER; <&return NS_OK;
<if (!value) &return false; else <return false; return false;
if (!value) return false; <if ((ptr) == null) <return false; &return false;
if (*name) <if (!value.IsEmpty()) return NS_ERROR_OUT_OF_MEMORY; return NS_OK;
if (value) &if (! aKey) return; aKey.Remove(value); aKey.SetType(NS_TYPE_INPUT_STR); <return; return NS_OK;
if (value) <if (! getRegistry()) return 0; return getRegistry().contains(new IDKey(value)); else return 0;
if (*name) <if (!value.IsEmpty()) <return NS_ERROR_OUT_OF_MEMORY; &return NS_OK;
if (value) if (getRegistry().contains(new IDKey(value))) ret = GetRegistry(); return ret; else &ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
&if (!value) <return false; <else &return false; return false;
if (!value) <return false; <if ((ptr) == null) &return false; &return false;
if (!value) return false; &else return false; return false;
if (*name) if (!value.IsEmpty()) return NS_ERROR_OUT_OF_MEMORY; &return NS_OK;
if (!aRegistry) return false; aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) <aRegistry = new NSKey(aKey); if (!aRegistry) return false; return true;
if (value) if (! aKey) return; aKey.Remove(value); aKey.SetType(NS_TYPE_INPUT_STR); &return; return NS_OK;
if (node) <if (!td) return NS_ERROR_NULL_POINTER; return NS_OK;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) id.id = id.id; <else &if (isDebug()) return 0; &return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!isRegistered) return 0; <if (isReal && value == null) <return false; <return getRegistry().contains(null);
if (node) if (!td) <return NS_ERROR_NULL_POINTER; <return NS_OK;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) id.id = id; id.id = id; &else &id.id = id; &return (id.id == null)? id.id : id.id;
if (eBool!= 0) &return getRegistry().contains(new IDKey(value)); <else &if (value!= null) return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (getRegistry()) &ret = ret.removeFromRegistry(); return ret; else &ret = ret.removeFromRegistry(); return ret;
if (*name) if (!value.IsEmpty()) &return NS_ERROR_OUT_OF_MEMORY; <<return NS_OK;
if (!aRegistry) &return false; aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) aRegistry = new NSKey(aKey); if (!aRegistry) return false; return true;
if (id && (value)) <return getRegistry().contains(id); &else &return (0);
if (value!= null) &nsCOMPtr<nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!isImplementation(value)) &return NS_OK; &if (!isImplementation(value)) return NS_ERROR_NULL_POINTER; <return getRegistry().contains(new IDKey(value));
if (value!= null) nsCOMPtrnsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (value) if (getRegistry().contains(new IDKey(value))) ret = GetRegistry(); return ret; &else ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
<if (!value) return false; &else &return false; return false;
if (*name) <if (!value.IsEmpty()) &return NS_ERROR_OUT_OF_MEMORY; <<return NS_OK;
if (!value) return false; if ((ptr) == null) <return false; &return false;
if (eBool!= 0) &return getRegistry().contains(new IDKey(value)); else <if (value!= null) <return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!aRegistry) return false; &aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) <aRegistry = new NSKey(aKey); if (!aRegistry) return false; return true;
if (!key) &mRegistry = null; &if (!((key = new char)(value))) <return NS_OK; &if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (value) <if (getRegistry().contains(new IDKey(value))) <ret = GetRegistry(); return ret; <else ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (value) <if (getRegistry().contains(new IDKey(value))) <ret = GetRegistry(); return ret; <else &ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (value!= null) <nsCOMPtr<nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (eBool!= 0) &return getRegistry().contains(new IDKey(value)); &else &if (value!= null) <return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!aRegistry) return false; &aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) aRegistry = new NSKey(aKey); &if (!aRegistry) return false; return true;
if (value!= null) <nsCOMPtrnsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (*name) &if (!value.IsEmpty()) &return NS_ERROR_OUT_OF_MEMORY; &<return NS_OK;
if (!value) <return false; if ((ptr) == null) <return false; &return false;
if (!__active) return 0; if (isDebug()) if (getRegistry().isDebug()) return 1; else &if (!__active) return -1; <if (__active) return -1; return -1; return -1;
if (*name) &if (!value.IsEmpty()) <return NS_ERROR_OUT_OF_MEMORY; <return NS_OK;
if (eBool!= 0) &return getRegistry().contains(new IDKey(value)); &else if (value!= null) &return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!aRegistry) <return false; aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) <aRegistry = new NSKey(aKey); <if (!aRegistry) return false; return true;
if (node) &if (!td) return NS_ERROR_NULL_POINTER; return NS_OK;
if (!value) return false; if ((ptr) == null) return false; return false;
if (*name) &if (!value.IsEmpty()) return NS_ERROR_OUT_OF_MEMORY; <<return NS_OK;
if (getRegistry()) ret = ret.removeFromRegistry(); return ret; &else ret = ret.removeFromRegistry(); &return ret;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) id.id = id; id.id = id; &else <id.id = id; <return (id.id == null)? id.id : id.id;
<if (!value) <return false; &else return false; return false;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) &id.id = id; id.id = id; &else id.id = id; &return (id.id == null)? id.id : id.id;
if (value!= null) <nsCOMPtr&nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (id && (value)) return getRegistry().contains(id); &else <return (0);
if (node) if (!td) <return NS_ERROR_NULL_POINTER; &return NS_OK;
if (!GetCID()) <return false; &return 0;
if (!aRegistry) return false; <aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) &aRegistry = new NSKey(aKey); if (!aRegistry) return false; return true;
if (!key) &mRegistry = null; if (!((key = new char)(value))) return NS_OK; if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (eBool!= 0) <return getRegistry().contains(new IDKey(value)); &else if (value!= null) return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (getRegistry()) &ret = ret.removeFromRegistry(); return ret; &else ret = ret.removeFromRegistry(); &return ret;
if (!aRegistry) return false; aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) aRegistry = new NSKey(aKey); if (!aRegistry) return false; return true;
if (eBool!= 0) &return getRegistry().contains(new IDKey(value)); <else if (value!= null) &return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (value!= null) nsCOMPtr<nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!key) <mRegistry = null; &if (!((key = new char)(value))) &return NS_OK; if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) <id.id = id.id; <else <if (isDebug()) return 0; return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (*name) <if (!value.IsEmpty()) return NS_ERROR_OUT_OF_MEMORY; <return NS_OK;
if (!isRegistered) <return 0; <if (isReal && value == null) &return false; return getRegistry().contains(null);
if (id && (value)) &return getRegistry().contains(id); &else <return (0);
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) <id.id = id.id; <else &if (isDebug()) return 0; &return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) &id.id = id.id; &else if (isDebug()) return 0; return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!key) <mRegistry = null; if (!((key = new char)(value))) <return NS_OK; &if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) id.id = id.id; else <if (isDebug()) return 0; return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) &id.id = id.id; <else &if (isDebug()) return 0; &return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!key) <mRegistry = null; <if (!((key = new char)(value))) &return NS_OK; &if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (*name) if (!value.IsEmpty()) return NS_ERROR_OUT_OF_MEMORY; <<return NS_OK;
if (!isRegistered) <return 0; &if (isReal && value == null) return false; return getRegistry().contains(null);
&if (!value) <return false; else <return false; return false;
if (node) &if (!td) return NS_ERROR_NULL_POINTER; &&return NS_OK;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) id.id = id; id.id = id; <else <id.id = id; <return (id.id == null)? id.id : id.id;
if (eBool!= 0) return getRegistry().contains(new IDKey(value)); &else if (value!= null) &return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!isRegistered) &return 0; <if (isReal && value == null) return false; &return getRegistry().contains(null);
if (!value) <return false; <else &return false; return false;
if (*name) &if (!value.IsEmpty()) &return NS_ERROR_OUT_OF_MEMORY; &&return NS_OK;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) id.id = id.id; &else <if (isDebug()) return 0; &return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) id.id = id; id.id = id; <else id.id = id; return (id.id == null)? id.id : id.id;
if (!isRegistered) <return 0; <if (isReal && value == null) return false; <return getRegistry().contains(null);
if (!do_GetRegistry()) <return false; else return getRegistry().contains(new IDKey(value));
if (!key) &mRegistry = null; if (!((key = new char)(value))) <return NS_OK; &if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!value) &return false; <if ((ptr) == null) <return false; return false;
if (!isImplementation(value)) <return NS_OK; &if (!isImplementation(value)) &return NS_ERROR_NULL_POINTER; &return getRegistry().contains(new IDKey(value));
if (!__active) return 0; if (isDebug()) if (getRegistry().isDebug()) return 1; &else if (!__active) return -1; if (__active) return -1; return -1; return -1;
if (getRegistry()) <ret = ret.removeFromRegistry(); return ret; <else &ret = ret.removeFromRegistry(); return ret;
if (value) if (! getRegistry()) return 0; return getRegistry().contains(new IDKey(value)); else return 0;
if (*name) <if (!value.IsEmpty()) &return NS_ERROR_OUT_OF_MEMORY; <return NS_OK;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) id.id = id; id.id = id; <else <id.id = id; &return (id.id == null)? id.id : id.id;
if (value) if (getRegistry().contains(new IDKey(value))) &ret = GetRegistry(); return ret; else &ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (id && (value)) <return getRegistry().contains(id); else return (0);
if (!isRegistered) &return 0; <if (isReal && value == null) <return false; return getRegistry().contains(null);
if (!isRegistered(value)) return 0; <return 0;
if (value!= null) &nsCOMPtr<nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (node) if (!td) &return NS_ERROR_NULL_POINTER; <<return NS_OK;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) id.id = id.id; &else &if (isDebug()) return 0; &return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!aRegistry) <return false; aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) <aRegistry = new NSKey(aKey); &if (!aRegistry) return false; return true;
if (*name) <if (!value.IsEmpty()) &return NS_ERROR_OUT_OF_MEMORY; return NS_OK;
if (*name) &if (!value.IsEmpty()) return NS_ERROR_OUT_OF_MEMORY; <&return NS_OK;
if (value!= null) nsCOMPtr&nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!__active) return 0; if (isDebug()) <if (getRegistry().isDebug()) return 1; &else if (!__active) return -1; <if (__active) return -1; return -1; return -1;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) id.id = id.id; else if (isDebug()) return 0; <return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (value) if (getRegistry().contains(new IDKey(value))) <ret = GetRegistry(); return ret; else ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!isImplementation(value)) return NS_OK; <if (!isImplementation(value)) return NS_ERROR_NULL_POINTER; return getRegistry().contains(new IDKey(value));
if (value) &if (getRegistry().contains(new IDKey(value))) &ret = GetRegistry(); return ret; &else &ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (node) <if (!td) <return NS_ERROR_NULL_POINTER; &<return NS_OK;
if (eBool!= 0) &return getRegistry().contains(new IDKey(value)); else if (value!= null) <return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (value) if (getRegistry().contains(new IDKey(value))) ret = GetRegistry(); return ret; &else <ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (value) &if (getRegistry().contains(new IDKey(value))) <ret = GetRegistry(); return ret; &else ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) <id.id = id; id.id = id; else id.id = id; &return (id.id == null)? id.id : id.id;
if (value) <if (! getRegistry()) return 0; return getRegistry().contains(new IDKey(value)); &else return 0;
if (value) <if (getRegistry().contains(new IDKey(value))) ret = GetRegistry(); return ret; &else ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (node) if (!td) &return NS_ERROR_NULL_POINTER; &return NS_OK;
if (node) &if (!td) &return NS_ERROR_NULL_POINTER; &return NS_OK;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) &id.id = id.id; else &if (isDebug()) return 0; return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!aRegistry) <return false; <aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) aRegistry = new NSKey(aKey); <if (!aRegistry) return false; return true;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) &id.id = id.id; else if (isDebug()) return 0; return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) &id.id = id.id; else <if (isDebug()) return 0; &return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!do_GetRegistry()) <return false; <else &return getRegistry().contains(new IDKey(value));
if (eBool!= 0) return getRegistry().contains(new IDKey(value)); <else &if (value!= null) return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (getRegistry()) <ret = ret.removeFromRegistry(); return ret; &else <ret = ret.removeFromRegistry(); return ret;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) <id.id = id.id; else &if (isDebug()) return 0; return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (*name) if (!value.IsEmpty()) &return NS_ERROR_OUT_OF_MEMORY; &<return NS_OK;
if (!isImplementation(value)) &return NS_OK; if (!isImplementation(value)) return NS_ERROR_NULL_POINTER; return getRegistry().contains(new IDKey(value));
if (eBool!= 0) &return getRegistry().contains(new IDKey(value)); <else <if (value!= null) &return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (isInRegistry(&value)) <return false; &return (result)(*value, &isInRegistry);
return getRegistry().contains(new IDKey(value));
if (!key) &mRegistry = null; &if (!((key = new char)(value))) return NS_OK; &if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!key) mRegistry = null; if (!((key = new char)(value))) <return NS_OK; &if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!isRegistered) &return 0; &if (isReal && value == null) &return false; return getRegistry().contains(null);
if (!key) &mRegistry = null; &if (!((key = new char)(value))) &return NS_OK; <if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
<if (!value) <return false; <else <return false; return false;
if (value) <if (getRegistry().contains(new IDKey(value))) &ret = GetRegistry(); return ret; else ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!isImplementation(value)) <return NS_OK; &if (!isImplementation(value)) return NS_ERROR_NULL_POINTER; &return getRegistry().contains(new IDKey(value));
if (eBool!= 0) <return getRegistry().contains(new IDKey(value)); &else <if (value!= null) &return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!__active) return 0; if (isDebug()) &if (getRegistry().isDebug()) return 1; <else <if (!__active) return -1; if (__active) return -1; return -1; return -1;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) id.id = id.id; &else <if (isDebug()) return 0; return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!isRegistered) <return 0; if (isReal && value == null) <return false; <return getRegistry().contains(null);
if (value == null) return NS_ERROR_NULL_POINTER; if (id) id.id = id; id.id = id; else <id.id = id; <return (id.id == null)? id.id : id.id;
if (!value) &return false; &if ((ptr) == null) &return false; <return false;
if (!value) return false; <else return false; return false;
if (!isImplementation(value)) &return NS_OK; &if (!isImplementation(value)) &return NS_ERROR_NULL_POINTER; &return getRegistry().contains(new IDKey(value));
if (id && (value)) <return getRegistry().contains(id); else &return (0);
if (!GetCID()) return false; <return 0;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) id.id = id.id; &else <if (isDebug()) return 0; <return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!do_GetRegistry()) <return false; &else <return getRegistry().contains(new IDKey(value));
if (!key) <mRegistry = null; &if (!((key = new char)(value))) return NS_OK; &if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!isImplementation(value)) &return NS_OK; &if (!isImplementation(value)) <return NS_ERROR_NULL_POINTER; <return getRegistry().contains(new IDKey(value));
if (!key) mRegistry = null; &if (!((key = new char)(value))) return NS_OK; if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (value) if (getRegistry().contains(new IDKey(value))) <ret = GetRegistry(); return ret; &else &ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!value) <return false; if ((ptr) == null) &return false; &return false;
if (value) &if (getRegistry().contains(new IDKey(value))) ret = GetRegistry(); return ret; else &ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!__active) return 0; if (isDebug()) if (getRegistry().isDebug()) return 1; &else <if (!__active) return -1; <if (__active) return -1; return -1; return -1;
if (*name) if (!value.IsEmpty()) &return NS_ERROR_OUT_OF_MEMORY; <&return NS_OK;
if (*name) <if (!value.IsEmpty()) &return NS_ERROR_OUT_OF_MEMORY; &<return NS_OK;
if (value) &if (! aKey) return; aKey.Remove(value); aKey.SetType(NS_TYPE_INPUT_STR); return; &return NS_OK;
if (eBool!= 0) <return getRegistry().contains(new IDKey(value)); else <if (value!= null) <return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!__active) return 0; if (isDebug()) if (getRegistry().isDebug()) return 1; &else &if (!__active) return -1; <if (__active) return -1; return -1; return -1;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) <id.id = id.id; else &if (isDebug()) return 0; <return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!isRegistered(value)) <return 0; <return 0;
if (!value) return false; if ((ptr) == null) <return false; return false;
if (!value) &return false; &if ((ptr) == null) return false; return false;
if (getRegistry()) &ret = ret.removeFromRegistry(); return ret; else &ret = ret.removeFromRegistry(); <return ret;
if (!key) <mRegistry = null; <if (!((key = new char)(value))) <return NS_OK; &if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!key) &mRegistry = null; &if (!((key = new char)(value))) <return NS_OK; <if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) id.id = id.id; <else &if (isDebug()) return 0; <return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!value) return false; <if ((ptr) == null) &return false; <return false;
<if (!value) return false; <else <return false; return false;
if (!__active) return 0; if (isDebug()) &if (getRegistry().isDebug()) return 1; else if (!__active) return -1; &if (__active) return -1; return -1; return -1;
if (!aRegistry) &return false; aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) <aRegistry = new NSKey(aKey); <if (!aRegistry) return false; return true;
if (value) <if (getRegistry().contains(new IDKey(value))) &ret = GetRegistry(); return ret; &else <ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (value) <if (getRegistry().contains(new IDKey(value))) <ret = GetRegistry(); return ret; &else &ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (value!= null) <nsCOMPtr&nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (value) <if (! getRegistry()) return 0; return getRegistry().contains(new IDKey(value)); &else &return 0;
if (!__active) return 0; if (isDebug()) if (getRegistry().isDebug()) return 1; else <if (!__active) return -1; <if (__active) return -1; return -1; return -1;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) <id.id = id; id.id = id; &else &id.id = id; <return (id.id == null)? id.id : id.id;
if (eBool!= 0) return getRegistry().contains(new IDKey(value)); else if (value!= null) &return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) &id.id = id.id; &else <if (isDebug()) return 0; &return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) <id.id = id; id.id = id; else <id.id = id; &return (id.id == null)? id.id : id.id;
if (!isRegistered) return 0; &if (isReal && value == null) return false; return getRegistry().contains(null);
if (!key) <mRegistry = null; if (!((key = new char)(value))) &return NS_OK; if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (value!= null) <nsCOMPtr<nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!isImplementation(value)) &return NS_OK; if (!isImplementation(value)) &return NS_ERROR_NULL_POINTER; &return getRegistry().contains(new IDKey(value));
if (value) &if (! aKey) return; aKey.Remove(value); aKey.SetType(NS_TYPE_INPUT_STR); return; <return NS_OK;
if (!isRegistered(value)) &return 0; <return 0;
if (!isRegistered) &return 0; &if (isReal && value == null) return false; &return getRegistry().contains(null);
if (value) if (! getRegistry()) return 0; return getRegistry().contains(new IDKey(value)); &else &return 0;
if (value) if (! getRegistry()) return 0; return getRegistry().contains(new IDKey(value)); &else return 0;
if (value) if (getRegistry().contains(new IDKey(value))) <ret = GetRegistry(); return ret; <else &ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!isImplementation(value)) return NS_OK; &if (!isImplementation(value)) return NS_ERROR_NULL_POINTER; &return getRegistry().contains(new IDKey(value));
if (value!= null) nsCOMPtr&nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) <id.id = id; id.id = id; &else <id.id = id; <return (id.id == null)? id.id : id.id;
if (node) if (!td) &return NS_ERROR_NULL_POINTER; &&return NS_OK;
if (value) return false; return getRegistry().contains(new IDKey(value));
if (!key) &mRegistry = null; if (!((key = new char)(value))) <return NS_OK; <if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!isRegistered) <return 0; <if (isReal && value == null) &return false; <return getRegistry().contains(null);
if (!aRegistry) &return false; aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) <aRegistry = new NSKey(aKey); &if (!aRegistry) return false; return true;
if ((isRegistered = true) || isRegistered == false) return false; &return!isRegistered;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) &id.id = id.id; <else if (isDebug()) return 0; &return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) id.id = id.id; else &if (isDebug()) return 0; return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!isImplementation(value)) <return NS_OK; &if (!isImplementation(value)) <return NS_ERROR_NULL_POINTER; return getRegistry().contains(new IDKey(value));
if (!__active) return 0; if (isDebug()) <if (getRegistry().isDebug()) return 1; <else <if (!__active) return -1; <if (__active) return -1; return -1; return -1;
if (!value) <return false; <if ((ptr) == null) <return false; return false;
if (getRegistry()) &ret = ret.removeFromRegistry(); return ret; <else ret = ret.removeFromRegistry(); &return ret;
<if (!value) &return false; else &return false; return false;
if (getRegistry()) &ret = ret.removeFromRegistry(); return ret; <else &ret = ret.removeFromRegistry(); &return ret;
if (!value) return false; else <return false; return false;
if (!key) <mRegistry = null; <if (!((key = new char)(value))) &return NS_OK; if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!isImplementation(value)) <return NS_OK; &if (!isImplementation(value)) return NS_ERROR_NULL_POINTER; return getRegistry().contains(new IDKey(value));
if (value) &if (! getRegistry()) return 0; return getRegistry().contains(new IDKey(value)); <else &return 0;
if (!key) &mRegistry = null; <if (!((key = new char)(value))) return NS_OK; &if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (getRegistry()) ret = ret.removeFromRegistry(); return ret; else <ret = ret.removeFromRegistry(); <return ret;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) <id.id = id; id.id = id; &else &id.id = id; &return (id.id == null)? id.id : id.id;
if (value) if (getRegistry().contains(new IDKey(value))) &ret = GetRegistry(); return ret; &else &ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (eBool!= 0) <return getRegistry().contains(new IDKey(value)); else if (value!= null) <return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!isRegistered) return 0; <if (isReal && value == null) return false; <return getRegistry().contains(null);
if (!isRegistered) &return 0; if (isReal && value == null) &return false; <return getRegistry().contains(null);
if (node) if (!td) &return NS_ERROR_NULL_POINTER; &<return NS_OK;
if (eBool!= 0) <return getRegistry().contains(new IDKey(value)); <else &if (value!= null) <return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) <id.id = id.id; &else &if (isDebug()) return 0; return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!isRegistered) return 0; if (isReal && value == null) &return false; return getRegistry().contains(null);
if (!do_GetRegistry()) return false; &else &return getRegistry().contains(new IDKey(value));
if (!isRegistered) return 0; <if (isReal && value == null) &return false; &return getRegistry().contains(null);
<if (!value) return false; <else return false; return false;
if (node) &if (!td) &return NS_ERROR_NULL_POINTER; &&return NS_OK;
if (!value) <return false; else return false; return false;
if (eBool!= 0) return getRegistry().contains(new IDKey(value)); &else <if (value!= null) &return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!value) <return false; <if ((ptr) == null) <return false; <return false;
if (!isRegistered) return 0; &if (isReal && value == null) <return false; &return getRegistry().contains(null);
if (node) &if (!td) &return NS_ERROR_NULL_POINTER; <return NS_OK;
if (!isRegistered) return 0; <if (isReal && value == null) return false; return getRegistry().contains(null);
if (value == null) return NS_ERROR_NULL_POINTER; if (id) &id.id = id; id.id = id; <else &id.id = id; &return (id.id == null)? id.id : id.id;
if (node) &if (!td) return NS_ERROR_NULL_POINTER; <<return NS_OK;
if (getRegistry()) <ret = ret.removeFromRegistry(); return ret; <else <ret = ret.removeFromRegistry(); <return ret;
if (value) <if (! getRegistry()) return 0; return getRegistry().contains(new IDKey(value)); <else &return 0;
if (value) &if (! aKey) return; aKey.Remove(value); aKey.SetType(NS_TYPE_INPUT_STR); &return; &return NS_OK;
if ((isRegistered = true) || isRegistered == false) return false; return!isRegistered;
if (getRegistry()) <ret = ret.removeFromRegistry(); return ret; else <ret = ret.removeFromRegistry(); return ret;
if (!value) <return false; <if ((ptr) == null) return false; <return false;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) <id.id = id; id.id = id; <else &id.id = id; &return (id.id == null)? id.id : id.id;
if (value) if (getRegistry().contains(new IDKey(value))) ret = GetRegistry(); return ret; &else &ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (value) if (getRegistry().contains(new IDKey(value))) &ret = GetRegistry(); return ret; else <ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (value) <if (! aKey) return; aKey.Remove(value); aKey.SetType(NS_TYPE_INPUT_STR); return; &return NS_OK;
if (getRegistry().contains(value)) <return 0; return true;
if (!aRegistry) &return false; &aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) &aRegistry = new NSKey(aKey); if (!aRegistry) return false; return true;
if (value) if (getRegistry().contains(new IDKey(value))) &ret = GetRegistry(); return ret; <else <ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!do_GetRegistry()) &return false; else &return getRegistry().contains(new IDKey(value));
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) <id.id = id.id; else <if (isDebug()) return 0; &return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!value) &return false; &else &return false; return false;
if (!aRegistry) <return false; <aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) &aRegistry = new NSKey(aKey); <if (!aRegistry) return false; return true;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) &id.id = id.id; <else if (isDebug()) return 0; <return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (value) if (getRegistry().contains(new IDKey(value))) &ret = GetRegistry(); return ret; &else ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!aRegistry) return false; aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) &aRegistry = new NSKey(aKey); if (!aRegistry) return false; return true;
if (*name) <if (!value.IsEmpty()) return NS_ERROR_OUT_OF_MEMORY; &return NS_OK;
if (!aRegistry) <return false; <aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) &aRegistry = new NSKey(aKey); if (!aRegistry) return false; return true;
if (node) <if (!td) &return NS_ERROR_NULL_POINTER; <<return NS_OK;
<if (!value) return false; else &return false; return false;
if (!isRegistered) <return 0; if (isReal && value == null) <return false; &return getRegistry().contains(null);
if (node) <if (!td) return NS_ERROR_NULL_POINTER; <&return NS_OK;
if (eBool!= 0) <return getRegistry().contains(new IDKey(value)); <else &if (value!= null) return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (eBool!= 0) &return getRegistry().contains(new IDKey(value)); <else <if (value!= null) <return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!aRegistry) &return false; &aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) aRegistry = new NSKey(aKey); <if (!aRegistry) return false; return true;
if (!value) &return false; if ((ptr) == null) &return false; &return false;
if (eBool!= 0) <return getRegistry().contains(new IDKey(value)); &else <if (value!= null) <return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) id.id = id; id.id = id; &else id.id = id; &return (id.id == null)? id.id : id.id;
if (*name) &if (!value.IsEmpty()) <return NS_ERROR_OUT_OF_MEMORY; &return NS_OK;
if (!value) <return false; &if ((ptr) == null) return false; &return false;
if (getRegistry().contains(value)) &return (void) getRegistry().contains(new IDKey(value));
if (eBool!= 0) return getRegistry().contains(new IDKey(value)); <else if (value!= null) <return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (value!= null) <nsCOMPtr&nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
<if (!value) return false; <else &return false; return false;
if (!value) <return false; if ((ptr) == null) <return false; <return false;
if (id && (value)) return getRegistry().contains(id); &else &return (0);
if (getRegistry()) &ret = ret.removeFromRegistry(); return ret; else ret = ret.removeFromRegistry(); return ret;
if (getRegistry()) &ret = ret.removeFromRegistry(); return ret; <else <ret = ret.removeFromRegistry(); return ret;
if (id && (value)) &return getRegistry().contains(id); else <return (0);
if (!value) return false; <if ((ptr) == null) return false; return false;
if (value!= null) &nsCOMPtrnsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (value) <return false; return getRegistry().contains(new IDKey(value));
if (value!= null) <nsCOMPtr<nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) <id.id = id; id.id = id; <else &id.id = id; return (id.id == null)? id.id : id.id;
if (!__active) return 0; if (isDebug()) if (getRegistry().isDebug()) return 1; <else &if (!__active) return -1; if (__active) return -1; return -1; return -1;
if (value) <if (getRegistry().contains(new IDKey(value))) <ret = GetRegistry(); return ret; else &ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!value) &return false; else <return false; return false;
if (value) <if (getRegistry().contains(new IDKey(value))) &ret = GetRegistry(); return ret; else <ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) <id.id = id; id.id = id; &else id.id = id; &return (id.id == null)? id.id : id.id;
if (*name) <if (!value.IsEmpty()) return NS_ERROR_OUT_OF_MEMORY; &<return NS_OK;
if (!isImplementation(value)) &return NS_OK; if (!isImplementation(value)) <return NS_ERROR_NULL_POINTER; <return getRegistry().contains(new IDKey(value));
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) &id.id = id.id; else <if (isDebug()) return 0; <return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!value) &return false; <if ((ptr) == null) return false; return false;
if (!value) return false; <if ((ptr) == null) &return false; return false;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) &id.id = id; id.id = id; else id.id = id; return (id.id == null)? id.id : id.id;
if (eBool!= 0) return getRegistry().contains(new IDKey(value)); else &if (value!= null) &return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (getRegistry()) ret = ret.removeFromRegistry(); return ret; else <ret = ret.removeFromRegistry(); &return ret;
if (getRegistry()) <ret = ret.removeFromRegistry(); return ret; &else &ret = ret.removeFromRegistry(); <return ret;
if (getRegistry()) <ret = ret.removeFromRegistry(); return ret; else ret = ret.removeFromRegistry(); return ret;
if (!value) return false; &if ((ptr) == null) return false; <return false;
if (node) &if (!td) &return NS_ERROR_NULL_POINTER; return NS_OK;
if (!isImplementation(value)) &return NS_OK; <if (!isImplementation(value)) <return NS_ERROR_NULL_POINTER; &return getRegistry().contains(new IDKey(value));
if (node) if (!td) &return NS_ERROR_NULL_POINTER; return NS_OK;
&if (!value) <return false; <else return false; return false;
if (getRegistry()) <ret = ret.removeFromRegistry(); return ret; <else ret = ret.removeFromRegistry(); return ret;
if (!value) return false; if ((ptr) == null) <return false; <return false;
if (value!= null) <nsCOMPtr<nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) id.id = id; id.id = id; <else id.id = id; <return (id.id == null)? id.id : id.id;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) <id.id = id; id.id = id; <else id.id = id; return (id.id == null)? id.id : id.id;
if (!strlen(value)) return false; <return false;
if (*name) if (!value.IsEmpty()) <return NS_ERROR_OUT_OF_MEMORY; &return NS_OK;
if (id && (value)) &return getRegistry().contains(id); <else <return (0);
if (eBool!= 0) return getRegistry().contains(new IDKey(value)); &else <if (value!= null) return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (value) <if (getRegistry().contains(new IDKey(value))) ret = GetRegistry(); return ret; <else &ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (*name) &if (!value.IsEmpty()) &return NS_ERROR_OUT_OF_MEMORY; return NS_OK;
<if (!value) return false; &else return false; return false;
if (!aRegistry) return false; aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) <aRegistry = new NSKey(aKey); <if (!aRegistry) return false; return true;
if (getRegistry()) &ret = ret.removeFromRegistry(); return ret; <else <ret = ret.removeFromRegistry(); &return ret;
&if (!value) return false; <else <return false; return false;
if (!aRegistry) <return false; &aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) &aRegistry = new NSKey(aKey); if (!aRegistry) return false; return true;
if (!value) &return false; &if ((ptr) == null) &return false; return false;
if (!key) mRegistry = null; &if (!((key = new char)(value))) return NS_OK; &if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (value!= null) &nsCOMPtr&nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!isImplementation(value)) <return NS_OK; <if (!isImplementation(value)) return NS_ERROR_NULL_POINTER; return getRegistry().contains(new IDKey(value));
if (value == null) return NS_ERROR_NULL_POINTER; if (id) id.id = id; id.id = id; else <id.id = id; return (id.id == null)? id.id : id.id;
if (!aRegistry) &return false; <aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) <aRegistry = new NSKey(aKey); <if (!aRegistry) return false; return true;
if (!value) &return false; <else &return false; return false;
if (!__active) return 0; if (isDebug()) <if (getRegistry().isDebug()) return 1; else if (!__active) return -1; <if (__active) return -1; return -1; return -1;
<return getRegistry().contains(new IDKey(value));
if (value!= null) nsCOMPtr<nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!isRegistered(value)) &return 0; return 0;
if (*name) if (!value.IsEmpty()) &return NS_ERROR_OUT_OF_MEMORY; &&return NS_OK;
if (!GetCID()) &return false; return 0;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) id.id = id; id.id = id; else id.id = id; return (id.id == null)? id.id : id.id;
if ((isRegistered = true) || isRegistered == false) <return false; &return!isRegistered;
if (!aRegistry) return false; aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) &aRegistry = new NSKey(aKey); <if (!aRegistry) return false; return true;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) <id.id = id; id.id = id; <else <id.id = id; <return (id.id == null)? id.id : id.id;
if (*name) if (!value.IsEmpty()) <return NS_ERROR_OUT_OF_MEMORY; return NS_OK;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) &id.id = id; id.id = id; &else &id.id = id; &return (id.id == null)? id.id : id.id;
if (value!= null) <nsCOMPtr<nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!isRegistered) return 0; <if (isReal && value == null) <return false; &return getRegistry().contains(null);
if (!aRegistry) &return false; <aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) aRegistry = new NSKey(aKey); <if (!aRegistry) return false; return true;
if (!aRegistry) <return false; &aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) aRegistry = new NSKey(aKey); if (!aRegistry) return false; return true;
if (!key) <mRegistry = null; if (!((key = new char)(value))) return NS_OK; <if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!do_GetRegistry()) &return false; &else &return getRegistry().contains(new IDKey(value));
if (value == null) return NS_ERROR_NULL_POINTER; if (id) id.id = id; id.id = id; &else <id.id = id; &return (id.id == null)? id.id : id.id;
if (value!= null) <nsCOMPtr&nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (id && (value)) &return getRegistry().contains(id); <else return (0);
if (! getRegistry()) return null; &return!GetRegistry();
if (value == null) return NS_ERROR_NULL_POINTER; if (id) &id.id = id; id.id = id; <else id.id = id; return (id.id == null)? id.id : id.id;
if (!key) mRegistry = null; <if (!((key = new char)(value))) <return NS_OK; if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (value) if (getRegistry().contains(new IDKey(value))) &ret = GetRegistry(); return ret; <else &ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!isImplementation(value)) return NS_OK; if (!isImplementation(value)) <return NS_ERROR_NULL_POINTER; return getRegistry().contains(new IDKey(value));
if (node) if (!td) <return NS_ERROR_NULL_POINTER; return NS_OK;
if (getRegistry()) &ret = ret.removeFromRegistry(); return ret; else <ret = ret.removeFromRegistry(); &return ret;
if (eBool!= 0) <return getRegistry().contains(new IDKey(value)); else <if (value!= null) return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!key) mRegistry = null; <if (!((key = new char)(value))) return NS_OK; if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (value) <if (getRegistry().contains(new IDKey(value))) ret = GetRegistry(); return ret; <else <ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) id.id = id; id.id = id; &else id.id = id; return (id.id == null)? id.id : id.id;
if (!aRegistry) return false; &aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) <aRegistry = new NSKey(aKey); <if (!aRegistry) return false; return true;
if (!aRegistry) <return false; aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) aRegistry = new NSKey(aKey); if (!aRegistry) return false; return true;
if (!value) return false; else return false; return false;
if (!isRegistered) <return 0; &if (isReal && value == null) &return false; return getRegistry().contains(null);
if (node) <if (!td) <return NS_ERROR_NULL_POINTER; <return NS_OK;
if (eBool!= 0) <return getRegistry().contains(new IDKey(value)); else <if (value!= null) &return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!__active) return 0; if (isDebug()) &if (getRegistry().isDebug()) return 1; else <if (!__active) return -1; &if (__active) return -1; return -1; return -1;
if (!__active) return 0; if (isDebug()) &if (getRegistry().isDebug()) return 1; &else if (!__active) return -1; &if (__active) return -1; return -1; return -1;
if (!GetCID()) return false; &return 0;
<if (!value) &return false; &else <return false; return false;
if (!aRegistry) return false; <aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) <aRegistry = new NSKey(aKey); &if (!aRegistry) return false; return true;
if (value) <if (! getRegistry()) return 0; return getRegistry().contains(new IDKey(value)); else &return 0;
if (!isImplementation(value)) return NS_OK; if (!isImplementation(value)) &return NS_ERROR_NULL_POINTER; return getRegistry().contains(new IDKey(value));
if (!__active) return 0; if (isDebug()) &if (getRegistry().isDebug()) return 1; else <if (!__active) return -1; <if (__active) return -1; return -1; return -1;
if (!key) <mRegistry = null; <if (!((key = new char)(value))) <return NS_OK; if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (getRegistry()) <ret = ret.removeFromRegistry(); return ret; <else ret = ret.removeFromRegistry(); <return ret;
if (id && (value)) return getRegistry().contains(id); <else &return (0);
if (!isRegistered) &return 0; if (isReal && value == null) &return false; &return getRegistry().contains(null);
if (!isImplementation(value)) &return NS_OK; <if (!isImplementation(value)) return NS_ERROR_NULL_POINTER; <return getRegistry().contains(new IDKey(value));
if (!value) return false; &if ((ptr) == null) <return false; return false;
if (getRegistry().contains(value)) &return 0; &return true;
if (*name) &if (!value.IsEmpty()) return NS_ERROR_OUT_OF_MEMORY; &&return NS_OK;
if (!key) <mRegistry = null; if (!((key = new char)(value))) <return NS_OK; <if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) &id.id = id.id; <else &if (isDebug()) return 0; <return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!isRegistered) &return 0; &if (isReal && value == null) <return false; return getRegistry().contains(null);
if (!value) <return false; &if ((ptr) == null) &return false; return false;
if (!aRegistry) &return false; aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) &aRegistry = new NSKey(aKey); if (!aRegistry) return false; return true;
if (!do_GetRegistry()) &return false; &else <return getRegistry().contains(new IDKey(value));
if (!aRegistry) <return false; &aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) <aRegistry = new NSKey(aKey); &if (!aRegistry) return false; return true;
if (!isImplementation(value)) return NS_OK; <if (!isImplementation(value)) &return NS_ERROR_NULL_POINTER; &return getRegistry().contains(new IDKey(value));
if (*name) if (!value.IsEmpty()) return NS_ERROR_OUT_OF_MEMORY; return NS_OK;
if (!isRegistered) return 0; if (isReal && value == null) return false; return getRegistry().contains(null);
if (eBool!= 0) return getRegistry().contains(new IDKey(value)); <else if (value!= null) &return 0; else if (! value.Equals("")) return 1; return 0; return 0;
&if (!value) <return false; else return false; return false;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) <id.id = id.id; <else &if (isDebug()) return 0; return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (node) <if (!td) return NS_ERROR_NULL_POINTER; &<return NS_OK;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) <id.id = id.id; &else if (isDebug()) return 0; &return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (value!= null) &nsCOMPtr&nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!value) <return false; <if ((ptr) == null) <return false; &return false;
if (!key) <mRegistry = null; &if (!((key = new char)(value))) <return NS_OK; if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!isImplementation(value)) <return NS_OK; if (!isImplementation(value)) &return NS_ERROR_NULL_POINTER; <return getRegistry().contains(new IDKey(value));
if (!key) <mRegistry = null; if (!((key = new char)(value))) return NS_OK; if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!isRegistered) return 0; <if (isReal && value == null) return false; &return getRegistry().contains(null);
if (value == null) return NS_ERROR_NULL_POINTER; if (id) &id.id = id; id.id = id; <else <id.id = id; <return (id.id == null)? id.id : id.id;
if (id && (value)) return getRegistry().contains(id); <else <return (0);
<if (!value) &return false; else return false; return false;
if (!key) &mRegistry = null; <if (!((key = new char)(value))) <return NS_OK; if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!isRegistered) return 0; <if (isReal && value == null) &return false; return getRegistry().contains(null);
if (value) if (getRegistry().contains(new IDKey(value))) &ret = GetRegistry(); return ret; else ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (value!= null) nsCOMPtrnsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!do_GetRegistry()) &return false; else <return getRegistry().contains(new IDKey(value));
if (value == null) return NS_ERROR_NULL_POINTER; if (id) &id.id = id; id.id = id; else id.id = id; <return (id.id == null)? id.id : id.id;
if (getRegistry()) <ret = ret.removeFromRegistry(); return ret; &else <ret = ret.removeFromRegistry(); <return ret;
if (value!= null) &nsCOMPtr&nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (id && (value)) &return getRegistry().contains(id); else &return (0);
if (!isImplementation(value)) return NS_OK; if (!isImplementation(value)) return NS_ERROR_NULL_POINTER; return getRegistry().contains(new IDKey(value));
if (value!= null) &nsCOMPtr<nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!value) &return false; <if ((ptr) == null) <return false; &return false;
if (! getRegistry()) &return null; return!GetRegistry();
if (eBool!= 0) <return getRegistry().contains(new IDKey(value)); &else &if (value!= null) <return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (value!= null) nsCOMPtr&nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) &id.id = id; id.id = id; else &id.id = id; &return (id.id == null)? id.id : id.id;
if (! getRegistry()) &return null; <return!GetRegistry();
if (value == null) return NS_ERROR_NULL_POINTER; if (id) <id.id = id; id.id = id; else &id.id = id; &return (id.id == null)? id.id : id.id;
if (!aRegistry) return false; &aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) &aRegistry = new NSKey(aKey); <if (!aRegistry) return false; return true;
&if (!value) &return false; else &return false; return false;
if (!value) <return false; &else return false; return false;
if (!aRegistry) return false; &aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) <aRegistry = new NSKey(aKey); &if (!aRegistry) return false; return true;
if (!__active) return 0; if (isDebug()) if (getRegistry().isDebug()) return 1; &else if (!__active) return -1; <if (__active) return -1; return -1; return -1;
if (!__active) return 0; if (isDebug()) <if (getRegistry().isDebug()) return 1; <else &if (!__active) return -1; &if (__active) return -1; return -1; return -1;
if (!isImplementation(value)) <return NS_OK; if (!isImplementation(value)) <return NS_ERROR_NULL_POINTER; &return getRegistry().contains(new IDKey(value));
if (!isRegistered) &return 0; <if (isReal && value == null) return false; <return getRegistry().contains(null);
if (!isRegistered) return 0; if (isReal && value == null) <return false; &return getRegistry().contains(null);
if (value) <if (! aKey) return; aKey.Remove(value); aKey.SetType(NS_TYPE_INPUT_STR); <return; return NS_OK;
if (!aRegistry) <return false; &aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) &aRegistry = new NSKey(aKey); &if (!aRegistry) return false; return true;
if (value) &if (! getRegistry()) return 0; return getRegistry().contains(new IDKey(value)); &else <return 0;
&if (!value) &return false; <else <return false; return false;
if (!__active) return 0; if (isDebug()) if (getRegistry().isDebug()) return 1; <else if (!__active) return -1; &if (__active) return -1; return -1; return -1;
if (value) if (getRegistry().contains(new IDKey(value))) ret = GetRegistry(); return ret; <else &ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!__active) return 0; if (isDebug()) if (getRegistry().isDebug()) return 1; &else &if (!__active) return -1; if (__active) return -1; return -1; return -1;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) id.id = id.id; else if (isDebug()) return 0; return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) <id.id = id.id; &else <if (isDebug()) return 0; &return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (value) &if (getRegistry().contains(new IDKey(value))) <ret = GetRegistry(); return ret; else ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
&if (!value) return false; &else <return false; return false;
if (!isImplementation(value)) return NS_OK; <if (!isImplementation(value)) <return NS_ERROR_NULL_POINTER; <return getRegistry().contains(new IDKey(value));
if (eBool!= 0) <return getRegistry().contains(new IDKey(value)); &else if (value!= null) <return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!__active) return 0; if (isDebug()) <if (getRegistry().isDebug()) return 1; else &if (!__active) return -1; if (__active) return -1; return -1; return -1;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) <id.id = id; id.id = id; &else id.id = id; return (id.id == null)? id.id : id.id;
if (!isRegistered) <return 0; <if (isReal && value == null) <return false; return getRegistry().contains(null);
if (eBool!= 0) return getRegistry().contains(new IDKey(value)); else <if (value!= null) &return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (eBool!= 0) return getRegistry().contains(new IDKey(value)); &else &if (value!= null) &return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!__active) return 0; if (isDebug()) <if (getRegistry().isDebug()) return 1; <else <if (!__active) return -1; &if (__active) return -1; return -1; return -1;
if (getRegistry()) &ret = ret.removeFromRegistry(); return ret; &else &ret = ret.removeFromRegistry(); &return ret;
if (!isImplementation(value)) <return NS_OK; if (!isImplementation(value)) <return NS_ERROR_NULL_POINTER; <return getRegistry().contains(new IDKey(value));
if (value == null) return NS_ERROR_NULL_POINTER; if (id) id.id = id; id.id = id; <else &id.id = id; &return (id.id == null)? id.id : id.id;
if (!key) mRegistry = null; &if (!((key = new char)(value))) <return NS_OK; if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!isRegistered) return 0; if (isReal && value == null) <return false; return getRegistry().contains(null);
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) id.id = id.id; else if (isDebug()) return 0; &return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (getRegistry()) ret = ret.removeFromRegistry(); return ret; <else <ret = ret.removeFromRegistry(); &return ret;
if (value) <return false; <return getRegistry().contains(new IDKey(value));
if (!__active) return 0; if (isDebug()) if (getRegistry().isDebug()) return 1; <else <if (!__active) return -1; <if (__active) return -1; return -1; return -1;
if (getRegistry().contains(value)) <return 0; &return true;
if (!__active) return 0; if (isDebug()) &if (getRegistry().isDebug()) return 1; else &if (!__active) return -1; if (__active) return -1; return -1; return -1;
if (!isImplementation(value)) &return NS_OK; if (!isImplementation(value)) <return NS_ERROR_NULL_POINTER; &return getRegistry().contains(new IDKey(value));
if (!key) <mRegistry = null; &if (!((key = new char)(value))) <return NS_OK; &if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (node) &if (!td) <return NS_ERROR_NULL_POINTER; <return NS_OK;
if (!value) <return false; if ((ptr) == null) &return false; return false;
if ((isRegistered = true) || isRegistered == false) &return false; &return!isRegistered;
if (value!= null) nsCOMPtr&nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!value) return false; <else &return false; return false;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) id.id = id; id.id = id; &else id.id = id; <return (id.id == null)? id.id : id.id;
&if (!value) return false; <else &return false; return false;
if (value) if (getRegistry().contains(new IDKey(value))) &ret = GetRegistry(); return ret; &else <ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!aRegistry) <return false; &aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) aRegistry = new NSKey(aKey); &if (!aRegistry) return false; return true;
if (getRegistry()) ret = ret.removeFromRegistry(); return ret; &else ret = ret.removeFromRegistry(); return ret;
if (!isImplementation(value)) &return NS_OK; &if (!isImplementation(value)) <return NS_ERROR_NULL_POINTER; &return getRegistry().contains(new IDKey(value));
if (value) &if (getRegistry().contains(new IDKey(value))) &ret = GetRegistry(); return ret; else &ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) <id.id = id; id.id = id; else <id.id = id; return (id.id == null)? id.id : id.id;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) id.id = id.id; &else &if (isDebug()) return 0; return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!value) <return false; &if ((ptr) == null) &return false; <return false;
if (value) &if (getRegistry().contains(new IDKey(value))) ret = GetRegistry(); return ret; else <ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!key) mRegistry = null; &if (!((key = new char)(value))) <return NS_OK; &if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (value!= null) &nsCOMPtr<nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!aRegistry) return false; &aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) aRegistry = new NSKey(aKey); <if (!aRegistry) return false; return true;
if (eBool!= 0) return getRegistry().contains(new IDKey(value)); else if (value!= null) <return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!do_GetRegistry()) <return false; <else return getRegistry().contains(new IDKey(value));
if (!value) <return false; if ((ptr) == null) return false; <return false;
if (!value) <return false; <else <return false; return false;
if (!key) &mRegistry = null; &if (!((key = new char)(value))) &return NS_OK; if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (value) <if (getRegistry().contains(new IDKey(value))) &ret = GetRegistry(); return ret; &else &ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (node) <if (!td) return NS_ERROR_NULL_POINTER; <<return NS_OK;
if (!__active) return 0; if (isDebug()) if (getRegistry().isDebug()) return 1; &else <if (!__active) return -1; if (__active) return -1; return -1; return -1;
if (node) if (!td) return NS_ERROR_NULL_POINTER; <&return NS_OK;
if (!value) return false; &if ((ptr) == null) <return false; &return false;
if (!isImplementation(value)) return NS_OK; &if (!isImplementation(value)) &return NS_ERROR_NULL_POINTER; return getRegistry().contains(new IDKey(value));
if (getRegistry()) &ret = ret.removeFromRegistry(); return ret; <else <ret = ret.removeFromRegistry(); <return ret;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) <id.id = id.id; else &if (isDebug()) return 0; &return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (getRegistry()) &ret = ret.removeFromRegistry(); return ret; else <ret = ret.removeFromRegistry(); <return ret;
if (!__active) return 0; if (isDebug()) <if (getRegistry().isDebug()) return 1; <else &if (!__active) return -1; <if (__active) return -1; return -1; return -1;
if ((isRegistered = true) || isRegistered == false) <return false; return!isRegistered;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) id.id = id; id.id = id; <else &id.id = id; return (id.id == null)? id.id : id.id;
if (!__active) return 0; if (isDebug()) &if (getRegistry().isDebug()) return 1; &else <if (!__active) return -1; &if (__active) return -1; return -1; return -1;
if (getRegistry()) ret = ret.removeFromRegistry(); return ret; <else <ret = ret.removeFromRegistry(); return ret;
if (eBool!= 0) &return getRegistry().contains(new IDKey(value)); &else <if (value!= null) return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (value) &if (getRegistry().contains(new IDKey(value))) <ret = GetRegistry(); return ret; else <ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!isRegistered) &return 0; <if (isReal && value == null) &return false; <return getRegistry().contains(null);
if (*name) <if (!value.IsEmpty()) <return NS_ERROR_OUT_OF_MEMORY; return NS_OK;
if (!value) &return false; if ((ptr) == null) return false; return false;
if (!value) &return false; &else <return false; return false;
if (eBool!= 0) &return getRegistry().contains(new IDKey(value)); else &if (value!= null) <return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (id && (value)) &return getRegistry().contains(id); else return (0);
if (eBool!= 0) <return getRegistry().contains(new IDKey(value)); <else &if (value!= null) &return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!__active) return 0; if (isDebug()) &if (getRegistry().isDebug()) return 1; <else if (!__active) return -1; &if (__active) return -1; return -1; return -1;
if (!key) &mRegistry = null; &if (!((key = new char)(value))) return NS_OK; if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (eBool!= 0) return getRegistry().contains(new IDKey(value)); &else if (value!= null) <return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (getRegistry().contains(value)) return 0; <return true;
if (value!= null) <nsCOMPtrnsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!value) return false; else &return false; return false;
if (value) return false; &return getRegistry().contains(new IDKey(value));
if (!do_GetRegistry()) return false; else return getRegistry().contains(new IDKey(value));
if (value!= null) <nsCOMPtr<nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!GetCID()) <return false; <return 0;
if (value) &if (! getRegistry()) return 0; return getRegistry().contains(new IDKey(value)); &else &return 0;
if (!value) &return false; if ((ptr) == null) <return false; <return false;
if (!__active) return 0; if (isDebug()) &if (getRegistry().isDebug()) return 1; <else &if (!__active) return -1; if (__active) return -1; return -1; return -1;
if (!isImplementation(value)) return NS_OK; if (!isImplementation(value)) return NS_ERROR_NULL_POINTER; &return getRegistry().contains(new IDKey(value));
if (value) if (getRegistry().contains(new IDKey(value))) <ret = GetRegistry(); return ret; &else <ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (value!= null) <nsCOMPtr&nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!isImplementation(value)) <return NS_OK; &if (!isImplementation(value)) &return NS_ERROR_NULL_POINTER; <return getRegistry().contains(new IDKey(value));
if (!GetCID()) &return false; <return 0;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) <id.id = id.id; &else <if (isDebug()) return 0; return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (value) <if (getRegistry().contains(new IDKey(value))) <ret = GetRegistry(); return ret; &else ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!aRegistry) return false; <aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) aRegistry = new NSKey(aKey); <if (!aRegistry) return false; return true;
if (value!= null) <nsCOMPtrnsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (!do_GetRegistry()) &return false; <else <return getRegistry().contains(new IDKey(value));
if (!isImplementation(value)) &return NS_OK; &if (!isImplementation(value)) return NS_ERROR_NULL_POINTER; &return getRegistry().contains(new IDKey(value));
if (!isImplementation(value)) return NS_OK; if (!isImplementation(value)) <return NS_ERROR_NULL_POINTER; <return getRegistry().contains(new IDKey(value));
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) &id.id = id.id; &else &if (isDebug()) return 0; <return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!__active) return 0; if (isDebug()) &if (getRegistry().isDebug()) return 1; <else if (!__active) return -1; <if (__active) return -1; return -1; return -1;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) <id.id = id.id; <else if (isDebug()) return 0; &return id.id = id.id; else return id.id = id.id; else return 0; return 0;
<if (!value) <return false; else <return false; return false;
if (node) if (!td) return NS_ERROR_NULL_POINTER; &&return NS_OK;
if (value) &if (! aKey) return; aKey.Remove(value); aKey.SetType(NS_TYPE_INPUT_STR); &return; <return NS_OK;
if (node) <if (!td) return NS_ERROR_NULL_POINTER; &return NS_OK;
&if (!value) return false; else <return false; return false;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) id.id = id; id.id = id; &else &id.id = id; <return (id.id == null)? id.id : id.id;
if (!aRegistry) &return false; <aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) aRegistry = new NSKey(aKey); if (!aRegistry) return false; return true;
if (!aRegistry) return false; <aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) aRegistry = new NSKey(aKey); if (!aRegistry) return false; return true;
if (!__active) return 0; if (isDebug()) <if (getRegistry().isDebug()) return 1; <else <if (!__active) return -1; if (__active) return -1; return -1; return -1;
if (!value) &return false; &if ((ptr) == null) return false; <return false;
if (value) <if (getRegistry().contains(new IDKey(value))) <ret = GetRegistry(); return ret; <else <ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (*name) <if (!value.IsEmpty()) &return NS_ERROR_OUT_OF_MEMORY; &return NS_OK;
if (!do_GetRegistry()) return false; else &return getRegistry().contains(new IDKey(value));
if (eBool!= 0) return getRegistry().contains(new IDKey(value)); <else <if (value!= null) return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (isInRegistry(&value)) &return false; <return (result)(*value, &isInRegistry);
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) <id.id = id.id; &else if (isDebug()) return 0; return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (value) <return false; &return getRegistry().contains(new IDKey(value));
if (!strlen(value)) &return false; &return false;
if (!aRegistry) &return false; <aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) aRegistry = new NSKey(aKey); &if (!aRegistry) return false; return true;
if (!value) <return false; &else &return false; return false;
<if (!value) <return false; else return false; return false;
if (value) <if (getRegistry().contains(new IDKey(value))) &ret = GetRegistry(); return ret; <else ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!value) &return false; if ((ptr) == null) <return false; &return false;
if (*name) &if (!value.IsEmpty()) <return NS_ERROR_OUT_OF_MEMORY; return NS_OK;
if (value) <if (! getRegistry()) return 0; return getRegistry().contains(new IDKey(value)); &else <return 0;
if (!do_GetRegistry()) return false; &else <return getRegistry().contains(new IDKey(value));
if (value == null) return NS_ERROR_NULL_POINTER; if (id) &id.id = id; id.id = id; <else &id.id = id; return (id.id == null)? id.id : id.id;
if (value) <if (getRegistry().contains(new IDKey(value))) &ret = GetRegistry(); return ret; <else &ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!value) return false; <if ((ptr) == null) return false; <return false;
if (!__active) return 0; if (isDebug()) <if (getRegistry().isDebug()) return 1; &else if (!__active) return -1; if (__active) return -1; return -1; return -1;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) &id.id = id.id; <else <if (isDebug()) return 0; return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (value) if (! aKey) return; aKey.Remove(value); aKey.SetType(NS_TYPE_INPUT_STR); &return; &return NS_OK;
if (!do_GetRegistry()) return false; <else <return getRegistry().contains(new IDKey(value));
if (isInRegistry(&value)) return false; <return (result)(*value, &isInRegistry);
if (value == null) return NS_ERROR_NULL_POINTER; if (id) &id.id = id; id.id = id; else <id.id = id; &return (id.id == null)? id.id : id.id;
if (!isImplementation(value)) return NS_OK; if (!isImplementation(value)) &return NS_ERROR_NULL_POINTER; &return getRegistry().contains(new IDKey(value));
if (*name) &if (!value.IsEmpty()) return NS_ERROR_OUT_OF_MEMORY; &<return NS_OK;
if (*name) <if (!value.IsEmpty()) return NS_ERROR_OUT_OF_MEMORY; <&return NS_OK;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) &id.id = id; id.id = id; &else <id.id = id; &return (id.id == null)? id.id : id.id;
&if (!value) <return false; &else &return false; return false;
if (value!= null) &nsCOMPtrnsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) &id.id = id; id.id = id; else <id.id = id; <return (id.id == null)? id.id : id.id;
if (!__active) return 0; if (isDebug()) if (getRegistry().isDebug()) return 1; else <if (!__active) return -1; &if (__active) return -1; return -1; return -1;
if (getRegistry()) ret = ret.removeFromRegistry(); return ret; &else &ret = ret.removeFromRegistry(); <return ret;
<if (!value) &return false; <else &return false; return false;
if (value) if (! aKey) return; aKey.Remove(value); aKey.SetType(NS_TYPE_INPUT_STR); <return; &return NS_OK;
if (isInRegistry(&value)) &return false; return (result)(*value, &isInRegistry);
if (getRegistry()) <ret = ret.removeFromRegistry(); return ret; <else &ret = ret.removeFromRegistry(); &return ret;
if (!isImplementation(value)) return NS_OK; <if (!isImplementation(value)) <return NS_ERROR_NULL_POINTER; return getRegistry().contains(new IDKey(value));
if (!isImplementation(value)) &return NS_OK; <if (!isImplementation(value)) return NS_ERROR_NULL_POINTER; &return getRegistry().contains(new IDKey(value));
if (!isImplementation(value)) return NS_OK; if (!isImplementation(value)) &return NS_ERROR_NULL_POINTER; <return getRegistry().contains(new IDKey(value));
if (!__active) return 0; if (isDebug()) if (getRegistry().isDebug()) return 1; <else <if (!__active) return -1; &if (__active) return -1; return -1; return -1;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) id.id = id; id.id = id; else <id.id = id; &return (id.id == null)? id.id : id.id;
if (*name) if (!value.IsEmpty()) return NS_ERROR_OUT_OF_MEMORY; &<return NS_OK;
if (!aRegistry) &return false; &aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) <aRegistry = new NSKey(aKey); if (!aRegistry) return false; return true;
if (!value) return false; &if ((ptr) == null) return false; &return false;
if (value) &if (! getRegistry()) return 0; return getRegistry().contains(new IDKey(value)); <else <return 0;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) id.id = id; id.id = id; <else &id.id = id; <return (id.id == null)? id.id : id.id;
if (!isRegistered) return 0; &if (isReal && value == null) &return false; return getRegistry().contains(null);
if (!__active) return 0; if (isDebug()) &if (getRegistry().isDebug()) return 1; else if (!__active) return -1; <if (__active) return -1; return -1; return -1;
if (!value) return false; &if ((ptr) == null) <return false; <return false;
<if (!value) &return false; <else <return false; return false;
if (id && (value)) &return getRegistry().contains(id); &else &return (0);
if (eBool!= 0) return getRegistry().contains(new IDKey(value)); <else &if (value!= null) &return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (getRegistry()) &ret = ret.removeFromRegistry(); return ret; else ret = ret.removeFromRegistry(); &return ret;
if (!aRegistry) &return false; aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) aRegistry = new NSKey(aKey); &if (!aRegistry) return false; return true;
if (value!= null) <nsCOMPtrnsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr&nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (value) <if (! aKey) return; aKey.Remove(value); aKey.SetType(NS_TYPE_INPUT_STR); &return; <return NS_OK;
if (getRegistry()) &ret = ret.removeFromRegistry(); return ret; <else ret = ret.removeFromRegistry(); return ret;
if (!isImplementation(value)) return NS_OK; &if (!isImplementation(value)) <return NS_ERROR_NULL_POINTER; return getRegistry().contains(new IDKey(value));
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) <id.id = id.id; else if (isDebug()) return 0; <return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) &id.id = id.id; &else &if (isDebug()) return 0; &return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (eBool!= 0) return getRegistry().contains(new IDKey(value)); else <if (value!= null) return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!isImplementation(value)) &return NS_OK; &if (!isImplementation(value)) return NS_ERROR_NULL_POINTER; return getRegistry().contains(new IDKey(value));
if (value) <if (getRegistry().contains(new IDKey(value))) <ret = GetRegistry(); return ret; else <ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) <id.id = id.id; <else if (isDebug()) return 0; return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) &id.id = id; id.id = id; &else <id.id = id; <return (id.id == null)? id.id : id.id;
if (value == null) return NS_ERROR_NULL_POINTER; if (id) <id.id = id; id.id = id; else id.id = id; return (id.id == null)? id.id : id.id;
if (!aRegistry) <return false; aRegistry = aRegistry; if (!aRegistry) return false; if (aRegistry) &aRegistry = new NSKey(aKey); if (!aRegistry) return false; return true;
if ((isRegistered = true) || isRegistered == false) &return false; return!isRegistered;
if (!value) <return false; else <return false; return false;
if (eBool!= 0) return getRegistry().contains(new IDKey(value)); &else <if (value!= null) <return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (!strlen(value)) <return false; return false;
if (!key) mRegistry = null; &if (!((key = new char)(value))) &return NS_OK; &if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!isImplementation(value)) <return NS_OK; if (!isImplementation(value)) return NS_ERROR_NULL_POINTER; <return getRegistry().contains(new IDKey(value));
&if (!value) <return false; &else return false; return false;
if (value!= null) nsCOMPtr<nsIIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtrnsIDKey> key(do_QueryInterface(value)); if (!key) return NS_ERROR_NULL_POINTER; nsCOMPtr<nsIDKey> value(do_QueryInterface(value)); if (!value) return NS_ERROR_NULL_POINTER; if (value.GetID() == value.GetID()) return false; return false;
if (value) &if (getRegistry().contains(new IDKey(value))) ret = GetRegistry(); return ret; else ret = GetRegistry(); if (ret == 0) ret = GetRegistry(); return ret; return ret;
if (!__active) return 0; if (isDebug()) <if (getRegistry().isDebug()) return 1; &else &if (!__active) return -1; <if (__active) return -1; return -1; return -1;
if (getRegistry()) <ret = ret.removeFromRegistry(); return ret; &else &ret = ret.removeFromRegistry(); return ret;
if (!isRegistered) &return 0; <if (isReal && value == null) <return false; &return getRegistry().contains(null);
if (eBool!= 0) return getRegistry().contains(new IDKey(value)); &else &if (value!= null) <return 0; else if (! value.Equals("")) return 1; return 0; return 0;
if (node) if (!td) return NS_ERROR_NULL_POINTER; return NS_OK;
if (!__active) return 0; if (isDebug()) <if (getRegistry().isDebug()) return 1; <else if (!__active) return -1; <if (__active) return -1; return -1; return -1;
if (id && (value)) &return getRegistry().contains(id); &else return (0);
if (!isRegistered) return 0; <if (isReal && value == null) <return false; return getRegistry().contains(null);
if (!id) return 0; if (isRegistry &&!isDebug()) return 0; id.id = id; if (isDirty) &id.id = id.id; &else if (isDebug()) return 0; <return id.id = id.id; else return id.id = id.id; else return 0; return 0;
if (id && (value)) return getRegistry().contains(id); <else return (0);
if (!key) &mRegistry = null; &if (!((key = new char)(value))) &return NS_OK; &if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (!key) mRegistry = null; if (!((key = new char)(value))) &return NS_OK; <if (!((key = new char)(value))) return NS_ERROR_NULL_POINTER; if (!(key = new char)(value))) return NS_ERROR_NULL_POINTER; return NS_ERROR_NULL_POINTER; return NS_OK;
if (value) &if (! getRegistry()) return 0; return getRegistry().contains(new IDKey(value)); else <return 0;
