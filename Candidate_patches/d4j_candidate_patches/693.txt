golden:
final int n1n2prod = n1 * n2;
inference:

final int n1n2prod = n1 * n2;
int n1n2prod = n1 * n2;
final int n1n2prod;
n1n2prod = n1 * n2;
final int n1n2prod = n1 + n2;
final int n1n2prod = n2 * n1;
final int n1n2prod = n1;
final long n1n2prod = n1 * n2;
final int n1n2prod = 0;
final int n1n2prod = n1*n2;
final int n1n2prod = n1 * n2 + 1;
static int n1n2prod = n1 * n2;
final int n1n2prod = n2 * n2;
final int n1n2prod = n1 / 2.0;
final int n1n2prod = null;
final int n2n2prod = n1 * n2;
final int n1n2prod, n2;
final int n1n2prod = n1 * n1;
final int n1n2prod = n1  n2;
double n1n2prod = n1 * n2;
final int n1n2prod = n1 - n2;
long n1n2prod = n1 * n2;
int n1n2prod;
final int n1n2prod = n1 + n2 + 1;
final int n1n2prod = n1 * n3;
final int n1n2prod = n1 / n2;
final int n1n3prod = n1 * n2;
final int n1n2prod = n1 * n2 + 2;
virtual int n1n2prod = n1 * n2;
final int n1n2prod = n1 | n2;
final int n1n2prod = n2;
final int n2n2prod = n2 * n2;
final int n1n2prod = n1 * (n2);
final int n1, n2;
const int n1n2prod = n1 * n2;
final double n1n2prod = n1 * n2;
final int n1n2prod = n1, n2;
final int n1n2prod = n1 * null;
final int n2n2prod = n2 * n1;
u_int n1n2prod = n1 * n2;
final int n1n2prod = n1) * n2;
final int n1n2prod = n1 * n;
final int n1n2prod = n0 * n2;
final int n1n2proxy = n1 * n2;
Int32 n1n2prod = n1 * n2;
final int n1n2prod = n1 = n2;
Integer n1n2prod = n1 * n2;
final int n1n2prod = n1 * N2;
final int n2n2prod;
final int n1n2prod = n1 ** n2;
final int n1n2prod = n1 * n2 * 2;
final int n1n2prod=n1 * n2;
unsigned long n1n2prod = n1 * n2;
n2n2prod = n1 * n2;
final n1n2prod = n1 * n2;
final int double n1n2prod = n1 * n2;
final int n1n2prod = 0, n2;
final int n1n2prod = &n1;
public int n1n2prod = n1 * n2;
final int n1n2prod = n2 * n3;
final int prod = n1 * n2;
final int n1n2prod = n2*n1;
final int n1n2prod = n0 * n1;
final int n1n2prod = n1 * n2
final int n1n2prod = n1 & n2;
final int n1n2prod2 = n1 * n2;
/* n1n2prod = n1 * n2; */
final int n1n2prod = n1 * n2,
final unsigned long n1n2prod = n1 * n2;
final int n1n2ptr = n1 * n2;
final int n1n2prod = n1 * n2);
final int n1n2state = n1 * n2;
final int n1n2prod = n1 * n1 + 1;
final int n1n2prod = n1
final u_long n1n2prod = n1 * n2;
final int n1n2prod = n2*n2;
final int n1n2prod = (long)n1 * n2;
int n2n2prod = n1 * n2;
final int n1n2prod = n1++;
final int n1n2lprod = n1 * n2;
final int n1n2id = n1 * n2;
u_long n1n2prod = n1 * n2;
final size_t n1n2prod = n1 * n2;
unsigned int n1n2prod = n1 * n2;
final int n1n2prod = n2 * n;
final int n1n2prod = (double)n1 * n2;
final int n1n2cond = n1 * n2;
final int n1n2prod = 2 * n2;
final int n1n2prod = n1 % n2;
final const int n1n2prod = n1 * n2;
internal int n1n2prod = n1 * n2;
final int n1n2prod = -n1 * n2;
final int n1 = n1 * n2;
final int n1n2prod = n2 / 2.0;
uint n1n2prod = n1 * n2;
final int n1n2prod = n1 / 2;
PRInt32 n1n2prod = n1 * n2;
final int n1n2prod = n1);
final int n1n2prod = double n1 * n2;
final int n1 n2prod = n1 * n2;
final int n1n2prod = sizeof(n1) * n2;
final int n1n2prod[] = n1 * n2;
final int n1n2offset = n1 * n2;
final int n1n2prod = n1 *n2;
total int n1n2prod = n1 * n2;
final unsigned int n1n2prod = n1 * n2;
final int n1n2p = n1 * n2;
final int n2n2prod = 0;
final int n1n2prod = n1 > n2;
final int n1n2prod = n1 * 0, n2;
final int n1n2prod = -1;
int n1n2prod = n1*n2;
private int n1n2prod = n1 * n2;
final int n0n2prod = n1 * n2;
final int i;
final int n2n2prod = n1*n2;
final int n1n2_prod = n1 * n2;
final int n1n2mode = n1 * n2;
final int n1n2prod =  n1 * n2;
final int n1n2buf = n1 * n2;
n1n2prod = n1*n2;
final int n1n2prod = n3 * n2;
final int n1n2prod = n1 * sizeof(n2);
final void n1n2prod = n1 * n2;
long int n1n2prod = n1 * n2;
final int n1n2prod = int n1 * n2;
final int n1n2prod = n1+n2;
final int n1n2prod = const n1 * n2;
final int n1n2type = n1 * n2;
final int n1n2prod = 0.0;
final int n1n2prod = n1  0;
final int n2 = n1 * n2;
final int n1n2prod = n1_n2;
final int n1n2prod = n1n2;
n1n2prod = null;
final int i1n2prod = n1 * n2;
final int n2prod = n1 * n2;
size_t n1n2prod = n1 * n2;
Integer n1n2prod;
final int n1n2prod = n3 * n3;
final int n1n2prod = int(n1) * n2;
final int n1n2prod = n2 + n1;
double n1n2prod;
final int n1n2prod = n1 * n4;
/* n1n2prod = n1 * n2;*/
last int n1n2prod = n1 * n2;
final int n1n2prop = n1 * n2;
final int n1n2prod = sizeof n1 * n2;
final int n1n2prod = n1 * n2 + 3;
final int n1n4prod = n1 * n2;
final int n1_n2prod = n1 * n2;
final int n1n2prod = &n1 * n2;
final int n1n2prod = 1;
final int n1n2prod = '0' * n2;
final int n1n2int = n1 * n2;
final int n1n2prod, n3;
final int n1n2end = n1 * n2;
final int n1n2prod = n1 * (n1);
final int n1n2prod = n1+1 * n2;
final int n1n2prod = 1 * n2;
final int n1, n2, n3;
final int n1n2prod = n1 * 2;
final int n1n2prod = n1 * (double)n2;
final int n1n2prod, n1 + n2;
final int n1n2prod = n1 * n0;
short n1n2prod = n1 * n2;
final int n1n2prod = n1.*n2;
final long n1n2prod;
final int n1n2prod = n1 * n2, VarU;
final int n1n2prod = *n1;
final int n1n2prod = (int)n1*n2;
final int n1n2prod = n1 + n2 + 2;
final int n1n2prod = n1 * n2 ;
long n1n2prod;
final int n1n2prod = n1 * n1 + 2;
final int n1n2prod = n1 * n2 + 4;
final int n2n2prod = n1 * n2 + 1;
final int n1n2d;
final int n1n2prod = n1, n2, n3;
n1n2prod = n1;
final int result = n1 * n2;
final int *n1;
final int n1n2prod = n1 * n2 * 1;
final int n1n2prod = n1 * sizeof(n1);
final int n1n2prod = n1 * (n2 + 1);
final int n1n2prod = n1 * n2, 0;
final int n1;
int n1, n2;
n1n2prod;
#endif
final int i = 0;
final int n1
void *n1;
final int n1n2prod = n1 * n2 + n2;
/* final int n1n2prod = n1 * n2; */
struct ui_char* cp = n1;
/* if n1n2prod  0x7F*/
/* XXX - use the default prefix -* in case we're at a prefix* or a nr*/ final int n1n2prod = n1 * n2;
if (n1)  n2prod = n1 * n2;  else  n1n2prod = n1 * n2;
struct sigprod *sig;
/* * XXX */ final int n1n2prod = n1 * n2;
/* * Resize this variable and then then the other atoms will be able to allocate. */
final int n1n2prod = n1 * n2 + n1 + 1;
final int n1n2prod = n1 * n2 + n1;
struct stat s; /* check if we have a stat for the size of the s: */ s = stat_result;
if (n1!= null)  final int n1n2prod = n1 * n2;

if (n1) &n2prod = n1 * n2; <else <n1n2prod = n1 * n2;
final int n1n2prod = n1n2;
if (n1) n2prod = n1 * n2; &else <n1n2prod = n1 * n2;
/* if n1n2prod 0x7F*/
if (n1) n2prod = n1 * n2; &else n1n2prod = n1 * n2;
if (n1) &n2prod = n1 * n2; <else n1n2prod = n1 * n2;
if (n1) <n2prod = n1 * n2; else &n1n2prod = n1 * n2;
if (n1) <n2prod = n1 * n2; &else &n1n2prod = n1 * n2;
final int n1n2prod = '0' * n2;
if (n1) n2prod = n1 * n2; <else &n1n2prod = n1 * n2;
if (n1) &n2prod = n1 * n2; else n1n2prod = n1 * n2;
final int n1n2prod = n1&n2;
if (n1) n2prod = n1 * n2; &else &n1n2prod = n1 * n2;
if (n1) n2prod = n1 * n2; <else <n1n2prod = n1 * n2;
if (n1) n2prod = n1 * n2; else n1n2prod = n1 * n2;
final int n1n2prod = n1 &0;
if (n1) n2prod = n1 * n2; else <n1n2prod = n1 * n2;
final int n1n2prod = n1 &n2;
if (n1) &n2prod = n1 * n2; <else &n1n2prod = n1 * n2;
final int n1n2prod = n1 &= n2;
final int n1n2prod = &n1 * n2;
if (n1) <n2prod = n1 * n2; &else <n1n2prod = n1 * n2;
final int n1n2prod = n1 <n2;
final int n1n2prod = n1 = n2;
if (n1) &n2prod = n1 * n2; &else n1n2prod = n1 * n2;
&final int n1n2prod = n1 * n2;
final int n1n2prod = '&0' * n2;
if (n1) <n2prod = n1 * n2; <else <n1n2prod = n1 * n2;
if (n1) <n2prod = n1 * n2; <else n1n2prod = n1 * n2;
/* if n1n2prod <0x7F*/
<final int n1n2prod = n1 * n2;
final int n1n2prod = n1<n2;
if (n1) &n2prod = n1 * n2; &else &n1n2prod = n1 * n2;
if (n1) <n2prod = n1 * n2; &else n1n2prod = n1 * n2;
if (n1) <n2prod = n1 * n2; <else &n1n2prod = n1 * n2;
if (n1) <n2prod = n1 * n2; else n1n2prod = n1 * n2;
if (n1!= null) <final int n1n2prod = n1 * n2;
if (n1) &n2prod = n1 * n2; &else <n1n2prod = n1 * n2;
if (n1) &n2prod = n1 * n2; else &n1n2prod = n1 * n2;
if (n1) &n2prod = n1 * n2; else <n1n2prod = n1 * n2;
final int n1n2prod = n1 * n2;
final int n1n2prod = '<0' * n2;
if (n1) n2prod = n1 * n2; else &n1n2prod = n1 * n2;
if (n1) <n2prod = n1 * n2; else <n1n2prod = n1 * n2;
final int n1n2prod = n1 * n2;
final int n1n2prod = n1 0;
final int n1n2prod = n1 <0;
final int n1n2prod = n1 <= n2;
if (n1!= null) &final int n1n2prod = n1 * n2;
/* if n1n2prod &0x7F*/
if (n1) n2prod = n1 * n2; <else n1n2prod = n1 * n2;
if (n1!= null) final int n1n2prod = n1 * n2;
final int n1n2prod = n1 n2;
final int n1n2prod = <n1 * n2;
