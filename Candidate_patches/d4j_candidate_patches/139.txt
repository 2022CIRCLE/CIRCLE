return true;
return false;
return false;

return isAssignedOnceInLifetime;
return true;
return 1;
return ret;
return false;
return (ref == null);
return rv;
return 0;
return true;
return (true);
return retval;
return (isAssignedOnceInLifetime);
ret = true;
return ref;
ret = true; return ret;
return true;
return -1;
return (1);
returntrue;
return(true);
return!isAssignedOnceInLifetime;
return (true);
return hasAssignedOnceInLifetime;
return (true);
return (0);
return NS_OK;
return (false);
return;
return (ref!= null);
return result;
return isAssignedOnceInLifetime();
return (ref == null);
return null;
returnfalse;
return REF_TRUE;
return ref == null;
return REFERENCES_TRUE;
return (ref == null);
return (ref);
return(true);
return super.isAssignedOnceInLifetime();
return fTrue;
return res;
return bool;
goto done;
return(isAssignedOnceInLifetime);
goto out;
return hasAssigned;
return PZ_TRUE;
return ret == 0;
return (!isAssignedOnceInLifetime);
return(false);
return(true);
return EIF_TRUE;
return(ref);
#endif return isAssignedOnceInLifetime;
return isAssigned;
#endif return true;
return!ref;
return (false);
return false;
retval = true;
return REFERENCES_FALSE;
ret = true;  return ret;
return v;
return!isAssignedOnceInLifetime();
return IsAssignedOnceInLifetime();
return ret == true;
return REFALSE;
return this;
rv = true; return rv;
return ret = true;
return IS_TRUE;
result = true;
returnFalse;
return retVal;
return (true);
return REF_OK;
return isTrue;
return aResult;
return isAssignedInLifetime;
return ret == null;
break;
rv = true;
return-1;
return getAssignedOnceInLifetime();
res = true; return res;
retval = true; return retval;
return (isAssignedOnceInLifetime());
return ok;
return PR_SUCCESS;
#endif
return null;
return (ref!= null);
return status;
goto ret;
return REFERENCES_OK;
returnFALSE;
return FAILED;
#endif return true;
return ref!= null;
goto cleanup;
return(false);
return(ref == null);
else  return false;
return true; return false;
return1;
return!hasAssignment;
return (!ref);
return(1);
else return false;
return!hasAssignedOnceInLifetime;
return isAssignedOnceInLifetime(ref);
return EINVAL;
goto fail;
#endif return false;
return isAvailable;
return RETURN_TRUE;
return hasAssignment;
ret = true; break;
return (ref)!= null;
return one;
return (-1);
return REFERENCES_SUCCESS;
res = true;
return
return tmp;
Return true;
return (getter_AddRefs(ref));
return true; return false;
return isAssignedOnce;
return!IsInLifetime();
return ref == null;
NS_RELEASE(ref); return true;
#endif return false;
result = true; return result;
return TAILQ_FALSE;
return isAssignedOnceInlifetime;
if (ref == null) return false;
return (rv == 0);
ret = true; return ret;
if (!ref)  return false;
continue;
else  return true;
if (ref)  return false;
return ret == false;
return true; return true;
return!(ref == null);
return!hasAssigned;
if (ref)  return true;
return ret == true;
aResult = true; return aResult;
return hasAssigned? true : false;
NS_RELEASE(ref);
return false; return true;
ret = true; goto out;
return false; return false;
NS_ADDREF_THIS(); return true;
if (!ref) return false;
return ret == -1;
return (!isAssignedOnceInLifetime());
return true; return true;
ret = true;
return (ref!= null);
return (ref)!= 0;
return retval == 0;
return (ref == this);
return (ref == 0);
return res == 0;
ret = true; goto ret;
return super.isAssignedOnceInLifetime;
return IsAssignedOnceInLifetime;
return (ref==null);
if (!ref) return false; return false;
return (ref.get() == null);
ret = true; return (ret);
else  if (ref)  if (! isForFreesyNode(ref))  return false;   else  ret = false;   if (ref)  ret = NS_OK;  return ret;
if (ref == null)  return false;  return true;
/* * If this assignment is not in a loop, then the default assignment is thrown. */ return 0;
if (!mPending) return NS_OK;  return true;
return!false;
if (!IsReference()) return false; return true;
return (ref == null)? true : false;
if (!ref) return false; if (ref == null)  ret = 0;  return false;
return (hasAssignment)? true : true;
return ((ref = getOneAndOnlyAssignment())!= 0);
if (ref == null)  return false;  return false;
return!(ref == null);
if (mEmpty &&!mAvailable)  return false;  return mSuccess;
if (ref == null)  return false;  if (ref == null)  return false;  return false;
return true;  else  if (ref == null)  if (ref == null)  LOG(L_ERR, "get_active_task: get_active_task() failedn");    else  LOG(L_ERR, "get_active_task() failedn"); return false;
if (!tmp)  tmp = tmp; return true;
if (nodeInfo)  if (!parent)  return false;  return false;  return false;
return (tmp == '0')? true : false;
if (aReference)  return!(ref = getOneAndOnlyAssignment());  return (false);
if (!isOnly) return false; return 0;
return (ref == null)? true : true;
return fSynchronous;
if (ih && (ref == null))  return false;  if (ref == null)  return false;  return true;
if (ref)  return false;   if (ref == null)  return false;
if (getRef() == null)  if (isContainedInLifetime())  return false;  if (getName() == null)  return false;   return true;
else   return (ref == null)? false : 0;
return true;  return 0;
return (IsProcessingEvent() &&!isProcessing);
/* Get one and only assignment. */ if (ref == null)  return false;  if (ref == null)  return false;  return!ref;
/* XXX - XXX should not happen here. */ return true;
if (flags)  return false;   return false;
if (aRef == null)  if (ref == null)  return false;   return aRef;
if ((ref = getFrameAndOnlyAssignment())!= null)  return true;  return true;
return (ref == null)? true : false;
if (!HasAssignment)  return false;  return false;
if (ref == NS_CONTENT_ATTR_NO_INTERFACE)  return false;  return true;
return fs_IS_API_LEFT;
if (!getBool()) return (!getBool()); return (!isAssignedOnceInLifetime(ref));
return fail;
else  ret = 0;  return ret;
return (getter_AddRefs(ref)) == 0;
return (ref!= null)? true : false;
return (!mAssignment);
if (!IsAssignedOnceInLifetime()) return false;
return!canPromise(&ref, ref, getter_AddRefs(ref));
if (ref == null)  return false;   else  char* char = ref.get(); if (char!= null)  char* char* s = char*; return true;
return (ref == null)? true : 0;
if (!needReference)  return false;  return false;

<return false;
<else <if (ref) &if (! isForFreesyNode(ref)) <return false; else ret = false; if (ref) ret = NS_OK; return ret;
return true; else &if (ref == null) if (ref == null) <LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
return true; &else if (ref == null) <if (ref == null) LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (aRef == null) if (ref == null) return false; &&return aRef;
&else ret = 0; <return ret;
else &return (ref == null)? false : 0;
if (ih && (ref == null)) return false; <if (ref == null) return false; &return true;
/* Get one and only assignment. */ if (ref == null) return false; &if (ref == null) <return false; &return!ref;
/* Get one and only assignment. */ if (ref == null) return false; if (ref == null) return false; return!ref;
if (ref == NS_CONTENT_ATTR_NO_INTERFACE) &return false; <return true;
if (ref == null) &return false; <if (ref == null) &return false; return false;
if (ih && (ref == null)) <return false; &if (ref == null) <return false; &return true;
if (ref) &return false; if (ref == null) return false;
if (!mPending) return NS_OK; &return true;
if (aRef == null) &if (ref == null) <return false; <return aRef;
if (!HasAssignment) &return false; &return false;
if (ref == null) return false; &else <char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
return true; &else &if (ref == null) <if (ref == null) &LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (getRef() == null) <if (isContainedInLifetime()) <return false; if (getName() == null) <return false; return true;
/* Get one and only assignment. */ if (ref == null) &return false; if (ref == null) return false; &return!ref;
if (ih && (ref == null)) <return false; if (ref == null) return false; return true;
else <if (ref) &if (! isForFreesyNode(ref)) <return false; else ret = false; if (ref) ret = NS_OK; return ret;
<else &if (ref) &if (! isForFreesyNode(ref)) <return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (ref == null) &return false; &if (ref == null) <return false; return false;
if ((ref = getFrameAndOnlyAssignment())!= null) &return true; &return true;
if (nodeInfo) if (!parent) &return false; <return false; &return false;
if (nodeInfo) &if (!parent) <return false; return false; &return false;
if (flags) <return false; <<return false;
if (flags) <return false; <&return false;
return true; <else if (ref == null) &if (ref == null) <LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (aRef == null) <if (ref == null) <return false; &<return aRef;
else <if (ref) <if (! isForFreesyNode(ref)) &return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (nodeInfo) &if (!parent) &return false; &return false; &return false;
&return isAssignedOnceInLifetime();
if (ref) <return false; <if (ref == null) &return false;
<else &ret = 0; <return ret;
<if (ref == null) &return false; &if (ref == null) <return false; return false;
if (ih && (ref == null)) return false; <if (ref == null) &return false; &return true;
if (nodeInfo) &if (!parent) &return false; <return false; return false;
if (nodeInfo) &if (!parent) <return false; &return false; return false;
if (getRef() == null) <if (isContainedInLifetime()) <return false; if (getName() == null) return false; return true;
if (ih && (ref == null)) return false; <if (ref == null) &return false; <return true;
if (aRef == null) <if (ref == null) return false; &<return aRef;
/* Get one and only assignment. */ if (ref == null) &return false; if (ref == null) &return false; &return!ref;
return true; else <if (ref == null) if (ref == null) &LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
/* Get one and only assignment. */ if (ref == null) <return false; &if (ref == null) &return false; <return!ref;
if (ref) return false; &if (ref == null) &return false;
if (aRef == null) <if (ref == null) <return false; &return aRef;
if (nodeInfo) if (!parent) return false; <return false; return false;
if (ref == null) return false; &return true;
if (ref == null) return false; <else <char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
if (ih && (ref == null)) <return false; <if (ref == null) return false; &return true;
return true; else if (ref == null) &if (ref == null) LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
<return isAssignedOnceInLifetime();
if (ref) <return false; <<if (ref == null) &return false;
return true; else &if (ref == null) if (ref == null) LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (aRef == null) &if (ref == null) return false; &<return aRef;
&if (ref == NS_CONTENT_ATTR_NO_INTERFACE) return false; &return true;
if (ref == null) <return false; <if (ref == null) <return false; return false;
if (nodeInfo) <if (!parent) return false; &return false; <return false;
/* Get one and only assignment. */ if (ref == null) <return false; if (ref == null) &return false; <return!ref;
if (ih && (ref == null)) &return false; <if (ref == null) <return false; return true;
if (ref == null) return false; <<else <char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
&else ret = 0; return ret;
if (aRef == null) if (ref == null) return false; <return aRef;
if (ref == null) <return false; <return false;
&else <return false;
if (ih && (ref == null)) return false; <if (ref == null) <return false; return true;
if (ref == null) return false; &else &char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
if (getRef() == null) <if (isContainedInLifetime()) return false; <if (getName() == null) &return false; return true;
if (ih && (ref == null)) &return false; if (ref == null) <return false; &return true;
if (ref == null) return false; <&else char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
/* Get one and only assignment. */ if (ref == null) <return false; if (ref == null) <return false; &return!ref;
if (aReference) &return!(ref = getOneAndOnlyAssignment()); <return (false);
return true; else <if (ref == null) &if (ref == null) LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
&if (ref == null) &return false; if (ref == null) &return false; return false;
if (nodeInfo) <if (!parent) &return false; <return false; <return false;
if (!needReference) &return false; &return false;
if (ref) <return false; &if (ref == null) &return false;
else if (ref) if (! isForFreesyNode(ref)) &return false; else ret = false; if (ref) ret = NS_OK; return ret;
&if (ref == null) &return false; &if (ref == null) &return false; return false;
<else <return (ref == null)? false : 0;
&else <<return (ref == null)? false : 0;
<if (ref == null) <return false; if (ref == null) return false; return false;
if (ref) <return false; &&if (ref == null) <return false;
if (nodeInfo) &if (!parent) <return false; return false; <return false;
else &if (ref) &if (! isForFreesyNode(ref)) <return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (ref == null) &return false; <if (ref == null) <return false; return false;
<if (ref == null) <return false; <if (ref == null) <return false; return false;
return true; &else &if (ref == null) <if (ref == null) <LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (nodeInfo) if (!parent) <return false; return false; return false;
return false;
<else if (ref) <if (! isForFreesyNode(ref)) &return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (nodeInfo) <if (!parent) &return false; &return false; &return false;
<if (ref == null) return false; if (ref == null) &return false; return false;
if (nodeInfo) &if (!parent) <return false; <return false; &return false;
if (ref) &return false; <<if (ref == null) &return false;
if (getRef() == null) if (isContainedInLifetime()) <return false; if (getName() == null) &return false; return true;
if (aRef == null) if (ref == null) <return false; &return aRef;
if (getRef() == null) &if (isContainedInLifetime()) return false; &if (getName() == null) &return false; return true;
if (ref) <return false; <<if (ref == null) <return false;
&else &if (ref) <if (! isForFreesyNode(ref)) &return false; else ret = false; if (ref) ret = NS_OK; return ret;
/* Get one and only assignment. */ if (ref == null) &return false; &if (ref == null) return false; &return!ref;
if ((ref = getFrameAndOnlyAssignment())!= null) &return true; <return true;
return isAssignedOnceInLifetime;
if (nodeInfo) &if (!parent) <return false; <return false; return false;
<if (ref == NS_CONTENT_ATTR_NO_INTERFACE) &return false; &return true;
if (ih && (ref == null)) return false; &if (ref == null) <return false; &return true;
/* Get one and only assignment. */ if (ref == null) &return false; <if (ref == null) return false; <return!ref;
/* Get one and only assignment. */ if (ref == null) &return false; if (ref == null) return false; <return!ref;
else &return false;
&else if (ref) <if (! isForFreesyNode(ref)) return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (aRef == null) if (ref == null) return false; return aRef;
else &ret = 0; return ret;
return true; else <if (ref == null) &if (ref == null) &LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (!ref) return false; if (ref == null) &ret = 0; &return false;
if (nodeInfo) if (!parent) <return false; <return false; &return false;
if (flags) return false; <&return false;
return true; <else if (ref == null) <if (ref == null) LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (ih && (ref == null)) return false; if (ref == null) <return false; <return true;
if (ref) return false;
if (getRef() == null) &if (isContainedInLifetime()) &return false; &if (getName() == null) <return false; return true;
if (aReference) return!(ref = getOneAndOnlyAssignment()); return (false);
if (ref) return false; <<if (ref == null) <return false;
if (!needReference) &return false; return false;
if (ih && (ref == null)) &return false; &if (ref == null) <return false; return true;
if (aRef == null) &if (ref == null) <return false; return aRef;
/* Get one and only assignment. */ if (ref == null) <return false; if (ref == null) return false; &return!ref;
if (ih && (ref == null)) <return false; <if (ref == null) &return false; return true;
if (ref == null) <return false; &if (ref == null) &return false; return false;
return true; else if (ref == null) &if (ref == null) <LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (mEmpty &&!mAvailable) &return false; return mSuccess;
else if (ref) if (! isForFreesyNode(ref)) return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (ref == null) return false; <if (ref == null) return false; return false;
<else <&return (ref == null)? false : 0;
if (ref) &return false; <if (ref == null) <return false;
if (flags) return false; &&return false;
else return (ref == null)? false : 0;
<if (ref == null) <return false; &if (ref == null) &return false; return false;
if (ih && (ref == null)) return false; <if (ref == null) <return false; &return true;
if (aRef == null) <if (ref == null) <return false; <&return aRef;
/* Get one and only assignment. */ if (ref == null) return false; if (ref == null) <return false; &return!ref;
else &ret = 0; &return ret;
/* Get one and only assignment. */ if (ref == null) &return false; <if (ref == null) &return false; &return!ref;
if (aRef == null) &if (ref == null) &return false; &<return aRef;
if (ih && (ref == null)) <return false; &if (ref == null) &return false; return true;
if (!HasAssignment) <return false; return false;
if (nodeInfo) if (!parent) &return false; return false; &return false;
if (ih && (ref == null)) &return false; if (ref == null) &return false; return true;
/* Get one and only assignment. */ if (ref == null) <return false; <if (ref == null) &return false; &return!ref;
else <if (ref) if (! isForFreesyNode(ref)) &return false; else ret = false; if (ref) ret = NS_OK; return ret;
<else if (ref) if (! isForFreesyNode(ref)) &return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (ref == null) &return false; <return true;
return true; <else if (ref == null) &if (ref == null) LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (getRef() == null) &if (isContainedInLifetime()) return false; if (getName() == null) <return false; return true;
if (aRef == null) if (ref == null) &return false; <<return aRef;
if (ih && (ref == null)) &return false; &if (ref == null) <return false; &return true;
/* Get one and only assignment. */ if (ref == null) <return false; if (ref == null) &return false; return!ref;
if (ref == null) &return false; &else &char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
if (nodeInfo) <if (!parent) return false; &return false; &return false;
if (ih && (ref == null)) return false; if (ref == null) return false; &return true;
if (ref == null) &return false; &<else <char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
if (ref == null) return false; <if (ref == null) &return false; return false;
if (ref) <return false; &<if (ref == null) <return false;
<else &if (ref) if (! isForFreesyNode(ref)) &return false; else ret = false; if (ref) ret = NS_OK; return ret;
<else &<return (ref == null)? false : 0;
if (ref == NS_CONTENT_ATTR_NO_INTERFACE) &return false; &return true;
&return true;
if (nodeInfo) <if (!parent) <return false; &return false; return false;
if (ref) return false; &&if (ref == null) &return false;
return true; else <if (ref == null) <if (ref == null) LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (getRef() == null) if (isContainedInLifetime()) return false; if (getName() == null) <return false; return true;
if (ih && (ref == null)) &return false; <if (ref == null) return false; return true;
if (ref) &return false; <&if (ref == null) &return false;
if (getRef() == null) &if (isContainedInLifetime()) return false; <if (getName() == null) return false; return true;
if (!needReference) return false; <return false;
if (ref == null) return false; if (ref == null) <return false; return false;
<else &if (ref) <if (! isForFreesyNode(ref)) <return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (ref == NS_CONTENT_ATTR_NO_INTERFACE) <return false; return true;
<else return false;
&else if (ref) <if (! isForFreesyNode(ref)) <return false; else ret = false; if (ref) ret = NS_OK; return ret;
<if (ref == null) &return false; if (ref == null) <return false; return false;
if (ih && (ref == null)) return false; &if (ref == null) return false; return true;
if (ref) return false; <<if (ref == null) return false;
if (getRef() == null) if (isContainedInLifetime()) &return false; if (getName() == null) <return false; return true;
if (getRef() == null) &if (isContainedInLifetime()) return false; &if (getName() == null) return false; return true;
&&return true;
if (nodeInfo) &if (!parent) &return false; return false; return false;
<else if (ref) <if (! isForFreesyNode(ref)) return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (ref == null) &return false; &if (ref == null) &return false; return false;
&if (ref == null) &return false; &if (ref == null) return false; return false;
return true; else &if (ref == null) <if (ref == null) LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
/* Get one and only assignment. */ if (ref == null) &return false; if (ref == null) <return false; &return!ref;
<else <return false;
/* Get one and only assignment. */ if (ref == null) <return false; if (ref == null) &return false; &return!ref;
else <ret = 0; <return ret;
if (nodeInfo) <if (!parent) &return false; return false; &return false;
if (ih && (ref == null)) &return false; &if (ref == null) &return false; return true;
/* Get one and only assignment. */ if (ref == null) &return false; <if (ref == null) <return false; <return!ref;
if (ref == NS_CONTENT_ATTR_NO_INTERFACE) <return false; &return true;
return true; else <if (ref == null) &if (ref == null) <LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
return true; return 0;
/* Get one and only assignment. */ if (ref == null) &return false; if (ref == null) <return false; <return!ref;
if (ref) return false; <<if (ref == null) &return false;
<return false;
if (nodeInfo) <if (!parent) return false; return false; &return false;
if (ref == null) return false; &else char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
if (getRef() == null) <if (isContainedInLifetime()) <return false; &if (getName() == null) return false; return true;
<else ret = 0; &return ret;
else return false;
if (getRef() == null) &if (isContainedInLifetime()) <return false; <if (getName() == null) return false; return true;
if (nodeInfo) if (!parent) &return false; <return false; return false;
if (aReference) return!(ref = getOneAndOnlyAssignment()); <return (false);
if (nodeInfo) if (!parent) return false; <return false; <return false;
if (nodeInfo) &if (!parent) return false; &return false; <return false;
if (ref == null) &return false; <<else &char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
&if (ref == null) return false; &if (ref == null) return false; return false;
return true; else &if (ref == null) &if (ref == null) &LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (ref) <return false; &&if (ref == null) return false;
/* Get one and only assignment. */ if (ref == null) &return false; if (ref == null) <return false; return!ref;
<else <if (ref) <if (! isForFreesyNode(ref)) <return false; else ret = false; if (ref) ret = NS_OK; return ret;
else if (ref) <if (! isForFreesyNode(ref)) <return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (ref == null) <return false; if (ref == null) <return false; return false;
return true; &else &if (ref == null) if (ref == null) LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (ref == null) return false; &<else &char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
/* Get one and only assignment. */ if (ref == null) return false; if (ref == null) <return false; <return!ref;
/* Get one and only assignment. */ if (ref == null) return false; &if (ref == null) <return false; <return!ref;
/* Get one and only assignment. */ if (ref == null) <return false; if (ref == null) return false; return!ref;
if ((ref = getFrameAndOnlyAssignment())!= null) <return true; &return true;
&else <if (ref) <if (! isForFreesyNode(ref)) &return false; else ret = false; if (ref) ret = NS_OK; return ret;
<else &if (ref) if (! isForFreesyNode(ref)) <return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (nodeInfo) if (!parent) &return false; &return false; <return false;
if (mEmpty &&!mAvailable) &return false; &return mSuccess;
if (aRef == null) &if (ref == null) <return false; &<return aRef;
if (nodeInfo) <if (!parent) &return false; &return false; <return false;
/* Get one and only assignment. */ if (ref == null) <return false; <if (ref == null) &return false; return!ref;
if (ih && (ref == null)) &return false; if (ref == null) return false; return true;
if (ref == null) return false; <<else char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
if (ref) &return false; <if (ref == null) &return false;
&if (ref == NS_CONTENT_ATTR_NO_INTERFACE) &return false; <return true;
if (getRef() == null) <if (isContainedInLifetime()) &return false; &if (getName() == null) <return false; return true;
if (ref == null) return false; <<else &char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
if (aRef == null) &if (ref == null) <return false; <&return aRef;
if (ih && (ref == null)) <return false; if (ref == null) <return false; return true;
if (flags) <return false; return false;
&if (ref == null) <return false; if (ref == null) return false; return false;
if (getRef() == null) if (isContainedInLifetime()) return false; <if (getName() == null) &return false; return true;
if (aRef == null) if (ref == null) &return false; &<return aRef;
&else <&return (ref == null)? false : 0;
return false;
&else <if (ref) <if (! isForFreesyNode(ref)) return false; else ret = false; if (ref) ret = NS_OK; return ret;
<if (ref == null) return false; <if (ref == null) return false; return false;
if (mEmpty &&!mAvailable) <return false; return mSuccess;
return true; else <if (ref == null) <if (ref == null) &LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (ih && (ref == null)) return false; <if (ref == null) return false; <return true;
if (aRef == null) &if (ref == null) return false; <return aRef;
else <ret = 0; return ret;
/* Get one and only assignment. */ if (ref == null) &return false; if (ref == null) &return false; <return!ref;
if (ref == null) return false; &<else char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
else if (ref) &if (! isForFreesyNode(ref)) &return false; else ret = false; if (ref) ret = NS_OK; return ret;
else if (ref) <if (! isForFreesyNode(ref)) return false; else ret = false; if (ref) ret = NS_OK; return ret;
return true; else <if (ref == null) if (ref == null) <LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
return true; <else &if (ref == null) &if (ref == null) &LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (ref) return false; if (ref == null) &return false;
return true; else &if (ref == null) <if (ref == null) &LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
/* Get one and only assignment. */ if (ref == null) &return false; &if (ref == null) &return false; &return!ref;
if (ref) <return false; if (ref == null) <return false;
/* Get one and only assignment. */ if (ref == null) return false; <if (ref == null) &return false; return!ref;
if (flags) <return false; &return false;
if (mEmpty &&!mAvailable) <return false; &return mSuccess;
if (!ref) &return false;
<return true;
&if (ref == null) &return false; <if (ref == null) &return false; return false;
if (aRef == null) if (ref == null) <return false; <<return aRef;
if (aRef == null) &if (ref == null) <return false; <<return aRef;
&if (ref == null) <return false; &if (ref == null) &return false; return false;
&return false;
if (ref == null) &return false; &return false;
if (ref) <return false;
if (flags) <return false; &&return false;
return true; <else if (ref == null) if (ref == null) LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (!ref) return false; if (ref == null) <ret = 0; &return false;
<return true;
if (!HasAssignment) <return false; &return false;
if (getRef() == null) if (isContainedInLifetime()) &return false; <if (getName() == null) &return false; return true;
&return false;
if (flags) &return false; <return false;
if (ref == null) <return false; &if (ref == null) <return false; return false;
if (getRef() == null) &if (isContainedInLifetime()) &return false; <if (getName() == null) return false; return true;
&/* XXX - XXX should not happen here. */ return true;
if (getRef() == null) &if (isContainedInLifetime()) <return false; <if (getName() == null) <return false; return true;
<if (ref == null) return false; if (ref == null) return false; return false;
/* Get one and only assignment. */ if (ref == null) <return false; <if (ref == null) <return false; return!ref;
if (ref) &return false; <<if (ref == null) <return false;
return true; <else &if (ref == null) &if (ref == null) LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (nodeInfo) &if (!parent) &return false; return false; <return false;
<return true;
if (nodeInfo) <if (!parent) <return false; return false; <return false;
if (flags) return false; &<return false;
if (aRef == null) <if (ref == null) &return false; &<return aRef;
if (aRef == null) if (ref == null) <return false; return aRef;
/* Get one and only assignment. */ if (ref == null) &return false; <if (ref == null) return false; return!ref;
if (ref == null) &return false; &else char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
else if (ref) if (! isForFreesyNode(ref)) <return false; else ret = false; if (ref) ret = NS_OK; return ret;
else <return (ref == null)? false : 0;
if (ih && (ref == null)) return false; if (ref == null) &return false; return true;
if (ref) &return true;
return true; &else if (ref == null) if (ref == null) LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
&else ret = 0; &return ret;
if (getRef() == null) &if (isContainedInLifetime()) &return false; &if (getName() == null) &return false; return true;
if (ih && (ref == null)) return false; <if (ref == null) <return false; <return true;
if ((ref = getFrameAndOnlyAssignment())!= null) return true; &return true;
if (ref == null) <return false; <&else <char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
if (nodeInfo) &if (!parent) &return false; <return false; &return false;
&else <if (ref) &if (! isForFreesyNode(ref)) <return false; else ret = false; if (ref) ret = NS_OK; return ret;
&else if (ref) &if (! isForFreesyNode(ref)) return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (ref == null) return false; <if (ref == null) <return false; return false;
<else <if (ref) if (! isForFreesyNode(ref)) &return false; else ret = false; if (ref) ret = NS_OK; return ret;
else if (ref) <if (! isForFreesyNode(ref)) &return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (nodeInfo) <if (!parent) <return false; &return false; <return false;
if (aRef == null) if (ref == null) &return false; &&return aRef;
if (ih && (ref == null)) &return false; <if (ref == null) &return false; return true;
if (ref) &return false; &&if (ref == null) <return false;
<if (ref == NS_CONTENT_ATTR_NO_INTERFACE) <return false; return true;
return true; <else <if (ref == null) <if (ref == null) LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
else &<return (ref == null)? false : 0;
if (!ref) return false;
if (ih && (ref == null)) return false; &if (ref == null) return false; &return true;
return true; &else if (ref == null) &if (ref == null) &LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
&else <if (ref) if (! isForFreesyNode(ref)) &return false; else ret = false; if (ref) ret = NS_OK; return ret;
else &if (ref) <if (! isForFreesyNode(ref)) &return false; else ret = false; if (ref) ret = NS_OK; return ret;
&return isAssignedOnceInLifetime;
&if (ref == NS_CONTENT_ATTR_NO_INTERFACE) <return false; return true;
else <ret = 0; &return ret;
if (getRef() == null) <if (isContainedInLifetime()) &return false; &if (getName() == null) return false; return true;
/* Get one and only assignment. */ if (ref == null) <return false; &if (ref == null) <return false; return!ref;
else return true;
if (getRef() == null) &if (isContainedInLifetime()) return false; <if (getName() == null) <return false; return true;
if (ref) return false; &if (ref == null) <return false;
if (ref == null) return false; <&else <char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
if ((ref = getFrameAndOnlyAssignment())!= null) return true; <return true;
&if (ref == null) &return false; if (ref == null) <return false; return false;
if (ref == null) <return false; <&else char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
&else &if (ref) <if (! isForFreesyNode(ref)) <return false; else ret = false; if (ref) ret = NS_OK; return ret;
/* Get one and only assignment. */ if (ref == null) return false; <if (ref == null) <return false; <return!ref;
/* Get one and only assignment. */ if (ref == null) &return false; &if (ref == null) &return false; <return!ref;
if (flags) <return false; &<return false;
if (ref) &return false; <<if (ref == null) return false;
<return false;
return true; <else &if (ref == null) if (ref == null) <LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
&else &return false;
if ((ref = getFrameAndOnlyAssignment())!= null) &return true; return true;
if (!HasAssignment) return false; return false;
if (getRef() == null) <if (isContainedInLifetime()) <return false; <if (getName() == null) return false; return true;
if (ref == NS_CONTENT_ATTR_NO_INTERFACE) return false; &return true;
/* Get one and only assignment. */ if (ref == null) &return false; <if (ref == null) return false; &return!ref;
if (ref) <return false; &if (ref == null) return false;
if (ref == NS_CONTENT_ATTR_NO_INTERFACE) return false; <return true;
<if (ref == null) &return false; &if (ref == null) &return false; return false;
return true; &else if (ref == null) &if (ref == null) LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
return true; else &if (ref == null) &if (ref == null) <LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
return (tmp == '0')? true : false;
/* Get one and only assignment. */ if (ref == null) &return false; <if (ref == null) <return false; &return!ref;
<else <if (ref) if (! isForFreesyNode(ref)) <return false; else ret = false; if (ref) ret = NS_OK; return ret;
return true; <else <if (ref == null) if (ref == null) &LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (ref == null) <return false; &&else &char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
&else <return (ref == null)? false : 0;
if (!needReference) return false; &return false;
<if (ref == null) &return false; &if (ref == null) return false; return false;
ret = true; &return ret;
if (ih && (ref == null)) return false; if (ref == null) <return false; &return true;
if (ref == null) &return false; else &char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
else ret = 0; return ret;
&else if (ref) if (! isForFreesyNode(ref)) return false; else ret = false; if (ref) ret = NS_OK; return ret;
/* Get one and only assignment. */ if (ref == null) <return false; if (ref == null) return false; <return!ref;
if (aRef == null) <if (ref == null) <return false; return aRef;
if (ih && (ref == null)) <return false; &if (ref == null) return false; &return true;
&else return true;
if (aRef == null) <if (ref == null) return false; <return aRef;
return (tmp == '&0')? true : false;
if (aRef == null) &if (ref == null) return false; return aRef;
&if (ref == null) return false; if (ref == null) &return false; return false;
if (nodeInfo) <if (!parent) &return false; <return false; return false;
if (aRef == null) &if (ref == null) <return false; &return aRef;
if (ref) <return true;
<if (ref == null) <return false; if (ref == null) &return false; return false;
if (nodeInfo) if (!parent) <return false; <return false; <return false;
if (getRef() == null) if (isContainedInLifetime()) &return false; <if (getName() == null) <return false; return true;
&else &&return (ref == null)? false : 0;
else &if (ref) <if (! isForFreesyNode(ref)) return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (nodeInfo) &if (!parent) &return false; <return false; <return false;
if (ref == NS_CONTENT_ATTR_NO_INTERFACE) &return false; return true;
if (aRef == null) if (ref == null) <return false; &<return aRef;
if (ref == null) return false; &if (ref == null) return false; return false;
&if (ref == NS_CONTENT_ATTR_NO_INTERFACE) return false; <return true;
&if (ref == null) &return false; &if (ref == null) <return false; return false;
return isAssignedOnceInLifetime();
if (flags) <return false; <return false;
&if (ref == null) <return false; <if (ref == null) return false; return false;
if (!ref) return false; if (ref == null) <ret = 0; <return false;
if (nodeInfo) if (!parent) <return false; return false; <return false;
if (ref) return false; if (ref == null) <return false;
if (flags) &return false; <<return false;
&if (ref == NS_CONTENT_ATTR_NO_INTERFACE) &return false; return true;
&if (ref == null) <return false; &if (ref == null) return false; return false;
if (nodeInfo) <if (!parent) <return false; &return false; &return false;
if (ih && (ref == null)) <return false; if (ref == null) &return false; return true;
if (ih && (ref == null)) return false; &if (ref == null) <return false; <return true;
if (ref) &return false; &&if (ref == null) &return false;
/* Get one and only assignment. */ if (ref == null) return false; if (ref == null) <return false; return!ref;
if (getRef() == null) if (isContainedInLifetime()) &return false; if (getName() == null) return false; return true;
if (flags) &return false; <&return false;
if (flags) return false; return false;
if (aRef == null) if (ref == null) &return false; return aRef;
&else &if (ref) if (! isForFreesyNode(ref)) return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (getRef() == null) if (isContainedInLifetime()) return false; <if (getName() == null) return false; return true;
if (flags) return false; <return false;
<if (ref == NS_CONTENT_ATTR_NO_INTERFACE) &return false; return true;
if (ref == null) &return false; if (ref == null) <return false; return false;
if (nodeInfo) if (!parent) &return false; <return false; <return false;
&else if (ref) &if (! isForFreesyNode(ref)) &return false; else ret = false; if (ref) ret = NS_OK; return ret;
<else <if (ref) <if (! isForFreesyNode(ref)) return false; else ret = false; if (ref) ret = NS_OK; return ret;
<if (ref == null) <return false; &if (ref == null) <return false; return false;
if (aRef == null) <if (ref == null) return false; return aRef;
if (getRef() == null) if (isContainedInLifetime()) return false; if (getName() == null) return false; return true;
/* Get one and only assignment. */ if (ref == null) <return false; &if (ref == null) <return false; &return!ref;
if (ih && (ref == null)) &return false; &if (ref == null) &return false; <return true;
/* Get one and only assignment. */ if (ref == null) &return false; &if (ref == null) <return false; return!ref;
/* Get one and only assignment. */ if (ref == null) return false; &if (ref == null) return false; &return!ref;
<else if (ref) <if (! isForFreesyNode(ref)) <return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (nodeInfo) <if (!parent) return false; <return false; &return false;
if (aRef == null) &if (ref == null) &return false; <return aRef;
if (ih && (ref == null)) <return false; &if (ref == null) &return false; &return true;
return true; &else <if (ref == null) <if (ref == null) &LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (ref) &return false; &&if (ref == null) return false;
return true; else if (ref == null) if (ref == null) &LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (getRef() == null) <if (isContainedInLifetime()) &return false; if (getName() == null) &return false; return true;
if (ref == null) <return false; if (ref == null) return false; return false;
/* Get one and only assignment. */ if (ref == null) return false; <if (ref == null) &return false; &return!ref;
<else if (ref) if (! isForFreesyNode(ref)) return false; else ret = false; if (ref) ret = NS_OK; return ret;
&return false;
if (ih && (ref == null)) <return false; <if (ref == null) return false; return true;
if (getRef() == null) if (isContainedInLifetime()) <return false; &if (getName() == null) return false; return true;
/* Get one and only assignment. */ if (ref == null) return false; &if (ref == null) <return false; return!ref;
if (getRef() == null) <if (isContainedInLifetime()) return false; <if (getName() == null) <return false; return true;
<if (ref == NS_CONTENT_ATTR_NO_INTERFACE) <return false; &return true;
if (nodeInfo) if (!parent) return false; <return false; &return false;
else if (ref) &if (! isForFreesyNode(ref)) return false; else ret = false; if (ref) ret = NS_OK; return ret;
<if (ref == null) &return false; if (ref == null) return false; return false;
&if (ref == null) <return false; if (ref == null) <return false; return false;
/* Get one and only assignment. */ if (ref == null) <return false; if (ref == null) <return false; <return!ref;
&else <ret = 0; &return ret;
<return isAssignedOnceInLifetime;
if (ih && (ref == null)) &return false; <if (ref == null) <return false; &return true;
if (nodeInfo) &if (!parent) return false; return false; <return false;
if (nodeInfo) &if (!parent) return false; <return false; return false;
if (ref) &return false; &if (ref == null) return false;
&else return (ref == null)? false : 0;
if (aRef == null) if (ref == null) return false; &<return aRef;
&else &<return (ref == null)? false : 0;
return true;
if (getRef() == null) <if (isContainedInLifetime()) <return false; <if (getName() == null) &return false; return true;
ret = true; return ret;
<else &&return (ref == null)? false : 0;
if (mEmpty &&!mAvailable) return false; return mSuccess;
if (aRef == null) &if (ref == null) &return false; &&return aRef;
if (getRef() == null) if (isContainedInLifetime()) &return false; &if (getName() == null) <return false; return true;
if (!needReference) <return false; <return false;
return true; <else <if (ref == null) if (ref == null) <LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
<if (ref == null) return false; &if (ref == null) <return false; return false;
if ((ref = getFrameAndOnlyAssignment())!= null) <return true; <return true;
return true; &else <if (ref == null) <if (ref == null) LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
return true; else <if (ref == null) <if (ref == null) <LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (flags) &return false; &<return false;
if (getRef() == null) if (isContainedInLifetime()) <return false; if (getName() == null) return false; return true;
if (nodeInfo) if (!parent) return false; return false; &return false;
if (ref) <return false; <&if (ref == null) return false;
if (ref == null) <return false; else <char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
if (ref) <return false; <<if (ref == null) return false;
if (ref == null) &return false; &if (ref == null) return false; return false;
if (ref == null) <return false; &else char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
if (!HasAssignment) <return false; <return false;
if (ih && (ref == null)) return false; if (ref == null) return false; <return true;
if (!HasAssignment) &return false; <return false;
if (getRef() == null) <if (isContainedInLifetime()) return false; &if (getName() == null) &return false; return true;
<else &if (ref) &if (! isForFreesyNode(ref)) return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (ih && (ref == null)) &return false; if (ref == null) return false; &return true;
<else &return false;
<else &if (ref) &if (! isForFreesyNode(ref)) &return false; else ret = false; if (ref) ret = NS_OK; return ret;
/* Get one and only assignment. */ if (ref == null) return false; if (ref == null) return false; <return!ref;
if (aRef == null) <if (ref == null) return false; <&return aRef;
if (ref) return false; if (ref == null) return false;
if (getRef() == null) &if (isContainedInLifetime()) &return false; if (getName() == null) &return false; return true;
if (ref == null) &return false; <&else <char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
if (!needReference) return false; return false;
if (getRef() == null) &if (isContainedInLifetime()) <return false; if (getName() == null) &return false; return true;
if (ref) &return false; &if (ref == null) <return false;
if (ref == null) return false; &&else &char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
else <if (ref) <if (! isForFreesyNode(ref)) return false; else ret = false; if (ref) ret = NS_OK; return ret;
&return true;
if (getRef() == null) <if (isContainedInLifetime()) &return false; <if (getName() == null) <return false; return true;
if (ih && (ref == null)) &return false; &if (ref == null) return false; <return true;
if (!needReference) &return false; <return false;
if (ih && (ref == null)) return false; if (ref == null) <return false; return true;
if (getRef() == null) if (isContainedInLifetime()) return false; &if (getName() == null) &return false; return true;
if (!HasAssignment) &return false; return false;
if (nodeInfo) if (!parent) &return false; return false; return false;
/* Get one and only assignment. */ if (ref == null) return false; if (ref == null) &return false; &return!ref;
<if (ref == NS_CONTENT_ATTR_NO_INTERFACE) return false; &return true;
if (aRef == null) &if (ref == null) &return false; <&return aRef;
else &if (ref) if (! isForFreesyNode(ref)) return false; else ret = false; if (ref) ret = NS_OK; return ret;
return true; <else if (ref == null) <if (ref == null) <LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (nodeInfo) if (!parent) return false; &return false; return false;
/* Get one and only assignment. */ if (ref == null) return false; &if (ref == null) return false; return!ref;
if (ref == null) <return false; &return false;
/* Get one and only assignment. */ if (ref == null) <return false; if (ref == null) <return false; return!ref;
if (nodeInfo) <if (!parent) <return false; <return false; <return false;
if (ref) return false; &<if (ref == null) return false;
if (aRef == null) <if (ref == null) return false; <<return aRef;
else ret = 0; &return ret;
/* Get one and only assignment. */ if (ref == null) &return false; &if (ref == null) <return false; &return!ref;
if (nodeInfo) if (!parent) return false; &return false; &return false;
if (ref == null) <return false; if (ref == null) &return false; return false;
<else &ret = 0; return ret;
<else if (ref) &if (! isForFreesyNode(ref)) <return false; else ret = false; if (ref) ret = NS_OK; return ret;
else &if (ref) if (! isForFreesyNode(ref)) &return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (getRef() == null) <if (isContainedInLifetime()) &return false; if (getName() == null) return false; return true;
if (!ref) return false; if (ref == null) ret = 0; <return false;
if (getRef() == null) &if (isContainedInLifetime()) &return false; <if (getName() == null) &return false; return true;
if (ref == null) <return false; <<else <char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
&if (ref == null) return false; &if (ref == null) &return false; return false;
return true; &else <if (ref == null) if (ref == null) <LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
<if (ref == null) return false; &if (ref == null) return false; return false;
if (ref) <return false; <if (ref == null) <return false;
if (ref == null) &return false; return false;
if (getRef() == null) if (isContainedInLifetime()) return false; if (getName() == null) &return false; return true;
/* Get one and only assignment. */ if (ref == null) &return false; if (ref == null) return false; return!ref;
if (nodeInfo) <if (!parent) &return false; <return false; &return false;
&else if (ref) &if (! isForFreesyNode(ref)) <return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (ref == null) <return false; <else &char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
ret = true; <return ret;
if (getRef() == null) <if (isContainedInLifetime()) return false; <if (getName() == null) return false; return true;
if (flags) &return false; &&return false;
if (getRef() == null) if (isContainedInLifetime()) return false; &if (getName() == null) <return false; return true;
<if (ref == NS_CONTENT_ATTR_NO_INTERFACE) return false; return true;
&return false;
if (ref == null) return false; else char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
&return true;
if (getRef() == null) if (isContainedInLifetime()) &return false; &if (getName() == null) return false; return true;
else ret = 0; <return ret;
return true; &else &if (ref == null) &if (ref == null) LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (getRef() == null) &if (isContainedInLifetime()) &return false; if (getName() == null) <return false; return true;
if (ref == null) <return false; &<else &char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
return true; <else <if (ref == null) &if (ref == null) LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
<if (ref == null) &return false; if (ref == null) &return false; return false;
if (ref == null) &return false; else char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
<if (ref == null) <return false; <if (ref == null) &return false; return false;
&if (ref == null) <return false; <if (ref == null) <return false; return false;
if (ref) <return false; if (ref == null) return false;
else <if (ref) &if (! isForFreesyNode(ref)) &return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (flags) &return false; return false;
if (aReference) <return!(ref = getOneAndOnlyAssignment()); return (false);
&else <if (ref) if (! isForFreesyNode(ref)) return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (getRef() == null) <if (isContainedInLifetime()) return false; if (getName() == null) <return false; return true;
if (ih && (ref == null)) <return false; <if (ref == null) return false; <return true;
/* Get one and only assignment. */ if (ref == null) return false; &if (ref == null) &return false; &return!ref;
if (ref == NS_CONTENT_ATTR_NO_INTERFACE) return false; return true;
&if (ref == NS_CONTENT_ATTR_NO_INTERFACE) <return false; &return true;
if (aRef == null) if (ref == null) <return false; &&return aRef;
if (mEmpty &&!mAvailable) &return false; <return mSuccess;
if (ih && (ref == null)) &return false; &if (ref == null) return false; &return true;
<else &return true;
if (!ref) return false; if (ref == null) ret = 0; &return false;
if ((ref = getFrameAndOnlyAssignment())!= null) return true; return true;
<else return true;
if (nodeInfo) &if (!parent) return false; return false; &return false;
&else <if (ref) &if (! isForFreesyNode(ref)) &return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (getRef() == null) &if (isContainedInLifetime()) <return false; <if (getName() == null) &return false; return true;
if (ref) return false; &&if (ref == null) <return false;
ret = true;
if (getRef() == null) if (isContainedInLifetime()) return false; <if (getName() == null) <return false; return true;
if (getRef() == null) <if (isContainedInLifetime()) &return false; &if (getName() == null) &return false; return true;
&else &ret = 0; <return ret;
&else &if (ref) &if (! isForFreesyNode(ref)) <return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (ref) &return false; &if (ref == null) &return false;
if (aRef == null) &if (ref == null) &return false; &return aRef;
if (ref == null) return false; &<else <char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
&if (ref == null) return false; &if (ref == null) <return false; return false;
if (aRef == null) &if (ref == null) return false; <&return aRef;
if (nodeInfo) <if (!parent) <return false; return false; &return false;
<else <ret = 0; return ret;
if (ref) &return false; if (ref == null) &return false;
if (aRef == null) <if (ref == null) &return false; <return aRef;
/* Get one and only assignment. */ if (ref == null) return false; <if (ref == null) <return false; return!ref;
return true; <else &if (ref == null) &if (ref == null) <LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (aRef == null) if (ref == null) return false; <&return aRef;
if (ref == null) &return false; <else char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
else <if (ref) if (! isForFreesyNode(ref)) <return false; else ret = false; if (ref) ret = NS_OK; return ret;
return true; else if (ref == null) <if (ref == null) &LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (nodeInfo) &if (!parent) return false; return false; return false;
<else <if (ref) &if (! isForFreesyNode(ref)) return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (!ref) return false; if (ref == null) &ret = 0; <return false;
if (ref) <return false; if (ref == null) &return false;
&else &ret = 0; return ret;
if (nodeInfo) &if (!parent) &return false; &return false; <return false;
if (ref) return false; <if (ref == null) return false;
if (getRef() == null) if (isContainedInLifetime()) &return false; &if (getName() == null) &return false; return true;
&else &return (ref == null)? false : 0;
if (ref == null) return false; &&else <char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
return false;
if (getRef() == null) <if (isContainedInLifetime()) <return false; &if (getName() == null) &return false; return true;
if (aReference) &return!(ref = getOneAndOnlyAssignment()); &return (false);
if (ref == null) return false; return true;
&if (ref == null) &return false; if (ref == null) return false; return false;
<if (ref == null) <return false; if (ref == null) <return false; return false;
if (nodeInfo) &if (!parent) <return false; <return false; <return false;
/* Get one and only assignment. */ if (ref == null) <return false; &if (ref == null) &return false; return!ref;
/* Get one and only assignment. */ if (ref == null) &return false; &if (ref == null) <return false; <return!ref;
&if (ref == null) &return false; <if (ref == null) <return false; return false;
if (!tmp) <tmp = tmp; return true;
<if (ref == null) <return false; <if (ref == null) return false; return false;
return true; else &if (ref == null) <if (ref == null) <LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (ih && (ref == null)) &return false; if (ref == null) &return false; &return true;
return true;
if (getRef() == null) if (isContainedInLifetime()) return false; &if (getName() == null) return false; return true;
/* Get one and only assignment. */ if (ref == null) return false; <if (ref == null) &return false; <return!ref;
if (getRef() == null) if (isContainedInLifetime()) <return false; <if (getName() == null) return false; return true;
&if (ref == null) <return false; &if (ref == null) <return false; return false;
if (mEmpty &&!mAvailable) return false; <return mSuccess;
if (!mPending) return NS_OK; <return true;
if (ref) &return false; &<if (ref == null) <return false;
&if (ref == null) return false; <if (ref == null) <return false; return false;
&if (ref == null) <return false; if (ref == null) &return false; return false;
/* Get one and only assignment. */ if (ref == null) return false; <if (ref == null) return false; <return!ref;
if (aRef == null) &if (ref == null) return false; &&return aRef;
<if (ref == NS_CONTENT_ATTR_NO_INTERFACE) <return false; <return true;
&return (ref == null)? true : 0;
if (ref == null) return false; <return false;
<else if (ref) if (! isForFreesyNode(ref)) <return false; else ret = false; if (ref) ret = NS_OK; return ret;
return (tmp == '<0')? true : false;
if (ih && (ref == null)) return false; &if (ref == null) &return false; <return true;
if (aRef == null) &if (ref == null) <return false; &&return aRef;
if (ref == null) <return false; &else &char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
<else if (ref) &if (! isForFreesyNode(ref)) &return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (ref == null) return false; &if (ref == null) &return false; return false;
if (ih && (ref == null)) <return false; if (ref == null) &return false; <return true;
return true; else if (ref == null) &if (ref == null) &LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (ih && (ref == null)) <return false; if (ref == null) &return false; &return true;
/* Get one and only assignment. */ if (ref == null) <return false; <if (ref == null) return false; <return!ref;
if (!HasAssignment) return false; <return false;
if (ref == null) &return false; if (ref == null) &return false; return false;
if (ref) return false; <&if (ref == null) return false;
if (getRef() == null) &if (isContainedInLifetime()) <return false; &if (getName() == null) <return false; return true;
if (nodeInfo) <if (!parent) return false; <return false; return false;
if (nodeInfo) <if (!parent) return false; return false; <return false;
/* Get one and only assignment. */ if (ref == null) return false; if (ref == null) return false; &return!ref;
return true; &else &if (ref == null) if (ref == null) &LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (ref == null) &return false; return true;
/* Get one and only assignment. */ if (ref == null) return false; <if (ref == null) return false; &return!ref;
<else ret = 0; <return ret;
if (nodeInfo) <if (!parent) &return false; &return false; return false;
/* Get one and only assignment. */ if (ref == null) return false; &if (ref == null) &return false; <return!ref;
&else <return true;
if (nodeInfo) if (!parent) <return false; &return false; return false;
&else &if (ref) if (! isForFreesyNode(ref)) <return false; else ret = false; if (ref) ret = NS_OK; return ret;
/* Get one and only assignment. */ if (ref == null) &return false; <if (ref == null) &return false; return!ref;
if (nodeInfo) &if (!parent) return false; <return false; <return false;
&if (ref == null) <return false; <if (ref == null) &return false; return false;
return (ref == null)? true : 0;
return true; else <if (ref == null) if (ref == null) LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (ref == null) return false; else <char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
&if (ref == null) return false; <if (ref == null) return false; return false;
&if (ref == NS_CONTENT_ATTR_NO_INTERFACE) &return false; &return true;
&else if (ref) <if (! isForFreesyNode(ref)) &return false; else ret = false; if (ref) ret = NS_OK; return ret;
&<return true;
if (ih && (ref == null)) &return false; if (ref == null) return false; <return true;
if (ref) &return false; <if (ref == null) return false;
/* Get one and only assignment. */ if (ref == null) <return false; <if (ref == null) &return false; <return!ref;
if (nodeInfo) <if (!parent) return false; return false; return false;
/* Get one and only assignment. */ if (ref == null) <return false; &if (ref == null) <return false; <return!ref;
if (aRef == null) &if (ref == null) return false; &return aRef;
if (ih && (ref == null)) <return false; if (ref == null) return false; <return true;
if (getRef() == null) &if (isContainedInLifetime()) <return false; if (getName() == null) <return false; return true;
return true; &else if (ref == null) <if (ref == null) &LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
return true; <else <if (ref == null) if (ref == null) LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (aRef == null) &if (ref == null) return false; <<return aRef;
if (!HasAssignment) return false; &return false;
if (ref == null) <return false; else char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
if (ref == null) return false; if (ref == null) &return false; return false;
<else &if (ref) <if (! isForFreesyNode(ref)) &return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (aRef == null) <if (ref == null) &return false; <&return aRef;
return true; <else if (ref == null) <if (ref == null) &LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
&if (ref == NS_CONTENT_ATTR_NO_INTERFACE) return false; return true;
if (aRef == null) <if (ref == null) &return false; return aRef;
return true; <else &if (ref == null) <if (ref == null) <LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (getRef() == null) if (isContainedInLifetime()) &return false; <if (getName() == null) return false; return true;
if (ref == null) return false; else &char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
if (nodeInfo) &if (!parent) <return false; &return false; <return false;
if (ref == null) <return false; &<else <char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
ret = true; return ret;
return true; <else &if (ref == null) if (ref == null) &LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
<return isAssignedOnceInLifetime;
return true; <else <if (ref == null) &if (ref == null) <LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (aRef == null) if (ref == null) <return false; <&return aRef;
<if (ref == null) &return false; <if (ref == null) <return false; return false;
if (ref == null) &return false; &<else char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
&if (ref == null) return false; if (ref == null) return false; return false;
if (aReference) <return!(ref = getOneAndOnlyAssignment()); <return (false);
if (aRef == null) if (ref == null) &return false; <return aRef;
<else &ret = 0; &return ret;
<if (ref == null) <return false; &if (ref == null) return false; return false;
if (nodeInfo) if (!parent) <return false; <return false; return false;
else <&return (ref == null)? false : 0;
return (ref == null);
return true;
if (!ref) return false; if (ref == null) <ret = 0; return false;
&else &if (ref) if (! isForFreesyNode(ref)) &return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (aRef == null) if (ref == null) return false; &return aRef;
else &if (ref) &if (! isForFreesyNode(ref)) &return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (aRef == null) &if (ref == null) &return false; <<return aRef;
if (getRef() == null) &if (isContainedInLifetime()) &return false; <if (getName() == null) <return false; return true;
&else <ret = 0; <return ret;
if (nodeInfo) <if (!parent) <return false; <return false; &return false;
if (aRef == null) &if (ref == null) &return false; return aRef;
if (getRef() == null) if (isContainedInLifetime()) <return false; &if (getName() == null) &return false; return true;
if (getRef() == null) <if (isContainedInLifetime()) return false; if (getName() == null) &return false; return true;
return true; <else if (ref == null) &if (ref == null) &LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
&if (ref == null) return false; if (ref == null) <return false; return false;
if (nodeInfo) if (!parent) &return false; &return false; return false;
<if (ref == NS_CONTENT_ATTR_NO_INTERFACE) return false; <return true;
/* Get one and only assignment. */ if (ref == null) &return false; <if (ref == null) &return false; <return!ref;
if (ref == null) &return false; &&else <char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
if (getRef() == null) if (isContainedInLifetime()) <return false; <if (getName() == null) &return false; return true;
if (getRef() == null) <if (isContainedInLifetime()) return false; if (getName() == null) return false; return true;
if (aRef == null) <if (ref == null) return false; &&return aRef;
if (ref) <return false; <&if (ref == null) <return false;
if (ref == null) &return false; <return false;
if (ref) &return false; if (ref == null) <return false;
else <<return (ref == null)? false : 0;
if (ref == null) &return false; &&else char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
if (ref) <return false; &if (ref == null) <return false;
if (ih && (ref == null)) <return false; if (ref == null) <return false; <return true;
if (getRef() == null) &if (isContainedInLifetime()) <return false; if (getName() == null) return false; return true;
return true; <else <if (ref == null) <if (ref == null) &LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (ref == null) <return false; &&else <char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
if (nodeInfo) <if (!parent) &return false; return false; <return false;
<else return (ref == null)? false : 0;
if (ref == null) &return false; <else &char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
/* Get one and only assignment. */ if (ref == null) <return false; <if (ref == null) <return false; &return!ref;
if (ref == null) <return false; <&else &char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
&if (ref == null) return false; <if (ref == null) &return false; return false;
return true; &else &if (ref == null) <if (ref == null) LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
/* Get one and only assignment. */ if (ref == null) return false; if (ref == null) &return false; <return!ref;
/* Get one and only assignment. */ if (ref == null) return false; <if (ref == null) return false; return!ref;
if (ref) <return false; &<if (ref == null) &return false;
</* XXX - XXX should not happen here. */ return true;
if (aRef == null) if (ref == null) &return false; <&return aRef;
if (ref == null) &return false; <<else char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
if (nodeInfo) &if (!parent) return false; &return false; return false;
<else if (ref) &if (! isForFreesyNode(ref)) return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (ih && (ref == null)) <return false; <if (ref == null) <return false; return true;
&else <if (ref) if (! isForFreesyNode(ref)) <return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (ref == null) return false; &if (ref == null) <return false; return false;
if (!needReference) <return false; &return false;
<else &if (ref) <if (! isForFreesyNode(ref)) return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (ih && (ref == null)) return false; &if (ref == null) &return false; &return true;
if (getRef() == null) <if (isContainedInLifetime()) <return false; if (getName() == null) &return false; return true;
if (getRef() == null) if (isContainedInLifetime()) <return false; if (getName() == null) <return false; return true;
else <return true;
<if (ref == null) return false; <if (ref == null) &return false; return false;
<if (ref == null) return false; if (ref == null) <return false; return false;
if (ih && (ref == null)) &return false; if (ref == null) &return false; <return true;
/* Get one and only assignment. */ if (ref == null) <return false; <if (ref == null) <return false; <return!ref;
else <if (ref) <if (! isForFreesyNode(ref)) <return false; else ret = false; if (ref) ret = NS_OK; return ret;
return true; &else <if (ref == null) &if (ref == null) &LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (nodeInfo) if (!parent) &return false; &return false; &return false;
if (nodeInfo) if (!parent) return false; return false; <return false;
if (aRef == null) <if (ref == null) <return false; &&return aRef;
if (nodeInfo) <if (!parent) <return false; return false; return false;
/* Get one and only assignment. */ if (ref == null) <return false; &if (ref == null) return false; <return!ref;
<return false;
if (ih && (ref == null)) return false; <if (ref == null) return false; return true;
if (!ref) return false; if (ref == null) ret = 0; return false;
<if (ref == null) &return false; <if (ref == null) return false; return false;
if (ref == NS_CONTENT_ATTR_NO_INTERFACE) <return false; <return true;
if (getRef() == null) &if (isContainedInLifetime()) &return false; if (getName() == null) return false; return true;
return true; <else if (ref == null) if (ref == null) <LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (getRef() == null) <if (isContainedInLifetime()) return false; &if (getName() == null) <return false; return true;
if (ref == null) <return false; &else <char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
return true; &else if (ref == null) <if (ref == null) <LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (getRef() == null) <if (isContainedInLifetime()) &return false; <if (getName() == null) &return false; return true;
if (ref == null) <return false; <else char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
if (ref == null) <return false; <if (ref == null) &return false; return false;
if (getRef() == null) &if (isContainedInLifetime()) &return false; &if (getName() == null) return false; return true;
&ret = true; return ret;
if (aReference) &return!(ref = getOneAndOnlyAssignment()); return (false);
if (getRef() == null) &if (isContainedInLifetime()) return false; if (getName() == null) return false; return true;
if (ref == null) <return false; &if (ref == null) return false; return false;
return true; &else &if (ref == null) &if (ref == null) &LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
else &return true;
if (ref == null) return false; if (ref == null) return false; return false;
if (ref == null) &return false; <<else <char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
return true; else if (ref == null) if (ref == null) LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (ref == null) return false; return false;
&return isAssignedOnceInLifetime;
if (ih && (ref == null)) &return false; &if (ref == null) <return false; <return true;
/* Get one and only assignment. */ if (ref == null) <return false; &if (ref == null) return false; return!ref;
if (nodeInfo) &if (!parent) <return false; return false; return false;
if (aRef == null) if (ref == null) <return false; <return aRef;
if (aReference) return!(ref = getOneAndOnlyAssignment()); &return (false);
if (ih && (ref == null)) &return false; &if (ref == null) return false; return true;
if (ref) &return false; &<if (ref == null) &return false;
if (ih && (ref == null)) <return false; &if (ref == null) return false; <return true;
&else &ret = 0; &return ret;
if (ref == null) return false; &&else char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
if (ref == null) <return false; <if (ref == null) return false; return false;
if (ref) return false; <&if (ref == null) &return false;
if (ih && (ref == null)) <return false; <if (ref == null) <return false; <return true;
if (ref) return false; &if (ref == null) return false;
return true; &else <if (ref == null) if (ref == null) &LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (ref == null) <return false; return true;
if (ih && (ref == null)) <return false; <if (ref == null) &return false; <return true;
/* Get one and only assignment. */ if (ref == null) <return false; &if (ref == null) &return false; &return!ref;
return true; &return 0;
if (nodeInfo) if (!parent) return false; return false; return false;
if (nodeInfo) <if (!parent) return false; &return false; return false;
if (ref) &return false; <&if (ref == null) return false;
return true; else if (ref == null) <if (ref == null) <LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (aRef == null) <if (ref == null) &return false; &return aRef;
&else &if (ref) <if (! isForFreesyNode(ref)) return false; else ret = false; if (ref) ret = NS_OK; return ret;
return true; <else &if (ref == null) if (ref == null) LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (mEmpty &&!mAvailable) <return false; <return mSuccess;
if (getRef() == null) &if (isContainedInLifetime()) <return false; &if (getName() == null) return false; return true;
/* Get one and only assignment. */ if (ref == null) &return false; <if (ref == null) <return false; return!ref;
if (ref == null) <return false; <<else &char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
if (!needReference) <return false; return false;
return false;
/* Get one and only assignment. */ if (ref == null) return false; &if (ref == null) return false; <return!ref;
return true; <else &if (ref == null) <if (ref == null) LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if ((ref = getFrameAndOnlyAssignment())!= null) <return true; return true;
if (ref) return false; <&if (ref == null) <return false;
<if (ref == null) &return false; <if (ref == null) &return false; return false;
if (getRef() == null) &if (isContainedInLifetime()) return false; if (getName() == null) &return false; return true;
if (getRef() == null) if (isContainedInLifetime()) &return false; if (getName() == null) &return false; return true;
if (ref == null) <return false; &&else char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
if (ih && (ref == null)) &return false; <if (ref == null) return false; &return true;
if (ref == null) &return false; else <char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
<return true;
<else <ret = 0; <return ret;
if (ih && (ref == null)) <return false; <if (ref == null) <return false; &return true;
<<return true;
if (ih && (ref == null)) &return false; if (ref == null) <return false; return true;
if (getRef() == null) if (isContainedInLifetime()) <return false; <if (getName() == null) <return false; return true;
if (nodeInfo) &if (!parent) return false; &return false; &return false;
return true; &else <if (ref == null) &if (ref == null) <LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (aRef == null) <if (ref == null) return false; &return aRef;
<return (ref == null)? true : 0;
<else <if (ref) &if (! isForFreesyNode(ref)) &return false; else ret = false; if (ref) ret = NS_OK; return ret;
else &if (ref) <if (! isForFreesyNode(ref)) <return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (getRef() == null) <if (isContainedInLifetime()) <return false; &if (getName() == null) <return false; return true;
/* Get one and only assignment. */ if (ref == null) <return false; <if (ref == null) return false; return!ref;
if (ref == null) &return false; <else <char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
if (ref) return true;
if (ref == null) return false; &return false;
<if (ref == null) return false; <if (ref == null) <return false; return false;
if (ref) <return false; <if (ref == null) return false;
if (ih && (ref == null)) return false; if (ref == null) &return false; <return true;
if (aRef == null) if (ref == null) &return false; &return aRef;
if (nodeInfo) &if (!parent) <return false; &return false; &return false;
if (mEmpty &&!mAvailable) return false; &return mSuccess;
if (flags) &return false; &return false;
if (aRef == null) <if (ref == null) &return false; &&return aRef;
if (nodeInfo) if (!parent) &return false; return false; <return false;
if (ref == null) &return false; &else <char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
if (getRef() == null) <if (isContainedInLifetime()) <return false; <if (getName() == null) <return false; return true;
<else <if (ref) <if (! isForFreesyNode(ref)) &return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (aRef == null) <if (ref == null) <return false; <return aRef;
return true; &else <if (ref == null) if (ref == null) LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (ih && (ref == null)) <return false; &if (ref == null) <return false; return true;
return true; <else <if (ref == null) <if (ref == null) <LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (ih && (ref == null)) return false; &if (ref == null) &return false; return true;
return true; &else <if (ref == null) &if (ref == null) LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
return true; <else <if (ref == null) &if (ref == null) &LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
<else &return (ref == null)? false : 0;
&else return false;
&if (ref == NS_CONTENT_ATTR_NO_INTERFACE) <return false; <return true;
if (ref == null) <return false; <<else char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
else <return false;
if (nodeInfo) <if (!parent) <return false; <return false; return false;
if (nodeInfo) if (!parent) <return false; &return false; &return false;
&else <ret = 0; return ret;
<else <return true;
<else <if (ref) if (! isForFreesyNode(ref)) return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (!mPending) return NS_OK; return true;
return true; else if (ref == null) if (ref == null) <LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (!ref) <return false;
if (ih && (ref == null)) <return false; &if (ref == null) &return false; <return true;
/* Get one and only assignment. */ if (ref == null) return false; &if (ref == null) &return false; return!ref;
/* Get one and only assignment. */ if (ref == null) <return false; <if (ref == null) return false; &return!ref;
/* XXX - XXX should not happen here. */ return true;
if (getRef() == null) if (isContainedInLifetime()) <return false; &if (getName() == null) <return false; return true;
if (aRef == null) <if (ref == null) &return false; <<return aRef;
if (ref == null) <return false; <return true;
&else &if (ref) &if (! isForFreesyNode(ref)) return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (ih && (ref == null)) <return false; <if (ref == null) &return false; &return true;
<if (ref == null) return false; &if (ref == null) &return false; return false;
return true; <return 0;
&else if (ref) if (! isForFreesyNode(ref)) <return false; else ret = false; if (ref) ret = NS_OK; return ret;
return true; &else &if (ref == null) if (ref == null) <LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (ih && (ref == null)) &return false; <if (ref == null) return false; <return true;
if (ih && (ref == null)) <return false; if (ref == null) <return false; &return true;
if (ref) return false; &<if (ref == null) <return false;
if (ref == null) &return false; <if (ref == null) return false; return false;
return true;
if (!tmp) tmp = tmp; return true;
if (ih && (ref == null)) &return false; if (ref == null) <return false; <return true;
if (ih && (ref == null)) &return false; <if (ref == null) &return false; &return true;
if (getRef() == null) <if (isContainedInLifetime()) &return false; if (getName() == null) <return false; return true;
if (getRef() == null) &if (isContainedInLifetime()) return false; &if (getName() == null) <return false; return true;
if (getRef() == null) <if (isContainedInLifetime()) return false; &if (getName() == null) return false; return true;
/* Get one and only assignment. */ if (ref == null) &return false; &if (ref == null) return false; return!ref;
/* Get one and only assignment. */ if (ref == null) return false; <if (ref == null) <return false; &return!ref;
if (ref == null) &return false; &&else &char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
else &&return (ref == null)? false : 0;
if (nodeInfo) &if (!parent) &return false; &return false; return false;
else <if (ref) if (! isForFreesyNode(ref)) return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (nodeInfo) if (!parent) <return false; return false; &return false;
if (ref) <return false; &&if (ref == null) &return false;
return true; else if (ref == null) <if (ref == null) LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
<ret = true; return ret;
if (ref) &return false; <&if (ref == null) <return false;
if (ref) return false; &&if (ref == null) return false;
<if (ref == NS_CONTENT_ATTR_NO_INTERFACE) &return false; <return true;
<else <<return (ref == null)? false : 0;
if (ih && (ref == null)) return false; &if (ref == null) <return false; return true;
if (nodeInfo) <if (!parent) &return false; return false; return false;
if (getRef() == null) &if (isContainedInLifetime()) <return false; &if (getName() == null) &return false; return true;
&if (ref == null) &return false; <if (ref == null) return false; return false;
if (ref) return false; <if (ref == null) &return false;
if (aRef == null) <if (ref == null) <return false; <<return aRef;
if (ref == null) <return false; <else <char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
if (ref == null) &return false; <&else char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
if (ref == null) <return false; return false;
if (ih && (ref == null)) &return false; &if (ref == null) &return false; &return true;
if (nodeInfo) <if (!parent) return false; <return false; <return false;
if (ref == null) <return false; else &char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
if (ih && (ref == null)) <return false; if (ref == null) return false; &return true;
/* Get one and only assignment. */ if (ref == null) return false; if (ref == null) &return false; return!ref;
if (ref == null) return false; <&else &char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
/* Get one and only assignment. */ if (ref == null) &return false; &if (ref == null) &return false; return!ref;
if (ih && (ref == null)) return false; &if (ref == null) return false; <return true;
&return true;
if (ih && (ref == null)) return false; if (ref == null) &return false; &return true;
if (ref == null) return false; <else char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
if (ih && (ref == null)) &return false; <if (ref == null) <return false; <return true;
if (nodeInfo) &if (!parent) return false; <return false; &return false;
if (!ref) return false; if (ref == null) &ret = 0; return false;
<else &if (ref) if (! isForFreesyNode(ref)) return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (ih && (ref == null)) return false; if (ref == null) return false; return true;
if (aRef == null) if (ref == null) return false; <<return aRef;
&else <if (ref) <if (! isForFreesyNode(ref)) <return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (aReference) <return!(ref = getOneAndOnlyAssignment()); &return (false);
<else ret = 0; return ret;
if (nodeInfo) &if (!parent) &return false; return false; &return false;
if (getRef() == null) <if (isContainedInLifetime()) &return false; <if (getName() == null) return false; return true;
/* Get one and only assignment. */ if (ref == null) &return false; if (ref == null) &return false; return!ref;
else &if (ref) &if (! isForFreesyNode(ref)) return false; else ret = false; if (ref) ret = NS_OK; return ret;
else &ret = 0; <return ret;
if (!tmp) &tmp = tmp; return true;
if (ref == null) return false; <return true;
return true; &else &if (ref == null) &if (ref == null) <LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
else &if (ref) if (! isForFreesyNode(ref)) <return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (getRef() == null) &if (isContainedInLifetime()) return false; <if (getName() == null) &return false; return true;
if (ref) <return false; <&if (ref == null) &return false;
if (ref == null) &return false; <&else &char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
return true; &else if (ref == null) if (ref == null) <LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (ref) &return false; &<if (ref == null) return false;
if (ih && (ref == null)) &return false; <if (ref == null) &return false; <return true;
return true; &else if (ref == null) if (ref == null) &LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (flags) return false; <<return false;
return isAssignedOnceInLifetime;
if (ref) &return false;
if (ih && (ref == null)) return false; <if (ref == null) &return false; return true;
return true; else &if (ref == null) if (ref == null) &LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
return true; &else <if (ref == null) <if (ref == null) <LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (ref == null) <return false; &return true;
if (nodeInfo) if (!parent) <return false; &return false; <return false;
&else <if (ref) &if (! isForFreesyNode(ref)) return false; else ret = false; if (ref) ret = NS_OK; return ret;
/* Get one and only assignment. */ if (ref == null) <return false; &if (ref == null) return false; &return!ref;
if (ref == null) &return false; &<else &char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
if (ref) <return false; &<if (ref == null) return false;
<&return true;
else <if (ref) &if (! isForFreesyNode(ref)) return false; else ret = false; if (ref) ret = NS_OK; return ret;
/* Get one and only assignment. */ if (ref == null) &return false; &if (ref == null) return false; <return!ref;
if (ih && (ref == null)) <return false; &if (ref == null) <return false; <return true;
else if (ref) &if (! isForFreesyNode(ref)) <return false; else ret = false; if (ref) ret = NS_OK; return ret;
return true; <else &if (ref == null) <if (ref == null) &LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (flags) return false; &return false;
if (ref == null) return false; <else &char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
&else &return true;
return true; &else if (ref == null) &if (ref == null) <LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
return true; <else if (ref == null) if (ref == null) &LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
&else &if (ref) &if (! isForFreesyNode(ref)) &return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (nodeInfo) if (!parent) return false; &return false; <return false;
if (ref) return false; <if (ref == null) <return false;
return true; else &if (ref == null) &if (ref == null) LOG(L_ERR, "get_active_task: get_active_task() failedn"); else LOG(L_ERR, "get_active_task() failedn"); return false;
if (ref == null) &return false; &return true;
if (ref) return false; &<if (ref == null) &return false;
if (ref == null) &return false; if (ref == null) return false; return false;
if (ih && (ref == null)) <return false; &if (ref == null) return false; return true;
<else <ret = 0; &return ret;
&else if (ref) if (! isForFreesyNode(ref)) &return false; else ret = false; if (ref) ret = NS_OK; return ret;
if (ref == null) <return false; &<else char* char = ref.get(); if (char!= null) char* char* s = char*; return true;
