golden:
escapeJavaStyleString(out, str, true);
inference:
escapeJavaStyleString(out, str, true);
escapeJavaStyleString(out, str);
escapeJavaStyleString(out, str, 0);
escapeJavaStyleString(out, str, false);
return escapeJavaStyleString(out, str, true);
escapeJavaStyleString(out, str, true, 0);
escapeJavaStyleString(in, str, true);
escapeJavaStyleString(out, str.get(), true);
EscapeJavaStyleString(out, str, true);
escapeJavaScript(out, str, true);
escapeJavaStyleString(str, true);
escapeJavaStyleString(out, str, true, true);
escapeJavaStyleString(string, true);
escapeJavaStyleString(out, str, true, true);
escapeJavaStyleString(out, &str, true);
escapeJavaStyleString(out, s, true);
escapeJavaStyleString(out, str, 1);
escapeJavaStyleString(out, str, false);
escapeJavaStyleString(out, str, -1);
escapeJavaStyleString(out, sizeof(out), str, true);
escapeJavaStyleString(out, text, true);
escapeJavaStyleString(out, newStr, true);
escapeJavaStyleString(out, str, false);
escapeJavaStyleString(out, str, true);
escapeJavaStyleString(out, value, true);
escapeJavaStyleString(out, str, '0');
escapeJavaStyleString(out, "", true);
escapeJavaStyleString(out, str, true);
escapeJavaScriptString(out, str, true);
escapeJavaStyleString(out, *str, true);
escapeJavaStyleString(out, type, true);
escapeJavaStyleString(out, str, null);
escapeJavaStyleString(out, string, true, 0);
escapeJavaStyleString(&out, str, true);
escapeJavaStyleString(out, "");
escapeJavaStyleString(out, str, null);
escapeJavaStyleString(out, aStr, true);
escapeJavaStyleString(out, buf, true);
escapeJavaStyleString(out, str, "");
escapeJavaStyleString(out, unicode, true);
escapeJavaStyleString(out, unicodeStr, true);
escapeJavaStyleString(out, code, true);
escapeJavaStyleString(out, string);
escapeJavaStyleString(out);
escapeJavaStyleString(out, str, &str);
escapeJavaStyleString(out, data, true);
escapeJavaStyleString(out, len, true);
escapeJavaStyleString(out, string, true);
escapeJavaStyleString (out, str, true);
escapeJavaStyleString(out, key, true);
escapeJavaStyleString(out, str)
escapeJavaStyleString(out, string, true, true);
escapeJavaStyleString(out, string, true);
escapeJavaStyleString(out, String(str), true);
escapeJavaStyleString(out, name, true);
escapeJavaStyleString(out, str, str.get());
escapeJavaStyleString(out, str, true);
escapeJavaStyleString(out, str, type);
escapeJavaStyleString(out, true);
escapedJavaStyleString(out, str, true);
escapeJavaStyleString((int)out, str, true);
escapeJavaStyleString(out.get(), str, true);
escapeJavaStyleString(out, str, val);
escapeJavaScript(out, str);
escapeJavaStyleString((void *)out, str, true);
escapeJavaStyleString(out, str, EINVAL);
escapeJavaStyleString(out, str, aStr);
escapeJSStyleString(out, str, true);
escapeJavaStyleString(out, charset, true);
escapeJavaStyleString(out, str, 0, 0);
escapeJavaStyleString(out, line, true);
escapeJavaStyleString(out, str, encoding);
escapeJavaStyleString(out, val, true);
escapeJavaStyleString(out, str, &true);
escapeJavaStyleUnicode(out, str, true);
escapeJavaStyleString(out, string, 0);
escapeJavaStyleString(out, out, str, true);
(void) escapeJavaStyleString(out, str, true);
escapeJavaStyleString(out, str, "", true);
escapeJavaStyleString(out, result, true);
escapeJavaStyleString(out, inStr, true);
escapeJavaStyleString(out, i, true);
escapeJavaStyleString(out, str, ENXIO);
escapeJavaStyleString(out, str, rv);
escapeJavaStyleString(out, str, ENOMEM);
escapeJavaStyleString(out, str, true, 0);
escapeJavaStyleString(out, outStr, true);
e escapeJavaStyleString(out, str, true);
escapeJavaStyleString((void*)out, str, true);
escapeJavaStyleString(out, style, true);
escapeJavaStyleString(out, src, true);
escapeJavaStyleString(out, str, false);
escapeJavaStyleString((void **)out, str, true);
escapeJavaStyleString(out, st, true);
escapeJavaStyleString(out, str, value);
escapeJavaStyleString(out, nu, true);
escapeJavaStyleString(out, unicodeString, true);
escapeJavaStyleString((char *)out, str, true);
escapeJavaStyleString(out, path, true);
escapeJavaStyleString(out, str, true, true);
escapeJavaStyleString(out, rawStr, true);
escapeJavaStyleString( out, str, true );
escapeJavaStyleString(out, str, unicode);
escapeJavaStyleString(out, char, true);
escape(out, str, true);
escapeJavaStyleString(out, str1, true);
escapeJavaStyleString();
escapeJavaStyleString(out, this, str, true);
escapeJavaStyleString(out, null, true);
escapeJavaStyleString(out, verbose, true);
escapeJavaStyleString(out, str, i, true);
escapeJavaStyleString(out, str, len);
escapeJavaStyleString(out, str.Length(), true);
char* escapeJavaStyleString(out, str, true);
escapeJavaStyleString(out, (char *) str, true);
escapeJavaStyleString(text, str, true);
escapeJavaStyleString(out, '0', true);
escapeJavaStyleString(out,str,true);
escapeJavaStyleString(out, "%s", str, true);
escapeJavaStyleString(out, literal, true);
escapeJavaScriptStyleString(out, str, true);
escapeJavaStyleString(out, str, true, null);
escapeJavaStyleString(out, str, v);
escapeJavaStyleString(out, str, "UTF-8");
escapeJavaStyleString(out, str, u);
escapeJavaStyleString(out, str, charset);
escapeJavaStyleString(out, str, offset, true);
escapeJavaStyleString(out, true, str);
escapeJavaStyleString(out, source, true);
escapeJavaStyleString(out, str, str.Length());
escapeJavaStyleString(out, str, s);
escapeJavaStyleString(out, str, null, true);
escapeJavaStyleString(out, str, str);
escapeJavaStyleString(out, str, (int)true);
escapeJavaStyleString(unicode(out), str, true);
escapeJavaStyleString(out, str, false, true);
escapeJavaStyleString(out, null, true);
escapeJavaStyleString(out, str, l);
escapeJavaStyleString(out, str, JS_TRUE);
escapeJavaStyleString(out, str, aValue);
escapeJavaStyleString(out, str, 1, 0);

escapeJavaStyleString(out, (int) str, true);
escapeJavaStyleString(out, string, false);
escapeJavaStyleString(out, str, null, 0);
escapeJavaStyleString(out, true, true);
escapeJavaStyleString(out, str, c);
escapeJavaStyleString(out, str, true, -1);
escapeJavaStyleString(out, str, flags);
escapeJavaStyleString(out, str, &result);
escapeJavaStyleString(out, str, (int) true);
escapeJavaStyleString(out, str, aStyle);
escapeJavaStyleString(out, str, aString);
escapeJavaStyleString(out, str, dummy);
escapeJavaStyleString(out, str, true, false);
escapeJavaStyleString(out, str, aType);
escapeJavaStyleString(out, str, (void *) true);
escapeJavaStyleString("");
escapeJavaStyleString(out, str, false, true);
escapeJavaStyleString(out, true, str, true);
escapeJavaStyleString(out, str, (char *) true);
escapeJavaStyleString(out, str, -1, -1);
escapeJavaStyleString(out, str, len, true);
escapeJavaStyleString(out, str, -1, true);
escapeJavaStyleString(out, &str);
escapeJavaStyleString(out, str, (void **) true);
escapeJavaStyleString(out, str, true, true);
escapeJavaStyleString(out, str, encoding, true);
escapeJavaStyleString(out, str, true, 1);
escapeJavaStyleString(in, str, true, 0);
string = escapeJavaStyleString(out, str, true);
escapeJavaStyleString(out, str, sizeof(out));
escapeJavaStyleString(out, str, false, 0);
escapeJavaStyleString(out, str, sizeof(out), true);
escapeString(out, str);
break;
escapeJavaStyleString(out, str, true, false);
escapeJavaStyleString(out, str, JS_FALSE);
escapeJavaStyleString(out, str, true, p);
escape(out, str);
return escapeJavaStyleString(out, str, true, 0);
free(out, str);
escapeJavaStyleString(out, str, true, rv);
escapeJavaStyleString(out, str, 0xff);
escapeJavaStyleString(out, string, true, true);
escapeJavaStyleString(out, str, (void *)true);
rv = escapeJavaStyleString(out, str, true);
escapeJavaStyleString(out, str, (char *)true);
escapeJavaStyleString(out, str, _(""));
escapeJavaStyleString(out, str, true, encoding);
escapeJavaStyleString(out, str, _(""););
escapedJavaStyleString(out, str, true, 0);
escapeJavaStyleString(out, str, charset, true);
escapeJavaStyleString(out, str, (void **)true);
escapeJavaStyleString(out, str, (u_long)0);
escapeJavaStyleString(out, str,!charset);
escapeJavaStyleString(out, str, true, false);
escapeJavaStyleString(out, str, isSTATIC, true);
escapeJavaStyleString(out, str, true, false);
escapeJavaStyleString(out, str, true, true);
escapeJavaStyleString(out, os, true);
escapeJavaStyleString(out, str, true, &str);
escapeJavaStyleString(out, str, u_char, true);
escapeJavaStyleString(out, str, null, null);
escapeJavaStyleString(out, str, fstr_t);
escapeJavaStyleString(out, str, &isDefault, true);
escapeJavaStyleString(out, str, "a");
escapeJavaStyleString(out, str, "")
escapeJavaStyleString(out, nsCRT::strlen(nsCRT::strlen(str), 0));
escapeJavaStyleString(out, str, true, 0);
escapeJavaStyleString(out, (unsigned char *) str, true);
escapeJavaStyleString(out, str, IOException);
escapeJavaStyleString(out, (void *) str, true);
escapeJavaStyleString(out, pStr, true);
escapeJavaStyleString(out, str, i, j);
escapeJavaStyleString(out, str, false, true);
escapeJavaStyleString(out, str, isText, isLossy, isFileType, isRealText);
escapeJavaStyleString(out, str, true, null);
escapeJavaStyleString(out, str,!strdup(str));
escapeJavaStyleString(out, str, f);
escapeJavaStyleString(out, str, char *, '0');
escapeJavaStyleString(out, str, true, &mScript);
escapeJavaStyleString(out, str, "", -1);
escapeJavaStyleString(out, str, false, 0);
escapeJavaStyleString(out, std::str, true);
escapeJavaStyleString(out, str, &type, true);
escapeJavaStyleString(out, str,!(u_long)&mStyle);
escapeJavaStyleString(out, str, true, &str);
escapeJavaStyleString(out, str, id, true);
escapeJavaStyleString(out, nsDependentCString(str), true);
escapeJavaStyleString(out, tb, true);
escapeJavaStyleString(out, str, _escape_style_unicode(str));
escapeJavaStyleString(out, str, isCharset);
escapeJavaStyleString(out, u, true);
escapeJavaStyleString(out, str, (unsigned char *) true);
escapeJavaStyleString(out, (char *)str, true);
escapeJavaStyleString(out, str, "text", true);
escapeJavaStyleString(out, str, fn.dv_xname);
escapeJavaStyleString(out, str, "", 0);
escapeJavaStyleString(out, str, true, aKey);
escapeJavaStyleString(out, (const char*)str, true);
escapeJavaStyleString(out, str, aUnicode, true);
escapeJavaStyleString(out, str, "utf-8");
escapeJavaStyleString(out, (int)str, true);
escapeJavaStyleString(out, str, cstrlen(cstr));
escapeJavaStyleString(out, str, cstrlen(cstrlen)-1, cstrlen(cstrlen)-1, cstrlen(cstrlen)-1);
escapeJavaStyleString(out, str, uint32_t);
escapeJavaStyleString(out, str, isConstant);
escapeJavaStyleString(out, str, (unsigned char*) "0");
escapeJavaStyleString(out, str, i;
escapeJavaStyleString(out, str, aName);
escapeJavaStyleString(out, str, (unsigned long)true);
escapeJavaStyleString(out, str, charset, true);
escapeJavaStyleString(out, (u_char*)str, true);
escapeJavaStyleString(out, str, encodingType);
escapeJavaStyleString(out, str, IOException.T_EXCEPTION_FILENAME);
escapeJavaStyleString(out, fname, true);
escapeJavaStyleString(out, str, -1, true);
escapeJavaStyleString(out, str, (caddr_t)false);
escapeJavaStyleString(out, (void**) str, true);
escapeJavaStyleString(out, str, strlen(strlen(str)-1));
escapeJavaStyleString(out, str, "%d", true);
escapeJavaStyleString(out, str, strlen(strlen(str)));
escapeJavaStyleString(out, str, nsCRT::strlen(nsCRT::strlen(s)));
escapeJavaStyleString(out, (intptr_t)strlen(str), true);
escapeJavaStyleString(out, str, aEmptyString);
escapeJavaStyleString(out, (uintptr_t)str, true);
escapeJavaStyleString(out, str, (char*) true);
escapeJavaStyleString(out, str, ep);
escapeJavaStyleString(out, str, "ISO-8859-1");
escapeJavaStyleString(out, str, &fh);
escapeJavaStyleString(out, str, aStyle, aStyle);
escapeJavaStyleString(out, str, (unsigned char *)true);
escapeJavaStyleString(out, str, (unsigned long)-1);
escapeJavaStyleString(out, str, 0);
escapeJavaStyleString(out, str, (unsigned char*) "<0");
escapeJavaStyleString(out, str, char *, '0');
escapeJavaStyleString(out, str, (unsigned char*) "&0");
escapeJavaStyleString(out, '0', true);
escapeJavaStyleString(out, str, '<0');
escapeJavaStyleString(out, str, (unsigned char*) "0");
escapeJavaStyleString(out, '&0', true);
escapeJavaStyleString(out, '<0', true);
escapeJavaStyleString(out, str, '0');
escapeJavaStyleString(out, str);
escapeJavaStyleString(out, str, true);
&escapeJavaStyleString(out, str, true);
<escapeJavaStyleString(out, str, true);
escapeJavaStyleString(out, str, '&0');
escapeJavaStyleString(out, str, char *, '<0');
escapeJavaStyleString(out, str, char *, '&0');
