return mayBeStringHelper(n);
return AllResultsMatch(n, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_PREDITION);
return allResultsMatch(n, n, MAY_BE_STRING_PREDICATE);
return mayBeStringHelper(n, MAY_BE_STRING_PREDICATE);
return (allResultsMatch(n, MAY_BE_STRING_PREDICATE));
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, 0);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, n);
return allResultsMatch(n, &mayBeString);
return allResultsMatch(n, mayBeStringHelper(n));
return allResultsMatch(n, n);
return allResultsMatches(n, MAY_BE_STRING_PREDICATE);
return allResultsMatch(&n, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, recurse);
return allResultsMatch(n, &mayBeStringHelper);
return allResultsMatch(n, MAY_BE_STRING_NAME);
return result;
return allResultsMatch(n, mayBeStringHelper);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, null);
return newResultsMatch(n, MAY_BE_STRING_PREDICATE);
return mResultsMatch(n, MAY_BE_STRING_PREDICATE);
return n;
return recurse;
return allResultsMatch(n, false);
return allResultsMatch(n, &mayBeStringPREDICATE);
return resultResultsMatch(n, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, &May_BE_STRING_PREDICATE);
return (AllResultsMatch(n, MAY_BE_STRING_PREDICATE));
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, 1);
return allResultsMatch(n, &mayBeString(n));
return NS_OK;
return allResultsMatch(n, MAY_BE_STRING_CONTRACTID);
return allResultsMatch(m, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_NONE);
return allResultsMatch(n.get(), MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_END_STRING_PREDICATE);
return allResultsMatch(n, rv);
return allResultsMatch(n, true);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_ARG);
return allResultsMatch(n, MAY_STRING_PREDICATE);
return mayBeStringHelper(n, recurse);
return allResultsMatch(n, 0);
return allResultsMatch(n, &mayBeStringHelper(n));
return allResultsMatch(n, MAY_BE_STRING_REFERENCE);
return allResultsMatch(n, MAY_NO_STRING_PREDICATE);
return allResultsMatch (n, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, this);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_STRING);
return allResultsMatch( n, MAY_BE_STRING_PREDICATE );
return allResultsMatch(aResult, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, aResult);
return getAllResultsMatch(n, MAY_BE_STRING_PREDICATE);
return rv;
return allResultsMatch(n, &may_be_STRING_PREDICATE);
return allResultsMatch(n, MAYBE_STRING_PREDICATE);
return allResultsMatch(n, const MAY_BE_STRING_PREDICATE);
return *allResultsMatch(n, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_IS_STRING_PREDICATE);
return allResultsMatch(r, MAY_BE_STRING_PREDICATE);
return allResultsMatch(recurse, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_NAME);
return allResultsMatch(n, null, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_GET_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_POINTER);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_NONE);
return allResultsMatch(n, &may_be_String_PREDICATE);
return mayBeStringHelper(n, mayBeStringPREDICATE);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_ANY);
return allResultsMatch(n, MAY_BE_STRING_SUCCESS);
return MAY_BE_STRING_PREDICATE;
return resultMatch(n, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, -1);
return mayBeStringHelper(n, n);
return allResultsMatch(n, MAY_TEXT_PREDICATE);
return allResultsMatch();
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_STR);
return allResultsMatch(n, &mayBeString());
return allResultsMatch(n, MAY_BE_STRING_DECIMAL);
return checkResultsMatch(n, MAY_BE_STRING_PREDICATE);
return allResultsMatch((n)n, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, mayBeString);
return allResultsMatch(n, this, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_MATCH);
return allResultsMatch(n, MAX_STRING_PREDICATE);
result = allResultsMatch(n, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_DEF_STRING_PREDICATE);
return allResultsMatch(n, MAY_REFERENCE_PREDICATE);
return listResultsMatch(n, MAY_BE_STRING_PREDICATE);
return anyResultsMatch(n, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n,, MAY_BE_STRING_PREDICATE);
return &allResultsMatch(n, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, m);
return allResultsMatch(*n, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_ERR);
return allResultsMatch(i, MAY_BE_STRING_PREDICATE);
return result = allResultsMatch(n, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_PRECONDITION);
return allResultsMatch(n, MAY_BE_ALL_STRING_PREDICATE);
return allResultsMatch(np, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_ADDRESS);
return allResultsMatch(n, MAY_LEAVE_STRING_PREDICATE);
return allResultsMatch(n, MUST_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_ATTR);
return allResultsMatched(n, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_NO_STRING_PREDICATE);
return allResultsMatch(tmp, MAY_BE_STRING_PREDICATE);
return aResultsMatch(n, MAY_BE_STRING_PREDICATE);
return allResultsMatch((n, MAY_BE_STRING_PREDICATE));
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_MASK);
return allResultsMatch(n, MAY_SET_STRING_PREDICATE);
return allResultsMatch(n, p, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_ADDREF);
return allResultsMatch(n, MAY_USE_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_ARGS);
return allResultsMatch(n, "", MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, n.get());
return allResultsMatch(n, MAY_BE_STRING_VALUE);
return this;
return mayBeStringHelper(n, may_be_String_PREDICATE);
return MATCH_MATCH(n, MAY_BE_STRING_PREDICATE);
return mayBeStringHelper(n, may_be_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_ENTRY);
return allResultsMatch(n, MAY_LEAK_STRING_PREDICATE);
return allResultsMatch(n, mayBeString(n));
return mayBeStringHelper(n, &recurse);
return findResultsMatch(n, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_COMPLETE_PREDICATE);
return allResultsMatch(n, m, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_PREDIFY);
return allResultsMatch(n, MAY_BE_STRING_PLAIN);
return allResultsMatch(n, MAY_BE_StrING_PREDICATE);
return allResultsMatch(n, ALL_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_NOTOK);
return resultsMatch(n, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, &mayBeString_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_ALL);
return allResultsMatch(n, null);
return allResultsMatch(n, MAY_BE_STRING_PREFIX);
return matchResultsMatch(n, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_NODE);
return mayBeStringMatch(n, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_CSTRING_PREDICATE);
return allResultsMatch(n, NS_BE_STRING_PREDICATE);
return allResultsMatch(n, n.may_be_STRING_PREDICATE);
return isResultsMatch(n, MAY_BE_STRING_PREDICATE);
rv = allResultsMatch(n, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_OPTION);
return allResultsMatch(n, MAY_BE_CONTENT_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_VALID);
return allResultsMatch(n, MAY_LEAK_PREDICATE);
return allResultsMatch(n, M_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_MATCH);
return allResultsMatch(n, aResults);
return allResultsMatch(n, aMatch);
return allResultsMatch(n, false);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, false);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_ALL);
return allResultsMatch(n, MAY_BE_STRING_COMPLETE);
return allResultsMatch(n, mayBeString());
return allResultsMatch(n, 1);
return allResultsMatch(n, MAY_BE_String_PREDICATE);
return allResultsMatch(n,  MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_PRIVATE);
#endif return allResultsMatch(n, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_INDEX);
return allResultsMatch(n, mayBeStringPREDICATE);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, true);
return allResultsMatch(n, MAY_BE_STRING_ERROR);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, p);
return allResultsMatch(n, MAY_BE_STRING_VAR);
return allResultsMatch(n, "");
return allResultsMatch( n, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, true);
return allResultsMatch(n, p);
return allResultsMatch(n, MAY_BE_STRING_CONTENT);
return match;
return return allResultsMatch(n, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_INDEX_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_ACTIVE);
return mayBeString(n);
return allResultsMatch(n, MAY_BE_STRING_EMPTY);
return allResultsMatch(n, MAY_BE_STRING_INTERFACE);
return allResultsMatch(n, MAY_BE_ALL);
return allResultsMatch(n, *mayBeString);
return allResultsMatch(n, MAY_BE_STRING_NO_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_NODE);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_AUTO);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_ERR);
return allResultsMatch(n, MAY_BE_STRING_OBSERVER);
return allResultsMatch(n, MAY_BE_STRING_ONLY);
return allResultsMatch(n, MAY_BE_STRING_DEAD);
return allResultsMatch(n, MAY_BE_STRING_ANY);
return allResultsMatch(n, MAY_BE_STRING_ORDER);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_INT);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_CLASS);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, (char *)m);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, &m);
return allResultsMatch(n, (u_long)May_BE_STRING_PREDICATE);
return allResultsMatch(n, mPool);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, false);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_ORDER);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, &recurse);
return mayBeStringHelper(n, mayBeStringString(n));
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, n.m_first);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE | MAY_BE_MULTI_VALUE);
return allResultsMatch(n, NS_REINTERPRET_CAST(const char*, MAY_BE_STRING_PREDICATE));
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, true);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, MAY_BE_STRING_PADDIC);
return allResultsMatch(n, (PRBool)may_be_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, n.id);
return allResultsMatch(n, (void **) MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE | MAY_BE_STRING_ONLY);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, MAY_BE_STRING_CONTRACTID);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, &lh);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_NULL);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, &obj);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_IS_FOREACHED);
return allResultsMatch(n, (PRInt32)may_be_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, recurse);
return allResultsMatch(n, PRInt32(MAX_BUF_CTOR));
return allResultsMatch(n, MAY_BE_STRING_PREDICATE | MAY_BE_STRING_ATTR);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, &n);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE | MAY_BE_BY_LONG);
return allResultsMatch(n, (void**) MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_FIRST);
return allResultsMatch(n, aMay_be_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, &obs);
return allResultsMatch(n, PRInt32(May_BE_STRING_PREDICATE));
return allResultsMatch(n, MAY_BE_STRING_PREDICATE | MAY_BE_STRING_EMPTY);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, n.mStringName);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_NEEDED);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, ((unsigned long) n));
return allResultsMatch(n, PRInt32(may_be_STRING_PREDICATE));
return allResultsMatch(n, MAY_BE_STRING_PREDICATE | MAY_BE_LINE_NO_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, &strlen(strlen(strlen(strlen(strlen(strlen(strlen(strlen(strlen(strlen(strlen(strlen(strlen(strlen(strlen(strlen(strlen(strlen(strlen(strlen)))))))))))!= 0; return allResultsMatch(strlen(strlen(strlen(strlen(strlen(strlen(strlen(strlen(strlen(strlen))))), MAY_BE_STRING_PREDICATE));
return allResultsMatch(n, MAY_BE_STRING_PREDICATE | MAY_BE_STRING_IS_STRING);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE | MAY_BE_STRING_PRECONDITION);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, ((void **) &aResults));
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, &allResultsMatch);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_NORMAL);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, &lnk);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, n.recurse);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, n.mStrings);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_IN_PROF);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_DEFAULT);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, &rv);
return allResultsMatch(n, NS_CONTENT_ATTR_LEN);
return allResultsMatch(n, n.GetUnicode());
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_STATIC);
return allResultsMatch(n, (unsigned long)may_be_STRING_PREDICATE);
return allResultsMatch(n, n.eTag_msg);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_CAST(const nsString&, MAY_BE_STRING_PREDICATE_CAST(const nsString&, MAY_BE_STRING_PREDICATE)));
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_ARRAY);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_CSTRING);
return allResultsMatch(n, NS_PRECONDITION(n, "unknown type"));
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_REQUIRED);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, MAY_BE_ANY);
return allResultsMatch(n, ((PRInt32) MAY_BE_STRING_PREDICATE));
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_ALLOW_STRING_PREDICATE_OFF);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE | MAY_BE_STRING_REMOVE);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, &aResults);
return allResultsMatch(n, n.mStrings.mLength);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE | MAY_BE_String_PATTERN);
return allResultsMatch(n, n, n.m_msg);
return allResultsMatch(n, aCaseEventMatch);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, &sn);
return allResultsMatch(n, n.nsScope, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_OR_INIT, &n);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, &mResults);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE_PARSE);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE | MAY_BE_STRING_BASE);
return allResultsMatch(n, NS_DEF_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, &save);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE, &eventState);
return allResultsMatch(n, &MAY_BE_STRING_PREDICATE);
<return allResultsMatch(n, MAY_BE_STRING_PREDICATE);
&return allResultsMatch(n, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, <MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE);
return allResultsMatch(n, MAY_BE_STRING_PREDICATE);
