golden:
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container );
inference:
return recordDeepStubAnswer(returnTypeGenericMetadata, container);
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata));
return recordDeepStubAnswer(nsDeepStubMock(returnTypeGenericMetadata), container );
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container);
return recordDeepStubAnswer(nsDeepStubMock(returnTypeGenericMetadata), container);
return recordDeepStubAnswer( container );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container );
return recordDeepStubAnswer( newDeepStubMock(invocation.get()), container );
return recordDeepStubAnswer( newDeepStubMock(invocation), container );
return RecordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container );
return recordDeepStubAnswer( newDeepStubMock(container), container );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata));
return recordDeepStubAnswer( deepStubMock(returnTypeGenericMetadata), container );

return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata) );
return recordDeepStubAnswer(newDeepStubMock(invocation.get()), container );
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, container));
return recordDeepStubAnswer( container, newDeepStubMock(returnTypeGenericMetadata) );
return recordDeepStubAnswer(newDeepStubMock(invocation), container );
return recordDeepStubAnswer(newDeepStubMock(container), container);
return recordDeepStubAnswer( newDeepStubMock( returnTypeGenericMetadata ), container );
return recordDeepStubAnswer( recordDeepStubMock(returnTypeGenericMetadata), container );
return recordDeepStubAnswer( container, newDeepStubMock(returnTypeGenericMetadata));
return recordDeepStubAnswer(returnTypeGenericMetadata);
return newDeepStubMock(returnTypeGenericMetadata, container);
return recordDeepStubAnswer(newDeepStubMock(invocation), container);
return recordDeepStubAnswer( newDeepStubMock(invocation.getMock()), container );
return RecordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container);
return recordErrorAnswer( newDeepStubMock(returnTypeGenericMetadata), container );
return recordDeepStubAnswer(newDeepStubMock(container), container );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container);
return recordDeepStubAnswer( returnTypeGenericMetadata, container );
return recordDeepStubAnswer(null, container );
return recordDeepStubAnswer();
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container, container);
return recordDeepStubAnswer(newDeepStubMock(invocation.get()), container);
return recordDeepStubAnswer( newDeepStubMock(&returnTypeGenericMetadata), container );
return recordDeepStubAnswer( newDeepStubMock(ReturnTypeGenericMetadata), container );
return RecordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container );
return recordDeepStubAnswer(deepStubMock(returnTypeGenericMetadata), container);
return recordDeepStubAnswer( new DeepStubMock(returnTypeGenericMetadata), container );
return recordDeepStubAnswer(DeepStubMock(returnTypeGenericMetadata), container);
return recordDeepStubAnswer( newDeepStubMock( returnTypeGenericMetadata), container );
return recordDeepStubAnswer(returnTypeGenericMetadata, container );
return recordDeepStubAnswer(newDeepStubMock(&returnTypeGenericMetadata), container );
return recordDeepStubAnswer( newDeepStubMock(invocation.getType()), container );
return recordDeepStubAnswer( result, container );
return recordDeepStubAnswer( depStubMock(returnTypeGenericMetadata), container );
return recordDeepStubAnswer(newDeepStubMock(invocation, container));
return recordDeepStubAnswer(newDeepStubMock(&returnTypeGenericMetadata), container);
return recordDeepStubAnswer( newDeepStubMock(stubbedInvocationMatcher), container );
return recordDeepStubAnswer(newDeepStubMock(ReturnTypeGenericMetadata), container);
return recordDeepStubAnswer( newDeepStubMock(doc), container );
return recordDeepStubAnswer(newDeepStubMock(returnType));
return recordDeepStubAnswer(newDeepStubMock(invocation.getMock()), container );
return recordDeepStubAnswer(, container );
return deepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container );
return recordDeepStubAnswer( newDeepStubMock(returnType));
return recordDeepStubAnswer(ReturnTypeGenericMetadata, container );
return recordDeepStubAnswer(newDeepStubMock(invocation));
result = recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container );
return recordDeepStubAnswer(&newDeepStubMock(returnTypeGenericMetadata), container);
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container) ;
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata, container) );
return recordDeepStubAnswer(nsDeepStub(returnTypeGenericMetadata), container );
return recordDestroyStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container );
return recordDeepStubAnswer( newDeepStubMock(), container );
return recordDeepStubAnswer(deepStubMock(returnTypeGenericMetadata), container );
return recordDeepStubAnswer( newDeepStubMock(*returnTypeGenericMetadata), container );
return recordDeepStubAnswer( getter_AddRefs(returnTypeGenericMetadata), container );
return recordDeepStubAnswer( newDeepStubMock(aType), container );
return recordDeepStubAnswer( newDeepStubMock(object), container );
return newDeepStubMock(returnTypeGenericMetadata), container;
return recordDeepStubAnswer(nsDeepStub(returnTypeGenericMetadata), container);
return recordDeepStubAnswer( handler, container );
return result;
return newDeepStubMock(returnTypeGenericMetadata);
return recordDeepStubAnswer( new DerepStubMock(returnTypeGenericMetadata), container );
return recordDeepStubAnswer(getter_AddRefs(returnTypeGenericMetadata), container );
return recordDeepStubAnswer( newDeepStubMock(this), container );
return recordDeepStubAnswer ( newDeepStubMock (returnTypeGenericMetadata), container );
return recordDeepStubAnswer(newDeepStubMock(invocation.getType()), container );
return recordDeepStubAnswer( parent, container );
return recordDeepStubAnswer( newDeepStubMock( returnTypeGenericMetadata, container ) );
return recordDeepStubAnswer(mock, container );
return recordDeepStubAnswer( oldDeepStubMock(returnTypeGenericMetadata), container );
return recordDeepStubAnswer(do_QueryInterface(returnTypeGenericMetadata), container );
return recordDeepStubAnswer(returnGenericMetadata, container);
return recordDeepStubAnswer( newDeepStubMock(invocationTypeGenericMetadata), container );
return recordDeepStubAnswer(&newDeepStubMock(returnTypeGenericMetadata), container );
return recordDeepStubAnswer( container.get() );
return recordDeepStubAnswer(nodeInfo, container );
return recordDeepStubAnswer(ReturnTypeGenericMetadata, container);
return recordDeepStubAnswer( newDeepStubMock(mTypeGenericMetadata), container );
return recordDeepStubAnswer(newDeepStubMock(doc), container );
return recordDeepStubAnswer( newDeepStubMock(invocation) );
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container, this);
return recordDeepStubAnswer(null, container);
return recordDeepStubAnswer( newDeepStubMock(returnType) );
return recordDeepStubAnswer( newDeepStubMock(typeGenericMetadata), container );
return recordDeepStubAnswer( newDeepStubMock(aReturnTypeGenericMetadata), container );
return recordDeepStubAnswer(!newDeepStubMock(returnTypeGenericMetadata), container);
return recordDeepStubAnswer( nextDeepStubMock(returnTypeGenericMetadata), container );
return new DerepStubMock(returnTypeGenericMetadata), container );
return recordDeepStubAnswer(newDeepStubMock(object), container );
return recordDeepStubAnswer( newDeepStubMock(invocation, container) );
return recordDeepStubAnswer(newDeepStubMock(returnGenericMetadata), container);
return recordDeepStubAnswer( newDeepStubMock(container.get()), container );
return recordDeepStubAnswer( NewDeepStubMock(returnTypeGenericMetadata), container );
return recordDeepStubAnswer( newDeepStubMock(invocation, container), container );
return recordDeepStubAnswer(.newDeepStubMock(returnTypeGenericMetadata), container );
return recordDeepStubAnswer(DeepStubMock(returnTypeGenericMetadata), container );
return recordDeepStubAnswer(do_QueryInterface(returnTypeGenericMetadata));
return recordDeepStubAnswer( newDeepStubMock(returnTypeError), container );
return recordDeepStubAnswer(handler, container );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata, container));
return recordDeepStubAnswer( newDeepStubMock(invocation, container ), container );
return recordDeepStubAnswer( newDeepStubMock(aTypeGenericMetadata), container );
return recordDeepStubAnswer(derepStubMock(returnTypeGenericMetadata), container );
return recordDeepStubAnswer( newDeepStubMock(self), container );
return recordDeepStubAnswer(getter_AddRefs(returnTypeGenericMetadata));
return recordErrorAnswer(newDeepStubMock(returnTypeGenericMetadata), container);
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container );
return recordDeepStubAnswer(newDeepStubMock(typeGenericMetadata), container );
return recordDeepStubAnswer(newDeepStubMock(invocation.getMock()), container);
return recordDeepStubAnswer(returnTypeGenericMetadata, container.get());
return recordDeepStubAnswer(newDeepStubMock(this), container );
return recordDeepStubAnswer(newDeepStubMock(), container );
return recordDeepStubAnswer(newDeepStubMock(container));
return recordDeepStubAnswer(newDeepStubMock(stubbedInvocationMatcher), container );
return recordDeepStubAnswer( newDeepStubMock(invocation.type), container );
break;
return recordDeepStubAnswer(nodeInfo, container);
return recordDeepStubAnswer( newDeepStubMock(aResult), container );
return recordDeepStubAnswer( newDeepStubMock(invocation));
return recordDeepStubAnswer(container);
return recordDeepStubAnswer(nsDeepStubMock(returnTypeGenericMetadata));
return recordDeepStubAnswer(returnTypeGenericMock, container);
return recordDeepStubAnswer(doc, container );
return recordDeepStubAnswer( newDeepStubMock(null), container );
return recordDeepStubAnswer(newDeepStubMock(*returnTypeGenericMetadata), container );
return recordDeepStubAnswer( this, container );
return recordDeepStubAnswer(newDeepStubMock(typeGenericMetadata), container);
return recordDeepStubAnswer( newDeepStubMock(entry), container );
return recordDeepStubAnswer( container, container );
return recordDeepStubAnswer(, container);
return recordDeepStubAnswer(mock, container);
return recordDeepStubAnswer( newDeepStubMock(invocation.type), container );
return recordDeepStubAnswer( newDeepStubMock(invocation, container ) );
return recordDeepStubAnswer(returnType, container );
return ( recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container );
return recordDeepStubAnswer(newDeepStubMock(aType), container );
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container, 1);
return recordDeepStubAnswer( newDeepStubMock(rv), container );
return recordDeepStubAnswer( label, container );
return recordDeepStubAnswer(returnType, container);
return recordDeepStubAnswer(newDeepStubMock(returnMetadata), container);
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, this);
return recordDeepStubAnswer( newDeepStubMock(invocation.mType), container );
return recordDeepStubAnswer( newDeepStubMock(invocation.getClass()), container );
return recordDeepStubAnswer( newDeepStubMock(container));
return recordDeepStubAnswer( newDeepStubMock( invocation, container ), container );
return recordDeepStubAnswer(returnTypeGenericMetadata, &container);
return recordDeepStubAnswer(returnTypeGenericMetadata, container, null);
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container) ;
return recordStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container);
return recordDeepStubAnswer(handler, container);
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container, true);
return recordDeepStubAnswer(returnMetadata, container);
return recordDeepStubAnswer(newDeepStubMock(returnType), container);
return recordDeepStubAnswer(returnTypeGenericMetadata.get(), container );
return recordDeepStubAnswer(entry, container );
return recordDeepStubAnswer( container.get(), container );
return recordDeepStubAnswer( host, container );
return recordDeepStubAnswer(addr, container );
return recordDeepStubAnswer(newDeepStubMock(invocation, container), container );
return recordDeepStubAnswer(newDeepStubMock(invocation.get(), container));
return recordDeepStubAnswer( null, container );
return newDeepStubMock(invocation, container );
return recordDeepStubAnswer( nodeInfo, container );
return recordDeepStubAnswer(rv, container );
return recordDeepStubAnswer( container.get());
return recordDeepStubAnswer(returnTypeGenericMetadata, container, false);
return recordDeepStubAnswer(container );
return recordDeepStubAnswer(newDeepStubMock(invocation.type), container );
return recordDeepStubAnswer( null, container );
return recordDeepStubAnswer(null, container );
return recordDeepStubAnswer( newDeepStubMock( invocation, container ) );
return recordDeepStubAnswer( newDeepStubMock(returnMetadata), container );
return recordDeepStubAnswer(newDeepStubMock(invocation.getType()), container);
return recordDeepStubAnswer(aMock, container );
return recordDeepStubAnswer(newDeepStubMock(returnTypeError), container);
return recordDeepStubAnswer( cnt, container );
return recordDeepStubAnswer( invocation, container );
return recordDeepStubAnswer( aMock, container );
return recordDeepStubAnswer(model, container );
return recordDeepStubAnswer(header, container );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, container.get() );
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container, container.get());
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, NS_REINTERPRET_CAST(char*, handler.getInvocationContainer()));
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, aResult );
return recordDeepStubAnswer(newDeepStubMock((void **)returnTypeGenericMetadata), container );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, 0 );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, idSlot);
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, container );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, sizeof(returnTypeGenericMetadata), container );
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container, null);
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container, debug, debug.getState());
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, &log);
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), std::null, container );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, null );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, cnt);
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, getter_AddRefs(container));
return recordDeepStubAnswer( newDeepStubMock( eStub, container ) );
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container, getter_AddRefs(invocation));
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, &invocation.mCCMan );
return recordDeepStubAnswer( newDeepStubMock( aContext, returnTypeGenericMetadata), container );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, &returnTypeGenericMetadata );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, retType );
return recordDeepStubAnswer( newDeepStubMock((ConstructMockType*)returnTypeGenericMetadata), container );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, cfgType );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, null, null );
return recordDeepStubAnswer( newDeepStubMock(invocation, returnTypeGenericMetadata), container );
return recordDeepStubAnswer( newDeepStubMock( _returnTypeGenericMetadata), container );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, NS_STATIC_CAST(returnTypeGenericMetadata*, &returnTypeGenericMetadata));
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container, (returnTypeGenericMetadata*)container);
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container.get() );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, M_Atom );
return recordDeepStubAnswer( newDeepStubMock(aEventType), container );
return recordDeepStubAnswer( src, container );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, trueSibling );
return recordDeepStubAnswer( newDeepStubMock(support, container) );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, isStubType );
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container, rtems, idm );
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container, &status);
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container, 0);
return recordDeepStubAnswer( newDeepStubMock((InvocationContainerImpl*)container), container );
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container, -1);
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container, fd );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), &returnTypeGenericMetadata );
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container, aStatus);
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), &container);
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, container.mInvocation );
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container, mElementFrame );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, NS_GET_IID(nsIStreamObserver), NS_GET_IID(nsIStreamObserver), NS_GET_IID(nsIStreamObserver), NS_GET_IID(nsIStreamObserver), NS_GET_IID(nsIStreamObserver), NS_GET_IID(nsIStreamObserver), NS_GET_IID(nsIStreamObserver), NS_GET_IID(nsIStreamObserver), NS_GET_IID(nsIStreamObserver), NS_GET_IID(nsIStreamObserver), NS_GET_IID(nsIStreamObserver), NS_GET_IID(nsIStreamObserver), NS_GET_IID(nsIStreamObserver), NS_GET_IID(nsIStreamObserver), NS_GET_IID(nsIStream
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container, false);
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, sysDebug );
return recordDeepStubAnswer( newDeepStubMock((ConstructorMock *)returnTypeGenericMetadata), container );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), std::origin, null );
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, 0), container );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, (MockHandlerImpl *)handler);
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, aMock );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, sc );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, tcb );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, null, 0 );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, &dbs);
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container, (Unsigned char*)&invocation.mUnicode );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container.get());
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, sizeof(returnTypeGenericMetadata), sizeof(returnTypeGenericMetadata), &dest );
return recordDeepStubAnswer( newDeepStubMock((int)returnTypeGenericMetadata), container );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, dummy );
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), &invocation);
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container, m_ret = -1);
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, false, false );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, -1 );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, container.getFrameSize() );
return recordDeepStubAnswer( newDeepStubMock((void**)returnTypeGenericMetadata), container );
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, &returnTypeGenericMetadata), container );
return recordDeepStubAnswer(newDeepStubMock((invocation.invocation.invocation.type)), container );
return recordDeepStubAnswer( &newDeepStubMock(returnTypeGenericMetadata), container );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, i );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, &invocation );
return recordDeepStubAnswer( newDeepStubMock(invocation.getMetaData()), container );
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container, sizeof(returnTypeGenericMetadata));
return recordDeepStubAnswer( sock, container );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), sysContext);
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), &container);
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container, container.invocation );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, newDeepStubMock(returnTypeGenericMetadata));
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), rtem );
return recordDeepStubAnswer(newDeepStubMock(invocation.getOwner()), container );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, true, false );
return recordDeepStubAnswer( newDeepStubMock(stubbedInvocationMetadata), container );
return recordDeepStubAnswer(returnTypeGenericMetadata, container, &returnTypeGenericMetadata);
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, null );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, mCount );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, tmp );
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container, sm);
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container, getter_AddRefs(returnTypeGenericMetadata));
return recordDeepStubAnswer( mContainer.getDeepStub(), container );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, this );
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, 0, container));
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, tsiBlock, tsiBlock );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), aReferrer );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, container.getLength() );
return recordDeepStubAnswer( NS_NewDeepStubMock(returnTypeGenericMetadata), container );
return recordDeepStubAnswer( NS_REINTERPRET_CAST(DeepStubMock(returnTypeGenericMetadata), container ) );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), &container );
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container, &container);
return recordDeepStubAnswer(newDeepStubMock(invocation.returnTypeGenericMetadata), container );
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container, handler );
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container, &invocation);
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container, &returnTypeGenericMock);
return recordDeepStubAnswer( newDeepStubMock(aType, container ) );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, false );
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container, &ret );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, container.id );
return recordDeepStubAnswer( newDeepStubMock(returnTypeGenericMetadata), container, cflags );
<return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container);
&return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container);
return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container);
