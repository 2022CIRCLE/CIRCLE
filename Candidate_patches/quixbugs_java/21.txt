golden:
groupByNode.put(node,  groupByNode.get(vertex_u));
inference:
groupByNode = update(groupByNode, vertex_u);
groupByNode = update(node, vertex_u);
groupByNode = update(groupByNode, vertex_u, node);
groupByNode = update(groupByNode, vertex_u, vertex_v);
groupByNode = update(groupByNode, node, vertex_u, 0);
groupByNode = update(groupByNode, node);
groupByNode = update(groupByNode, node, vertex_u);

groupByNode = update(groupByNode, node2, vertex_u);
groupByNode = update(groupByNode, vertex_u, vertex_u);
groupByNode = update(groupByNode, node.get(), vertex_u);
groupByNode = update(groupByNode, node1, vertex_u);
groupByNode = update(groupByNode, node, vertex_v);
groupByNode = update(groupByNode, vertex_v);
groupByNode = update(groupByNode, vertex_u, 0);
groupByNode = update(GroupByNode, node, vertex_u);
groupByNode = update (groupByNode, node, vertex_u);
groupByNode = update(groupByNode, node, vertex_u, v);
groupByNode = update(vertex_u, node, vertex_u);
groupByNode = update(groupByNode, node, vertex_u, false);
groupByNode2 = update(groupByNode, node, vertex_u);
groupByNode = update(groupByNode, node, vertex);
groupByNode = update(groupByNode, node, vertex_u, true);
groupByNode = update(groupByNode, vertex_v, vertex_u);
groupByNode = update(groupByNode, Node, vertex_u);
groupByNode = update(groupByNode, vertex_u, false);
groupByNode = setup(groupByNode, node, vertex_u);
groupByNode = add(groupByNode, node, vertex_u);
groupByNode = update(groupByNode, node, vertex_u, 1);
groupByNode = update(groupByNode,vertex_u, vertex_u);
groupByNode = update(groupByNode, nude, vertex_u);
groupByNode = update(groupByNode, node, vertex_u, null);
groupByNode = update(groupByNode, vertex_u, v);
groupByNode = update(groupByNode, vertex_u, true);
groupByNode = Update(groupByNode, node, vertex_u);
groupByNode=update(groupByNode, node, vertex_u);
groupByNode.update(groupByNode, node, vertex_u);
update(groupByNode, node, vertex_u);
groupByNode = Update(groupByNode, vertex_u);
groupByNode = update(groupByNode, node, vertex_u_span);
groupByNode = update(groupByNode, vertex_u, weightedEdge);
groupByNode = groupByNode.update(node, vertex_u);
groupByNode = update(groupByNode, node, vertex_u2);
groupByNode = update(groupByNode,vertex_u, vertex_v);
groupByNode = update(groupByNode, verbose, vertex_u);
groupByNode = update(groupByNode.get(), node, vertex_u);
groupByNode = update(groupByNode, vertex, vertex_u);
groupByNode = update(groupByNode, node, vertex_u, -1);
groupByNode = getupdate(groupByNode, node, vertex_u);
groupByNode = update(groupByNode, node, vertex_u, 0, 0);
groupByNode = update( groupByNode, node, vertex_u );
groupByNode = update(groupByNode, node, vertex_v, 0);
groupByNode = update(groupByNode, v, vertex_u);
groupByNode = update(groupByNode, node, vertex_u, node2);
groupByNode = update(groupByNode, vertex_u, null);
groupByNode = update(groupByNode, vertex_v, node);
groupByNode = update(groupByNode, aNode, vertex_u);
groupByNode = update(groupByNode, node, vertex_u.get());
groupByNode = update(groupByNode, node, vertex_u, len);
groupByNode = update(groupByNode, vertex_u, node2);
groupByNode = update(groupByNode, node, u);
groupByNode = update(groupByNode, vertex_u, 1);
groupByNode = update(groupByNode, node, vertex_u, alpha);
groupByNode = update(groupByNode, node, vertex_p);
groupByNode = update(groupByNode, nu, vertex_u);
groupByNode = update(groupByNode, vertex_u, weightedEdges);
groupByNode = update(groupByNode, node, v);
groupByNode = update(groupByNode, node, vertex_h);
groupByNode = update(groupByNode, vertex_u, numpg);
groupByNode = update( groupByNode, node, vertex_u);
groupByNode = update(groupByNode, node, vertex_u, u);
groupByNode = update(groupByNode, vertex_u1, vertex_u2);
groupByNode = update(groupByNode, node, vertex_l);
groupByNode = update(groupByNode, vertex_u, groupByNode);
groupByNode = update(groupByNode, vertex_u, vertex2);
groupByNode = update(groupByNode, node, vertex_i);
groupByNode = update();
groupByNode = update(groupByNode, vertex_u, len);
groupByNode = update(groupByNode,node,vertex_u);
groupByNode = update(groupByNode, element, vertex_u);
groupByNode = update(groupByNode, node, vertex_u == 0);
groupByNode = update(groupByNode, node, 0, vertex_u);
groupByNode = update(groupByNode, vertex_u, null);
GroupByNode = update(groupByNode, node, vertex_u);
groupByNode = update(groupByNode, len, vertex_u);
groupByNode = update(groupByNode, node2);
groupByNode = update(addr, node, vertex_u);
groupByNode = update(groupByNode, null, vertex_u);
groupByNode = update(groupByNode, node, vertex_span);
groupByNode = update(groupByNode, (void *) node, vertex_u);
update(groupByNode, vertex_u);
groupByNode = update(groupByNode, null, vertex_u);
groupByNode = update(groupByNode, node, vertex_u, this);
groupByNode = update(groupByNode, u, vertex_u);
groupByNode = update(groupByNode, *node, vertex_u);
groupByNode = update(groupByNode, vertex_v, vertex_v);
groupByNode = update(groupByNode, vertex_u, vertex_span);
groupByNode = update(groupByNode, node, Vertex_u);
groupByNode = update(groupByNode, vertex_u, vertex_h);
groupByNode = update(groupByNode, node, vertex_u, numpg);
groupByNode = update(groupByNode, (void **) node, vertex_u);
groupByNode = update(groupByNode, node, vertex_u1);
groupByNode = update(&groupByNode, node, vertex_u);
groupByNode = update(groupByNode, node, vertex_u == null);
groupByNode = update(groupByNode, *vertex_u, vertex_u);
groupByNode = update(groupByNode, v);
groupByNode = update(groupByNode, &node, vertex_u);
groupByNode = update(groupByNode, node, vertex_u + 1);
groupByNode = update(groupByNode, node, vertex_u, limit);
groupByNode = update(groupByNode, groupByNode, vertex_u);
groupByNode = update(groupByNode, node, vertex_u, base);
groupByNode = update(groupByNode, vertex_u, base);
groupByNode = update(groupByNode, vertex_u, alpha);
groupByNode = update(groupByNode, node, **vertex_u);
groupByNode = update(groupByNode, node, vertex_u, p);
groupByNode = change(groupByNode, node, vertex_u);
groupByNode = update(groupByNode, node, vertex_u - 1);
groupByNode = update(groupByNode, vertex_u, edge);
groupByNode = update(groupByNode, node, vertex_u, edge);
groupByNode = update(groupByNode, alpha, vertex_u);
groupByNode = update(groupByNode, node1);
groupByNode = refresh(groupByNode, node, vertex_u);
groupByNode = update(groupByNode, vertex_u, node.get());
groupByNode = update(groupByNode, node, &vertex_u);
groupByNode = update(groupByNode, node, *vertex_u);
groupByNode = update(groupByNode, node.node, vertex_u);
groupByNode = update(groupByNode, *vertex_u, vertex_v);
groupByNode = set(groupByNode, node, vertex_u);
groupByNode = update((groupByNode) node, vertex_u);
groupByNode = update(groupByNode, node, vertex_t);
groupByNode = update(groupByNode, node, vertex_u, vertex2);
groupByNode.update(groupByNode, node, vertex_u);
set = update(groupByNode, node, vertex_u);
groupByNode = update(groupByNode, p, vertex_u);
groupByNode = update(groupByNode, dev, vertex_u);
groupByNode = update(list, node, vertex_u);
groupByNode = update(groupByNode, vertex_u, -1);
GroupByNode = update(GroupByNode, node, vertex_u);
groupByNode = update(groupByNode, vertex_u, vertex_p);
groupByNode = update(groupByNode, node, vertex_w);
groupByNode = advance(groupByNode, node, vertex_u);
groupByNode = update(groupByNode, vertex_u, vertex_u2);
groupByNode = update(groupByNode, parent, vertex_u);
groupByNode = update(groupByNode, node,vertex_u);
groupByNode = update(groupByNode, i, vertex_u);
groupByNode = update(groupByNode, node, vertex1, vertex2);
groupByNode = update(groupByNode, node, weightedEdge);
groupByNode = update(groupByNode, node, vertex_u, null);
groupByNode = update(groupByNode, node, vertex_u, range);
groupByNode = update(groupByNode, node, vertex_u, ep);
groupByNode = update(groupByNode, node, vertex2);
groupByNode = update(groupByNode, node, vertex_u, value);
groupByNode = update(groupByNode, vertex_u, None);
groupByNode = update(groupByNode, vertex_u, vertex_a);
groupByNode = update(groupByNode, **vertex_u);
groupByNode = update(groupByNode, next, vertex_u);
groupByNode = update(groupByNode, node, node2, vertex_u);
groupByNode = update(groupByNode, node, vertex_u, bounds);
groupByNode = update(groupByNode, vertex_u, vertex_w);
groupByNode = update(groupByNode, vertex);
groupByNode = update(groupByNode, graph, vertex_u);
groupByNode = update(groupByNode, node, vertex_u2, 0);
groupByNode = update(groupByNode, node, vertex_u, frame);
groupByNode = update(groupByNode, node, vertex_u, false);
groupByNode = update(groupByNode, 0, vertex_u);
groupByNode = update(groupByNode, node, vertex_u, 2);
groupByNode.update(groupByNode, vertex_u);
groupByNode = update(groupByNode, vertex_u, vertex_b);
groupByNode = update(groupByNode, vertex_u, vertex_l);
groupByNode = update(groupByNode, node, vertex_u, pointer);
groupByNode = update(groupByNode, node, vertex_v, true);
groupByNode = update(groupByNode, vertex_u, verbose);
groupByNode = update(groupByNode, vertex_u, vertex_f);
groupByNode = update(groupByNode);
groupByNode = update(groupByNode, node, vertex_u, prev);
groupByNode = update(groupByNode, node, vertex_v, v);
groupByNode = update(groupByNode, vertex_u, &vertex_u);
groupByNode = update(groupByNode, node, vertex_u, vertex_v);
groupByNode = update(groupByNode, node, vertex_u, node.get());
groupByNode = update(groupByNode, vertex_u, vertex_v, vertex_u);
groupByNode = update(groupByNode, node, vertex_u, &groupByNode);
groupByNode = update(groupByNode, vertex_u, p);
groupByNode = update(groupByNode, vertex_u, groupByNode.get(vertex_v));
groupByNode = update(groupByNode, node, vertex_u, max_vertex_h);
groupByNode = update(groupByNode, vertex_u, vertex_u, node);
groupByNode = update(groupByNode, node, vertex_u, getter_AddRefs(vertex_u));
groupByNode = update(groupByNode, node, vertex_u, vertex_u.node);
groupByNode = update(groupByNode, node, vertex_u, new.node1);
groupByNode = update(groupByNode, vertex_u, (void **) vertex_u);
groupByNode = update(groupByNode, node, vertex_u, vertex_u.vertex_u.vertex_v);
groupByNode = update(groupByNode, node, vertex_u, hdr);
groupByNode = update(groupByNode, vertex_u, vertex_v, 0);
groupByNode = update(groupByNode, vertex_u, groupByNode.get(vertex_u));
groupByNode = update(groupByNode, node, vertex_u, new charset_name);
groupByNode = update(groupByNode, node, vertex_u, vertex_u_span);
groupByNode = update(groupByNode, node, vertex_u, vertex_v, &groupByNode.m_ep);
groupByNode = update(groupByNode, node, vertex_u, vertex_v, vertex_u);
groupByNode = update(groupByNode, node, vertex_u, u.s)
groupByNode = update(groupByNode, node, vertex_u, weightedEdge);
groupByNode = update(groupByNode, node, vertex_u, hashKey);
groupByNode = update(groupByNode, node, vertex_u, weightedEdges);
groupByNode = update(groupByNode, vertex_u, 0, 0, 0);
groupByNode = update(groupByNode, vertex_u, (void **)&node);
groupByNode = update(groupByNode, node, vertex_u, minSpanningTree);
groupByNode = update(groupByNode, node, vertex_u, hz);
groupByNode = update(groupByNode, node, vertex_u, vertex_u_a, vertex_u_b, vertex_u_b);
groupByNode = update(groupByNode, node, vertex_u, vertex_u, ap, ap.p, ap.p.p);
groupByNode = update(groupByNode, vertex_u, node, vertex_v);
groupByNode = update(groupByNode, node, vertex_u, vertex_u);
groupByNode = update(groupByNode, vertex_u, (vertex_v? vertex_v : groupByNode.get(vertex_v)));
groupByNode = update(groupByNode, node, vertex_u, &vertex_u);
groupByNode = update(groupByNode, node, vertex_u, vertex_v, ap);
groupByNode = update(groupByNode, vertex_u, numpy.node2);
groupByNode = update(groupByNode, vertex_u, &node);
groupByNode = update(groupByNode, node, vertex_u, ap.p.node2);
groupByNode = update(groupByNode, node, vertex_u, &vertex_v);
groupByNode = update(groupByNode, vertex_u, vertex_u, ap_type);
groupByNode = update(groupByNode, node, vertex_u, aNewFrame);
groupByNode = update(groupByNode, vertex_u, groupByNode.get());
groupByNode = update(groupByNode, node, vertex_u, &groupByNode.get(vertex_u));
groupByNode = update(groupByNode, node, vertex_u, groupByNode.get(vertex_u));
groupByNode = update(groupByNode, node, vertex_u, edge.vertex_u);
groupByNode = update(groupByNode, node, vertex_u, vertex_fc);
groupByNode = update(groupByNode, node, vertex_u, vertex_span);
groupByNode = update(groupByNode, node, vertex_u, (void *) 0);
groupByNode = update(groupByNode, node, vertex_u, **vertex_u);
groupByNode = update(groupByNode, node, vertex_u, m_assign(node));
groupByNode = update(groupByNode, node, vertex_u, node.node);
groupByNode = update(groupByNode, node, vertex_u, vertex_u, 0);
groupByNode = update(groupByNode, node, vertex_u, node2.get());
groupByNode = update(groupByNode, vertex_u, avnode);
groupByNode = update(groupByNode, node, vertex_u, vertex_v, 0);
groupByNode = update(groupByNode, vertex_u, vertex_u, &groupByNode.get());
groupByNode = update(groupByNode, node, vertex_u, &groupByNode.get(vertex_u));
groupByNode = update(groupByNode, vertex_u, &groupByNode.get(vertex_v));
groupByNode = update(groupByNode, vertex_u, Node2V);
groupByNode = update(groupByNode, node, vertex_u, null);
groupByNode = update(groupByNode, node, vertex_u, (EmptyEdge *)vertex_u);
groupByNode = update(groupByNode, vertex_u, vertex_v, 1);
groupByNode = update(groupByNode, node, vertex_u, 0, 0, null);
groupByNode = update(groupByNode, node, vertex_u, vertex_h, vertex_v);
groupByNode = update(groupByNode, vertex_u, Node2);
groupByNode = update(groupByNode, node, vertex_u, max_vert);
groupByNode = update(groupByNode, node, vertex_u, nsLayoutAtoms::uid);
groupByNode = update(groupByNode, node, vertex_u, u, groupByNode.get(vertex_v));
groupByNode = update(groupByNode, node, vertex_u, vertex_h);
groupByNode = update(groupByNode, node, vertex_u, groupByNode.get(vertex_v));
groupByNode = update(groupByNode, vertex_u, vertex_v, vertex_h, vertex_u);
groupByNode = update(groupByNode, node, vertex_u, **new_hash_attr)
groupByNode = update(groupByNode, node, vertex_u, advance(vertex_u));
groupByNode = update(groupByNode, node, vertex_u, vertex_l);
groupByNode = update(groupByNode, node, vertex_u, groupByNode.get());
groupByNode = update(groupByNode, node, vertex_u, max_weighted_edges);
groupByNode = update(groupByNode, node, vertex_u, 0, &groupByNode.get(vertex_v));
groupByNode = update(groupByNode, node, vertex_u, vertex_v, vertex_v)? update(groupByNode, vertex_u, vertex_v) : update(groupByNode, node, vertex_u, vertex_v);
groupByNode = update(groupByNode, node, vertex_u, mvertex_v);
groupByNode = update(groupByNode, node, vertex_u, vertex_v, minSpanningTree);
groupByNode = update(groupByNode, node, vertex_u, aDistance);
groupByNode = update(groupByNode, node, vertex_u, *v);
groupByNode = update(groupByNode, node, vertex_u, **(node.p == 0));
groupByNode = update(groupByNode, node, vertex_u, hwnd);
groupByNode = update(groupByNode, node, vertex_u, 0, 0, 0);
groupByNode = update(groupByNode, vertex_u, vertex_v, null);
groupByNode = update(groupByNode, node, vertex_u, avertex_v);
groupByNode = update(groupByNode, node, vertex_u, vertex_v, vertex_p, vertex_v);
groupByNode = update(groupByNode, vertex_u, edge.node2);
groupByNode = update(groupByNode, node, vertex_u, int=0);
groupByNode = update(groupByNode, node, vertex_u, recurse);
groupByNode = update(groupByNode, node, vertex_u, vertex_v, vertex_v)? update(groupByNode, vertex_u, vertex_v) : update(groupByNode, node, vertex_u, &vertex_v);
groupByNode = update(groupByNode, node, vertex_u, &vertex_v, vertex_v)? update(groupByNode, vertex_u, vertex_v) : update(groupByNode, node, vertex_u, <vertex_v<);
groupByNode = update(groupByNode, node, vertex_u, <vertex_v, vertex_v)? update(groupByNode, vertex_u, vertex_v) : update(groupByNode, node, vertex_u, <vertex_v<);
groupByNode = update(groupByNode, node, vertex_u, vertex_v, vertex_v)? update(groupByNode, vertex_u, vertex_v) : update(groupByNode, node, vertex_u, &vertex_v<);
groupByNode = update(groupByNode, node, vertex_u, <vertex_v, vertex_v)? update(groupByNode, vertex_u, vertex_v) : update(groupByNode, node, vertex_u, vertex_v);
groupByNode = update(groupByNode, node, vertex_u, vertex_v, vertex_v)? update(groupByNode, vertex_u, vertex_v) : update(groupByNode, node, vertex_u, <vertex_v&);
groupByNode = update(groupByNode, node, vertex_u, <vertex_v, vertex_v)? update(groupByNode, vertex_u, vertex_v) : update(groupByNode, node, vertex_u, &vertex_v<);
groupByNode = update(groupByNode, node, vertex_u, <vertex_v, vertex_v)? update(groupByNode, vertex_u, vertex_v) : update(groupByNode, node, vertex_u, &vertex_v&);
groupByNode = update(groupByNode, node, vertex_u, <vertex_v, vertex_v)? update(groupByNode, vertex_u, vertex_v) : update(groupByNode, node, vertex_u, &vertex_v);
groupByNode = update(groupByNode, node, vertex_u, <vertex_v, vertex_v)? update(groupByNode, vertex_u, vertex_v) : update(groupByNode, node, vertex_u, <vertex_v&);
groupByNode = update(groupByNode, vertex_u);
groupByNode = update(groupByNode, node, vertex_u, &vertex_v, vertex_v)? update(groupByNode, vertex_u, vertex_v) : update(groupByNode, node, vertex_u, &vertex_v<);
groupByNode = update(groupByNode, node, vertex_u, vertex_v, vertex_v)? update(groupByNode, vertex_u, vertex_v) : update(groupByNode, node, vertex_u, vertex_v&);
groupByNode = update(groupByNode, node, vertex_u, <vertex_v, vertex_v)? update(groupByNode, vertex_u, vertex_v) : update(groupByNode, node, vertex_u, vertex_v<);
groupByNode = update(groupByNode, node, vertex_u, &vertex_v, vertex_v)? update(groupByNode, vertex_u, vertex_v) : update(groupByNode, node, vertex_u, vertex_v<);
groupByNode = update(groupByNode, node, vertex_u, vertex_v, vertex_v)? update(groupByNode, vertex_u, vertex_v) : update(groupByNode, node, vertex_u, vertex_v);
groupByNode = update(groupByNode, node, vertex_u, <vertex_v, vertex_v)? update(groupByNode, vertex_u, vertex_v) : update(groupByNode, node, vertex_u, vertex_v&);
groupByNode = update(groupByNode, node, vertex_u, &vertex_v, vertex_v)? update(groupByNode, vertex_u, vertex_v) : update(groupByNode, node, vertex_u, vertex_v&);
groupByNode = update(groupByNode, node, vertex_u);
groupByNode = update(groupByNode, node, vertex_u, <vertex_v, vertex_v)? update(groupByNode, vertex_u, vertex_v) : update(groupByNode, node, vertex_u, <vertex_v);
groupByNode = update(groupByNode, node, vertex_u, &vertex_v, vertex_v)? update(groupByNode, vertex_u, vertex_v) : update(groupByNode, node, vertex_u, &vertex_v&);
&groupByNode = update(groupByNode, node, vertex_u);
groupByNode = update(groupByNode, node, vertex_u, &vertex_v, vertex_v)? update(groupByNode, vertex_u, vertex_v) : update(groupByNode, node, vertex_u, <vertex_v);
groupByNode = update(groupByNode, node, vertex_u, vertex_v, vertex_v)? update(groupByNode, vertex_u, vertex_v) : update(groupByNode, node, vertex_u, &vertex_v&);
groupByNode = update(groupByNode, node, vertex_u, &vertex_v, vertex_v)? update(groupByNode, vertex_u, vertex_v) : update(groupByNode, node, vertex_u, &vertex_v);
groupByNode = update(groupByNode, node, vertex_u, &vertex_v, vertex_v)? update(groupByNode, vertex_u, vertex_v) : update(groupByNode, node, vertex_u, <vertex_v&);
groupByNode = update(groupByNode, node, vertex_u, &vertex_v, vertex_v)? update(groupByNode, vertex_u, vertex_v) : update(groupByNode, node, vertex_u, vertex_v);
<groupByNode = update(groupByNode, node, vertex_u);
groupByNode = update(groupByNode, node, vertex_u, vertex_v, vertex_v)? update(groupByNode, vertex_u, vertex_v) : update(groupByNode, node, vertex_u, <vertex_v<);
groupByNode = update(groupByNode, node, vertex_u, vertex_v, vertex_v)? update(groupByNode, vertex_u, vertex_v) : update(groupByNode, node, vertex_u, vertex_v<);
groupByNode = update(groupByNode, node, vertex_u, vertex_v, vertex_v)? update(groupByNode, vertex_u, vertex_v) : update(groupByNode, node, vertex_u, <vertex_v);
