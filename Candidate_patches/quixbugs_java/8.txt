golden:
return gcd(b, a%b);
inference:
return (gcd(a % b, b));
return (a % b, b);
return GCD(a % b, b);
return gcd((int)a % b, b);
return gcd (a % b, b);
return a % b;
return gcd(a % a, b);
return(gcd(a % b, b));
return gcd(a, b);
return gcd((int) a % b, b);
return gcd(a % b);
return _gcd(a % b, b);
return gcd(gcd(a % b, b));
return gcd((long)a % b, b);
return gcd(a % b, (int)b);
return gcd((u_long)a % b, b);
return 0;
return gcd(a % i, b);
return gcd((unsigned long)a % b, b);
return gcd(a % b, b);
return (gcd (a % b, b));
return gcd(a % (int)b, b);
return gcd(0, a % b, b);
return GL(a % b, b);
return gcd(b % a, b);
return gcd(b, a % b);
return gcd(b);
return (int)gcd(a % b, b);
return gcd((char *)a % b, b);
return gcd((void *)a % b, b);
return int gcd(a % b, b);
return gcd((long)a % b, (long)b);
return result;
return gcd(a);
return gcd(a % b, a);
return &gcd(a % b, b);
return (gcd(a % b, b)));
return gcd(a%b, b);
return(a % b, b);
return gcd(a % (long)b, b);
return a;
return gcd(gcd(a % b), b);
return __gcd(a % b, b);
return gcd(a % b, (void *)b);
return cd(a % b, b);
return (int) gcd(a % b, b);
return gcd(a + b, b);
return lgcd(a % b, b);
return gcd(a % b, 0);
return GCD (a % b, b);
return const gcd(a % b, b);
return (GCD) gcd(a % b, b);
return gcd(b % b, b);
return GCD(a % b);
gcd(a % b, b); return 0;
return gcd(a % a, b, b);
return gcd(a % s, b);
return gcd(a % b, sizeof(b));
return gcd(a % b, a, b);
return xgcd(a % b, b);
return *gcd(a % b, b);
return gcd((long) a % b, b);
return gcd(a % b, &b);
return gcd(a % (b)b, b);
return gcd(0, a, b);
return (*gcd(a % b, b));
return gcd(a % b, (u_long)b);
return gcd2(a % b, b);
return gcd(0);
return gcd(a % (int) b, b);
return gcd_gcd(a % b, b);
return (a % b);
return gcd(a % b, b, 0);
return gcd(a % (b) b, b);
return gcd(b, a);
return gcd();
return getgcd(a % b, b);
return gcd(a, b, b);
return gcd((int)(a % b), b);
return gcd((a % b, b));
return gcd((char *) a % b, b);
return gcd(a % d, b);
return gcd(a * b, b);
return argcd(a % b, b);
return gcd(a % p, b);
return gcd(a % b, b, null);
return gcd(a % x, b);
return gcd(a % b, (int) b);
return rgcd(a % b, b);
return gcd((void *) a % b, b);
return cd_gcd(a % b, b);
return gcd(arg, b);
return gcd(a % c, b);
return gcd(a - b, b);
return gcd(a  b, b);
return gcd(u % b, b);
return (lgcd(a % b, b));
return ++gcd(a % b, b);
return gcd(a % buf, b);
return sgcd(a % b, b);
return gcd(a % b, (void *) b);
return gcd(1 % b, b);
return gcd(x, y);
return gcd0(a % b, b);
return gcd_int(a % b, b);
return gcd(a % gcd, b);
return (gcd)(a % b, b);
return gcd(a % n, b);
return gcd(a % lb, b);
return gcd(a % b, (long)b);
return gcd(0, a);
return 1;
return b;
return gcd(a;
return (gcd(a % b, b)  0);
result = gcd(a % b, b); return result;
return (_gcd(a % b, b));
gcd(a % b, b);
return GC(a % b, b);
return gcd((char*)a % b, b);
return gcd(a % len, b);
return gcd1(a % b, b);
return (gcd) (a % b, b);
return gcd(a & b, b);
return gcd(A % b, b);
return gcd(a % bp, bp);
return GCD_GCD(a % b, b);
return (!gcd(a % b, b));
return gcd(a & 0xff, b);
return gcd(a % bp, b);
return ( gcd(a % b, b) );
return gcd(a % b, (unsigned long)b);
return GCC(a % b, b);
return G(a % b, b);
return gcd(a % *b, b);
return gcd( a % b, b );
return gcd(a % b, b, a);
return g_cd(a % b, b);
gcd(a % b, b); return a;
return gcd(a) % b;
return gcdx(a % b, b);
return gcd(b % b);
returngcd(a % b, b);
return gcd(a % m, b);

return gcd(a % (void *)b, b);
return gcd((size_t)a % b, b);
return gcd(a % (u_long)b, b);
return /* gcd(a % b, b); */
return gcd((void **)a % b, b);
return gcd(a % (b + 1), b);
return gcd((int)a, (int)b);
return gcd((void*)a % b, b);
/* return gcd(a % b, b);*/
return gcd(a % b, b + 1);
return gcd(a % b, 0, b);
return gcd((void *)a, (void *)b);
return gcd(a % b, *b);
return gcd(b, a % b, b);
return gcd((long)(a % b, b));
return gcd((short)a % b, b);
return (gcd(a % b, b) == 0);
return gcd((float)a % b, (float)b);
return /* gcd(a % b, b);*/
gcd = a % b; return gcd;
return null;
return b % a;
#endif return gcd(a % b, b);
ret = gcd(a % b, b);
return gcd(a % b, sizeof(gcd));
return gcd(a % (u_int)b, b);
return gcd(a % b, (char *)b);
/* return gcd(a % b, b); */
return a + b;
return gcd(a % ((int)b), b);
return -1;
return gcd(arg);
gcd(a % b, b); return b;
return gcd(int a, int b, b);
return gcd(a % ((int)b, b);
return gcd(a % b, sizeof(b), b);
return (gcd(a % b, b), 0);
return gcd(a % b, b - 1);
gcd = a % b; return (gcd);
return (gcd(a % b, b)) > 0;
return i;
return ret;
return gcd(a % b, b % b);
return *a;
gcd(a % b, b); return (gcd);
return gcd(a % b, (u_int)b);
return gcd(a % b, (int)(b));
gcd = a % b; return gcd(b);
return (b);
return (0);
return cd;
return gcd(a % (caddr_t)b, b);
return gcd((int)a % b, (int)b);
return ((a % b) && gcd((a % b)) && b);
return (GCD(a % b, b));
return gcd(a % b, b, sizeof(buf));
return ((struct gcd *)gcd_get(a, b));
return gcd((u_long)a % b, (u_long)b);
return gcd((const char*)a % b, b);
return ((*a) % b) || (*b));
return gcd(((int)a % b, ((int)b));
return gcd(a % b, gcd_p);
return gcd((caddr_t)a % b, b);
return gcd((u_int) a % b, (u_int) b);
return ((a % b) && (b > 0));
return (GCD_C)(a % b, b);
return ((gcd(a % b, b)) == 0)? gcd(b % a) : gcd(b % b));
return gcd((const int *)a % b, b);
return gcd(a % b, b - a);
return gcd(a % (b-b)b, b);
return gcd((unsigned char *)a % b, b);
return gcd((u_int32_t)a % b, (u_int32_t)b);
return (GCCDA_GCD(a % b, b));
return ((gcd(a % b, b)) == 0)? gcd(a % b, b) : gcd(b);
return gcd(a % (b_t)b, b);
return ((gcd(a % b, b))!= 0);
return gcd(a % b, (u_int32_t)b);
return gcd((unsigned long)a % b, (unsigned long)b);
return gcd(((struct gcd *)a) % b, b);
return gcd((int) a % b, (int) b);
return gcd(a % (char *) b, b);
return gcd(a % (char) b, b);
return gcd(a % b, b & 0xff);
return gcd((void *)a % b, (void *)b);
return gcd((int)a % b, (void *)b);
return (GCD_IN) gcd(a % b, b);
return gcd(a % b, b - a.double_bit);
return gcd((long) a % b, (long) b);
return gcd(a % (a - b));
return gcd((const char *)a % b, (const char *)b);
return gcd(a % b, b, a + b);
return gcd(a % (b_len)b, b);
return gcd((const int *)a % b, (const int *)b);
return gcd(a % b, a.a_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.b_d.
return gcd((const struct gcd_type*)a % b, b);
return gcd(a % (gcd_offset)b, b);
return gcd(a % (b[0])b, b[1]);
return gcd((caddr_t)a % b, (caddr_t)b);
return gcd(a % b, b, md(*md));
return gcd(a % b, a.flags);
return gcd((char *) a % b, (char *) b);
return gcd(a % b, b * a);
return (gcd(a % b, b) <0);
return (gcd(a % b, b) &0);
&return gcd(a % b, b);
return gcd(a <b, b);
<return gcd(a % b, b);
&return gcd(a % b, b);
return (gcd(a % b, b) 0);
return gcd(a % b, b);
return gcd(a &b, b);
&return (gcd(a % b, b));
<return (gcd(a % b, b));
return gcd(a % b, b);
<return gcd(a % b, b);
return (gcd(a % b, b));
return gcd(a b, b);
