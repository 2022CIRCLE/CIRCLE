golden:
max_ending_here = Math.max(0,max_ending_here + x);
inference:
max_ending_here = max_ending_here + x;
max_ending_here += x;
max_ending_here = max_ending_here;

max_ending_here = max_ending_here + x + 1;
max_ending_here = max_ending_here + (int)x;
int max_ending_here = max_ending_here + x;
max_ending_here = max_ending_here + x - 1;
max_ending_here = max_ending_here + 1;
max_ending_here = max_ending_here + ((int)x);
max_ending_here++;
max_so_here = max_so_here + x;
max_ending_here = max_ending_here[x];
max_ending_here = x + max_ending_here;
max_ending_here = max_ending_here + x + x;
max_ending_here = max_ending_here + len;
max_ending_here = max_ending_here + arr;
here = max_ending_here + x;
max_ending_here = (int) max_ending_here + x;
max_ending_here = x;
max_ending_here = max_ending_here + (int) x;
max_ending_here = max_ending_here + s;
max_ending_here = max_ending_here + h;
max_ending_here = max_ending_here + *x;
max_ending_here = max_ending_here + max_ending_here;
max_ending_here = max_ending_here++;
max_ending_here.append(max_ending_here + x);
max_ending_here[x] = max_ending_here + x;
max_so_far = max_ending_here + x;
max_ending_here = max_ending_here - x;
max_end_here = max_end_here + x;
max_so_far = max_so_far + x;
max_ending_here = max_ending_here + l;
max_ending_here = max_ending_here + x - x;
max_ending_here = max_ending_here + n;
max_ending_here = max_ending_here.add(x);
max_ending_here = max_ending_here + x + 2;
max_ending_here = here + x;
max_ending_here = max_ending_here + i;
max_ending_here = max_ending_here + a;
max_ending_here = max_ending_here + max_so_far;
max_ending_here=max_ending_here + x;
max_ending_here[0] = max_ending_here + x;
max_ending_here = max_ending_here + y;
max_ending_here = max(max_ending_here + x);
max_ending_here = min(max_ending_here + x);
min_ending_here = max_ending_here + x;
max_ending_here = max_ending_here + 2;
max_ending_here = max_ending_here + strlen(x);
max_ending_here = (int)max_ending_here + x;
max_ending_here = max_ending_here + p;
max_ending_here = max_ending_here + d;
max_ending_here += max_ending_here;
max_ending_here = max_ending_here + x - 2;
max_ending_here = max_ending_here + sizeof(x);
max_ending_here = max_ending_here + c;
max_ending_here = max_ending_here + x + len;
max_ending_here = max_ending_here + z;
max_ending_here = max_ending_here + here;
max_ending_here = max_ending_here(x);
max_ending_here = max_ending_here + buf;
max_ending_here |= max_ending_here + x;
max_ending_here[x] = max_ending_here;
max_ending_here = 0;
max_ending_here = max_ending_here + r;
max_so_here = max_ending_here + x;
max_ending_here = max_ending_here+1;
max_ending_here = MAX(max_ending_here + x);
max_sublist_here = max_sublist_here + x;
max_ending_here(max_ending_here + x);
max_ending_here = max_ending_here + (size_t)x;
max_ending_here = max_ending_here + x ;
max_ending_here = max_ending_here + m;
max_ending_here = max_ending_here + int(x);
max_ending_so_far = max_ending_so_far + x;
max_ending_here = max_ending_here + x * 2;
max_ending_here = max_ending_here[0] + x;
max_ending_len = max_ending_len + x;
max_ending_here = max_ending_here + (x + 1);
max_ending_here = max_ending_here + str;
max_ending_here = max_ending_here * x;
max_ending_here = max_ending_here + x; #endif
max_ending_here = max_ending_here + (*x);
max_ending_here2 = max_ending_here + x;
max_ending_here = max_ending_here + [x];
max_ending_here++ = max_ending_here + x;
max_ending_here[x] = max_ending_here[x];
max_ending_here = max_ending_here + x + h;
max_ending_here = max_ending_here + (x - x);
max_ending_here = max_ending_here + x + here;
const max_ending_here = max_ending_here + x;
max_ending_here = max_ending_here + val;
max_ending_here = max_ending_here + size;
max_ending_here = max_ending_hre + x;
max_ending_here[] = max_ending_here + x;
max_ending_here = max_ending_here + x + 0;
max_ending_here = max_ending_here + x-1;
max_ending_x = max_ending_x + x;
max_ending_here = max_ending_here + MAX_SIZE;
max_ending_here.append(x);
max_ending_here = max_ending_here + x + d;
max_ending_here = max_ending_here + t;
max_ending_here[max_ending_here + x] = 0;
max_ending_here[1] = max_ending_here + x;
max_ending_here = max_ending_here + (x - 1);
return max_ending_here + x;
max_ending_here = max_ending_here);
max_ending_here = max_ending_here + tmp;
max_ending_here -= max_ending_here + x;
max_ending_here = max_ending_here
max_ending_here = max_ending_here.get() + x;
max_ending_here = max_ending_here + x
max_ending_here = max_ending_here  x;
max_ending_here = max_ending_here + 2 * x;
max_ending_here = max_ending_here + (float)x;
i = max_ending_here + x;
max_ending_here = max_ending_here + x++;
max_ending_here = max_ending_here + x / 2;
max_ending_here = max_ending_here + (short)x;
max_ending_here = max_ending_here + j;
max_ending_here = max_ending_here + 2*x;
max_ending_here = max_ending_here + v;
max_ending_here= max_ending_here + x;
max_ending_here[i] = max_ending_here + x;
max_ending_here = min(max_ending_here, x);
max_ending_here = max_ending_here + x = 0;
max_ending_here = max_ending_here + '0';
max_ending_here = max_ending_here2 + x;
*max_ending_here = max_ending_here + x;
max_ending_here = max_ending_here = x;
max_ending_here = &max_ending_here + x;
max_ending_here = max_ending_here + sum;
max_ending_here = max_ending_here + ((long)x);
max_ending_here[2] = max_ending_here + x;
max_ending_here = max_ending_here + x+1;
max_ending_here = max_ending_here + ch;
max_ending_head = max_ending_head + x;
maximum_ending_here = max_ending_here + x;
max_ending_here = max_ending_here + lx;
max_ending_here = max_ending_here + &x;
max_ending_here += max_ending_here + x;
max_ending_here = -max_ending_here + x;
max_ending_ here = max_ending_ here + x;
max_ending_hre = max_ending_hre + x;
max_ending_here = max_ending_here + x + 4;
(void) max_ending_here + x;
max_ending_here[max_ending_here] = x;
max_ending_here = _max_ending_here + x;
max_ending_here = max_ending_here + count;
max_ending_here = max_ending_here + x + arr;
max_ending_here = max_ending_here + 0;
max_pending_here = max_pending_here + x;
max_length_here = max_length_here + x;
max_ending_here = max_ending_here + ret;
max_ending_shere = max_ending_shere + x;
max_ending_here = max_ending_here + w;
max_ending_here = max_ending_here+x;
max_ending_here = max_ending_here + x + y;
max_ending_here = max_ending_here + xx;
size_t max_ending_here = max_ending_here + x;
max_ending_here+=x;
max_ending_here = max_ending_here + f;
max_ending_here = max_ending_here + bytes;
max_ending_here = max_ending_here + x + s;
max_ending_here = max_ending_here + (long)x;
max_ending_here = max_ending_here + sizeof x;
max_ending_here = max_ending_here + x + 3;
max_ending_here = max_ending_here + x + p;
default: max_ending_here = max_ending_here + x;
+ max_ending_here = max_ending_here + x;
max_ending_here = max_ending_here + x  0;
max_ending_here = max_ending_here+((int)x);
max_ending_here = max_ending_here + (double)x;
max_ending_here = max_ending_here + (u_long)x;
max_ending_here = max_ending_here + x; */
max_ending_here = max_ending_here + x / x;
max_ending_here = max_ending_here + x--;
max_ending_here += (int)x;
max_ending_here = -1;
max_ending_here = max_ending_here + x + i;
max_so_here += x;
max_ending_here = max_ending_here + ((int)x;
max_ending_here.add(x);
max_ending_here = max_ending_here + arr + x;
x = max_ending_here + x;
max_ending_here = max_ending_here + x + n;
h = max_ending_here + x;
max_so_far += x;
max_ending_here = max_ending_here + x + l;
max_ending_here = max_ending_here + x > 0;
max_ending_here = max_ending_here + x - len;
max = max_ending_here + x;
max_ending_here = max_ending_here + ((short)x);
s = max_ending_here + x;
max_ending_here;
max_ending_here = max_ending_here + x + (max_so_far + max_so_far);
max_ending_here = max_ending_here + x + max_ending_here;
max_ending_here = max_ending_here + x; /* We're aiming at a max_so_far. */
max_ending_here = max_ending_here + ((unsigned char *)x);
max_ending_here = max_ending_here + x + x + x;
max_ending_here = max_ending_here + (x - 1) / sizeof(max_ending_here);
max_ending_here = max_ending_here + ((caddr_t)x);
max_ending_here = max_ending_here + ((int)x + x);
max_ending_here = max_ending_here + x + (int)max_so_far;
max_ending_here = max_ending_here + (x? max_ending_here : 0));
max_ending_here = max_ending_here + (x - 0x80) / (long)x;
max_ending_here = max_ending_here + x + mtx_offset;
max_ending_here = max_ending_here + x + p = p + p;
max_ending_here = max_ending_here + x + sizeof(max_ending_here);
max_ending_here = max_ending_here + x;  else max_ending_here = 0;
max_ending_here = max_ending_here + (x - num_seeds) * ((num_seeds - num_seeds) * num_seeds);
max_ending_here = max_ending_here + x + X_MAX;
max_ending_here = max_ending_here + x;  else  if (max_so_far > max_so_far) max_so_far = max_so_far;
max_ending_here = max_ending_here + (x * sizeof(struct ui_sock)) + (x - (x + 8));
max_ending_here = max_ending_here + (x - x) - x;
max_ending_here = max_ending_here + (x - m) + x;
max_ending_here = max_ending_here + x + (unsigned char *)X_LEN;
max_ending_here = max_ending_here + (x - mArena) * x;
max_ending_here = max_ending_here + (intptr_t)x;
max_ending_here = max_ending_here + x + max_so_far;
max_ending_here = max_ending_here + (x - max_ending_here);
max_ending_here = max_ending_here + x + splx;
max_ending_here = max_ending_here + ((int) x + 1);
max_ending_here = max_ending_here + ((unsigned long)x);
max_ending_here = max_ending_here + (*(mb) x;
max_ending_here = max_ending_here + x + a_sublist_mask;
max_ending_here = max_ending_here + (x * 10);
max_ending_here = max_ending_here + ((u_long)x);
max_ending_here = max_ending_here + x + ps;
max_ending_here = max_ending_here + x + ((long) x + 1);
max_ending_here = max_ending_here + (max_ending_here + x) * sz;
max_ending_here = max_ending_here + (x_int)x;
max_ending_here = max_ending_here + x; /* not yet called */
max_ending_here = max_ending_here + (((int)x));
max_ending_here = max_ending_here + x; if (max_ending_here == 0)  max_ending_here = max_ending_here + x; max_ending_here = 0; max_ending_here = max_ending_here + x;
max_ending_here = max_ending_here + x + ((long)x) + x;
max_ending_here = max_ending_here + ((x-int)0) /*(x+int)1*/;
max_ending_here = max_ending_here + (max_so_far + x);
max_ending_here = max_ending_here + x; if (max_ending_here == 0) max_ending_here = x; else max_ending_here = x;
max_ending_here = max_ending_here + x; /* this is unmapped */
max_ending_here = max_ending_here + x; /* max_so_far = 0 */
max_ending_here = max_ending_here + (x  0)? 0 : 0;
max_ending_here = max_ending_here + x + t;
max_ending_here = max_ending_here + (x + 4);
max_ending_here = max_ending_here + x + (int)0;
max_ending_here = max_ending_here + x + m;
max_ending_here = max_ending_here + (x -'');
max_ending_here = max_ending_here + x + r_max;
max_ending_here = max_ending_here + x + (x_length - 1) / (x_length * x_length);
max_ending_here = max_ending_here + ((int)x - x) - 1;
max_ending_here = max_ending_here + x + (x + 1);
max_ending_here = max_ending_here + ((int) x);
max_ending_here = max_ending_here + x <0;
max_ending_here = max_ending_here + x; else &if (max_so_far > max_so_far) max_so_far = max_so_far;
max_ending_here = max_ending_here + x; <else &if (max_so_far > max_so_far) max_so_far = max_so_far;
max_ending_here = max_ending_here + x &0;
max_ending_here = max_ending_here + '0';
max_ending_here = max_ending_here + (x 0)? 0 : 0;
max_ending_here = max_ending_here + (x <0)? 0 : 0;
max_ending_here = max_ending_here + (x &0)? 0 : 0;
max_ending_here = max_ending_here + x 0;
max_ending_here = max_ending_here + x; else if (max_so_far > max_so_far) max_so_far = max_so_far;
&max_ending_here = max_ending_here + x;
max_ending_here = max_ending_here <x;
max_ending_here = max_ending_here + x; if (max_ending_here == 0) <max_ending_here = max_ending_here + x; max_ending_here = 0; max_ending_here = max_ending_here + x;
<max_ending_here = max_ending_here + x;
max_ending_here = max_ending_here + x; &else max_ending_here = 0;
max_ending_here = max_ending_here + x; if (max_ending_here == 0) &max_ending_here = max_ending_here + x; max_ending_here = 0; max_ending_here = max_ending_here + x;
max_ending_here = max_ending_here + x; &else if (max_so_far > max_so_far) max_so_far = max_so_far;
max_ending_here = max_ending_here + x; &else <if (max_so_far > max_so_far) max_so_far = max_so_far;
max_ending_here = max_ending_here + x; else <if (max_so_far > max_so_far) max_so_far = max_so_far;
max_ending_here = max_ending_here + '<0';
max_ending_here = max_ending_here &x;
max_ending_here = max_ending_here + '&0';
max_ending_here = max_ending_here + x; <else if (max_so_far > max_so_far) max_so_far = max_so_far;
max_ending_here = max_ending_here + x; else max_ending_here = 0;
max_ending_here = max_ending_here + x; <else <if (max_so_far > max_so_far) max_so_far = max_so_far;
max_ending_here = max_ending_here x;
max_ending_here = max_ending_here + x; <else max_ending_here = 0;
max_ending_here = max_ending_here + x; &else &if (max_so_far > max_so_far) max_so_far = max_so_far;
max_ending_here = max_ending_here + x; if (max_ending_here == 0) max_ending_here = max_ending_here + x; max_ending_here = 0; max_ending_here = max_ending_here + x;
max_ending_here = max_ending_here + x;
