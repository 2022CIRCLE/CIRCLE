golden:
for (Integer x : arr.subList(k, arr.size()))
inference:
for (int x : arr)
for (PRUint32 x : arr)
for (integer x : arr)
for (Pool x : arr)
for (PRInt32 x : arr)
for (Integer x: arr)
for (Integer x, arr)
for (Long x : arr)
for (PRUint8 x : arr)
for (Integer x : arr)
for (Iterator x : arr)
for (Node x : arr)
for (int x: arr)
for (PRUinteger x : arr)
for (Integer x : heap)
for (Ptr x : arr)
for (Integer i : arr)
for (String x : arr)
for (Position x : arr)
for (Integer p : arr)
for (Integer x : 0)
for (PRUint16 x : arr)
for (Integer x : x)
for (;;)
for (int : arr)
for (NodeType x : arr)
for (VarType x : arr)
for (pq : arr)
for (v : arr.subList(0,k))
for(Integer x : arr)
for (Integer x : k)
for (ListInteger> x : arr)
for (NodeList x : arr)
for (size_t x : arr)
for (long x : arr)
for (Integer x : arr, k)
for (short x : arr)
for (Number x : arr)
for (Arr x : arr)
for (Integer x : arr);
for (HashKey x : arr)
for (Literal x : arr)
for (Child x : arr)
for (PRUint64 x : arr)
for (Integer x : arr.get())
for (Object x : arr)
for (NodeListInteger> : arr)
for (Short x : arr)
for (Integer y : arr)
for (Pos x : arr)
for (INteger x : arr)
for (intptr x : arr)
for (Value x : arr)
for(int x : arr)
for (Var x : arr)
for (Key x : arr)
for (VarTerm x : arr)
for (Integer a : arr)
for (T x : arr)
for (Integer x : arr.copy())
for ( int x : arr )
for (PZ_Integer x : arr)
for (Integer c : arr)
for (Integer x : &arr)
for (Count x : arr)
for (Point x : arr)
for (Enumerator x : arr)
for (int i : arr)
for (void)
for (Element x : arr)
For (int x : arr)
for (Integer x; arr)
for (p : arr)
for (Integer x, int k)
for (Integer x : arr),
for (Integer x : arr, p)
for (int p : arr)
for (PRInteger x : arr)
for (Integer i, x : arr)
for (RawPtr x : arr)
for (Integer x : aRaw)
for (Integer x : arr.size())
for (Integer x:arr)
for (Ph x : arr)
for (Private x : arr)
for ( Integer x : arr )
for (Integer x : int)
for (Mask x : arr)
for (Index x : arr)
for (CurrentInteger x : arr)
for (Target x : arr)
for (Buf x : arr)
for (Placeholder x : arr)
while (!heap.isEmpty())
for (Integer z : arr)
for (Queue x : arr)
for (Unsigned int x : arr)
for (Integer x : *arr)
for (x : arr)
for (Integer x : arr - 1)
for (NodeList : arr)
for (Word x : arr)
for (Integer x : arr.next)
for (Integer x : x);
for (Enumerate x : arr)
for (intptr : arr)
for (PRUint32_t x : arr)
for (Pragma x : arr)
for (Prteger x : arr)
for (::Integer x : arr)
for (Hierarchy x : arr)
for (Integer x : arr.last())
for (Integer l : arr)
for (SubList x : arr)
for (Length x : arr)
for (Unsigned x : arr)
for (Integer t : arr)
for (Prt x : arr)
for (Node* x : arr)
for (Integer n : arr)
for (Pool p : arr)
for (Integer x = arr)
for (Integer s : arr)
for (NodeInfo x : arr)
for (Pool* x : arr)
for (Integer x : x, arr)
for (Counter x : arr)
for (Integer r : arr)
for (Integer x : len)
for (Bool x : arr)
for (Integer x : arr.first())
for (PRUint32 x: arr)
for (End x : arr)
for (int i, x : arr)
for (Page x : arr)
for (Integer x : arr + 1);
for (Integer x; x++)
for (Buffer x : arr)
for ( integer x : arr )
for (Integer x::arr)
for (Integer x : arr, void)
for (Integer x : arg)
for (PZ x : arr)
for (LiteralInteger x : arr)
for (integer x: arr)
for (Integer num : arr)
for (CurrentElement x : arr)
for (Integer b : arr)
for (Start x : arr)
for (IntElement x : arr)
for (PRUintn x : arr)
for (Integer x : i, arr)
for (v : heap.subList(0,k))
for (Integer x : aur)
for (Unsigned long x : arr)
for (PRUint32 p : arr)
for (Integer x : arr + 1)
for (Integer x : array)
for (Integer x : (long)arr)
for (Integer h : arr)
for (Integer x : arr - 1);
for (v : arr)
for (Entry x : arr)
for (Integer x : Arr)
for (Integer k : arr)
for (n : arr)
for (Internal x : arr)
for (Integer x : arr, n)
for ( Integer x : arr)
for (Cluster x : arr)
for (First x : arr)
for (; x  arr; x++)
for (Integer x : aRow)
for (Arr : arr)
for (Integer x,arr)
for (Integer x = arr.get())
for (Integer x : pq)
for (Integer x : -1, arr)
for (Integer x : v)
for (Type x : arr)
for (List x : arr)
for (Integer x : va)
for (Integer x : n)
if (arr)
for (Integer x : ptr)
for (;)
for (Integer x : aarr)
for (Integer x : m)
for (Integer x : num)
for (Integer x : arr.list())
for (Long)
for (Integer x : args)
for (Integer x : _arr)
for (Integer x = arr.next)
for (Integer x : arr.value)
for (Integer x : arr, bzero(k))
for (Size x : arr)
for (PrettyPrintf* p : arr)
for (NodeListInteger> x : arr)
for (p = arr.subList(0,k); p!= null; p++)
for (Integer x : arr.subList(0,k))
for (PositioningIterator x : arr)
for (Integer x : arr, int flags)
for (Integer x : aRawArr)
for (Integer x : m, arr)
for (NodeList i = arr.subList(0,k); i  i; i++)
for (Integer x : arr, i = 0; i  k; i++)
for (PtrInteger> x : arr)
for (Integer x : arr)  heap.add(x);  ArrayListInteger> heap = new ArrayListInteger>(); for (Integer i = 0; i  k; i++)
for (Integer x, i = arr.subList(0,k))
for (Integer x : number)
for (Integer x : arr, l)
for (Integer x : arr, x : x)
for (PriorityQueueInteger> x : arr)
for (Integer x : n, arr)
for (Integer x : src, arr)
for (Integer x : arr, int i)
for (Integer x : arr.values())
for (Integer x : n); n  n; k  n; k++)
for (Integer x : pkg)
for (Integer x : arr, rp)
for (PseudoList x : arr)
for (PseudoEnumeratorInteger> x : arr)
for (Integer x : arr.mArrs)
for (Integer x : arr.length)
for (Integer x : arr, i = 0; i  acr_max(); i++)
for (Integer x : r);
for (EmptyString x : arr)
for (Integer x : arr.replace('0','0'))
for (PriorityQueue x : arr)
for (SizeBit x : arr)
for (PseudoQueue* x : arr)
for (Integer x : arr.cstr_oneuse())
for (Integer x : arr, int p)
for (Integer x : arr, j = 0; j = 0; i++)
for (Integer x : arr, t : 0)
for (Integer x : k, p : arr)
for (SameSortKey : arr)
for (Integer x : arr, int k)
for (Integer x : i)
for (SingleNode x : arr)
for (Integer x : aRawPtr)
for (ptr : arr)
for (Integer x : arr, p = p - 1)
for (Integer x : arr, p = arr.subList(0,k))
for (Integer x, int i = 0; i  k; i++)
for (Integer x : arr, int x)
for (Integer x : arr) &heap.add(x); ArrayList<Integer> heap = new ArrayListInteger>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) heap.add(x); &ArrayList&Integer> heap = new ArrayList&Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) heap.add(x); ArrayListInteger> heap = new ArrayList<Integer>(); for (Integer i = 0; i k; i++)
for (NodeList i = arr.subList(0,k); i i; i++)
for (Integer x : arr) heap.add(x); &ArrayListInteger> heap = new ArrayListInteger>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) heap.add(x); &ArrayList&Integer> heap = new ArrayListInteger>(); for (Integer i = 0; i k; i++)
for (Integer x : arr<)
for (Integer x : arr) heap.add(x); ArrayList&Integer> heap = new ArrayList&Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) <heap.add(x); &ArrayListInteger> heap = new ArrayList&Integer>(); for (Integer i = 0; i k; i++)
for (; x arr; x++)
for (List&Integer> x : arr)
for (Integer x : arr) heap.add(x); &ArrayList<Integer> heap = new ArrayList<Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) heap.add(x); ArrayList<Integer> heap = new ArrayList<Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) &heap.add(x); ArrayListInteger> heap = new ArrayListInteger>(); for (Integer i = 0; i k; i++)
for (Integer x : &arr<)
for (NodeListInteger> x : arr)
for (Integer x : arr) heap.add(x); <ArrayList&Integer> heap = new ArrayListInteger>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) <heap.add(x); ArrayList&Integer> heap = new ArrayList&Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr.replace('&0','0'))
for (Integer x : arr) <heap.add(x); ArrayList<Integer> heap = new ArrayList<Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr&)
for (Integer x : arr) <heap.add(x); <ArrayList&Integer> heap = new ArrayListInteger>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) <heap.add(x); &ArrayList<Integer> heap = new ArrayListInteger>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) heap.add(x); &ArrayListInteger> heap = new ArrayList&Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) &heap.add(x); <ArrayList&Integer> heap = new ArrayList&Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) &heap.add(x); &ArrayList<Integer> heap = new ArrayList&Integer>(); for (Integer i = 0; i k; i++)
for (ListInteger> x : arr)
for (Ptr<Integer> x : arr)
for (Integer x : arr) &heap.add(x); <ArrayList&Integer> heap = new ArrayList<Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) heap.add(x); <ArrayList&Integer> heap = new ArrayList<Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) heap.add(x); <ArrayList<Integer> heap = new ArrayListInteger>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) heap.add(x); ArrayList<Integer> heap = new ArrayListInteger>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) <heap.add(x); ArrayListInteger> heap = new ArrayListInteger>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) heap.add(x); ArrayList&Integer> heap = new ArrayList<Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : n); n &n; k <n; k++)
for (Integer x : n); n n; k n; k++)
for (Integer x : arr) &heap.add(x); <ArrayList<Integer> heap = new ArrayListInteger>(); for (Integer i = 0; i k; i++)
for (PtrInteger> x : arr)
for (Integer x : arr) &heap.add(x); &ArrayList&Integer> heap = new ArrayList<Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr.replace('<0','<0'))
for (Integer x, int i = 0; i &k; i++)
for (Integer x : arr, j = 0; j <= 0; i++)
for (Integer x : arr) &heap.add(x); &ArrayList<Integer> heap = new ArrayListInteger>(); for (Integer i = 0; i k; i++)
for (Integer x : arr, i = 0; i acr_max(); i++)
for (Integer x : arr.replace('<0','&0'))
for (Integer x : arr) heap.add(x); ArrayListInteger> heap = new ArrayList&Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) <heap.add(x); &ArrayListInteger> heap = new ArrayList<Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) <heap.add(x); &ArrayList<Integer> heap = new ArrayList&Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr.replace('<0','0'))
for (Integer x : n); n <n; k <n; k++)
for (Integer x : arr) heap.add(x); <ArrayList<Integer> heap = new ArrayList<Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) &heap.add(x); <ArrayListInteger> heap = new ArrayList<Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : &arr&)
for (Integer x : arr, j = 0; j &= 0; i++)
for (Integer x : arr) heap.add(x); &ArrayListInteger> heap = new ArrayList<Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) <heap.add(x); ArrayList&Integer> heap = new ArrayList<Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) &heap.add(x); &ArrayList&Integer> heap = new ArrayList&Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : n); n &n; k &n; k++)
for (Integer x : arr.replace('&0','&0'))
for (PseudoEnumerator&Integer> x : arr)
for (Integer x : arr) heap.add(x); &ArrayList<Integer> heap = new ArrayListInteger>(); for (Integer i = 0; i k; i++)
for (NodeListInteger> : arr)
for (; x <arr; x++)
for (Integer x : arr, i = 0; i k; i++)
for (PriorityQueue&Integer> x : arr)
for (Integer x : arr) &heap.add(x); ArrayList<Integer> heap = new ArrayList<Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) <heap.add(x); <ArrayListInteger> heap = new ArrayList<Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) &heap.add(x); ArrayList<Integer> heap = new ArrayList&Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) heap.add(x); &ArrayList<Integer> heap = new ArrayList&Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) &heap.add(x); ArrayList&Integer> heap = new ArrayListInteger>(); for (Integer i = 0; i k; i++)
for (Integer x, int i = 0; i <k; i++)
for (Integer x : arr, j = 0; j = 0; i++)
for (Integer x : arr) &heap.add(x); <ArrayListInteger> heap = new ArrayListInteger>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) heap.add(x); <ArrayListInteger> heap = new ArrayList<Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : <arr)
for (Integer x : arr) &heap.add(x); ArrayListInteger> heap = new ArrayList&Integer>(); for (Integer i = 0; i k; i++)
for (; x &arr; x++)
for (Integer x : arr) &heap.add(x); ArrayListInteger> heap = new ArrayList<Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) &heap.add(x); &ArrayListInteger> heap = new ArrayListInteger>(); for (Integer i = 0; i k; i++)
for (PseudoEnumerator<Integer> x : arr)
for (Integer x : arr) &heap.add(x); &ArrayList<Integer> heap = new ArrayList<Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) heap.add(x); <ArrayList&Integer> heap = new ArrayList&Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) &heap.add(x); <ArrayList<Integer> heap = new ArrayList&Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr.replace('0','&0'))
for (NodeList i = arr.subList(0,k); i &i; i++)
for (Integer x : arr) &heap.add(x); &ArrayList&Integer> heap = new ArrayListInteger>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) <heap.add(x); <ArrayList<Integer> heap = new ArrayList&Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) <heap.add(x); ArrayList&Integer> heap = new ArrayListInteger>(); for (Integer i = 0; i k; i++)
for (Integer x : &arr)
for (PseudoEnumeratorInteger> x : arr)
for (Integer x : arr) <heap.add(x); <ArrayList<Integer> heap = new ArrayListInteger>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) heap.add(x); <ArrayListInteger> heap = new ArrayListInteger>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) <heap.add(x); ArrayListInteger> heap = new ArrayList<Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) heap.add(x); &ArrayList&Integer> heap = new ArrayList<Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr)
for (Integer x : arr, i = 0; i <k; i++)
for (Integer x : arr) &heap.add(x); <ArrayList&Integer> heap = new ArrayListInteger>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) <heap.add(x); &ArrayListInteger> heap = new ArrayListInteger>(); for (Integer i = 0; i k; i++)
for (Integer x : n); n &n; k n; k++)
for (Integer x : arr, i = 0; i <acr_max(); i++)
for (Integer x : arr.replace('&0','<0'))
for (PriorityQueue<Integer> x : arr)
for (List<Integer> x : arr)
for (Integer x : arr)
for (Integer x : arr) heap.add(x); <ArrayList<Integer> heap = new ArrayList&Integer>(); for (Integer i = 0; i k; i++)
for (PriorityQueueInteger> x : arr)
for (Integer x : arr) &heap.add(x); <ArrayList<Integer> heap = new ArrayList<Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr.replace('0','<0'))
for (Integer x : arr) <heap.add(x); <ArrayListInteger> heap = new ArrayList&Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : <arr&)
for (Integer x : arr) <heap.add(x); &ArrayList&Integer> heap = new ArrayListInteger>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) <heap.add(x); ArrayList<Integer> heap = new ArrayList&Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) <heap.add(x); <ArrayList&Integer> heap = new ArrayList&Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) &heap.add(x); ArrayList&Integer> heap = new ArrayList&Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr, i = 0; i &k; i++)
for (Integer x : arr) <heap.add(x); <ArrayList<Integer> heap = new ArrayList<Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : n); n n; k <n; k++)
for (NodeList&Integer> : arr)
for (Integer x : n); n n; k &n; k++)
for (Integer x : arr) <heap.add(x); &ArrayList&Integer> heap = new ArrayList&Integer>(); for (Integer i = 0; i k; i++)
for (NodeList<Integer> x : arr)
for (NodeList i = arr.subList(0,k); i <i; i++)
for (Integer x : arr) <heap.add(x); &ArrayList<Integer> heap = new ArrayList<Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) <heap.add(x); <ArrayListInteger> heap = new ArrayListInteger>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) <heap.add(x); &ArrayList&Integer> heap = new ArrayList<Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) heap.add(x); ArrayList<Integer> heap = new ArrayList&Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) <heap.add(x); <ArrayList&Integer> heap = new ArrayList<Integer>(); for (Integer i = 0; i k; i++)
for (Integer x, int i = 0; i k; i++)
for (NodeList&Integer> x : arr)
for (Integer x : arr) heap.add(x); <ArrayListInteger> heap = new ArrayList&Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) heap.add(x); ArrayList&Integer> heap = new ArrayListInteger>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) &heap.add(x); &ArrayListInteger> heap = new ArrayList<Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr.replace('0','0'))
for (Integer x : arr) heap.add(x); ArrayListInteger> heap = new ArrayListInteger>(); for (Integer i = 0; i k; i++)
for (Integer x : arr, i = 0; i &acr_max(); i++)
for (Ptr&Integer> x : arr)
for (NodeList<Integer> : arr)
for (Integer x : arr) &heap.add(x); &ArrayListInteger> heap = new ArrayList&Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) <heap.add(x); ArrayList<Integer> heap = new ArrayListInteger>(); for (Integer i = 0; i k; i++)
for (Integer x : n); n <n; k &n; k++)
for (int x : arr)
for (Integer x : arr) &heap.add(x); ArrayList&Integer> heap = new ArrayList<Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) &heap.add(x); <ArrayListInteger> heap = new ArrayList&Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : arr) <heap.add(x); ArrayListInteger> heap = new ArrayList&Integer>(); for (Integer i = 0; i k; i++)
for (Integer x : n); n <n; k n; k++)
for (Integer x : <arr<)
