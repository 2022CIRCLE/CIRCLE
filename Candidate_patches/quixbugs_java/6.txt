golden:
return binsearch(arr, x, mid+1, end);
inference:
return binsearch(arr, x, start, end);
return binsearch((int)arr, x, mid, end);
return binsearch(arr, x, mid, end);
return binsearch(arr, x, end);
return binsearch(arr, x, mid);
return binsearch(arr, x, mid, end, 0);
return binsearch(arr, x, mid, end - start);
return binsearch(arr, mid, end);
return binsearch(arr, (int)x, mid, end);
return binsearch((int) arr, x, mid, end);
return binsearch(arr, x, mid, end, start, end);
return binsearch(&arr, x, mid, end);
return binsearch(arr, x, mid, end, start);
return binsearch(arr, x, 0, end);
return binsearch (arr, x, mid, end);
return binsearch(arr, x, middle, end);
return binsearch(arr, x, start);
return binsearch(arr, x, start, end, end);
return binsearch(arr, x, mid, start, end);
return binsearch(arr, x, mid, end, end);
return binsearch(arr, start, end);
return binsearch(x, mid, end);
return binsearch(arr, x, start, mid, end);
return binsearch(arr, x, mid, &end);
return binsearch(int[] arr, x, mid, end);
return binsearch(arr, x, mid, end + start);
return (binsearch(arr, x, mid, end));
return binsearch(arr, x, mi, end);
return binsearch((int)arr, x, start, end);
return binsearch(arr, x, mid, end - 1);
return binsearch(arr, y, mid, end);
return binsearch(arr, x, (int)mid, end);
return binsearch(arr, x, begin, end);
return binsearch(arr, x, end, start);
return binsearch(arr, x, start + end, end);
return binsearch(arr, x, mid, end, 1);
return binsearch((long)arr, x, mid, end);
return binsearch(arr, x, start + start, end);
return binsearch(arr, x, 1, end);
return binsearch(arr, x, mid, end, buf);
return binsearch(arr, x, mid, end + 1);
return binsearch(arr, x, mid, length);
return binsearch(arr, x, mid - start, end);
return binsearch(arr, x, mid, 0);
return binsearch(arr, x, mid, end+1);
return binsearch(arr, x, mid, end, null);
return binsearch(base, arr, x, mid, end);
return binsearch(arr, x, mid, end, length);
return binsearch(arr, x, mid, end, len);
return binsearch(arr, x, buf, end);
return binsearch(arr, x, mid, end - end);
return binsearch(arr, x, mid, start);
return binsearch(arr, x, start, end, start);
return binsearch(x, start, end);
return binsearch(arr, x, mid, (int)end);
return binsearch(arr, x, mid, end-1);
return binsearch(arr, x, start, end, 0);
return binsearch(arena, arr, x, mid, end);
return binsearch(0, arr, x, mid, end);
return binsearch(arr, x, (int) mid, end);
return binsearch(arr, (int) x, mid, end);
return binsearch(i, arr, x, mid, end);

return binsearch(end, arr, x, mid, end);
return binsearch(arg, x, mid, end);
return binsearch(r, x, mid, end);
return binsearch(arr, x, end, start, end);
return binsearch(arr, x, mid, end - x);
return binsearch(p, arr, x, mid, end);
return binsearch(arr, x, Mid(start), end);
return binsearch(arr, x, start - start, end);
return binsearch(arr, x, x, mid, end);
break;
return binsearch((void *)arr, x, mid, end);
return binsearch(sizeof(arr), x, mid, end);
return binsearch(argr, x, mid, end);
return binsearch(arr, x, start, end - start);
return binsearch(arr, x, 0, mid, end);
return binsearch(arr, x, mid, end, x);
return binsearch(rr, x, mid, end);
return binsearch(arr, x, mid, end, -1);
return binsearch(arr, X, mid, end);
return binsearch(arr, x, 0);
return binsearch(p, x, mid, end);
return binsearch(arr, x, x, start, end);
return binsearch(arr, x, len, end);
return binsearch(arr, buf, mid, end);
return binsearch(arr, x, mid, end, size);
return binsearch(fd, arr, x, mid, end);
return binsearch(arr, x, y, mid, end);
return binsearch(arena, x, mid, end);
return binsearch(arr, x, end - start);
return binsearch(arr, x, start, start, end);
return find_in_sorted(arr, x, mid, end);
return binsearch(arr, x, 2, end);
return binsearch(arr, x, start, end, mid);
return binsearch(type, arr, x, mid, end);
return binsearch(err, x, mid, end);
return binsearch(*arr, x, mid, end);
return binsearch(arr, x, mid + start, end);
return binsearch(arr, i, mid, end);
return binsearch([arr, x, mid, end]);
return binsearch(arr, x, mid, end, i);
return binsearch(arr, x, mid, end, p);
return binsearch(arr, x, 0, arr.length);
return binsearch(arr, end);
return binsearch(arr, x, start + mid, end);
return binsearch(a, x, mid, end);
return binsearch(arr, x, mid, end, mid);
return binsearch2(arr, x, mid, end);
return binsearch(buf, arr, x, mid, end);
return binsearch(cr, x, mid, end);
return bin_search(arr, x, mid, end);
return binsearch(arr[mid], x, mid, end);
return binsearch(arr, x, mid, end + end);
return binsearch(arr, (u_long)x, mid, end);
return binsearch(arr, x, &start, &end);
return binsearch(arr, x, start, x, end);
return binsearch(arr, x, mid, end, l);
return binsearch(arr, x, mid, end, width);
return binsearch(arr, x, mid, end, flags);
return binsearch(arr, x, mid, (int) end);
return binsearch(arr, x, start, end, len);
result = binsearch(arr, x, mid, end); return result;
return binsearch(arr, arr, x, mid, end);
return binsearch(rs, x, mid, end);
return binsearch(arr, x, mid, end, v);
return binsearch(arr, x, mid - start);
return binsearch(arr, x, null, end);
return binsearch(arr, x, mid, end, &end);
return binsearch(arr, x, mid, *end);
return binsearch(arr, x, mid, 0, end);
return binsearch(arr, x, end, mid);
return binsearch(arr, x, mid, end, max);
return binsearch((void **)arr, x, mid, end);
return binsearch(tmp, arr, x, mid, end);
return binsearch(arr, x, start, end, buf);
return binsearch(arr, x, 0, start, end);
return binsearch(arr, *x, mid, end);
return binsearch(arr, x, mid, end, 0, 0);
return binsearch(arr, &x, mid, end);
return binsearch((char *)arr, x, mid, end);
return binsearch(arr, x, start+end, end);
return binsearch(arr, x, mid, end--;
return binsearch(arr, s, mid, end);
return binsearch(arr, x, mid, end, offset);
return binsearch(arr, x, mid, end, range);
return binsearch(arr, x, mid, end, index);
return binsearch(parr, x, mid, end);
return binsearch(arr, x, mid, end--);
return binsearch(arr, x, start;
return binsearch(y, arr, x, mid, end);
return binsearch(arr, x, mid, end, y);
return binsearch(ar, x, mid, end);
return binsearch(m, x, mid, end);
return binsearch(obj, arr, x, mid, end);
return binsearch(arr, x, i, end);
ret = binsearch(arr, x, mid, end);
return binsearch(rd, x, mid, end);
return binsearch(int, x, mid, end);
return binsearch(arr, x, mid, len);
return binsearch(arr, mid);
return binsearch(arr, x, mid, end, start + start);
return binsearch(arch, x, mid, end);
return binsearch(arr, x, mid, end, &start);
return binsearch(arr, mi, mid, end);
return binsearch(v, arr, x, mid, end);
return binsearch(arr, x, sizeof(arr), end);
return binsearch(arr, x, mid, end) - 1;
return binsearch(arr, x);
return binsearch(int(arr), x, mid, end));
#endif return binsearch(arr, x, mid, end);
return binsearch(arr, x, mid, end, entry);
(void) binsearch(arr, x, mid, end);
return binsearch(arr, x, mid;
return binsearch(arr, x, mid, end + x);
return binsearch(arr, x, end - start, end);
return binsearch(arr, x, mid, end, null);
return binsearch(arr, x, mid, end, start + end);
return binsearch();
return binsearch(arr, x, mid, end + start, end);
return binsearch(arr, x, mid, end, t);
return binsearch(int(arr), x, mid, end);
rv = binsearch(arr, x, mid, end);
return binsearch(arr, x, mid, end, ret);
return binsearch(arr, x, start, end, start, end);
return binsearch(arr, x, mid, end, a);
return binsearch(arr, x, start, end, x);
return binsearch(arr, x, mid, end, m);
return binsearch(arr);
return binsearch(arr, x, mid, end, c);
return binsearch(start, end);
return binsearch(arr, x, mid, end, res);
return binsearch(arr, x, mid, end, bufsize);
return binsearch(arr, x, mid, end == 0);
return binsearch(arr, x, mid, end, &start, &end);
return binsearch((u_int)arr, x, mid, end);
return binsearch(arr, x, mid, end, end + x);
return binsearch(arr, x, mid, end, sizeof(int));
return binsearch(arr, x, mid, end, sizeof(x));
return binsearch(arr, x, mid, end, sizeof(buf), bufsize);
return binsearch(arr, x, mid, end, start - start);
return binsearch(arr, x, mid, end, sizeof(arr));
return binsearch(arr, x, mid, end, end, arr.x);
return binsearch(arr, x, mid, end, sizeof(arr), sizeof(x));
return binsearch((u_long)arr, x, mid, end);
return binsearch(arr, x, mid, end, x, x, y, x);
return binsearch(arr, x, mid, end, int_p, /*nothing*/);
return binsearch(arr, x, mid, end, cmp);
return binsearch(arr, x, mid, end, MAX_ADDRESS);
return binsearch(arr, x, mid, end, 0, &start);
return binsearch(arr, x, mid, end, sizeof(*arr));
return binsearch(arr, x, mid, end, sizeof(arr), sizeof(arr), sizeof(arr), x);
return binsearch(arr, x, mid, end, end, &linenum);
return binsearch(arr, x, mid, end, mid - start);
return binsearch(arr, x, mid, end - i);
return binsearch((unsigned char *)arr, x, mid, end);
return binsearch(arr, x, mid, end, (int) (strlen(x));
return binsearch(arr, x, mid, end, acmd);
return binsearch(arr, x, mid, end, &gdbarch);
return binsearch(arr, x, mid, end, p, p[0]);
return binsearch(arr, x, mid, end, sizeof(arr), sizeof(x), 0);
return binsearch(arr, x, mid, end, ntohl(end));
return binsearch(arr, x, mid, end, s);
return binsearch(arr, x, mid, end - ((long) start + (end - start)) / 2);
return binsearch(arr, x, mid, end, int[]);
return binsearch(arr, x, mid, end, nc);
return binsearch(arr, x, mid, end, sizeof(arr), sizeof(x), sizeof(x), sizeof(x), sizeof(x), 0);
return binsearch((unsigned char)arr, x, mid, end);
return binsearch((unsigned long)arr, x, mid, end);
return binsearch(arr, x, mid, end, nbytes);
return binsearch(arr, x, mid, end - (start + start) / 2);
return binsearch(arr, x, mid, end, max(0, start), end);
<return binsearch(arr, x, mid, end);
<return binsearch(arr, x, mid, end);
&return binsearch(arr, x, mid, end);
return binsearch(arr, x, mid, end);
return binsearch(arr, x, mid, end);
&return binsearch(arr, x, mid, end);
